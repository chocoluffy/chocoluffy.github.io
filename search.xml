<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[钱不是必要的，流动性才是。]]></title>
      <url>http://chocoluffy.com/2019/06/14/%E9%92%B1%E4%B8%8D%E6%98%AF%E5%BF%85%E8%A6%81%E7%9A%84%EF%BC%8C%E6%B5%81%E5%8A%A8%E6%80%A7%E6%89%8D%E6%98%AF%E3%80%82/</url>
      <content type="html"><![CDATA[<p>钱，fiat currency，是没有真正价值的，能与之兑换的黄金才有。纸币被创造出来是为了帮助价值在时间和空间上的转移<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，这意味着流动性。而从另一个角度看，钱本质上也是价值流动性短缺的结果。而如果实现了更高效的价值转移，钱将因此不是必要的。这个趋势其实已经出现了，以paypal，微信支付等的电子支付，其实提供了一定线索。只是随着加密货币的应用范围不断拓展，将出现流动性更高的流通货币<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，而资产债券化也将更普遍。</p>
<p>银行的存在是为了缩短钱的周转周期，<strong>因此银行本质上提供的是流动性。</strong>在直接的贸易交换中，直到我给你真金白银的时刻，你才拥有了支配那些钱的权利。但是在存在银行参与的情况下，不管我银行账户里有没有钱，在我们达成交易的时刻，你的账户里就多了这一笔钱而你可以随时随地消费它，我进而与银行存在了一笔债务。我和银行之间的的结算其实是滞后的，<strong>被缩短的这个时间差极大地改善了经济运转的效率，并使市场衍化出更为复杂的异步（asynchronous）结构</strong>。从这个角度去看那些各式的金融衍生品，比如期货，次贷等等，实际上都是为了提高流动性，无论这个流动性是真实的，还是掺假的（即没有对应价值的抵押物）<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>
<p>进一步地，我们经常说比特币能够代替银行，其实说的是能够取代银行的信用，而<strong>信用提供了流动性</strong>。<strong>因为我信任你，所以你的债务能够流动开。</strong>这也是为什么银行的债务具备公信力，而最具备公信力的是国债。</p>
<p>基于这个逻辑，我们能够得到一个有趣的结果：<strong>能够提供信用的人，也能够承担一部分银行的作用</strong>。</p>
<p>而信用的来源则决定了其流动性的安全性。</p>
<p>有人说，信用来自于名声。<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p>
<p>还有人说，信用来自于抵押物。<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup> </p>
<p>又或者，信用来自于已经付出的成本。<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></p>
<p>有意思的是，上述信用来源的次序，同样呈现出中心化程度逐次递减，而可验证的容易程度逐次递增。中心化程度递减好理解，从资源的分布可以看出来。名声是注定稀缺的，因为它会随着供应的增加而迅速贬值。而抵押物，也作为被公认可交换的资源，也不是所有人都能拥有的。而付出的成本<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>，相比之下，受垄断的程度远比资本的垄断程度要低。而为什么可验证这个属性值得讨论，这意味着自由随机的竞争，这也意味着权力的不对等优势。因为不可验证的东西不存在竞争，也更倾向于垄断。而同时通过验证，真正做了功的人，应当拥有超越其人口统计学比例的权力影响结果，而不受民粹的看客影响。</p>
<p>这些不同的模式，有着不同的适用范围，和不同的成本考量。其实没有所谓的绝对“安全”的感念，只要破坏这个系统的成本足够高，系统就是足够安全的。<strong>我们想聊流动性的安全性，其实是在聊流动性的成本。</strong></p>
<p>实现完全的去中心化，需要高企的成本，预设了极其严苛的信用前提。而后续所有针对去中心化效率提高的提案，无非是尝试削弱对信用的预设，引入中心化的实体提供额外的默认信用。</p>
<p>这究竟是好是坏，各执己见。我只是想提出一种可能性，相比起现在大范围流通的钱，私人流通的债券，在其私人领域会更有效，能够提供更高的流动性。这个私人领域可以是一个中心化公司的商业环境<sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup>，可以是一个DAO，也可以简单是一个人际关系的小圈子。能够传递内部交易信息的货币，是相比外部货币更高效的流通媒介，尽管这同样意味着需要由个人承担起交易风险。</p>
<p>这也是去中心化的祝福与代价。<sup id="fnref:9"><a href="#fn:9" rel="footnote">9</a></sup></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">解决&quot;coincidence of wants&quot;。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">和我们熟悉的电子支付的区别在于，不再依赖中心化的信用担保。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">后果见08年次贷危机。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;">而支撑起名声的，可能是封建迷信的风俗，比如所谓的天赐皇权，教皇至上的制度；也可能是军事战力，比如国家的形成。</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline; vertical-align: top;">比如Vitalik主张的Proof of Stake。</span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline; vertical-align: top;">比如Satoshi主张的Proof of Work。</span><a href="#fnref:6" rev="footnote"> ↩</a></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">7.</span><span style="display: inline; vertical-align: top;">在Proof of Work的框架下，意味着电力和机器的成本，该成本仍远低于资本的垄断程度。</span><a href="#fnref:7" rev="footnote"> ↩</a></li><li id="fn:8"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">8.</span><span style="display: inline; vertical-align: top;">Facebook将于19.6.18公开其私域流通的加密货币的白皮书。</span><a href="#fnref:8" rev="footnote"> ↩</a></li><li id="fn:9"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">9.</span><span style="display: inline; vertical-align: top;">本文的部分思路启发于《evil is the root of all money》。</span><a href="#fnref:9" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一部货币演化史，以及21世纪的“比特币本位”]]></title>
      <url>http://chocoluffy.com/2019/06/01/%E4%B8%80%E9%83%A8%E8%B4%A7%E5%B8%81%E6%BC%94%E5%8C%96%E5%8F%B2%EF%BC%8C%E4%BB%A5%E5%8F%8A21%E4%B8%96%E7%BA%AA%E7%9A%84%E2%80%9C%E6%AF%94%E7%89%B9%E5%B8%81%E6%9C%AC%E4%BD%8D%E2%80%9D/</url>
      <content type="html"><![CDATA[<p>《The Bitcoin Standard》的读后感。4.5星。这本书更像是一部货币演化史，依次介绍了货币在不同时期的作用和局限。</p>
<p>经济学里面有一个很有意思的讨论是，信用体系和货币体系究竟谁先出现。这个讨论启发了后续很多的机制设计的大致思路。Vitalik认为是信用体系先出现，也即债券的流动先于货币出现<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，而<strong>信用的流动性源于抵押物</strong>。这也成为了Vitalik提出的Proof of Stake的核心思想：Staking。而另一个方向，也是这本书的出发点，认为货币体系早于信用体系的出现，这强调货币作为价值交换媒介的属性，而成为交换媒介的前提是价值存储。<strong>其拥有的价值源于其稀缺性，也就是生产所付出的时间成本</strong>。这也成为了Satoshi提出的Proof of Work的核心思想，而比特币的价格也将最终趋向于挖矿成本的纳什平衡。</p>
<p>这本书前半部分很精彩。概括来说，时代的变迁带来了不同的关注点，19世纪经济学家的重心在于，理解货币作为一种市场商品，得以在时间，空间上帮助经济价值交换。这带来了纸币普及等发展。而随着战争爆发，中心银行的建立导致货币贬值危机发生，20世纪许多经济学家的主要理论聚焦在：反思如何保持货币对主权（sovereign）的独立性。而21世纪的经济理论和发明将尝试实现，去中心化（去主权）的货币独立，比如比特币。</p>
<p>哈耶克对货币的分析至今依旧相关，他的核心思想是「<strong>货币的稳定性</strong>」，而其对自由市场的拥护也成为货币稳定的前提。他提出的「货币去国家化」的假想方案，可以理解为货币等价物的自由竞争，利用利差的存在，使得还款人成为货币不稳定的博弈受益者，也使政府趋向于稳定货币的平衡。而同样地，稳定的货币使得持有者可以开始考虑投资，以及演化出更为复杂的市场结构。这使得市场能够更加的专业化，进而提高市场效率。</p>
<p>相比之下，凯恩斯主义更像是政府试图扩大管制范围的借口。借由增加政府干预印出高出储备物比例的纸币来间接向纸币持有者征税，用于补贴政府开支。虽然同样不可否认的是，特殊时期，比如战争，经济低迷时期，凯恩斯主义有效果。但这并不是反驳自由市场，货币去主权化的理由。战争会带来经济恢复的谬论，我不再想听到。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p>
<p>书后半段对比特币的介绍相比之下较为平庸。并没有在对应Proof of Work的机制理解上对”为什么”比特币能够实现共识（Byzantine General Problem）以及分权等的效果做出进一步讨论。而是基于比特币的已知特质，比如去中心化，供给固定等等，来介绍为什么比特币会比黄金更适合作为价值存储的媒介及其应用。表达过于繁缛，减半星。</p>
<p>不过其中有一个有趣的假设，作者认为未来比特币的应用会接近于金本位时期的银行结构。考虑到比特币网络目前支持的交易上限是每秒四笔。基于这样的交易上限，未来可能出现的情况是银行只将最终的交易结果通过区块链记录，而个人日常交易则是通过银行本身发放的与比特币挂钩的二级货币来结算。这些存储了比特币的银行会像在20世纪货币国家化之前的银行一样工作。而<strong>比特币能够代替目前黄金的作用，成为一个储备货币</strong>。但未来同样可能出现的是，闪电网络或者其他利用off-chain交易的改进使得交易量能够极大地增加，这将使得基于比特币的交易更加普适。当然，这都是关于安全性和效率之间的取舍。</p>
<p>fun fact：一开始我只是简单地理解标题为“比特币标准”，但是后来发现对standard的理解应当靠近类似“金本位”和“美元本位”的理解，即“比特币本位”的含义。</p>
<p>最后提一点和这本书没有太大关系，但在这段时间研究加密经济时我的一点启发。关于<strong>机制设计的不对称性</strong>。</p>
<p>现代加密算法的发展给我们创造了一个守易攻难的不对称性，而<strong>曾经我们只能够依赖自由市场提供的开放博弈优势，现在能够以更低的成本实现封闭的博弈环境</strong>。在机制设计中，当我希望将博弈一方的策略稳定的时候，最好的方式是给另一方博弈优势。博弈优势越大，会越快趋向纳什平衡，如果纳什平衡存在的话。因为一方任意的策略偏移都将使得另一方变得更有利可图（加密货币里是守方任意的微小变动将导致攻方巨大的成本提高）。这使得该博弈环境里的玩家行为更可预测，而且也将最终指向设计者设计纳什平衡时达到的状态。</p>
<p><strong>这同样意味着双刃剑</strong>。具有不良企图的人同样能够利用博弈规则以极低的成本影响纳什平衡。<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p>
<p>这需要我们有足够的好奇心，去理解变化事物里不变的部分。以及足够的耐心，去质疑我们曾经相信的。</p>
<p>未来或许已经到来，只是还没有扩散开。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">见大卫格雷伯的《债，第一个5000年》。 同样由Vitalik推荐。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">对凯恩斯主义者认为，战争会带来经济恢复，的观点的分析。也是经济学上的”破窗理论”。见我的博客: 谈“破窗理论”下弱势群体的保护主义</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">p + epsilon attack。能够在不参与博弈的情景下，以零成本（但是需要stake）来影响博弈结果。</span><a href="#fnref:3" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2019 May.]]></title>
      <url>http://chocoluffy.com/2019/05/31/%E7%A2%8E%E8%AF%AD-2019-May/</url>
      <content type="html"><![CDATA[<h2 id="2019-05-31">2019-05-31</h2><ul>
<li>【产品】容易被忽略的点，rss阅读器，通过学习用户的点击和收藏来负责给新的feed以权重排序。<blockquote>
<p><strong>对于一个低频的工具类应用，其目的是让用户在短时间的使用中能够收获最大效益。</strong></p>
</blockquote>
</li>
<li>一些很有意思的理论想法:<ul>
<li>哈耶克的「货币去国家化」的假想方案，可以理解为等价物的自由竞争。</li>
<li>匹配市场的「延迟接受」算法，提供解决拍卖和自由价格市场各自局限的选择，防止最后/提前入场问题，保证充分信息，提高市场效率。</li>
</ul>
</li>
<li>🔖【年度】毕业之前，我曾经和我最好的朋友很激烈地辩论过一个话题：一块屏幕究竟能不能改变命运。当时我的立场是能。我不相信技术是中立的。我觉得任何技术的创造者，开发者，应当对自己准备的东西有充足的考虑，以及足够的共情。尽管这意味着可能会带来额外的很多成本，但是这也是它最有意义的地方呀。<strong>我没有那么容易就说服自己不再关心。</strong>我的目光，一直，会在你身边。</li>
</ul>
<h2 id="2019-05-30">2019-05-30</h2><ul>
<li>【剧本】可视化纸币的价值贬值过程。用一张会燃烧的生命卡来代替纸币。</li>
<li>我所理解的自由。是主动创造；是哈耶克流派，而非凯恩斯主义；是堂吉柯德。</li>
<li>【产品】谷歌策略的转变很有意思。从搜索作为护城河的接近垄断的大企业，为什么后来开始什么业务都做，操作系统，人工智能，各种办公协作软件。因为谷歌因为搜索搭建了最完善而且自动化的广告系统。他们发现其实广告只是完成了一个数钱的动作，而他们要做的，不过是从各个地方把注意力运过来。mobile first -&gt; AI first，<strong>意味着更加激进的用户产品策略。当平台采取自动化的AI服务，将会容易伤害下游内容供应者的多样性。</strong></li>
<li>【快手】直播作为一个平台？基于直播场景的功能引入。直播，作为一个新的消费场景和context。区分1v1和1v多的场景<blockquote>
<p>发现没有，直播的场景其实和教育的场景都是极其的类似。大体上都可以区别为四种类型: 1v1, 1v多，多v多，以及自己个体。这也意味着，直播对于教育的适合程度！</p>
<p>“营火（一对多）、水源（多对多）、洞穴（一对一）和山顶（一）。”</p>
</blockquote>
</li>
<li>许多的行业环境，实际上都经历了这样的一个过程：一开始信息难以沟通，需要花费大量时间去发现和交流信息资源。然后参与者通过聚合的方式，形成一个稠密的市场，来增加资源的流动性，此时渠道变得越来越重要。而随着渠道的兼并和垄断，其本身慢慢成为了市场上阻止信息流动、伤害市场有效性的最大玩家。然后市场上的流通资源会逐渐标准化，来减少其对渠道的依赖。</li>
<li>对于一个匹配市场，达成目标的方式有：拍卖，以及偏好交换匹配（为了达成共识，来代替价格作为一个标准化共识的作用）。这两者的主要区别是，在拍卖里，其实你越晚进入竞争（推迟入场）是越有优势的，因为你会偏向于隐瞒自己的真实偏好以获得更多的竞争优势。而对于偏好交换匹配（例如：延迟接受的算法规则），所有人的真实偏好同时释放但并不公开。<strong>而在另一个极端，在自由价格市场里市场堵塞的时候往往导致的策略是提前交易。此时，渠道的意义就大于了物品本身的意义，而大家会开始用额外的成本竞争渠道。也会导致渠道中介的诞生。这是市场低效的表现。</strong>因此，如何从速度竞争过渡到价值竞争，是机制设计者需要考虑的问题。<br><a href="https://chocoluffy.com/2019/01/20/%E4%BB%B7%E6%A0%BC%E6%97%A0%E6%B3%95%E8%B0%83%E8%8A%82%E7%9A%84%E5%B8%82%E5%9C%BA-%E3%80%8A%E5%85%B1%E4%BA%AB%E7%BB%8F%E6%B5%8E%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/">价格无法调节的市场 -《共享经济》阅读批注 | 余舜哲的 One Piece</a></li>
<li>为什么一件好事，也可能成为一件坏事。伤害来自于对好事的固执己见。<strong>哈耶克：“比起放任原则，对自由市场最大的伤害可能是那些自由主义者对经验法则的固执己见。”</strong></li>
<li>【产品】其实从自己整理信息源的过程中，可以看出很多潜在的心理偏好。<ul>
<li>很多事情，即便没有使用价值了，依旧希望它留着。比如已经完成的todo，比如不再关注的信息源。虽然它们的利用价值近乎于零，但我还是希望它们留着。在我以后想看到的时候能够看到。</li>
<li>以及在我的rss源里，主题和更新频率是最重要的两个index。主题作为主index很好理解，而基于主题的更新频率的分类是因为，<strong>不平衡的结果近似于不存在。</strong></li>
</ul>
</li>
</ul>
<h2 id="2019-05-29">2019-05-29</h2><h3 id="离">离</h3><p>哭泣，是我记忆里的季节<br>湿润，柔软的，<br>有着野兽的鼻息<br>风吹过的清晨<br>也有过云朵的挽别<br>而我的目光欺骗自己已经离去<br>像湖面上被打碎的天</p>
<h2 id="2019-05-28">2019-05-28</h2><h3 id="evil_is_the_root_of_all_money">evil is the root of all money</h3><blockquote>
<p>我们经常说比特币能够代替银行，能够取代银行的信任，而<strong>信任的本质就在于提供了流动性</strong>。<strong>因为我信任你，所以你的债务能够流动开。</strong>这也是为什么银行的债务具备公信力，而最具备公信力的是国债。当银行加入我们之间的交易时，流动的其实是银行的债务（IOU debt），而我和银行之间的结算其实是滞后的。 <strong>被缩短的这个时间差极大地改善了经济运转的效率。</strong><br>见<a href="https://chocoluffy.com/2019/06/14/%E9%92%B1%E4%B8%8D%E6%98%AF%E5%BF%85%E8%A6%81%E7%9A%84%EF%BC%8C%E6%B5%81%E5%8A%A8%E6%80%A7%E6%89%8D%E6%98%AF%E3%80%82/">钱不是必要的，流动性才是。
</a></p>
</blockquote>
<h2 id="2019-05-26">2019-05-26</h2><ul>
<li>【快手】头条的游戏直播会放慢节奏。因为内容的版权存在纠纷。游戏直播对于快手是一个机会。</li>
<li>【产品】<strong>现在的电影效果，是对未来的内容消费最大的启发。比如动作表情捕捉。比如虚拟形象的创造。</strong></li>
<li>devothink3 对文件属性管理。</li>
<li>科斯的关于公司的理论，交易成本的分析，主要成本来自于信息成本和信任成本。</li>
<li>打开的是什么app和一天内的时间点很有关系。</li>
</ul>
<h2 id="2019-05-24">2019-05-24</h2><h3 id="《the_bitcoin_standard》">《the bitcoin standard》</h3><p>完整博文，见<a href="https://chocoluffy.com/2019/06/01/%E4%B8%80%E9%83%A8%E8%B4%A7%E5%B8%81%E6%BC%94%E5%8C%96%E5%8F%B2%EF%BC%8C%E4%BB%A5%E5%8F%8A21%E4%B8%96%E7%BA%AA%E7%9A%84%E2%80%9C%E6%AF%94%E7%89%B9%E5%B8%81%E6%9C%AC%E4%BD%8D%E2%80%9D/">一部货币演化史，以及21世纪的“比特币本位”</a></p>
<ul>
<li>一个关键假设：<strong>在复杂的环境中，专业能力并不是固定的。</strong>与其强调个人的理性程度，我们更需要机制的设计。<strong>这并不意味着每个人对最终的决定有民主的参与，一个有能力有启发性质的个体都应当超出他自己比例的来推动决定，（asymmetry of the minority rule），但是每个参与者都应当有机会成为那个玩家。</strong><blockquote>
<p>【年度】【想法】年度总结想要提到的：不对称性。个体的时代。</p>
<ul>
<li>守易攻难</li>
<li>超出其人口统计意义的决策权。</li>
</ul>
<p>我喜欢加密货币。因为这是我一直在寻找的东西。政府对于其货币不再拥有垄断，他们必须理性地去解决他们应当解决的问题，而不是面对高企的国债就条件反射地选择货币贬值。</p>
<p>哈耶克之所以提出「去国家化的货币」的论点核心是「货币稳定」。在他的机制下由于利差的存在<strong>还款人是货币不稳定的最大受益者</strong>（ 机制设计的核心：将目标和博弈优势理清楚），这使得货币稳定是对政府最好的选择（也是纳什均衡）。</p>
<p>比特币如何达到货币稳定。09年1000个比特币1刀，这个价格是通过其对等电力的价格计算出来的。比特币的价值最终会趋向于其花费电力的成本，亦或者说是参与人数，这是远比政府进行货币控制的周期要稳定的多的。</p>
</blockquote>
</li>
<li>a zero intelligence crowd, under the right decision, works better than a Soviet-style management of maximally intelligent humans. </li>
<li>【？】bitcoin和黄金的区别：Bitcoin has a huge advantage over gold in transactions: clearance does not require a specific custodian.</li>
<li>bitcoin有了价格之后，就从一个商品（market good）成为了媒介（medium of exchange）。<strong>而价格产生的基础在于，共识范围内的成本(稀缺程度)。</strong><blockquote>
<p>也就是他们的稀缺性是达成共识的。</p>
</blockquote>
</li>
<li><strong>货币的意义：如何在时间和空间上转移经济价值。</strong>在局限的区域内可以做得到物物交换，但是当区域扩大的时候，时间，空间以及需求上的不平等导致交易难以进行。<blockquote>
<p><strong>如何简化操作。</strong>对实体进行一个抽象的代表，然后该抽象代表是能够进行最小颗粒化的分解的，然后对这个抽象代表进行操作，最后结算。举例：钱的诞生作为最小的价值估量单位；前端的virtual dom。</p>
<p><strong>能够解构为更小的交易单元意味着更好的拓展性。</strong></p>
</blockquote>
</li>
<li>流动性意味着交易成本。货币是[1] 稳定的（相比投资的风险）[2] 具有流动性。</li>
<li>货币不稳定，将摧毁那些使用这个货币作为价值存储的人的财富。而货币稳定意味着这个货币的生产成本是高，无论使得其生产成本提高的是人为的还是自然的机制。<strong>稳定性意味着时间纬度上的保值。</strong>而人们应当要有选择不同货币的自由，因为当一种货币的价值不稳定的时候，人们应当能够切换到另一种货币。<blockquote>
<p>而实际上这一种切换在现实生活中也存在，每当国家之间有摩擦的时候，黄原油以及现在比特币的价格会飙高，因为他们成为了避险的选择。</p>
</blockquote>
</li>
<li><strong>哈耶克的思想：自由的货币市场能够得到最稳定的货币。</strong>因为这意味着只有选择最稳定的货币，再能保证在未来时间内价值损失最少。而同样，<strong>稳定的货币使得拥有者可以开始考虑投资，以及更为复杂的市场结构。这使得市场能够更加的专业化。因为允许了更长周转周期的生产条件。</strong></li>
<li>人们对一个货币媒介的共识直接决定了它的流动性。</li>
<li>【？】消费和投资的区别。</li>
<li>金本位的时候是怎么运行的，19世纪，因为银行和大型中心银行的存在，人们可以利用纸币和支票进行交易，被黄金支撑着。但这个设计最大的缺点就在于由于中心化的银行库存了黄金，这使得银行以及政府能够人为操控钱的供给，使其多出对应的库存中黄金的数量。</li>
<li>a good’s <strong>market demand</strong>（消费品） (demand for consuming or holding the good for its own sake) and its <strong>monetary demand</strong>（价值存储） (demand for a good as a medium of exchange and store of value). 当人们选择一个商品作为价值储存的时候，这本质上是增加了超出其正常市场需求的需求。而导致其价格提高。</li>
<li>对于那些主要用于消费而不适合存储的商品，比如铜，锌，石油等等。<strong>囤积商品是劣势行为，因为在消费品市场，供应链能够较快的适应需求的变化，而使得任何囤积的行为在最后出售的时候导致商品贬值而亏损。囤积者的财富其实被转移到了生产者的一方。</strong><blockquote>
<p>小结一下：其实就是<strong>贬值的时候，财富流向生产者。</strong></p>
</blockquote>
</li>
<li>而为什么黄金能够成为相比铜和石油更好的<strong>价值存储的媒介</strong>，因为黄金更为稀缺，这意味着<strong>黄金的供给不能较快的反应需求变化。使得囤积者能够受益。</strong><blockquote>
<p>简而言之：<strong>消费品不适合作为价值的存储媒介，因为他们的价格趋向稳定，使得存储没有价值</strong>。而pow其实就是在数学意义上保证的一个稀缺率一致的商品。</p>
<p>而<strong>价值存储的功能使其成为交换的媒介，也就是货币。</strong>你是所以愿意在昨天接受它，是因为你相信你在明天能够花掉它。  </p>
<p>这引出这样一个结论：<strong>比特币将会是很好的价值存储的媒介。</strong></p>
</blockquote>
</li>
<li>凯恩斯主义：增加政府管制，以及多印货币。源于罗马帝国时期的尼罗王时期骄奢淫逸的作风，为了支撑懒惰的国民，决定将金币中的金的成分降低，以及混出银等物质，使得货币贬值，政府债务降低，以及政府可供开支增大。然而极大的贬低了生产者的积极性。</li>
<li>罗马帝国的衰败很大程度上和君主的骄奢有关，而这直接影响到的就是其货币的贬值。为了逃离持续贬值的循环，许多生产者去到独立的地区开始自给自足的生活，而这也迎来了接下来的地主封建制度。</li>
<li><strong>科技对经济的影响。在于联系地更加紧密。在于信任的引入。</strong>由于运输过程的成本大大降低，这使得原本必须用实体货币交易的场景开始采取纸质货币以及代币。<blockquote>
<p>【快手】代币的引入？由于信任的存在，允许了更长周期的流转和交易。</p>
</blockquote>
</li>
<li>gold standard译作金本位。指代的是货币直接与黄金挂钩。而bitcoin standard作为本书的标题，我认为作者希望采用类似的比喻义，也即比特币本位的意思，而不是直接理解为“标准”的意思。同样值得注意的是，比特币价格的提高会在一定程度上抑制黄金价格提高的趋势，因为两者本质上属于替代物，而由于货币使用场景的网络效用，存在赢者通吃的局面，一方的增长会影响另一方的增长。作者进一步认为，19世纪中国和印度的落后很大程度上和这两个国家采用的银本位经济体系有关，在这段时期银的价值贬值了78%，极大地影响了经济循环。这和当初外国人侵略非洲时带入的外来货币破坏了本地的货币供给一样，这使得财富从货币持有者转移到了货币的供给者。作者给出了建议<strong>永远不要忽略那些可能更稳定的货币，比如比特币。</strong></li>
<li>这也是为什么20世纪的许多经济学家的主要理论都聚焦在：如何保持货币对主权（sovereign）的独立性。</li>
<li><strong>时代的变迁带来了不同的关注点，19世纪的经济学家的重心在于，理解货币作为一种市场商品，得以在时间，空间上帮助经济价值交换。导致了包括纸币的出现等等。而随着货币贬值危机发生，20世纪的许多经济学家的主要理论都聚焦在：如何保持货币对主权（sovereign）的独立性。而21世纪的货币，则主要发明来，实现对中心化的独立。</strong></li>
<li>金本位时期，其覆盖国家实现了高经济增长。但是有几个缺点，比如政府依旧在尝试多印纸币，这意味着依旧一直存在着挤兑黄金的风险。以及，黄金难以物理存储的特质导致其更容易倾向于中心化的存储，这给了政府干预极大的便利。<strong>本质上，那些多印出来的纸币（没有对应匹配的黄金的纸币），是靠这个机构的信用创造的。</strong>而真正强权的政府，往往是通过对政府信用的迷恋开始的，他们认为，仅仅因为一个强力的政府就能够从一堆白纸中创造财富，让人民都变得更富有。这也是20世纪的时候，政府开始基于金本位的制度做了很多更适合管制的设计，比如创造现代化的中心化银行。<blockquote>
<p>这也解释了为什么Vitalik会提出PoS基于信用的方案，它认为的货币体系是信用系统早于物物交换的。他也认为基于信用的系统会更安全。</p>
</blockquote>
</li>
<li>第一次世界大战的爆发，也促成了从金本位转向法令货币为标准的转变，因为这使得政府能够隐形地征税来填补战争的开支。</li>
<li>对凯恩斯主义者来说，战争会带来经济恢复。<a href="https://chocoluffy.com/2018/07/01/%E8%B0%88%E2%80%9C%E7%A0%B4%E7%AA%97%E7%90%86%E8%AE%BA%E2%80%9D%E4%B8%8B%E5%BC%B1%E5%8A%BF%E7%BE%A4%E4%BD%93%E7%9A%84%E4%BF%9D%E6%8A%A4%E4%B8%BB%E4%B9%89/">谈“破窗理论”下弱势群体的保护主义 | 余舜哲的 One Piece</a></li>
<li>当一个国家的货币贬值的时候，对于产品来说便于出口。同时拥有该国货币的人，同样会选择购买他国的货币，或者其余的保值渠道(又比如房地产)。</li>
<li>从金本位到美元本位的转变，意味着美联储成为了全世界的中心银行，也只有他们可以兑换黄金，而其他国家的中心银行也就等同于地方银行，他们流通的地方政府货币是难以兑换黄金的。</li>
<li>哈耶克在1984提到，他并不认为在我们从政府的手上拿回货币的控制权之前，我们能够获得货币。我们也无法通过暴力来夺回。我们能做的，是隐秘地创造新的形式，政府他们没办法阻止。（比特币）</li>
<li>sound money的time preference属性。</li>
<li>【想法】算法，可以提供更好的规划，这意味着更稳定的流动性。而时间差带来的影响能够被更好的测量和评估定价。对于很多传统行业来说，它们会倾向于lobby消费者接受这样的一个观念：此刻的消费优于未来的消费。但对于互联网企业，能够提前预约用户的未来需求将给企业以极大的信息，资源组织的空间，而不需依赖将所有的计算能力置于当下的交易窗口。比如，预约打车的时间点或许可以提前到添加某个日历提醒，甚至通话中的口头安排。这样的资源优化空间尤其适用于online to offline，供给难以短时间调整的匹配场景。因为更好的流动性能够弥补短期供给短缺。<blockquote>
<p>拼多多的出现，通过保证需求的<strong>空间体量</strong>而使得供应商获得规模生产压低成本的优势。这是对于生产-消费关系的说法。而对于已经生产好的资源的调度问题，比如注意力，按需经济(on-demand economy)，则是<strong>时间上</strong>的需求稳定性能够给予更多压低成本的空间。</p>
</blockquote>
</li>
<li>理想的状态应当是货币作为供给是固定的。而每一个人为了获得更多的钱唯一的方式就是依赖生产力然后交换得到，而随着生产力的提高，制造能力的提高，使得货币升值。同时处在升值阶段的货币使得人们更有动力来储存并用于投资。</li>
<li>本质上采集黄金的过程也是最原始的proof of work。正因为这个过程非常的艰难而保证了黄金供应的稀缺性。</li>
<li>货币应当是所用商品中受边际收益递减原则影响最小的商品。</li>
<li>通货紧缩有什么不好的嘛? (降低的流动性)</li>
<li>当人们更愿意持有货币的时候， 货币也即升值，而这也会返过来奖励货币持有者。本质上说，货币的升值意味其相对其他物品更高的购买力。</li>
<li>比特币的安全性：<ul>
<li>信息流动的充分性。每个人都拥有完整的历史，这意味着每一笔交易都会被传输给所有人，这意味着一旦有人作假，这个冲突记录会很快地扩散给所有人。</li>
<li>给予「规则执行者」以体系内部流通代币的奖励。</li>
<li>攻难守易的加密过程。<blockquote>
<p>感觉更像是经济系教授来阐述的货币发展史，倾向于阐述哈耶克流派的思想而反对凯恩斯主义。但是后半部分关于bitcoin的介绍流于平庸，没有碰太多技术上的细节。而是不断重复论证一个观点: bitcoin is the hardest money ever. </p>
</blockquote>
</li>
</ul>
</li>
<li>比特币作为交易货币一个关键的局限在于对交易量的支撑。但是从比特币供给上的分析可以得到：比特币是一个合适的价值存储 value storage，类似黄金而不是交换媒介。</li>
<li>经济学上提到的稀缺性，不是指资源本身的数量和限制，而是指时间上的花销。而这恰恰也对应了pow的成本：时间成本。比如，铝在地球上的含量没有大变化，古代的时候铝比黄金还珍贵用来做宫廷的壶具，因为当时开采铝的成本最高。但是新的技术发明使得曾经用于开采铝的时间大幅度的缩短，我们现在再也没说铝，铜这些金属是稀缺的了，但实际上它们的资源总量从过去到现在就没变过，变的是付出的时间成本。<blockquote>
<p>同样的逻辑，当你希望人为地创造稀缺性的时候，就是提高其所付出的时间成本即可。而你能预见的大部分的敌对攻击则是通过各种技巧来缩短这个时间成本。比如，从金本位到美元本位转换的背后想法。</p>
</blockquote>
</li>
<li>比特币网络目前支持的交易上限是35万笔交易每天。基于这样的交易上限，未来可能出现的情况是银行将最终的交易结果通过区块链记录，而平时的日常交易则是通过银行本身发放的与比特币换算的货币来结算。<strong>一个二级的货币系统，是与比特币清算的。这些存储了比特币的银行会像在20世纪货币国家化之前的银行一样工作。而比特币能够代替目前黄金的作用，成为一个reserve currency。每日由银行之间进行清算，而不在每个人之间进行交换。</strong>而比特币能够替换黄金的一点在于，它不再被任何主权要挟，不再依赖国家的信用而创造价值，也不会再存在量化宽松等目的性极强地贬值行为。<blockquote>
<p>数据: visa作为一个中心化的服务每秒支持3200笔交易，但是对于比特币网络目前只支持4笔每秒。</p>
</blockquote>
</li>
<li>一个可能预见的行为是，各个国家的中心银行也可能购入比特币作为货币储备，如果比特币的价值能够持续提升到接近其他储备货币的价格。作为一种对冲的保险策略。因为他们会慢慢意识到，比特币的价值储存功能比黄金要高。</li>
</ul>
<ul>
<li>经济学里面有一个很有意思的讨论是，信用体系和货币体系究竟谁先出现。这个讨论启发了后续很多的机制设计的大致思路。vitalik认为是信用体系先出现，也即债券的流动先于货币出现，而<strong>信用的流动性源于抵押物。</strong>这也成为了vitalik提出的proof of stake的核心思想：staking。而另一个方向认为货币体系早于信用体系的出现，则是强调货币作为价值交换媒介的属性，而成为交换媒介的前提是价值存储。货币拥有的<strong>价值源于其稀缺性，也就是生产所付出的时间成本。</strong>这也成为了satoshi提出的proof of work的核心思想，而比特币的价格也将最终趋向于挖矿成本的纳什平衡。</li>
<li>人们对一件商品的需求，其实也间接反映了它的机会成本。</li>
</ul>
<ul>
<li>🔖 你能够看得清楚，并不一定意味着你能够成为最擅长的人。只是你可能更自由罢了，也可能更不幸。解构的能力，意味着选择的权利。但失去了重构的能力，这意味着彷徨，而非真正的自由。<blockquote>
<p>这几天和别人聊起，为什么我喜欢存在主义而不是虚无主义。我想要的，不是毁灭，而是重建。</p>
</blockquote>
</li>
<li>医院的笑容，机场的眼泪，是我认为最宝贵的东西。</li>
<li>🔖 飞机上看《舌尖上的中国》看哭了。心急的时候适合看一看。中国很大，有很古老的故事和笑容。我在想，人们是不是更愿意和自己认知相似的人一起，类似的资源，类似的能力和思维。可这不应当成为排斥其他故事，其他面容的理由。突然想起，陀翁这么说过，如果有谁问哪一本书能够总结我的一生，我会说《堂吉柯德》，我会和他说，这是我一辈子的故事，你会因此责怪我吗。I do not willing to mistake disenchantment for truth, for real. <blockquote>
<p>多说一句，《舌尖上的中国》就是一个很好的例子：<strong>仅仅是记录这个世界，都非常有价值。这个世界的多样性正是人们生活的多样性。人们的故事是没有尽头的，因为总有人会沉默。</strong></p>
<p>“美味的前世，是如画的背景。”</p>
</blockquote>
</li>
<li>每个人都有他力量的来源。他们如果愿意打破一个，就必须花心思去建立另一个。有的人不信奉一个教义，其实也在塑造着另一个。</li>
<li><strong>经济学，培养的是我宏观的直觉。</strong><ul>
<li>经济学上，偶像是哈耶克和中本聪</li>
<li>开发者，偶像是aaron swaritz</li>
<li>文学，偶像是加缪和昆德拉，塞万提斯。</li>
</ul>
</li>
<li>最好的书，最厉害的人，都会和你讨论「为什么」，而不是一上来就开始给你介绍「怎么做」。在看完一大段bitcoin standard之后再抬头看了一段据说很厉害的桥梁的介绍片视频有感。</li>
</ul>
<h2 id="2019-05-22">2019-05-22</h2><ul>
<li>【创业】游戏化社交体验。教育，让你认识好朋友的过程，其实就是创造一个共同的敌人。</li>
</ul>
<h3 id="《激进市场》中译本分享">《激进市场》中译本分享</h3><p>我知道这本书主要是因为以太坊创始人vitalik的twitter。我自己也是加密货币的爱好者。目前也是国内加密货币社群橙皮书的供稿作者之一。</p>
<p>短期内会有很多社会阻力。</p>
<h4 id="哈伯格税">哈伯格税</h4><p>资源流转的规则，看作是拍卖的规则。你为你的资产估值付税，（这使得你可以给出一个更合理的估值），别人根据你的估值和你交易。</p>
<p>这对<strong>信息的公开和交易安全</strong>有很高的要求。你需要让别人知道有哪些商品是需要流转的。你又如何实现资产所有权的转移。以及<strong>税究竟付给谁？</strong>。这里面的很多特质其实使得哈伯格税特别适用于虚拟物品，准确的说是虚拟稀有物品。目前最接近的应该是以太坊的ERC721标准- NFT（非同质代币）。</p>
<p><strong>可以在一个封闭系统，或者说一个中心化系统里实现这个规则。</strong>也是我认为可能最容易落地的一项规则。（以及目前的确有人在做的）游戏内部装备道具的流转。</p>
<p>主要是围绕稀缺资源的所有权交易。比如限额的社群身份，你需要给你的身份估值按大概7%交税同样外面的人可以和你交易得到加入这个社群的身份。每个人所交的税，也能够从另一个角度上成为这个社群的最低基本收入。</p>
<p>提高稀缺资源的流转率，也保证了理性估值。</p>
<p>很有意思。人为的创造friction，摩擦来过滤出真正理性的估值，信息等等。pow中付出work多的人能够成为历史，因为付出高成本的人更可能是honest player。</p>
<blockquote>
<p>而不需要用户，像在传统黄页里选择上传。<br>实现了一种连续拍卖。用户可以随时知道自己身边物的市场估值。问题同样存在，比如物体退货，被损坏的风险，保险的形式等等。（银行所谓一个中心化实体它的主要价值其实就是对风险的高承担能力。它才有这个话语权说我需要高额的手续费等等等等。）</p>
</blockquote>
<h4 id="data_store">data store</h4><p>逻辑和工业革命时期劳动者的工会组织是类似的。</p>
<p>而作者希望，能够为普通用户，在互联网时代，能够创造出一种组织保护他们，形成一个博弈力量和大公司之间相互抗衡。</p>
<p>这和目前加密经济的趋势有相似之处。加密货币创造出来的，给个人的<strong>极大的博弈优势。</strong>（保护自己的数据更容易，普通用户，产生一对公钥和私钥，而攻击者必须去撞哈希付出极大的成本去攻击系统。）防守者容易，攻击者及其困难。极大的不对称，未来很多的创新以及福利都将依赖这一类不对称。</p>
<p>未来我认为很可能出现的形式是，我对我自己的用户数据进行加密（RSA，比如telegram），然后授权，无论是由工会管理还是个人来管理，或者很可能是混合的模式，其实这主要看个体的抗风险，理性的能力程度。但是决定这个数据是否能被使用的权利是回到了用户手上，不然你得到的就是一片乱码。</p>
<p>个人数据同样，作为一种稀缺数据，是可以通过利用哈伯格税来流通，所有权的转移，或者是把个人数据当作资产来债券化，实现部分所有权的分享（这一部分的想法书里没有提到，但我觉得这个思路是连贯的）。</p>
<blockquote>
<p><strong>数据是有很大的附加价值的。</strong>目前大部分的做法，就是互联网服务商认为自己提供了服务，比如社交网络，娱乐，用户从中得益，也因为这些公司也免费得到用户的数据。</p>
<p>目前大部分的信息都是免费的，互联网现在做法是使得你更方便地获取，他们的盈利点是便利性。</p>
<p>我个人感觉，这一章的逻辑，也就是成为数据工会这个想法是合理的，但是具体的实现方式glen其实没有讲清楚，他就提到需要存在这样一个中介，我们授权我们的数据给它，它再会去和其他公司谈判交涉。</p>
</blockquote>
<h2 id="2019-05-21">2019-05-21</h2><ul>
<li>兴趣是最好的老师，在告诉一个人怎么做之前，一定要让他知道「为什么」。 </li>
</ul>
<h3 id="哈耶克的稳定货币理论">哈耶克的稳定货币理论</h3><ul>
<li>金本位意味着没有黄金储备就不能发币？</li>
<li><p>哈耶克的主张里的一个核心观点：“<strong>货币的稳定</strong>”，并以此提出了“货币的去国家化”这个理论。其中的一个核心规则就是：<strong>还款人能够以和商品等价物等价的其他货币还款。</strong>，使得<strong>还款人能够在多重还款路径中找到最有利的一条，让还款人取得博弈优势，而另一方银行将因此保证货币的稳定。</strong>。比如假设存在两个货币和一个商品等价物（这也是为什么哈耶克支持金本位了！），一开始是100A = 100等价物比如苹果 = 100B， 如果A升值了，那么我可以还100B 100苹果 = 80A使得自己得利；如果A贬值了，我可以换100A = 80B = 80苹果，还款人依旧得利。</p>
<blockquote>
<p>核心的机制设计：<strong>将存在利差的利用可能性开放，最终的纳什平衡将达到和实际稳定</strong>。想到ripple的XRP的设计，让用户自行的去寻找最优的货币交换路径，导致最终的货币转换利率等同于实际的汇率。</p>
<p>为什么实现一个巨大的博弈优势是现代社会的一个优势。<br> 因为在博弈其中一方取得明显优势的时候，另一方会趋向于稳定的，可预测的策略。加密货币经济，让防守方获得了巨大的优势。防守方能够以极小的成本承担攻击者巨额成本的攻击。<strong>在机制设计中，当我希望将博弈一方的策略stablize的时候，最好的方式是给另一方开放的竞争优势。因为一方任意的策略偏移都将使得另一方变得更有利可图（加密货币是守方任意的微小变动将导致攻方巨大的成本提高）</strong></p>
<p>哈耶克的思路主要是，如果这个机制设计存在，那么它是如何实现「货币稳定」的，而不是说，如何将这个机制设计放在现实落实。</p>
</blockquote>
</li>
<li><p>哈耶克认为经济弊病在于：</p>
<ul>
<li>政府（政策制定者），以及央行（货币，财政政策）以及商业银行（）。如果这其中几个角色共谋会发生什么。比如政府能够不断扩张财政赤字并最终将国债货币化（通过QE），转移到大部分货币持有人的身上。又比如，如果商业银行too big to fall，那么商业银行为了赚钱各类信用衍生物也将充斥市场。<blockquote>
<p>哈耶克的建议是: 即便商业银行经营不善，也绝对不会进行救市。</p>
</blockquote>
</li>
<li>市场上流动的主体其实并不是发行的货币，而是商业银行的信用创造（比如债券等等），</li>
</ul>
</li>
</ul>
<h3 id="《激进市场》第五章">《激进市场》第五章</h3><ul>
<li>数据的marginal value是逐渐变小的。因为对于model来说，在已经用大量数据训练好的模型再增加数据对改善不确定性的效果是有限的。<blockquote>
<p>现在另一个典型的场景是: employer &amp; worker。一旦我们能够改变博弈的优劣势，让employer去追逐worker，那么worker的处境就会完全不同。我们需要给予worker竞争优势，使得employer任何的策略偏移都可能使得worker变得更有利可图。</p>
</blockquote>
</li>
<li>在讨论如何定价之前，我们应该谈论如何测量。</li>
<li>从心理学的角度，金钱交易本质上解构了原始冲动。</li>
<li>成立「数据工会」的意义：AI -&gt; collective intelligence 共同智慧。用户对得到的反馈有了同理心，siri和alexa的反馈不只是来自bot的回应，用户会像对wiki的文章或者facebook的朋友信息一样对待这些反馈，建议。</li>
</ul>
<h2 id="2019-05-20">2019-05-20</h2><blockquote>
<p>针对有读者提出矿场被垄断，接近51%的算力被垄断这个观点，我是这么回应的。 </p>
<p>的确算在算力垄断接近51%的情况，但这个优势并不会阻碍后来人入场的机会呀，这个讨论更多是在于能和不能之间，而不是擅长和不擅长，大型机构的确在规模上更容易控制成本，但是这个系统并不会阻碍任意一个后来者进入系统，这个「是否能加入系统的能力」是及其重要的；相比其他机制设计比如proof of stake，为了节约资源而重新转向了基于authority的规则就和政治上的世袭没有太多区别了，后来者不再拥有加入的机会。</p>
<p>在进入擅长和不擅长的讨论之前，我们更希望把社会从不能到能的过渡。</p>
<p><strong>同样我们需要对「垄断」和「作恶」要区别开来。</strong></p>
<p><strong>在pow这个机制下，垄断算力并不代表作恶。</strong></p>
<p>即便拥有了51%的算力，攻击者基于自己的利益依旧会选择维护这个系统，而不是选择去攻击它。</p>
<p>这是和我们通常意识里的“垄断”是很不同的，矿场的产生更好应该被当作是维护者，而不是决策者。</p>
<p>原因：【1】攻击者即便拥有51%算力也只最多只能够改变自己的交易历史形成double spend攻击，而无法改变别人的，因为没有别人的私钥 【2】基于51%的算力，维护当前的系统也就通过继续挖矿所得到的利益远大于攻击这个系统需要重写整个分链历史的成本</p>
<p>垄断，指资源的集中，但也同时给予了垄断者潜在利用这个系统作恶的机会。但这个机会不一定会被执行出来，也就是我刚刚提到的，「垄断」不等于「作恶」。因为在这个规则下作恶的成本远远高于资源持有者维护现有体系的成本。</p>
<p> 而一个系统的安全性可以这么衡量，去破坏但是破坏的代价是你会比你遵守规则至少失去（或者缴获）了X。X越大，这个系统就越安全。这也是一种思维的转变，很多时候我们其实不需要也不可能有绝对安全的系统，我们只需要当他们破坏这个系统的成本足够大的时候即可。</p>
</blockquote>
<ul>
<li><strong>关注app store社交榜。下载app试用观察UI。</strong><ul>
<li>folen，fallen</li>
</ul>
</li>
<li>“人类的学习场景可以分为4类，分别是：营火（一对多）、水源（多对多）、洞穴（一对一）和山顶（一）。”</li>
<li>虽然不明显，但其实Google的处境是和Facebook相类似的，G的服务入口积累了用户大量的数据。G打造了最自动化的广告系统，但广告也只不过完成的是数钱的动作，其不断扩充服务入口去找到用户最频繁使用的场景，就是为了把钱送过来。但一旦其数据用途走偏被发现了，也容易出现基于反垄断法要求拆解G的诉讼请求。<blockquote>
<p>G的duplex，最适合微信来做。从整合服务入口的自动化，到自动化整个服务。</p>
<p>平台建设的两个思考方向:<br>to developer &amp; to users. 分别对应生产者和消费者。</p>
</blockquote>
</li>
</ul>
<h3 id="维护讨论的氛围">维护讨论的氛围</h3><ul>
<li>想到amazon的一个做法。no ppt，打印好几张纸，然后每次开会前花几分钟时间让大家来阅读。</li>
<li>文章提到的几点有启发：<ul>
<li>人为创造friction，比较激进的思路是：让用户回答一个关于文章的问题才能发表评论。</li>
<li>记录用户的阅读时间。</li>
</ul>
</li>
<li>“他说自己从互联网上学到的最有价值的一课可能是，<strong>当网站设计者在用户的名字旁边设置一个数字时，一定要非常非常小心。因为大家会想尽办法让这个数字变得更大。</strong><br>而如果你没有深入思考你到底想鼓励什么，为什么鼓励它，以及由于这种鼓励可能会发生什么，那很多事情到最后可能就无法挽回了。<blockquote>
<p>社交：存在感。<br>讨论：微信从来都不是一个适合多人严肃讨论正经事的地方。<br><a href="https://blog.codinghorror.com/because-reading-is-fundamental-2/?utm_source=wanqu.co&amp;utm_campaign=Wanqu%20Daily&amp;utm_medium=website" target="_blank" rel="noopener">Because Reading is Fundamental</a></p>
</blockquote>
</li>
</ul>
<h2 id="2019-05-19">2019-05-19</h2><ul>
<li>对我来说最重要的几幅画：<ul>
<li>沙漠挖水，每一次就差一点点却放弃了。</li>
<li>毕加索的牛的创作，由繁至简。</li>
</ul>
</li>
<li>随身笔记本是主要负责速记的。重要的内容放进大笔记本。</li>
<li>【快手】快手音乐人。NFT.</li>
<li>刻意地创造稀缺性意味着什么? </li>
<li>延迟满足，很多人简单地把它理解为克制的意思，认为好像不看剧、不玩游戏就是延迟满足。不是的。而是指，我要训练自己在自己的输出中获得喜悦，而不是通过坐享其成、以及简单的感官刺激而获得喜悦。</li>
<li><strong>一样东西越标准化、流水线化就越需要仲裁，也越得以仲裁。仲裁存在的前提是，存在反驳意见，以及存在权威。而这些的前提则是：标准化。越私人的体验越无法反驳，也没有权威之说。</strong></li>
<li>【区块链】虽然说区块链对安全性的高要求可能是对商业环境上的一个不合理的假设，因为实施这种安全性的成本很高。但为什么说区块链对我们社会、对机制设计依旧有意义。因为比特币其实也是在尝试解决一个分权的系统。任意一个规则的执行者也就是矿工为了平衡他们pow的支出会流转起他们得到的比特币，规则执行者和资源持有者是得以分开的。任何一个腐败的系统去追溯他们的源头可能都来自于官商勾结，在于制定规则的人成为游戏的最大玩家，而形成后来者难以破除的垄断关系。而比特币带来的是另一个思维，任何的后来者都能够几乎平等和所有先前加入系统的人平等竞争，因为pow所依赖电、机器是远远能够平均分布的（虽然矿场在规模上可能更容易控制成本）。<blockquote>
<p>比特币里仲裁者没有固定身份。</p>
</blockquote>
</li>
<li>PoS：设计原理：让获得下一个block的概率与控制coin的数量挂钩。</li>
</ul>
<h3 id="PoS">PoS</h3><ul>
<li>分布式的假设，不仅仅是非信任的节点之间，还包括那些还未出现的节点。</li>
<li>distributed consensus，分布式共识，的核心在于保证交易的时间序列。</li>
<li>很多情况下他们会见到很多变式，解决方案是引入trusted party，但是本质上有了trusted party的共识系统就是截然不同的了，因为它的<strong>权威性是天生赋予的，这一类系统容易发展成另一个样子：世袭制</strong>。</li>
<li>当我们需要一个中心化实体来签名保证交易记录的合理性的时候，这和现在的银行没有任何区别。比特币带来的最大的改变就在于，他让这个中心化实体成为没有固定身份分布式的节点，在他们之间达成对交易历史的共识。</li>
<li>那为什么不用时钟时间？因为在分布式系统中没有一个时间标准。<br><a href="On Stake and Consensus">On Stake and Consensus</a></li>
</ul>
<h3 id="bitcoin的价值">bitcoin的价值</h3><ul>
<li><p>如果大多数人都存储（hoard）比特币会对比特币的价格产生什么样的影响？在货币需求总量不变的情况下，货币供应量增加会导致利率降低（<strong>利率即资金的价格</strong>）。国家喜欢通过控制利率来刺激消费，但是当利率无法再刺激消费水平的时候，就进入了“流动性陷阱”。<br><a href="https://krugman.blogs.nytimes.com/2009/07/07/the-paradox-of-thrift-for-real/" target="_blank" rel="noopener">The paradox of thrift — for real - The New York Times</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s/iUgKg8oyGYw9VPo-1BDRYg" target="_blank" rel="noopener">布隆伯格在华大毕业典礼的演讲：民主到了危机时刻！</a></p>
</li>
</ul>
<h2 id="2019-05-18">2019-05-18</h2><ul>
<li>不习惯毕业典礼。不喜欢一个必须说再见的时刻。在我决定结束之前，我不许别人替我说再见。</li>
<li><strong>如果一个故事你看到它发生，意思倒不是特别大。但是如果由一个人转述，效果会很明显。这是story-teller的力量。</strong></li>
<li>而忧郁是，你失去了欺骗自己的能力。在你学会编织谎言之前，你逐渐熟练揭穿谎言，你只想看到真相，可这个世界没有提供你真相的权利。</li>
<li><strong>在这个社会，否定比肯定更容易带来良好的自我感觉。</strong></li>
<li>人们主观的惰性程度是被远远低估的。很多时候我们陷入混乱，可能并不是这个社会客观上出现了巨大的动荡，或许是我们还来不及适应外界的改变而已。</li>
</ul>
<h3 id="毕业典礼">毕业典礼</h3><h3 id="相如">相如</h3><p>每次想到你，我就想到自由。</p>
<p>你应该是我认识的最全面的一个人了。料理，音乐，文学，摄影，运动…我总感觉仿佛没有你不会的事（真心话）。你的能力让你拥有无数提前做选择的机会，而你则总会耐心地等待你的朋友，保护他们的体验。有你这样的好朋友，我真的很幸运。</p>
<p>你也看的出来，我其实是一个外热内冷的人。我在外面喜欢和别人打交道，但我自己的内心世界很少会和别人谈论。人就是这样的矛盾体呀，一面期待着他人的温度，而另一面却恩惠于别人的不理解而得以自由。可我觉得和你一起的时候我能够对你敞开全部的想法，幼稚的，粗糙的，理想主义的…这很安全。我深深地受惠于你带来的安全感和尊重。（我也感觉其实蛮多身边的人都有类似的感受，这也是你独一无二的魅力~）</p>
<p>我也是渐渐地发现，我对待自己生活的态度里有你的影子。很多时刻，我会在想，如果这是相如的话，会怎么做呢。这也是我想要记住一个人很久很久的方式。</p>
<p>like all dreamer, i confuse disentrancement for truth. 我记得你在坎昆的时候提到这是你印象最深刻的一句话。这几天我也一直在想，给一个可能是错的理解哈哈:) 。许多人会把失落后的冷静错当是生活的真相吧，可不依赖理性而获得希望才是我认为最动人的东西。也最自由，就像堂吉柯德一样。</p>
<p>这一套卡片我找的蛮久的，总共写了三份。火烈鸟般的勇气和激情，我写给王若愚；蝴蝶般的陪伴和真诚，留给了马叶舟；而云雀般的自由，想祝福你。</p>
<p>我会一直是你写在博客里的诗，日记的第二个读者。<br>我也会一直记得你的善良和耐心，并努力把这份善意传递给身边的人。<br>我期待着的dream team里一直有你，还有王若愚，纪然，段爸爸，栗菲和ran dan。</p>
<p>我才不想知道终点是什么样子，又有什么宝藏，我也不想征服任何人，这片海域上最自由的人，才是海贼王~共勉，加油~</p>
<p>相逢的人一定会再相逢~来北京找我噢</p>
<h2 id="2019-05-16">2019-05-16</h2><ul>
<li>每个人浏览网页的次序其实可以归结成为tree。将知识探索的的过程可以总结为一个从root到leave的path。你可以打包导出这个过程，分享给别人。</li>
<li>粉丝经济的下一步，是影响力的个性化。</li>
<li>【产品】<strong>目前大部分的笔记app都忽略了一点，也是纸质笔记依旧优越的地方：空间感。在于你注意力的机制不是局限在垂直的领域。</strong></li>
</ul>
<h3 id="parson_showcase">parson showcase</h3><ul>
<li>cocoon，囚。将自己用织布包围与外界隔离生活21天。</li>
<li>probable women。将一个家庭的数据表转化为一首叙事诗。</li>
<li>empathy。利己主义者的头盔，当面前出现西装革履的人的时候会打开遮板，其他风景的时候会自动关闭。</li>
<li>联动的智能家居。通过不同家具收集的数据来联合推测用户的状态和情绪。</li>
<li>本地人联合众筹旅游语音向导。</li>
<li>surveillance and privacy. 将文字编码织布到围巾上。</li>
<li>hero</li>
</ul>
<h3 id="non-fungible_token(collectibles)">non-fungible token(collectibles)</h3><ul>
<li>non-fungible意味着是不可交换的，bitcoin是fungible的因为支付前后得到和付出的bitcoin是identical的，non-fungible的例子比如机票等，带有个人信息且不可交换的；或者比如猫咪，而在加密货币的领域的例子就是cryptokitties。相比fungible token比如erc20， non-fungible token其实就是增加了许多meta data，以及最重要的<strong>ownership</strong>。</li>
<li><strong>non-fungible token常常用在收藏品的领域。强调所有权和独特性。而收藏品本身则是稀缺的，也适合于哈伯格税。</strong><blockquote>
<p>可以适用在其他的稀缺品上，比如人的身份。也就是将<strong>哈伯格税应用在社区身份的所有权上。</strong></p>
</blockquote>
</li>
<li><strong>显式且连续的报价，公布在链上，而不需要人为的发布信息。也将成为不可避免的拍卖信息。</strong>， “<strong>We will see continuous auctions form on NFTs</strong>. Imagine Ebay, but you don’t have to actively list what you own to see the going price.， This is huge. We’ll have trustless, liquid markets where anyone can make an offer for what you own (even if you’re not actively selling).“<blockquote>
<p>【剧本】不可避免，永远在线的拍卖价格。你所需要做的，就是等到合适的价格然后接受。<br>为什么说blockchain和哈伯格税是最好的搭配。</p>
<p><strong>公司的存在，在于降低交易成本。(虽然存在沟通成本)，而现在smart contract达成的一个效果同样也是降低了交易成本。</strong>As per Coase’s Theory of The Firm, reducing the transaction costs to coordinate allows us to form new organisations that create new wealth. Smart contracts &amp; blockchains afford us this opportunity to build these new post-state collective coordination games.</p>
</blockquote>
</li>
<li><p>“What about utilising Harberger taxes to sell slots for your attention? Taxes are your basic income?<br><strong>What about a Harberger taxation scheme for a community, where members can buy/sell access to a community? Taxes are basic income in the community?</strong>”<br><a href="https://medium.com/@simondlr/what-is-harberger-tax-where-does-the-blockchain-fit-in-1329046922c6" target="_blank" rel="noopener">What is Harberger Tax &amp; Where Does The Blockchain Fit In?</a></p>
</li>
<li><p>NFT的一个创新的地方在于<strong>给电子资产带来了所有权。我们习惯接受digital assets是强调使用权的。</strong></p>
</li>
<li>对于传统的平台来说，用户生成的内容是属于平台的，用户使用平台得到的是“社会资本（social status）”、“观众”以及“品牌”，<strong>而内容产生的所有的剩余价值都属于平台，比如内容和内容之间的联系、推荐，内容和观众、和社区之间的联系、推荐都是属于平台的。</strong></li>
<li><strong>为什么现在存在很多产品他们的用户体验非常差，但我们还必须用，因为他们的核心竞争力不在于体验，而在于他们垄断了用户数据和利用该数据进行分析的权力。当数据真正属于每一个用户的时候，也就是每一个用户生成的内容都是属于他的NFT</strong></li>
<li>对于NFT的资产，甚至可以使用fractional ownership，这样可以使得non-fungible asset重新fungible。</li>
<li><a href="https://blog.coinbase.com/the-playful-paradigm-shift-4bf35d9d1d11" target="_blank" rel="noopener">The Playful Paradigm Shift – The Coinbase Blog</a></li>
</ul>
<blockquote>
<p> <strong>新事物的流行通常都会经过两个阶段：投机阶段（investment）和实用主义（utility）阶段。</strong>投机阶段人们需要一个中心化的交易所，而在实用阶段当比特币进入支付等领域的时候则是去中心化的。</p>
<p>这个说法，<strong>投机：其实就是一个快速积累资本的过程，无论这个资本是社会资本（social status）还是金融资本。</strong>，而这个新事物可以是比特币，也可以是社交网络等等。认清楚项目是处于哪个阶段有利于我们以不同的标准去评价他们。</p>
<ul>
<li>我们所期待的比特币以及其他加密货币，在未来很长的时间内都会是中心化和去中心化结构并存的，因为只要加密货币需要和现有货币转换，只要需要依赖当前的金融机构的部分就一会是中心化的，但这并妨碍在加密货币流通的这个领域我们能够做到更完整的去中心化。<br>我们需要给予一项技术于时间，于土壤。土壤这个比喻其实是很重要的，理解哈耶克的经济理论的一个关键理解他认为市场是作为一个”园丁”的隐喻。园丁只是负责剪枝，修整，你不是拿那些条条框框去约束它，而是让这个市场自然地生长，里面的信息信号充分的自由流动。</li>
</ul>
</blockquote>
<p>延展阅读：</p>
<ul>
<li>什么是curved bond？</li>
<li><a href="https://blog.ujomusic.com/introducing-ujo-portal-making-musicians-more-money-9224d808a57a" target="_blank" rel="noopener">Introducing Ujo Portal: Making Musicians More Money.</a></li>
<li><a href="https://medium.com/@simondlr/tokens-2-0-curved-token-bonding-in-curation-markets-1764a2e0bee5" target="_blank" rel="noopener">Tokens 2.0: Curved Token Bonding in Curation Markets</a></li>
<li><a href="https://docs.google.com/document/d/1CNBjz4oTUTQo2VjRh2jK0VBY5z7GAVPwT8YsVtOv1Ns/edit" target="_blank" rel="noopener">Delphi: a Mechanism for Staking and Arbitration - Google Docs</a></li>
</ul>
<h3 id="hashcash">hashcash</h3><ul>
<li>POW的来源。hashcash提高了发送邮件的成本，因此降低了spammer的发生几率。一封邮件发送者需要增加nounce计算hash直到满足特定条件为止，比如一开头的多少位为0，然后才能够发送，这个难度是可以调整的，目前的速度是需要计算1s。而收件人则可以用极短的时间来验证这个header是否满足条件。</li>
</ul>
<h2 id="2019-05-15">2019-05-15</h2><ul>
<li><strong>无论接下来讨论什么办法，首先定义问题是什么。</strong></li>
</ul>
<h3 id="POW_as_a_clock">POW as a clock</h3><ul>
<li><a href="https://grisha.org/blog/2018/01/23/explaining-proof-of-work/" target="_blank" rel="noopener">Blockchain Proof-of-Work is a Decentralized Clock - Gregory Trubetskoy</a><blockquote>
<p>我们需要的其实不是绝对时间，而是一个次序保证: 那些事发生在那些事前面，一个相对时间。proof of work里面的work其实也同样代表了时间，甚至其主要的使用价值就是表示成为时间的次序。于是大家就对次序发生有了一个共识，就是这个问题的解开次序。</p>
<p>这个系统是permissionless的，也就意味着他能够实现算力分散。也是memoryless的，也就是任何人解决新的问题都和其解决之前的问题没有关系。</p>
<p>联系the book of satoshi，为什么说POW解决了byzantine general problem，因为在byzantine的目的就是创造共识。那么POW就利用了一个强制的办法，谁付出的work（时间）多，谁就是历史。换言之，谁付出的成本高，谁就是历史。<strong>这个思路可以有效减少攻击者的发生。</strong>同时创造出一个集体共识。而同样，我们也会去奖励付出了work的miner，比特币的价值最终会趋向于付出的成本，也间接反应了参与人数和当前的难度。<strong>这也保证了比特币作为货币不会垄断在「规则执行者」也就是miner的手上。和「资源持有者」的身份不会构成重叠。</strong></p>
<p>（对于比特币消耗资源的命题，关键则是在于去看是否存在一种同样消耗时间，但没那么消耗资源的一种数学模型可以来代替。）</p>
<p>目前主流的两种奖励机制：</p>
<ul>
<li>一次性的奖励交割</li>
<li>赋予权力是的能够通过权力寻租。</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="其他细节问题">其他细节问题</h3><ul>
<li>transaction pool是怎么设计的。是global还是distributed的。</li>
<li>比特币承担了多个角色。现在也同样像黄金一样能够来避险。于是在中美贸易战的时候，比特币会持续拉高。</li>
</ul>
<h3 id="PoW_v-s_PoS">PoW v.s PoS</h3><ul>
<li><p><a href="https://talk.nervos.org/t/nervos-pow/1639" target="_blank" rel="noopener">长远来看，也许NERVOS的POW挖矿最可能被人们广泛诟病 - 矿工酒馆 - Nervos Talk</a></p>
<blockquote>
<p><a href="bear://x-callback-url/open-note?id=13B81AD8-A401-43EE-9750-A6753B596CB5-89287-00033059A9C456AD&amp;header=%F0%9F%8C%9F%20Vitalik%E6%BC%94%E8%AE%B2%EF%BC%9Acrypto%20economics." target="_blank" rel="noopener">Vitalik演讲：crypto economics.</a></p>
</blockquote>
</li>
<li><p>熟人社交， “第一件事是在选择商业化路径时，宿华选择了既是用户产品又是商业产品的直播。第二件事是他在抖音靠流行内容狂飙猛进情况下，更沉下心开始坚决做熟人社交。快手主端过去一年的核心是<strong>社交化</strong>，产品上线了类朋友圈/QQ空间的说说。快手从17年就开始对社交不断投入，加强关注，加强普通人和普通人的沟通，一直都在朝着这个目标去做。这两件事情应该对他用户粘性都是有巨大帮助的。<br>如果你去宁夏调研，会发现腾讯在西北渗透很弱，很多农民都是不怎么用微信的，快手的渗透率是丝毫不弱于腾讯的。这些农牧民兄弟他们将快手作为社交工具，一人每天发超过70条消息。”</p>
</li>
</ul>
<h2 id="2019-05-14">2019-05-14</h2><ul>
<li>amino。live chat &amp; surfacing communities and stories. 用户每天使用时长60-70min。</li>
<li><a href="https://jalammar.github.io/illustrated-transformer/" target="_blank" rel="noopener">The Illustrated Transformer – Jay Alammar – Visualizing machine learning one concept at a time</a><blockquote>
<p>attention。传统RNN里面，contex就是上一个state，而context越大也就是input越长的时候最终的效果越差因为last hidden state会损失更多的信息。而attention的发明就是为了让decoder用到所有的context信息。<br>transformer里面的self-attention层其实相当于增加了很多交叉特征，并且加入了权重判断，增加了网络的容量。(multi head attention)， </p>
</blockquote>
</li>
<li><a href="https://jalammar.github.io/illustrated-bert/" target="_blank" rel="noopener">The Illustrated BERT, ELMo, and co. (How NLP Cracked Transfer Learning) – Jay Alammar – Visualizing machine learning one concept at a time</a></li>
</ul>
<h2 id="2019-05-13">2019-05-13</h2><ul>
<li>✍️ **培养自己的产品创意。- <a href="bear://x-callback-url/open-note?id=34C544AB-8064-4DC1-B4D5-F2CDC7831967-290-00000B7999316011&amp;header=%F0%9F%8C%9F%20%E7%9B%AE%E5%89%8D%E6%9C%80%E6%AC%A3%E8%B5%8F%E7%9A%84app" target="_blank" rel="noopener"> 目前最欣赏的app</a> </li>
<li>永远清楚自己的本分：推荐策略。更注重基于使用场景的特点来提升模型效果。<blockquote>
<p>比如：youtube &amp; airbnb的论文。有很多特定技巧的来源于用户在这个产品场景里的行为模式规律。</p>
<p>比如youtube里有搜索。搜索的结果不应该直接成为下一次推荐的结果，应当被限制权重。</p>
<p>airbnb的搜索是congregated search。使用负采样平衡样本和简化训练。</p>
<p>以及阿里巴巴的序列模型和兴趣演化模型。 </p>
<p>等等等等。</p>
<p>一定要通过数据来找到用户的行为规律。</p>
</blockquote>
</li>
<li>Amazon的「is it a gift?」原来是个这样子的发明！可以在用户操作层面就把不归于用户自己兴趣的数据给隔离开。要不然推荐系统的难度很高，比如你给小孩子，给外人买的指定主题的物品一件就可以把你训练的整个网络给搞崩（指恢复到正常推荐质量所要付出的努力），尤其是基于sequence的，因为他们本身不应当被当作context。<blockquote>
<p>典型的正外部性例子啊。商户让利让用户自己标记数据。</p>
</blockquote>
</li>
<li><strong>现代软件提供的是获取信息的便捷性。网易云的意义在于推荐你发现下一首歌。</strong></li>
</ul>
<h3 id="兴趣社交">兴趣社交</h3><ul>
<li>兴趣社交：即刻（泛兴趣社交）、豆瓣、虎扑<blockquote>
<p> 我更支持的是，每一个不同的社区都有其独特的、最有效的产品形态，参考「Amino」。互联网产品比拼的不再是信息的垄断，而是提供信息的便利性，或者说是效率。</p>
<p>比如，虎扑足球社区大家一边看直播比赛一边评论；投资人社区理应能够有一个智能的助手将语境中的关键信息提炼并且提供<strong>适量不过度</strong>的辅助信息，比如财报，比如最新进展等等；而新闻客户端的一个参考形态则是像「后续」。而音乐社区对于大部分人来说本质在于发现下一首歌。（反驳：这个app究竟是给pro还是给common user的。不能一会儿用专业性作为自己的特征，一会儿又说自己是面向大众）<br>「纯纯写作」：右滑进入时光机。</p>
<p>产品形态应该是由那个领域的pro玩家来参与制定的。</p>
</blockquote>
</li>
<li>过量的优质信息和信息稀缺类似，甚至要更糟，给你一种焦虑情绪以及脱离语境的记忆和理解。Reeder里的文章定位从来都是娱乐而非专业性。要学会自己创造稀缺和体系。<strong>没有语境的信息不如没有。在主动引诱你误读。</strong><blockquote>
<p>有害的不在于完美，而在于批量。人的鉴赏能力比作品本身的优劣更重要。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-05-12">2019-05-12</h2><ul>
<li>我喜欢计算机，加密货币，经济学，它们逐渐成为了我的坐标系，我的工具。<br>而我喜欢文学，是因为它逐渐成为了我的触觉和我的声音。</li>
<li>关注YC中国，20万5%的股份。<a href="https://www.ycchina.com" target="_blank" rel="noopener">https://www.ycchina.com</a></li>
<li>“五月的风，当在再吹过来的时候，我就知道已经不是你了。”</li>
</ul>
<h2 id="2019-05-11">2019-05-11</h2><ul>
<li><strong>这个时代有太多的被动思考，也是就事论事的能力。需要主动思考。</strong></li>
<li>最宝贵的，其实是这个team。</li>
<li>多交流，也多愿意跨领域的交流。想起max提起他为什么想到firis这个想法，因为有一次在「得到」上有人希望找他出来聊天。那个人是电影制作行业的，他们在聊怎么做才能让电影的预售更好。由此想到了firis的社交分发的原理。<blockquote>
<p>人工智能，要想到一个和消费者最接近的一个点，那个点要足够好玩。现在大部分的AI创业公司都是做B端，他们有很强的技术实力，我们不是和他们拼技术，我们在和他们拼想象力，拼对消费者心理的观察。</p>
</blockquote>
</li>
<li>我为什么觉得加密货币很吸引人，因为它实际上是在从机制设计这个角度在挑战人性里最难克服的一部分：马太效应以及规则制定者成为资源拥有者的权力垄断。</li>
<li><strong>社交的克制。在于任何我们造成的不好的体验，用户都会有对应措施。</strong>，多少人在微信里加入一个新群之后的第一反应就是去关闭这个群的通知。这个行为绝对不是自然的，这就像我走进一个会议然后第一件事就是戴上我的耳塞，我想旁观，但是又不希望你过分打扰我。这种让用户感受到矛盾的心理是最伤害产品体验的。</li>
<li>有些人的背影，也是光源。</li>
<li>人很难很难去否定快乐的意义。这是荒谬的。<blockquote>
<p>因为这意味着自由。这也意味着，没有那些不容分说。我没有绝对的害怕，也不必须微笑。我可以哭，可以否认，可以绝望或者平和，但是里面每一种情绪都不是条件反射。的确我说过审美是没有高低之分的，审美指向的是复杂。但是它们的抵抗诱惑的能力是不一样的，它们对自由的追逐是不一样的。</p>
</blockquote>
</li>
<li><strong>有时候我们反对正面，很多人会觉得我们一定是在支持反面，其实不是的，我们只是在乞求让反面能以相同的机会和正面竞争罢了。我们抵抗的是剥夺竞争机会的傲慢。</strong></li>
</ul>
<h2 id="2019-05-10">2019-05-10</h2><ul>
<li>事实是，那些没有经常改主意的人相当低估了这个世界的复杂度（当然也可以说是丰富性）。</li>
<li>【剧本】你说要善良，要微笑。而我在想，要活着。</li>
<li><p>凯恩斯主义：认为即便是像大萧条那样严重的经济衰退，只要政府愿意加大开销，也可以被轻易克服——经济失灵不是因为政府的设计出了问题，恰恰是因为自上而下的力度还不够。</p>
</li>
<li><p>科技以人为本</p>
</li>
<li>ai创作艺术，重点不在艺术，而在于通过创作让我们更了解ai</li>
</ul>
<h2 id="2019-05-09">2019-05-09</h2><ul>
<li>以前的物理理论认为，<strong>只有能量最低时，系统最稳定，否则系统将消耗能量，产生熵，而使系统不稳定。耗散结构理论认为在高能量的情况下，开放系统也可以维持稳定。</strong>例如生物体，以前按照热力学定律，是一种极不稳定的结构，不断地产生熵而应自行解体，但实际是反而能不断自我完善。其实<strong>生物体是一种开放结构，不断从环境中吸收能量和物质，而向环境放出熵，因而能以破坏环境的方式保持自身系统的稳定。</strong>城市也是一种耗散结构。<blockquote>
<p>1977年诺贝尔化学奖。耗散系统。</p>
<p>一个高能量的系统要维持秩序和稳定，必须要开放。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-05-08">2019-05-08</h2><ul>
<li>我受惠于这个善意，和我被反面所伤害。最后都是为了同一个目标，它们会有区别吗。</li>
<li>“大环境的竞技化和专业化不可逆。建立自己的人才梯队才是关键。而用更高级别的比赛，更专业的对手来奖励专业辩手。海鼎杯是我和周峤学长的一次尝试，试图通过淡化单场胜负的循环积分赛，让院队去承担培养人才的职能。”<blockquote>
<p>是为了赢而且机会稀缺才有了这种想法。那么就弱化积分的意义，</p>
</blockquote>
</li>
<li><p>【快手】只要这个人愿意和世界分享自己，它就值得被给予机会。与结果主义和精英主义。与他们扎根心里的“不值得”，永远做对抗。</p>
<blockquote>
<p>平台不给普通用户的原因是因为注意力的稀缺并且为了更高的效应。那么就弱化注意力而提供更好的匹配。<strong>「热门」这个东西更多是一种“社会资本”</strong>，你知道了这个东西，你才能够和别人谈论，但最安全的做法就是主推明星、大V的内容。但不一定匹配。因为每个人在自己的社交圈子里并不一定需要这些不相关的社会资本，他们不一定就那么关心娱乐圈。匹配算法做到的就是，没有那么依赖于流量的证明，而使得真正有共鸣（另一套标准，但是在人性中带来更高的认同感的标准）的人能够相互了解。</p>
<p>【产品观察】比如双生日记能够做到的是：匹配那些有相似问题，相似困境的人。让他们相互鼓励，相互伴随。</p>
</blockquote>
</li>
<li><p>【思维】momentun的思维。你近期学习关注的内容，你的所长在其邻近领域是有momentum的。适合趁热打铁收拾一下。</p>
</li>
<li>广州、深圳 airing</li>
<li>对AI的依赖某种程度上意味着对UI的解放。语音以及ai assistant将很多ui流程压缩了，甚至谷歌做到了系统级别跨应用的调用，这样app的重要性其实是降低了因为过程被自动化了，我们不必打开app进入应用的语境完成事情。</li>
</ul>
<h2 id="2019-05-07">2019-05-07</h2><ul>
<li><p>讨论提到的几个有意思的点，一是长远来看比特币价格究竟会不会和挖矿成本持平，二是其价格定价和波动与普通货币乃至黄金有什么区别。我认为这里有个tricky的地方，挖黄金、铜的成本不会因参与者的数量而发生明显变动，因此它的价值的溢价是由其稀缺性（市场需求）决定的是没错；但对于比特币参与的人越多难度越高，也即成本越高。即使存在稀缺性带来的附加值，长远来看会因为吸引更多的算力竞争而抹平；同理如果比特币价格低于挖矿成本时，也导致理性节点退出，算力下降使得成本也下降对标价格形成平衡。再一点，黄金存在溢价也是因为其主要功能是价值储存，而不参与货币流通。但是比特币的主要功能是货币流通，保证交易完成，其流动性使得需求和供给端能够更快的达到上面所提到的平衡。那些把比特币当作价值储存的也就是炒币的囤在那里，这部分人越多会越影响流动的比特币的价格，也因此会每十分钟新出12.5btc来提高通胀率抵消这个影响。</p>
</li>
<li><p>有一个冬天我把信埋在雪里。深蓝色的雪。</p>
</li>
</ul>
<h2 id="2019-05-06">2019-05-06</h2><ul>
<li>毕业的意思：我的回忆里有你温和的气候。</li>
</ul>
<h3 id="blockchain复习">blockchain复习</h3><ul>
<li>phase king和dolev strong都是BA。BA的意思是最终reach到同一个行动（可以是好或者是坏的，但是必须都达成一致。）actors must agree on a concerted strategy to avoid catastrophic system failure, but some of the actors are unreliable.</li>
<li>(a) terminate within finite time, (b) (consistency) have all honest nodes reach the same result, and (c) (validity) if the leader is honest, then the value agreed by everyone should be the leader’s value.<br>[image:7FFD4DAB-C9FF-475F-B062-39037E021979-66186-00001799F71A64AA/E207E4E8-282D-4AFC-9F3A-58CA430DD8EA.png]</li>
<li>consensus：Paxos和Raft。</li>
<li>re-entrancy: functions can be called repeatedly, before the first invocation of function is finished. 防止方法：make sure you don’t call an external function until you’ve done all the internal work you need to do。</li>
<li>front-running problem.</li>
<li>integer overflow in smart contract.<br><a href="https://consensys.github.io/smart-contract-best-practices/known_attacks/" target="_blank" rel="noopener">Known Attacks - Ethereum Smart Contract Best Practices</a></li>
<li><strong>Favor pull over push for external calls</strong><br>External calls can fail accidentally or deliberately. To minimize the damage caused by such failures, it is often better to isolate each external call into its own transaction that can be initiated by the recipient of the call. This is especially relevant for payments, where it is better to let users withdraw funds rather than push funds to them automatically. </li>
</ul>
<h2 id="2019-05-04">2019-05-04</h2><ul>
<li>云雀。类似路奇的造型，停在肩头。个人的随身直播入口。内容的形式本身也是一种设计（短视频极大地降低了对创作者创作能力的要求）。就是专注在简短视频的拍摄和实时传输。关注一下大疆的项目。<blockquote>
<p>airpod的市场奇效：运动员。</p>
<p>snapchat: fastest way to communicate. 其实不是的，snapchat的作用是在这里我看得到你最真实的生活，最及时的动态。snapchat追逐的应该是更新频率和真实。</p>
</blockquote>
</li>
<li>【想法】<a href="https://notes.ethereum.org/s/rkxpeG0ff" target="_blank" rel="noopener">Hello potential research collaborator! - HackMD</a> 一个wiki系统，里面记录了blockchain方向上的一些在研究的话题，每个人都可以修改。</li>
<li>为什么ads-tech\pub-tech不再性感了，也是因为paradigm shift，这个时代的入口是移动端，而移动端的ads\pub都被平台级的应用垄断了。</li>
<li>✍️ 为什么移动端再也没有出现类似互联网那样的基础设施，为什么移动端会倾向中心化的入口？还是说其实这个入口是去中心化追求效率的结果，只是刚好对应了移动端普及的事件。</li>
</ul>
<h3 id="Vitalik演讲：crypto_economics-">Vitalik演讲：crypto economics.</h3><blockquote>
<p>也是我今年感兴趣的目标。crypto加密货币和economics经济学的结合。他们给了我相比cs不同的工具。而文学则是给了我不同的触觉，以及和自己达成和解的能力，以及为什么。</p>
<p>crypto:<br>crypto的作用，类似time capsule时间胶囊，能够证明过去发生事件的真实性。而economics的作用，则是通过设计的激励，使得这些真实性能够在未来被证实。 </p>
<p>以chain的形式，保证了consistency。blocks里有timestamps, nonce, previous block hash, transactions.</p>
<p>signatures: 验证sender’s authority。比如RSA，DL（one pair keys）或者DH key agreement（multiple pair keys） </p>
<p>hash的主要作用：[1] 保证了信息之间的拓扑顺序。 [2] 创造了merkle tree的结构，结果是你可以通过small piece of data来验证更大的数据。也使得可以存在一个light-way的client protocol，让用户只验证包含自己transaction的block。</p>
<p>bitcoin mining vulnerbility的源头：rewards are marginally long-run zero-sum。</p>
<p><strong>zero-knowledge proof</strong>: 对proof的证明远方便于对原始属性的证明。也因此，<strong>证明你是你，或者说你有你的private key，我其实并不需要去看你的private key，而是可以通过间接大量的结果证明来得知你是你。</strong></p>
<p>economics:<br>tokens: incentivize actors by assigning them units of a protocol-defined cryptocurrency，比如 block rewards(目前是12.5 BTC).<br>privileges: incentivize actors by giving them decision-making rights that can be used to extract rent. 有privilege的地方就存在bribe.比如交易费。<br>crypto security margin: 破坏系统的成本。也就是对于每个系统的人，要么去满足一个假设，要么去破坏但是破坏的代价是你会比你遵守规则至少失去（或者缴获）了X。X越大，这个系统就越安全。<strong> 也就是一种思维的转变，很多时候我们其实不需要绝对安全的系统，我们只需要当他们破坏这个系统的成本足够大的时候即可。</strong></p>
<p>p+epsilon attach，可以改变用户的行为通过修改<strong>奖惩机制</strong>。通过零成本，以及相匹配奖励的预算。【剧本】未来的赌博。而这个p+epsilon是可以通过众筹得到的。<strong>这个针对coordinated game特别有效。也就是，如果你和majority一样你可以获得奖励。</strong>一个例子，就比如blockchain的mining，只有加入了main chain你才能得到rewards，不然就是orphan block.</p>
<p>POS，deposit，一旦出现fault就会把deposit拿掉。因为依赖penalities。为什么POS的security margin高于POW，因为POW里，miner都是匿名的，激励方式是奖励他们，而在POS里是有penality存在。</p>
<p>ethereum smart contract适合all data is publicly accessible的场景。一些线下的仲裁是很难直接access到信息的，比如究竟这个人究竟有没有做这件事。从某种意义上，这也完全的适合internet。</p>
<p><a href="https://www.youtube.com/watch?v=pKqdjaH1dRo" target="_blank" rel="noopener">Introduction to Cryptoeconomics - Vitalik Buterin - YouTube</a></p>
</blockquote>
<h2 id="2019-05-03">2019-05-03</h2><ul>
<li>除了商业，我不会对生活说值不值得。</li>
</ul>
<h2 id="2019-05-02">2019-05-02</h2><h3 id="farewell">farewell</h3><p>we reach the consensus, well in a decentralized way, that we are here to learn. we learn a lot from David Tisch, the man who has successful exits on PillPack, Flatiron, Vine and GroupMe is truly the man, he has something. Even though we feel sometimes he being harsh on us. the other time, like panel sessions, when you see him standing in front of you, speaking for you, and squeezing out every bits from the incoming guests, you just feel safe, and somehow reliable, you know, the image of strict but caring dad. </p>
<p>We also learn a lot from the other amazing group, skyhawk, otari, lightbox, auggi, and so on and so on. If you give me time, I can name every team. </p>
<p>It gives me a feeling that, everything has a reason, has a design principle behind it and as long as we deeply trust the principle, that’s how we impact other people and make a difference. </p>
<p>lastly, we learn a lot from building firis itself. it gives me an impression that, it truly doesn’t matter that current milestone we’ve achieved. what matters is the people standing or sitting beside you. And you understand that some of them will become your lifelong best friend. and as long as we are us, probably in the future, in the other time zone, in the other country, we can build another amazing thing, or even more amazing products together!</p>
<p>Friends and their understandings or their willingness to understand me. Is all I got from the journey. </p>
<p>lastly, i receive the best entrepreneurial education from my life at here. thank you cornell tech. </p>
<ul>
<li>正是因为你们不理解，我才得以自由。</li>
<li>✍️ 回到了那个话题，也是startup studio最后一堂课上提到的话题，give people fake happiness，究竟有没有创造新的价值。<blockquote>
<p>这是每个新时代的企业家，尤其是做注意力经济的，必须思考的问题。 </p>
</blockquote>
</li>
</ul>
<p>今日头条、抖音的定位是kill-time，是没有价值的，定位在娱乐领域。是容易被高估的。没有创造新的价值。</p>
<blockquote>
<p>相比微信公众号，其实他们完全不在一起竞争。去看公众号的人，追求的是对质量和全面的报道，而看今日头条的人群是追求快和新。今日头条取代的是微博。所以结果是：<br>自媒体把其他平台的运营流量最终都要最终导流到公众号来。<br>而头条类产品最终都会把流量导流到其他地方去。</p>
<p>如果在同样的平台里有快和爽的内容，为什么用户会去选择长而难的内容。这就是头条做不好订阅号的原因。</p>
<p><strong>场景的定义。要找到最适合的方式。因为订阅号的场景不适合新闻。如果需要做订阅号，需要讲一个更大的场景，比如点评，辩论时评等等（带上了个人色彩，具备social status as a service的前提）。</strong></p>
</blockquote>
<ul>
<li><p>快手的机遇</p>
<blockquote>
<p>用户场景，决定了最适合的商业化方式。基于人的社区互动以及直播，有效地解决的是信任问题。而此场景，<strong>将给基于信任的商业模式以极低的运行成本，比如：订阅制，期货交易，乃至类似Patreon的粉丝经济，都是些值得探寻的方向。</strong></p>
<p>抖音的social status as a service的难度会不断升高。把审美当作一个固定方向是有问题，因为审美指向的不是高低，而是复杂。</p>
</blockquote>
</li>
<li><p>快手分发机制</p>
<blockquote>
<p>短视频，是从形式上降低了对用户表达能力的要求。长视频必然是精英化的，因为传达一个完整的、精美故事的能力是稀缺的。</p>
<p>以及，一定要保证每一个人都有自己的领地，也一定要让他们被看到。</p>
<p>对直播的克制在于，清晰地了解到直播并不是日常生活的常态，也不是让用户构建社区关系的常态，只是一个能够拓展社区关系的工具。</p>
<p>关注一个人（右上角）是一个非常难的操作。 </p>
</blockquote>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[再看区块链的分权设计细节]]></title>
      <url>http://chocoluffy.com/2019/05/21/%E5%86%8D%E7%9C%8B%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E5%88%86%E6%9D%83%E8%AE%BE%E8%AE%A1%E7%BB%86%E8%8A%82/</url>
      <content type="html"><![CDATA[<p>《The Book of Satoshi》的读后感。我为什么觉得加密货币经济很吸引人，因为它实际上是在从机制设计这个角度在挑战人性里最难克服的一部分：马太效应。</p>
<p>尽管加密货币对安全性的高要求可能是对商业环境上的一个不合理的假设，而导致未来的一段时间可能很难看见具体的消费者场景<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，但它对我们社会依旧有意义，因为它其实是在尝试提出一种分权设计的思路。</p>
<p>以下拿Satoshi的区块链和比特币来举例。理解一致的公开账本（global timestamp byzantine problem）以及支付验证（digital signature &amp; hash chain）是如何通过<strong>分布式的实体</strong>来实现的，是区块链的精髓。<strong>因为如果这些操作是由一个中心化的实体完成的，那么这个故事本质上和银行没有什么区别</strong>。而这马上带来的另一个挑战就是，如何设计规则去激励或者惩罚他们，使得分布式节点在有可能共谋，甚至还未存在（未来才加入）的情况下，依旧能达成共识。</p>
<p>Satoshi提出的方案是proof of work。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> 这利用了一个强制的办法：谁付出的work（时间）多，谁就是历史。换言之，谁付出的成本高，谁就是历史。这个思路可以有效减少攻击者的发生。<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> 同时创造出一个集体共识（global timestamp）。而同样，我们也会去奖励付出了工作量的矿工，比特币的价值最终会趋向于付出的成本，也间接反应了参与人数和当前的难度。任意一个规则的执行者也就是矿工为了平衡他们pow的支出会流转起他们得到的比特币，这也保证了比特币作为货币不会垄断在「规则执行者」也就是矿工的手上。和「资源持有者」的身份不会构成重叠。</p>
<p>任何一个腐败的系统去追溯他们的源头可能都来自于官商勾结，<strong>在于制定规则的人成为游戏的最大玩家</strong>，而形成后来者难以破除的垄断关系。而pow带来的是另一个思维，任何的后来者都能够几乎平等和所有先前加入系统的人平等竞争（permissionless &amp; memoryless），仲裁者匿名且没有固定身份。</p>
<p>尽管目前的市场被大量欺诈性质的ICO所干扰，我依旧坚定看好，也期待着加密货币的前景。<strong>新事物的流行往往都会经历「投机阶段」和「实用主义阶段」</strong>。投机，是一个快速积累资本和社会共识的过程，无论这个资本是社会资本（social status）<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> 还是金融资本。而为了迎来加密货币的实用阶段，我们需要给予这项技术于时间，于土壤。土壤这个比喻其实是很重要的，理解哈耶克的经济理论<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>的一个关键是理解他认为市场是作为一个”园丁”的隐喻。园丁只是负责剪枝，松土，不是拿那些条条框框去约束它，而是让这个市场自然地生长，里面的信息信号充分的自由流动。 </p>
<p>针对后续有读者提出“矿场被垄断，接近51%的算力被垄断”这个观点，我是这么回应的。 </p>
<p>的确算在算力垄断接近51%的情况，但这个优势并不会阻碍后来人入场的机会呀，这个讨论更多是在于能和不能之间，而不是擅长和不擅长，大型机构的确在规模上更容易控制成本，但是这个系统并不会阻碍任意一个后来者进入系统，这个「是否能加入系统的能力」是及其重要的；相比其他机制设计比如proof of stake，为了节约资源而重新转向了基于authority的规则就和政治上的世袭没有太多区别了，后来者不再拥有加入的机会。</p>
<p>在进入擅长和不擅长的讨论之前，我们更希望把社会从不能到能的过渡。</p>
<p>同样我们需要<strong>对「垄断」和「作恶」要区别开来</strong>。在pow这个机制下，垄断算力并不代表作恶。</p>
<p>即便拥有了51%的算力，攻击者基于自己的利益依旧会选择维护这个系统，而不是选择去攻击它。这是和我们通常意识里的“垄断”是很不同的，矿场的产生更好应该被当作是维护者，而不是决策者。原因：【1】攻击者即便拥有51%算力也只最多只能够改变自己的交易历史形成double spend攻击，而无法改变别人的，因为没有别人的私钥 【2】基于51%的算力，维护当前的系统也就通过继续挖矿所得到的利益远大于攻击这个系统需要重写整个分链历史的成本。</p>
<p>垄断，指资源的集中，但也同时给予了垄断者潜在利用这个系统作恶的机会。但这个机会不一定会被执行出来，也就是我刚刚提到的，<strong>「垄断」不等于「作恶」</strong>。因为在这个规则下作恶的成本远远高于资源持有者维护现有体系的成本。</p>
<p>而一个系统的安全性可以这么衡量，去破坏但是破坏的代价是你会比你遵守规则至少失去（或者缴获）了X。X越大，这个系统就越安全。这也是一种思维的转变，很多时候我们其实不需要也不可能有绝对安全的系统，我们只需要当他们破坏这个系统的成本足够大的时候即可。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">目前的应用大部分是基于quorum的公司私链，比如JP Morgan coin。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">相比Vitalik的proof of stake，但pos本质上不具备pow的开放性。先发者容易获得天然优势而垄断token。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">启发于hashcash的发明。也符合进化学现象，见Handicap principle。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;">social status as a service.</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline; vertical-align: top;">加密货币的提出接近哈耶克的“货币去国家化”的假设。理论的核心在于“货币的稳定性”，而比特币由于供给按严格速率支配，在市场需求稳定后，能够成为比黄金更稳定而不受政府管制的价值存储媒介。</span><a href="#fnref:5" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我没有绝对的害怕，也不必须微笑。]]></title>
      <url>http://chocoluffy.com/2019/05/12/%E6%88%91%E6%B2%A1%E6%9C%89%E7%BB%9D%E5%AF%B9%E7%9A%84%E5%AE%B3%E6%80%95%EF%BC%8C%E4%B9%9F%E4%B8%8D%E5%BF%85%E9%A1%BB%E5%BE%AE%E7%AC%91%E3%80%82/</url>
      <content type="html"><![CDATA[<p>什么是自由？</p>
<p>我也到了一个时刻，需要对这些问题有自己的想法了。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<p>自由有很多语境。不同语境下的自由意味着不同的东西。这里想分享一个从媚俗和审美的角度出发理解自由的角度，以及为什么艺术和文学能够帮助我们维护自由。</p>
<p>布罗斯基说，“一个个体的美学经验越丰富，他的趣味就越坚定，他的道德选择就愈准确，他也就越自由，尽管他有可能愈是不幸。”</p>
<p>关于美学的培养，并不是为了保证你能够创造出杰作，而在于，为了防止恶。甚至我们可能并不是对抗邪恶，而是徘徊在正确和另一种正确之间，面朝着的是生命和另一些生命。</p>
<p>或许没有那么的绝对，没有那些黑白分明、不容分说，便是自由。我没有绝对的害怕，也不必须微笑。我可以哭，可以否认，可以绝望或者平和，但是里面每一种情绪都不是条件反射。我得以解构，却也看得清我重建的理由。</p>
<p>存在很多快餐趣味，尝试将直接感官的满足，来合法化逻辑。这种诱惑是难以抵抗的，他们拿着满意的结果来自证逻辑。就比如布罗茨基提到的，谈论明了之事的缺点在于，这样的谈话会以其轻易、以其轻松获得的正确感觉使意识堕落。这也是这些话题的诱惑。他们忽略了为什么的讨论，忽略了伦理，直抵结论。</p>
<p>他们在用美学的感受，来替代伦理的解释。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p>
<p>人们很难去质疑感动的意义，快乐的意义，因为这是费力而荒谬的。然而能够克服直觉感受的诱惑，才是自由。</p>
<p>艺术和文学在用想象力来自证，而非直接粗暴的感官刺激，而这同样意味着，艺术、文学它不必令人快乐。</p>
<p>我相信<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>，审美是可以被教化的，尽管这个过程很难。可为什么我们想要相信美好的东西必须很轻易地感受的到。我曾经写过，审美是没有高低之分的，审美指向的是复杂。我们也同样需要训练去接受这份复杂。我们需要引导，如何接受自己的想象力，也愿意去接受别人的。</p>
<p>这条路没有终点，因为人们总会沉默。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">这些想法主要启发于布罗斯基和米兰昆德拉的作品。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">是什么，是一个美学感受；而为什么（或者说：应该是什么），则是一个伦理的回答。其实现在很多的辩题都可以看作是这两个角度的交锋，究竟是维护现实尊重感受和结果，还是追求原因去探寻伦理的指向。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">这同样也是乔布斯认可的观点，见《乔布斯传》中描述乔布斯经常与其妻子争论这个话题。</span><a href="#fnref:3" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Startup Studio结课总结]]></title>
      <url>http://chocoluffy.com/2019/05/02/Startup-Studio%E7%BB%93%E8%AF%BE%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>在Cornell Tech这一年里最有收获的几堂课之一，由David Tisch主讲的Startup Studio就这样结束了。其实很多时候并不是在评价这门课本身的好坏，而是在于它创造了一个和其他优秀小伙伴组队的机会，并且设置了一个高难度的关卡，而在整个过关的过程里，你不断暴露出缺点也不断改进，最终学习到这个关卡目标所代表的意义。如果关卡是一份作业，那么你学习到完成这个作业所需要的知识仅此而已，而在这里，这个关卡是学习创立一个公司，从零到一。仔细一想，这个逻辑其实也解释了学校，而非教育，的意义。The best education comes from inside, only.</p>
<a id="more"></a>
<h3 id="Startup_Studio_final_presentation_-_19-4-30">Startup Studio final presentation - 19.4.30</h3><ul>
<li>作为创始人，要习惯别人给你提意见。尤其是类似投资人的意见。要深刻的明确这一点。投资人之所以投资你，是在赌你对这个行业的认知比他自己要高。因此很多时候投资人给的建议其实是从其他类似的项目里借鉴过来的。一定要有主见。<strong>最忌人云亦云的沉默。</strong></li>
<li><strong>学会如何respond to people who offer help. 也同样明白所有礼物都暗自地标好了价格。</strong></li>
<li>很多问题很tricky，比如“你觉得有什么投资上的趋势？”，在暗示限定你去考虑“趋势”，但实际上真正的投资人只看关键的metrics和termsheet。<strong>“趋势”的作用不过是告诉你需要给哪些东西多留一些注意力去过滤噪音罢了。</strong></li>
<li>和投资人打交道整个过程所学到的，不过是如何让别人觉得自己有趣，让别人feel better。</li>
<li>David Tisch认为最有价值的一个领域：VR+教育。</li>
<li>同时认为目前的AR game非常的stupid。目前许多的AR项目，还没有实际的功能，没有解决实际的问题，能和投资人提到的不过是this game is fun。而这同样意味着<strong>如果投资这个项目，那么这个项目的发展就是成为一个more fun的game，而并没有解决任何问题。</strong></li>
<li>他认为未来2-5年一个可靠的趋势是：understand &amp; sense environment （我感觉他在暗示IOT）。</li>
<li>VC的目的只有一个，make money。这驱动了他所有的决定。而相反这也是他拒绝任何一个项目的理由。而项目里明显的缺点将会成为那个挡箭牌式的借口。比如：lawsuits。</li>
<li>错失投资wework给了他一次印象深刻的教训。但是他后来回顾的时候发现，每一次他去wework就会觉得这个公司amazing，虽然事后都会冷静下来觉得这个模式是shit。（其实也应证了马库拉给乔布斯的三条建议，前两条共鸣和专注很容易理解，最后一条叫“灌输impute”，就是这个意思。）</li>
<li><a href="http://fortune.com/2019/02/13/venture-capital-david-tisch-wework/" target="_blank" rel="noopener">David Tisch BoxGroup VC on Missing WeWork, Peloton, Via, And More | Fortune</a></li>
<li>✍️ 关于free will。但是有game-changing的诱惑（这里的game值得是博弈平衡的game）。仍然是自由意志，但实际上没有选择。</li>
<li>facebook并不evil。因为facebook给了选择，某一些人群会在接受中获得“快乐”。</li>
</ul>
<h3 id="VC_panel_2_(seed_round)_-_19-4-23">VC panel 2 (seed round) - 19.4.23</h3><ul>
<li>read founder，play different game。目的：为了获得control，由始至终把游戏掌握在自己的手里。</li>
<li>david：记得一个出发点，VC看的是return profile。因此在presentation的时候要让他们看到vision。很多small company活的很好，比如SaaS的，但是没有vision，vc没那么感兴趣。</li>
<li>很有意思的观点，david: “every company is under-funded. money is not evil, what mess it up is shitty founders and bad decisions.”<br>反对的理由：gun。and chances are the more money you pour into the founder, the less creativity you will see. You don’t need to optimize anything because you have enough resources to do all sorts of stupid things. </li>
<li>VC这个行业不一定是更多钱，或者更富有了，而是具备了更高的流动性。</li>
<li>【创业】trend：local。<blockquote>
<p>想起来在OCE会议上见到的app。local的fashion直播，全屏显示，左右滑切入店员直播。</p>
</blockquote>
</li>
<li>他们感兴趣的领域：</li>
<li>synthetic reality\media(voice)</li>
<li>local</li>
<li>不感兴趣的领域：（记住他们的出发点，他们大部分投的是seed\pre-seed）</li>
<li>pub-tech(tech for publishers)</li>
<li>ad-tech</li>
<li>market-tech</li>
<li>health tech (整合sales is hard)</li>
<li>trend: VC shift into earlier stage。 </li>
<li>直到目前为止，最优质、一手的信息源仍然是英文的信息源，而不是中文。<strong>要建立自己获得信息的体系，而不是纠结在单个信息的质量上。</strong>，比如，演讲当天之前luckin的IPO才出来david就已经知道了。他说他需要研究这些模式，使得当US出现了这些类似情况的时候他能够辨认的出来。</li>
<li>paradigm shift。uber的实现给人们的思维带来了一种改变，也就是当你在手机上点击一下，现实生活会发生一些改变。这是uber的意义。</li>
</ul>
<h2 id="VC_Panel_1_(general_VC)_-_19-4-16">VC Panel 1 (general VC) - 19.4.16</h2><ul>
<li>想法总是cluster出现. next generation of cookware.</li>
<li>find new vc firm。for you。和你一起成长。</li>
<li>good firm invest shiity company。difference at win。</li>
<li>之前是他一直对我们凶。现在有他在我们前面。</li>
<li>angel not angel anymore。天使投资人的含义变了。</li>
<li>有些时候团队fight起来反而是他们相互尊重的方式。</li>
<li>【情商】在panel的最后，女vc说其他的venture课都是bullshit，david是真的为学生着想。感谢主持人。让在场最大牌的嘉宾舒服。通过女vc的阐述知道她的主要职责，通过networking找到感兴趣的项目pass给她身后的partner。和其他vc保持好的关系是非常重要的。圈子很小。</li>
<li>diversity does not equal to female。多样性不仅仅只表示女权主义。</li>
<li>暖场问题：facebook is evil? google is evil?</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2019 Apr.]]></title>
      <url>http://chocoluffy.com/2019/05/01/%E7%A2%8E%E8%AF%AD-2019-Apr/</url>
      <content type="html"><![CDATA[<h2 id="2019-04-30">2019-04-30</h2><ul>
<li>削弱意义的方式：放到大庭广众的面前。</li>
<li>spark: email delegation. assign to somebody and set deadline(choose to follow all updates or only it get done). model: allow 10 active delegations per team, otherwise pay premium</li>
<li>“我喜欢普鲁斯特，只有他会把弥漫花香、烛光和人声低语的冰凉夜色比喻成水晶花瓶底部凝结的雾气。”</li>
</ul>
<h3 id="Firis">Firis</h3><ul>
<li>“next-generation visual entertainment creation.”</li>
</ul>
<h3 id="the_book_of_satoshi">the book of satoshi</h3><ul>
<li>理解public ledge以及payment authorization是如何<strong>通过分布式的实体</strong>来验证的，是区块链的精髓。<strong>因为如果这些操作是由一个中心化的实体完成的，那么这个故事本质上和银行没有什么区别。分布式马上带来的一个需求就是，如何去激励他们，这些分布式的个体。</strong></li>
<li>区块链是如何解决公地悲剧的。一种代表这个体系价值的token，也就是bitcoin。bitcoin目前负责的是支付，同样承载其他功能也是可以的。这种设计使得，<strong>如果体系中的人愿意去破坏这个系统，那么他自己的利益也会被伤害。</strong>-&gt; 而由此可以导出，他没有这个利益关系去reject别人的valid solution。 以及可以authenticate别人的solution验证（PoW的结果如果是正确的即可入链）。<blockquote>
<p>因为区块链的博弈设计里，纳什平衡的奖惩矩阵里，相互背叛的成本很大，但是共同尊重这个目标可以惠及每一个人。不同于囚徒困境里大家相互背叛的获益是最高的，我们作为这个制度的设计者，目的就是改变这种奖惩矩阵。</p>
</blockquote>
</li>
</ul>
<p>51%最多的伤害也就是创造自己的double spending（不过会伤害整个货币的integrity），因为无法伪造别人的电子签名。但是在拥有了那么算力的时候，创造double spending的收益比不上用来挖矿。通过在真实的链上花钱，然后不记录在自己的私密链上，同时需要保证自己的私密链是最长（longest\heavist）</p>
<blockquote>
<p>因此对于体量小的chain，51% attack会更容易出现。也实际上出现过。</p>
<ul>
<li>动态根据接入系统的节点数量平衡难度，保证区块生成的速度是稳定的。不同生成新的bitcoin是有一个假设，即用户的需求也在以固定的速率提高，使得保证价格稳定。当需求提高过快的时候，区块链的价值就会增高了。<br>政府解决赤字的方法：印钱（使得钱通胀贬值而赤字也贬值了），向同种发放债券借钱，以及税收。政府喜欢通过印钱来解决这个问题，因为这容易掩人耳目地达成目的。向公众发债券容易导致银行利率上升，提高税收导致民意反抗。但是他们都不去思考那个问题：解决赤字的方法只有一个就是减少花销。</li>
</ul>
</blockquote>
<h2 id="2019-04-29">2019-04-29</h2><ul>
<li>在这个体系之中，最大的好处，其实不是你究竟直接获益了什么，而是你能够摸清楚信息的流动。哪些才是真正有价值信息的源头。于是能够给自己建立一个成长的机制。</li>
<li>teach people how to hack code is the best way to teach them to create safe code. </li>
<li>✍️ 为什么微信公众号早期不做一个聚合推荐？</li>
<li>🌟从序列升级到图，来训练embedding。</li>
<li>【创业】基于目前大量的视频存量的项目想法</li>
<li>比如firis。改造。</li>
<li>比如基于video的建站服务。你的名片。（和快手的真实风格相补充）</li>
</ul>
<h2 id="2019-04-28">2019-04-28</h2><ul>
<li>压缩的算法。视频的压缩。基于语义理解，只将最重要的部分以高质量传输。包括图片压缩，将不影响理解的部分压缩。</li>
</ul>
<h2 id="2019-04-27">2019-04-27</h2><ul>
<li>b2c重点在流量。c2c重点在信任。为什么抖音进军美团点评市场；而快手进军58交易。</li>
<li>“第一是<strong>建立体系而非目标</strong>，比如不是建立一个目标说自己要成为作家，而是建立一个能让自己从菜鸟变成作家的体系，在这个体系中你会养成习惯，慢慢进步。”</li>
<li>【创业】大部分的工业艺术作品（比如电影），都是在针对单个的完成度目标，而不是一个工具！有没有可能， 把创意阶段的权利交回给用户，我们仅仅负责后面的渲染和闭环。<blockquote>
<p>将制作能力标准化。这个想法类似的是，用户自定制鞋子这个想法。</p>
</blockquote>
</li>
<li>这个时代根本就不缺想法。</li>
<li>如果生活本身就是荒谬的，那么过分清醒才是疯狂。疯狂的是，那些愿意接受生活的样子，并满意地退坐在那里，而不去想想它应当是怎样。</li>
</ul>
<h3 id="电子货币意味着金融的解耦">电子货币意味着金融的解耦</h3><ul>
<li>区块链的全面到来还没有那么快。更多的应用其实更像是在私域货币转换的使用，而不是全面铺开。<strong>因为人们还没有准备好承担去中心化的风险。</strong></li>
<li>crypto世界里是没有chargeback的。即便发生了fraud，所有的transaction都是final的，是不可篡改的。为什么信用卡手续费会那么贵，因为实际上我们需要给银行机构提供<strong>承担风险的服务费</strong>。因此crypto将安全性的责任交回给了用户，或者是他们的钱包提供商。</li>
<li>而这种reversibility，可逆转性，实际上是强制的，也就是bundling service。和每一笔交易绑定在一起。而crypto就是这样的一个unbundled的服务。这也是为什么给一个人发$0.1和$10M是同样的花销。</li>
<li>bundling is good for seller, unbundling is good for customers. <strong>而商业模式演化的一个趋势是，很多曾经是bundling的服务，会逐渐成为unbundled的。</strong><blockquote>
<p>这个趋势其实很好理解，就是一个不断打破垄断的过程，一个持续抵抗unbundle的bundle是垄断的一种讯号。</p>
<p>钱，我们用的货币，实际上也是一种垄断。我们使用的货币应当也能够成为一个自由市场。而比特币是第一个非主权支撑的货币。而crypto只是希望提供选择的权利，我们同样可以提供reversible的服务，但是请让他们和irreversibile的compete。</p>
</blockquote>
</li>
<li>【剧本】保险：承担风险的服务费。</li>
</ul>
<h3 id="ECE_autonomous_intelligent_system_-_daniel_lee">ECE autonomous intelligent system - daniel lee</h3><ul>
<li>consensus的意义是。去适应个体的能力的局限。即，你不需要拥有最远距离的sensor距离，但同样可以知道远处关于球的位置，由你的peer传递给你的。<blockquote>
<p>但我们应该是适应，还是去教化。</p>
<p>甚至很多的辩题本质上也是这一类问题的变式。比如现实就是这个样子了，我们是不断地去承认现实的意义，去维护他们的安全感，还是认为现实理应有另外一个样子，应当改变。<br>反驳的角度：因为生活本身就是荒谬的。</p>
</blockquote>
</li>
<li>【精华】consensus中同样可以传递higher order stats，比如关于方向、timestamp等等的信息，然后在node本身进行进一步的推算，来提高实时性。（并不需要最准确实时的数据stream，可能受硬件的限制！）</li>
<li>【精华】在有adversarial的环境里，optimal strategy is not deterministic。pure nash equilibrium可能没有纳什平衡，但是对于mixed strategy的环境，至少存在一个nash equilibrium。</li>
</ul>
<h2 id="2019-04-26">2019-04-26</h2><ul>
<li>knowledge overload(information overload)容易给人一种虚假的成就感。<blockquote>
<p>这恰恰是目前知识付费的营销点。</p>
</blockquote>
</li>
</ul>
<h3 id="管理">管理</h3><ul>
<li>像一直职业球队一样管理。8:30准时集合开会。给队友足够的尊重和信任。<blockquote>
<p>没有任何一支职业球队会告诉你，“你觉得方便的时候就来训练吧。”</p>
</blockquote>
</li>
<li>durability instead of the growth。 我们不会那么在意成为增长最快的公司，我们想要成为最后一个。</li>
<li>最好的人不是买过来的，是吸引过来的。我们不会成为给你最多报酬的公司，但是我们承诺给你的报酬高于市面上80%的其他雇主。给最高报酬的公司只会招到报酬驱动的人。我们会努力培养最好的学习环境，给你最有野心愿景和最前线的战场。我们用我们的诚意吸引人才。</li>
<li>it’s hard enough, but it’s still possible to succeed.</li>
<li>”Efficiency is what lazy people aspire to. Leverage is what we do.“<blockquote>
<p>效率，是聪明但是懒的人想出来的办法。它意味着一个固定的目标，你通过减少你的努力去达到它。我们追求的是leverage。同样的努力，我们希望达到10x的目标。<br><a href="https://www.youtube.com/watch?v=3Fx5Q8xGU8k" target="_blank" rel="noopener">Competition is for Losers with Peter Thiel (How to Start a Startup 2014: 5) - YouTube</a></p>
</blockquote>
</li>
<li>“而在今天，这唯一的观众彻底消失了，世间再没有任何观众目睹自己的存在，于是人们开始热衷于自拍和直播，努力让其他人类得知自己的确存在于这个世上，为自己的存在争取必要的观众。”</li>
<li>【剧本】当贫困变得不再真实。被圈养起来的贫穷，魔幻主义。让经过的人接受这或许只是一场演出。而不是真实的。贫穷，会被涂上紫色的。不仅观众这么认为，就连牺牲者也有此感受。</li>
<li>所有逃离的方式都是相似的，就是让现实失去意义。一种是破坏它，一种是出现一种更压迫性的力量，哪怕这意味着欺骗自己。<blockquote>
<p>[19.4.26更新] 贫穷，被涂上紫色。霓虹灯漆染漫天水雾，像捣碎的果酱。圈养起来的贫穷。魔幻主义。让经过的人接受这或许只是一场演出。不仅观众这么认为，就连牺牲者也有此感受。所有逃离的方式都是相似的，就是让现实失去意义。一种是破坏它，一种是出现更压迫性的力量，哪怕这意味着欺骗自己。 </p>
</blockquote>
</li>
</ul>
<h2 id="2019-04-25">2019-04-25</h2><blockquote>
<p>【快手】<a href="https://techcrunch.com/2019/04/25/the-startup-behind-that-deep-fake-david-beckham-video-just-raised-3m/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+Techcrunch+%28TechCrunch%29" target="_blank" rel="noopener">The startup behind that deep-fake David Beckham video just raised $3M – TechCrunch</a></p>
<p>We understand that going B2B is a safer bet under current ethical atmosphere</p>
</blockquote>
<ul>
<li>liquidtext</li>
<li>正因为我们不相互理解，我才得以自由。</li>
</ul>
<h3 id="和琛昱的午餐。">和琛昱的午餐。</h3><ul>
<li><strong>学习如何表达，以及如何简洁地表达。</strong></li>
<li>那个关键的制度设计，其实也正是bitcoin作为mining incentive的意义呀。矿工完全是为了自己的利益在挖矿，以获得bitcoin，但是同时却能够确认链上的交易完成，惠及所有正在执行交易的人，让这部分交易添加进区块链里面。</li>
</ul>
<h3 id="JP_Morgan_Coin">JP Morgan Coin</h3><ul>
<li>其实就是用作currency conversion的作用。和美元锚定，类似于zelle的设定，为了帮助转账的便捷性，比如跨银行、跨国的交易等等。</li>
<li>类比ripple的XRP。但是并没有XRP那样真实的conversion？</li>
<li>“拥有花朵的人不需要神祗。” 佩索阿</li>
<li>我愿意走在你的后边，把决定风景的权利交给你。</li>
<li>“有个性的人，像行星一样，总带有他们自身运动轨迹的特定气质。”</li>
</ul>
<h2 id="2019-04-24">2019-04-24</h2><ul>
<li>人很难很难去否定快乐的意义。这是荒谬的。<blockquote>
<p>因为这意味着自由。这也意味着，没有那些不容分说。我没有绝对的害怕，也不必须微笑。我可以哭，可以否认，可以绝望或者平和，但是里面每一种情绪都不是条件反射。的确我说过审美是没有高低之分的，审美指向的是复杂。但是它们的抵抗诱惑的能力是不一样的，它们对自由的追逐是不一样的。</p>
</blockquote>
</li>
<li>这些想法很危险。它诱惑你去解构很多东西，却没告诉你如何积极地重建。</li>
<li>那种不确定性。会塑造用户行为。需要marketing和branding来告诉用户什么是可能的。比如uber教育了用户在手机上点几下，就可以改变现实生活中的一些东西。</li>
<li>堂吉柯德。我的确给大家造成的麻烦。但我希望你不会怪我的。<br>“陀思妥耶夫斯基说过：倘若到了这世界的尽头，我们被要求对世上的生活做出总结的话，我们可以递过《堂吉诃德》，并且说： <strong>“这就是我给生活做出的总结。你们难道能因为这个而责备我吗？”</strong>”<blockquote>
<p>其实，人生也不过是选择一个自己愿意相信的故事。然后和别人交换故事。</p>
<p>对于更为多数的我们，我们选择了我们习惯的情节和语调。公平的事，我们每一个人都会习惯自己的设定，而拥有相同程度的绝望和平和。</p>
<p>“<strong>斯宾诺莎所说，人们总是习惯把自己的利益当成是世界的目的。</strong>”<br>“无论如何，<strong>我们不能在这类问题上简单地放弃质疑和思考，否则我们未免对自己过于冷漠。</strong>”</p>
</blockquote>
</li>
</ul>
<h3 id="2D_to_3D">2D to 3D</h3><ul>
<li>【精华】‘explain the data, within some distribution’，改进loss，通过结合discriminator而将人们经验的一些insights结合进loss里作为adversarial prior，joint training。比如在shape这个部分，会训练一个discriminator来判断CNN的output是否为一个valid shape。</li>
<li>而我们所说的很多经验，就将作为prior来结合进模型之中，比如：皮肤有平滑的形状，骨头以及关节位置不能够过度扭曲等等。</li>
<li>【精华】NLP中的经验很适合在其他领域复现，就是利用temporal data，去预测context来提高准确度。 </li>
<li>analysis of synthesis. decompose the tasks into three parts: shape, texture. using auto-encoder loss. </li>
<li>分为rigid和non-rigid objects。rigid object是适合一开始入手的，也即拥有固定的规格和形状，比如家具等等，2d -&gt; 3d 的建模会比较简单。但是non-rigid object比如人类，或者生物等等形状各异，no 3D groundtruth。</li>
<li>演讲的重点在in the wild，也即如何利用互联网的数据。<strong>互联网的数据有个特点：总量很多，但来自同样个体的很少。</strong></li>
<li>研究的方法：analysis of synthesis。利用CNN分解出几个目标做joint training。比如camera viewpoint, shape and texture。整体上看是auto-encoder的思路，优化reconstruction loss。</li>
<li>处理texture的一个常用手段：通过sphere来unroll。</li>
<li>每一个human身上都有85 dimension point。</li>
<li>【创意】在当前frame检测出动作之后，可以通过找到相似的video，而得到当前的motion prediction。动作预测。</li>
<li>【创意】AR、VR entertainment。比如，抖音滤镜，在舞者的手、脚等关键部分有流动的光。或者做虚拟宠物。</li>
</ul>
<h2 id="2019-04-23">2019-04-23</h2><ul>
<li>【思维】Marissa Mayer的lumi labs。我看到的是一个演讲。而max看到的是，这是一个巨好的机会，趁她们团队还没人的时候，直接可以和大神一起工作。</li>
<li>【管理】从max身上学到的最重要的东西，就是团队管理。绝对不能有能力上的偏见或者是优越感，要用实力说话，也是逐步进行的。一开始让每一个人都充分的参与是最重要的！而不说我最强所以我占了所有的表现的机会。尤其针对展示这一类表现的机会。</li>
<li>拥有抵抗媚俗的力量。才能够提出建设性意见，而不是潜意识里去迎合某一部分人。哪怕迎合可能会有短期的优势。尤其在商业的名利场里，每一个人都在说我们在满足用户需求。有一些项目他们选择直接刺激用户的感官满足感，他们对待用户的方式是圈养，是依赖的养成。而另一些项目他们是靠想象力，是在表达一种独特的想法，凭借着出众的审美和生产力，他们对待用户的方式是陪伴。</li>
<li><strong>真正优质的内容还是在英文信息源里。</strong></li>
</ul>
<h2 id="2019-04-22">2019-04-22</h2><ul>
<li>做咖啡感觉只是前期打的突破口，重资产加负债后期肯定会寻求拓展市场需求，所以转型成便利店、全家那种类型，甚至涉及物流或金融也不是不可能。和uber能类比的估计只有亏损率了，人家出行市场是刚需还有ubereat这个现金牛才能撑起的估值，现在对瑞幸还是太早了。神舟系的人太擅长流量容易造成高估，短期谨慎看衰。</li>
<li>报纸成为了公众号。电视台成为了抖音。</li>
</ul>
<h3 id="和郭文的午餐：「对初入职场的我，想说的一些话」">和郭文的午餐：「对初入职场的我，想说的一些话」</h3><ul>
<li>雷锋网。</li>
<li>广度和深度的抉择。</li>
<li>很多我们认为会一直存在的东西，等你过去了再看，不过只是一小段时间。这个是在做深度决定的时候，需要思考的东西。你未来在慢慢定型的时候，还有没有反转的能力，改变的能力。有什么东西是一直存在的。<blockquote>
<p>这也是我读书的理由。有些东西它一直存在着，我想把它们搞明白。</p>
</blockquote>
</li>
<li>今天对vr、ar很感兴趣，明天对社交网络很感兴趣，然后你后天着手开始做一个高精度地图应用。这是你在做广度选择的时候，需要思考的东西。<strong>广度的尝试，容易带给人一种被高估了的视野。</strong></li>
<li>看了一些东西，了解了一些东西的人总有一些蠢蠢欲动。而心里应该要有另一个声音告诉你，你真正擅长什么，你真正能做什么。</li>
<li>而有意思的事是，我这里阐述的东西很多都是幸存者总结出来的经验。如果你根本在一开始就不曾蠢蠢欲动过，可能这些教训和你永远无关。误解是表达者的宿命，而只有被误解，才可能被理解。交流，永远都是双方的孤独游戏。如果仅仅因为害怕被误解我就不再开口，那实在是太可惜了。</li>
<li>【情商】约饭的时候聊话题。“你最近有看到什么有意思的事情吗。”，也因为这个话题，我们聊了无人车，5g，ripple等等等等。</li>
<li>【毕业】毕业时候我想给你们写信。有max、相如、马叶舟。</li>
<li><strong>我为什么喜欢写博客？因为我记性不好而且很懒，如果我不写的话，我是真的会忘记的啊。好像《轻》里面提到的，幸福的含义是重复。让其逝去，或者不自主地随波漂流，乃至媚俗是一种承受不起的轻浮。</strong></li>
<li>🌟强化一些观念：</li>
<li>多看最好的paper。最好的paper会传授你观看事情的方法。比如youtube推荐系统那一篇，比如wasserstein gan那一篇。</li>
<li>把一个东西吃透比用数量取胜好的多。</li>
<li>少看微博，只发不看，少用没有语境context的媒介，用知乎取代。</li>
<li>也同时完善自己挖掘surface有效信息的渠道。做减法比做加法更帮助人理解事情的本质。<blockquote>
<p>附：reeder应该增加一个功能：mute rss feed。有些feed我不希望加入未读信息流，但我更不想unsubscribe。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-04-21">2019-04-21</h2><ul>
<li>淘宝成功的原因，是解决了信用问题。直播也能在源头构建信用体系。<br>-【快搜】场景解释，比如我想知道长跑者的热身动作，左半边是文字版各个空间位置的摆放，右半边是视频。视频领域的搜索引擎。<blockquote>
<p><strong>视频领域的adsense？</strong>，关于广告的展示问题。抖音的衣橱\展示台，或者是内容本身即是广告。反而会偏向前者。我仍然希望你创造出最纯粹的内容。将内容和盈利之间尽量解耦，同时提供了算法精准匹配的空间。</p>
</blockquote>
</li>
<li>存在价值盈余的地方，就有商业化的可能。对大部分人的影响力还有很多价值可以挖掘。（比如，我想到那个：让腰部的明星给普通人订制礼物、祝福语。即使是名气再小的明星，都有他们niche的影响力可以变现。）</li>
<li>影响力的基础是可重复性。我们因此容易高估了现代的流量。算法匹配扶植的是偶然性。而关注、订阅模式在强调必然性。于是重心就自然地分开了，算法匹配的重心在内容本身，而关注、订阅模式的重心在于创作者本身，是创作者掌握着作品质量的必然。</li>
<li>🌟 从本质上来说，开源软件能够让云服务商提供同质化产品，尤其是IAAS和PAAS，产品在设计与交互层面不再有区别，只剩背后的性能、可靠性。<blockquote>
<p>而google能够提供最好的性能和体验保证。<strong>“从水和电的角度来看，云计算本该如此，想做公共服务必须提供同质化产品。”</strong><br>你拥有了自由。商业比拼的不是资源垄断，而是提供资源的便捷性。</p>
<p>“那么这对谷歌多有利？或者对其他厂商多不利？在我看来这几乎是点了他们的穴——你无法拒绝，因为这是客户的需求，拒绝它就是拒绝客户，但你也无法配合，配合就意味着会被谷歌云拉到Open Cloud与Native Cloud的战场上搞决斗，以谷歌的实力，客观的说，其他厂商的胜算并不高——你说客户到底更相信Kubernetes创始人还是热心友商？于是只能一动不动，跟被点了穴一样。”</p>
<p>谷歌收入构成里最大的仍然是广告，那为什么是前安卓负责人桑达尔来做谷歌CEO？ <strong>因为广告仅仅完成了数钱的动作。</strong>而桑达尔做的每个产品都是占据入口然后把钱送过来。</p>
<p>库里安加码业务团队以Anthos为支点去撬动市场，也加码合作伙伴站在客户一侧往上推。<strong>产品离市场越近，业务团队和合作伙伴越省力。</strong>（太精准的比喻了！）</p>
<p>开源Kubernets培养开发者，推广Anthos占领入口，最终谷歌云变现。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-04-20">2019-04-20</h2><ul>
<li><p>像巴黎圣母院这种具有全球极高知名度的古迹出了如此大的事故是很少见的，而「参与维修」带来的新闻效果远远不及「参与重建」。所以对于奢侈品公司乃至于管理者而言，有机会承担这样的「社会责任」，把自己的个人形象，把公司品牌和巴黎圣母院的重建紧密联系在一起的机会，在公司力所能及的范围内还是很有动机去投资的。</p>
<blockquote>
<p>【剧本】大家争着舞台上的聚光灯下的悲剧，对身边的悲剧不闻不问。</p>
<p>更甚的，抢着做那个受害的人。</p>
</blockquote>
</li>
<li><p>【快手】企业级直播案例：[[小鱼易连 (企业级直播)]]。未来视频会议有望跨出办公会议领域，成为深入政府/企业核心业务流程的通讯形态。以前只有跨国企业才买得起的视频会议，现在不仅成为小型创业公司的标配，更加能打通政府与个人、企业与个人</p>
</li>
</ul>
<h2 id="2019-04-19">2019-04-19</h2><h3 id="悲伤与理智">悲伤与理智</h3><ul>
<li>流亡。数以百万的人民难以被统计清楚，正是他们构成了“移民”，之所以使用这个称谓是由于缺少一个更好的词，或者，是由于缺少更深的同情心。</li>
<li>之所以说文学是社会的解毒剂。因为，人的丰富多样就是文学的全部内容，也是它的存在意义。<strong>我们必须谈论，如果这意味着我们必须和我们自己对话，那就更好了：这并非为了我们自己，而或许是为了文学。</strong></li>
<li>如果将流亡的生活归入某一种体裁，那这会是悲喜剧。抵达的目的地向他提供了安全，却使他在社会上变得无足轻重。</li>
<li>在人口爆炸的时代，文学也具有人口统计学上的意义。</li>
<li><strong>公众想要阅读自己。</strong><blockquote>
<p>娱乐行业的深层次冲动：<strong>公众想要看到自己。</strong></p>
</blockquote>
</li>
<li>对于一个人来说，意志力比风格更加重要。而流亡则使一个人的意志力要受到比祖国时更少的刺激。</li>
<li>你在书架上的位置，不是由你，而是由你的书来决定的。</li>
<li><strong>因为现在是出售这个观念的时候。</strong>因为<strong>现在有人想听。</strong></li>
<li><strong>一开始，母语是他的剑，后来变成了他的盾。它已变成一种迷恋。</strong>流亡就是被推离熟悉语境的过程。而后他又会向他的语境退却。</li>
<li>“这条路上充满着疯狂和一定程度的冷漠。而另一条路上所充满的则是平庸，同样近在咫尺的平庸。”<blockquote>
<p>其实他提到的流亡，我们都经历过类似的感觉。当我们选择一条无人问津的路时。比如创业。</p>
</blockquote>
</li>
<li>人其实是很一致的。我发现我的控制欲，同样支撑起了我的好奇和探索。<strong>弄清楚我周遭发生一切的含义，意味着更多的自由。</strong></li>
<li><strong>文学。我们让下一个人更少恐惧的唯一途径，是让他看到生活的完整规模。</strong><blockquote>
<p>流亡<br>多少人相信解绑，<br>意味着自由。<br>而流亡的他们，<br>继续着，<br>老式的演出。</p>
</blockquote>
</li>
<li>一个自由的人在他失败的时候，是不指责任何人的。<blockquote>
<p>指责。意味着一种权力的依附，和一种害怕受伤的心理。当一个人感到害怕的时候，他实际上是在承认了另一个人的权力。这便是不自由。</p>
</blockquote>
</li>
<li>所谓历史，不过是人们的记忆。<strong>你的记忆会赋予它温和的气候。</strong></li>
<li>“任何一趟被地图左右的旅程，将以购物探险结束。”</li>
</ul>
<h3 id="表情独特的脸庞（1987年诺奖演说）">表情独特的脸庞（1987年诺奖演说）</h3><ul>
<li>世界上还有很多的人，他们沉默着似乎一直在寻找，却最终也没有找到通向人们的出口。这条路没有终点。因为人们总会沉默。</li>
<li>他们这些身影，更确切地说是这些光源。</li>
<li>艺术家用以达到这一或那一目的，甚至是最寻常目的的那些手段都具有偶然性，没有什么能比写作过程、比创作过程本身更能让那个艺术家确信这一点。</li>
<li>如果艺术能交给一个人什么东西，那便是人之存在的孤独。<strong>艺术会自主或不自主地在人身上激起他的独特性，个性，使他由一个社会动物变为一个个体。许多东西都可以分享，如面包、床铺，信念和恋人，但是一首诗，却不能被分享。艺术作品，时单独地面向一个人的。</strong></li>
<li>冷漠和异议取代了期待中的赞同与众口一词。<blockquote>
<p>感谢这些不理解、这些冷漠。<strong>很多时候，冷漠存在，是因为我们允许冷漠存在。</strong></p>
</blockquote>
</li>
<li>文学有权干涉国家事务，直到国家事务停止干涉文学。</li>
<li>艺术愈是出色，就和重复的生活区别愈大。日常生活中，你可以把同样一个笑话说上三遍，引起三次笑声，而成为交际场合的主角。而艺术里，这样的行为叫做陈词滥调。</li>
<li>每一个新的美学现实，都为一个人明确着他的伦理现实。<strong>因为，美学即伦理学之母。一个不懂事的婴儿哭着拒绝一位陌生人，或是相反地要他抱，这个婴儿下意识地完成着一个美学选择而非道德选择。</strong></li>
<li>每一个新的美学现实会使作为其感受的那个人的面容越发地独特，这一独特性能定型为文学的趣味，而成为抵抗奴役的一种防护手段。<strong>一个带有趣味的人，会较少受到各种政治煽动形式所固有的陈词滥调和押韵咒语的感染。问题不仅在于美德并不是能创造出杰作的一种保证，更在于恶，尤其是政治之恶，永远是一个坏的修辞家。一个个体的美学经验越丰富，他的趣味就越坚定，他的道德选择就愈准确，他也就越自由，尽管他有可能愈是不幸。</strong><blockquote>
<p> 关于美学的培养，并不是为了保证你能够创造出杰作，而在于，为了防止恶。</p>
<p>此处的自由，指的是，受政治上媚俗修辞的绑架。</p>
<p>不同的美学经验在不同的人身上都发展的相当迅速，因为即便一个人不能完全弄清楚他究竟应该做什么，他也能下意识地知道他喜欢和不喜欢什么。可究竟为什么是艺术、文学这一类经验所培养出的趣味能够帮助人抵挡媚俗的逻辑？</p>
<p>伦理学本质上回答的是一个为什么的问题，也就是我应不应该这么做，这么做是善是恶。 </p>
<p>🌟 <strong>存在很多恶趣味。尝试将直接感官的满足，来合法化逻辑。</strong>，就比如布罗茨基提到的，<strong>谈论明了之事的缺点在于，这样的谈话会以其轻易、以其轻松获得的正确感觉使意识堕落。这也是这些话题的诱惑。他们忽略了为什么的讨论，忽略了伦理，直抵结论。</strong></p>
<p>从这个角度来看一些政治煽动就很清楚了。他们想传递的其实是一种充实感，而不是真正的充实。他们用同义重复的逻辑，来调动听众的感动、愤怒和勇气，并利用这些情绪来合理化那些本身荒谬的言论。是这股力量让他们心平气和地杀人，一边骄傲地宣读政治宣言，一边认为自己在替天行道，拥有着最纯净的血脉。</p>
<p>而因为人的多样性，就是文学的多样性。艺术作品在用想象力来自证，而非直接粗暴的感官刺激。</p>
<p>而也解释了（乔布斯），审美是可以被教化的。是很难的。为什么我们想要相信美好的东西，必须很轻易地感受的到。<strong>因为我们需要引导，如何接受自己的想象力，也愿意去接受别人的。</strong></p>
</blockquote>
</li>
<li>在阅读的时候，我很自由，我拥有着自由地诠释，自由地误解的权利。它能以记忆的形式伴随一个人的一生，朦胧或清晰，早或晚，恰当或不恰当。</li>
<li>时光流逝，像书页翻动。</li>
<li>这一代人降生，是为了延续下去。</li>
<li>语言具有时间潜力。这一潜力取决于操这语言所写的诗的数量。今天用俄语或英语创作的作品，为这两种语言在下一个千年的存在提供了保证。</li>
<li>有时候，借助一个词，一个韵脚，写诗的人就能出现在他之前谁也没到过的地方。</li>
<li>我感谢你们授予我诺贝尔奖，我实际上是在感谢你们赋予我的创作以某种恒久性。就像广阔文学风景中的一块冰山碎片。</li>
</ul>
<h2 id="2019-04-18">2019-04-18</h2><ul>
<li>“快手有一个我印象最深的朋友，他家里小猪产不出来，我们<strong>一对一的视频</strong>，我教他怎样处理，怎么去剖，最终小猪生出来，母猪也活下来了。不管是猪还是人都是一条命，养猪就像养人。”<blockquote>
<p>google news： 快手。</p>
</blockquote>
</li>
<li>“郝景芳：我们当初做儿童教育项目特别特别不想变成一个捐赠项目，一旦变成这样就很没意思。我特别想做成互联网项目，我自己对这个事情的定义是希望能够<strong>把这些孤零零的村子里的老师和外面的世界连接起来。</strong>”<br>“乡村的一些孩子也会受益。一大半孩子的父母都不在家，孩子很羞涩的，但内心的情感其实都是很丰富的，我也特别希望这些老师相连之后能带动这些孩子也和外界相连。”<blockquote>
<p>✍️ 在快手上做一次关于「交换」的营销。相互连接，类似变形记。但是一定要注意的是措辞，很多时候让别人感受到歧视的还有我们潜意识里的区分你我。</p>
<p>人为的创造难度。创造克制。去保护他们。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>【快手】对于快手，如何更好的记录生活。现在仅仅也只是现实生活冰山一角。比如那些二更团队观察的美食铺和他们背后的故事。<br><a href="https://www.sohu.com/a/308805773_668654" target="_blank" rel="noopener">互联网社会价值峰会圆桌纪实：当廖信忠郝景芳遇见快手“老铁”  _宝哥</a></p>
</blockquote>
<ul>
<li><strong>20世纪末差点干掉微软的是，互联网，是云。使得操作系统层面的垄断不再起作用。</strong><blockquote>
<p>打破垄断的挑战者从来都不在领域内。</p>
</blockquote>
</li>
<li>【剧本】他的确做了错事，可是为什么他要面对那些他不值得的辱骂。</li>
</ul>
<h2 id="2019-04-17">2019-04-17</h2><ul>
<li>今年初，快手创始人兼CEO宿华就对 <strong>陌生人社交- 表现出浓厚的兴趣，他表示，快手在过去一年开始转型成为 </strong>半熟人半陌生人共存的社区- ，在社区里已经初步形成了很好、混合的社交体验，平台里也已经沉淀了<strong>大量的社交关系</strong>。如今，快手收购“虾头APP”的背后，无疑透露出其加码陌生人社交的意图。</li>
<li>人并没有用视频记录自己生活的需求，看看自己手机里拍过多少视频就知道了，即使拍再多的照片也不会看，但是人有渴望交流的需求。<blockquote>
<p>硬件的创新，会释放被压抑的需求。软件的意义在于引导。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-04-16">2019-04-16</h2><h3 id="关于996">关于996</h3><ul>
<li>对996的一点看法。在领导者找不到更好的管理方式的情况下，强制996是最方便的做法。这和在学校期间强制早晚自习是一个道理。规模庞大以及水平参差不齐，容易导致更同化的保守管理。也因为人性化的管理更吃力。领导者应当反思，防止拿执行上的勤奋来掩盖战术上的偷懒。而职场相比学校，也因为利益关系的交换反而在舆论上偏好对这种inconvenient truth的掩盖。同样的，对工作者来说最好的办法也最直白，就是成为能力突出的那个而获得可以选择的余地。自由的前提是独立。如果是尖子生，学校也不会操心是否少上了自习。<br>而讽刺的是，那些曾经被这么“方便”管理着的学生现在一跃成为了新的管理者，自然会诉诸于这种刻入思维的“便利”。悲剧的悲剧性，在于轮回。受伤害者成为伤害本身。<br>我经历过最好的管理是，信任。是基于清晰的了解和相互尊重的合作。尽管这意味着需要“不方便”地撕去标签思考。君以国士待我，我以国士报君。<br>个人观点，欢迎讨论。</li>
</ul>
<blockquote>
<p>分享一个跟进讨论中出现我认为有价值的点。1、”自由的前提是独立“这种说法很容易被理解为”你不够优秀所以不值得被尊重“，值得商榷，应当改为，独立能够为自由争取更多的机会，不能绝对地预设前提。2、关于信任。的确我表达的很理想化，也可能是某些东西贫瘠久了产生的直觉反应；等冷静下来想，反而觉得不依赖信任而达成的利益共识更有力量，有些类似哈耶克的机制设计，即通过奖惩目标的改变使得人们在效益上会选择相互合作而不依赖人们的道德选择。想起一个故事，地主抵押奴隶乘船，当政府改变效益目标为活着抵达目的地的人头数给钱时，反而促使改善了地主和奴隶之间的关系而地主本身不必对奴隶抱有善意。这些制度设计曾经在机构外部，市场中很好地运转过，但如何运用到机构内部来改善管理效率也是一个很值得思考的方向。</p>
<p>很同意，我也觉得这个是趋势，而讽刺也同样现实的是，那些绝大多数人仍拥有着挑战这个系统的权利，一些反对的挑战现状的声音很容易被民粹，而代表着他们代表不了的力量。比如trump的当选，还有杨超越现象我觉得都属于，当人们急于反对当前垄断现状时那个用来代表人群的旗帜。但是资本主义有利益交换，这使得在这个方面绝大多数人并没有得到像在政治上他们能得到的道德高地，获益者也倾向维护统治。我们在资本主义里也没有类似政治的投票权，最接近的工会形式是可能的出路之一但现在也在式微。鉴于这些情况我也在想未来那些少数的资本家会不会更进一步剥夺人们反抗的权利，可能并不是压榨而是相反，高福利但是是惰性福利，类似最低收入的提高，以及奶头乐娱乐产业的强势发展。是的如果能回归人文主义，赋予更多元的意义是最好，但这个真的是看统治者的想法以及舆论呢</p>
</blockquote>
<p>最好的管理是：君以国士待我，我以国士报君。<br>就像学校也从来不管尖子生是否翘自习，是否拍拖。</p>
<h3 id="晚饭和max夜谈">晚饭和max夜谈</h3><ul>
<li><strong>YC中国</strong>是类似当时创新工场的一个存在。当时的创新工场：蒋凡、豌豆荚等等。</li>
<li>这一类soft skills就是需要磨练的。团队很重要。太多执行的层面并不为人知的。拼多多是怎么找到下沉市场的等等。</li>
<li>🌟【情商】善对、协商每一个人。每一个人都有可能站在未来自己的立场。<blockquote>
<p>【剧本】人们看到美好的故事，然后又美好的放弃。和剧本不一样。</p>
<p>这个时代最想要的是最强烈的渴望。为什么有些创始人会投一些小毛孩。不是bet他们的经历，就是bet他们的专注和莽撞。管理是可以及时介入的。</p>
</blockquote>
</li>
<li>性格决定命运。什么样的性格会决定什么样的人聚集在你的身边。<blockquote>
<p>尝试去改变自己天性。觉醒。你知道自己想成为什么样的人，以及你会去思考如何去聚集这些资源让自己更好的成长。所谓的多样性。以及审美。在这个层面是同一个意思。给自己创造一些错愕感，一些陌生的海域，去反思为什么。</p>
<p>为什么 -&gt; 怎么样 -&gt; 是什么。</p>
</blockquote>
</li>
<li>福柯。应该先看福柯再看昆德拉，学习一种力度。</li>
<li>「文学的垃圾化很大程度上是对文学的虚无主义危机的回应。」<blockquote>
<p>现代性的一个表现便是虚无主义。</p>
</blockquote>
</li>
<li>「从现代开始，艺术的全部重要性不再是优美，而是崇高。」（应该改为，曾经艺术的作用。）</li>
<li>readfree的extension真的是好用哈哈！</li>
<li>他代表着他代表不了的力量。特朗普和杨超越的现象。</li>
<li>ICO和众筹的区别。众筹是一次交割，或者附带有类似会员的身份可以优先享受资源，但是没有办法共享收益。coin有意义仅当其依赖的项目有价值。</li>
</ul>
<h2 id="2019-04-15">2019-04-15</h2><ul>
<li>这是一台占地面积很小的圆柱形装置，表面仅有三个按钮，分别对应1分钟、3分钟和5分钟的阅读长度；用户只需按下一个按钮，这台机器就会像超市打印小票那样随机打印出一篇要求长度的短篇小说。<blockquote>
<p>背面广告。<br>工具的作用，在于凝聚一些什么，再摒弃一些原生的东西。“有新的东西我会第一时间扑上去，所以对于假的新东西才如此泄气。”</p>
</blockquote>
</li>
<li>【快手】如果说现在的快手更像是我们的朋友圈，那短视频平台的公众号系统是什么？</li>
</ul>
<h2 id="2019-04-13">2019-04-13</h2><ul>
<li>youtube story。将创作，尤其是将和community engage的门槛降低。用户可以评论story，创作者可以通过story来回应这些评论。<a href="https://youtube-creators.googleblog.com/2018/11/introducing-more-ways-to-share-your.html" target="_blank" rel="noopener">YouTube Creator Blog: Introducing more ways to share your Stories on YouTube</a></li>
<li>很多话，是后来，才成为了谎。</li>
</ul>
<h2 id="2019-04-12">2019-04-12</h2><ul>
<li>✍️ 围绕快手短视频 &amp; 直播的版图扩张战略。(adjacent market?)</li>
<li>【管理】管理的精髓：<strong>君以国士待我,我必国士报之</strong>。君主以国家栋梁的待遇对待我，我就要为他做出国之栋梁所应做的贡献。<blockquote>
<p>快手现在有很强的技术能力，需要优秀的领导者。</p>
</blockquote>
</li>
<li>快手金融 贷款（类比美团做金融）</li>
</ul>
<h2 id="2019-04-11">2019-04-11</h2><ul>
<li>我们所看到的憔悴，不过是曾经的欲望。</li>
</ul>
<h3 id="耶胡达阿米亥诗选">耶胡达阿米亥诗选</h3><ul>
<li>有时“我们”是单数，而我有时候愿意为了你成为复数。</li>
<li>这是一盏为回程准备的灯。</li>
<li>“我的生活悲苦如流浪者的流浪。”</li>
<li>“洗过头发的少女给她头上安放新的云。”新云。</li>
<li>“在黑暗的城里,执勤的天使在换班。”</li>
<li>每当我呼喊我不作停留的城市的名字。</li>
<li>你捧起过雪的手。你的冷。</li>
<li>你尽力了，<br>让我们留在，<br>很祥和的雪天。<br>盔甲坠落，<br>点亮一盏猩红的灯。<br>雪没有味道，<br>血有。</li>
<li>“太多钟表，太少时间。<br>太多梦者，太少梦。<br>我的生活在我身后关闭。我在外边，一只<br>总是被残酷、盲目的风抵触脊梁的<br>狗。我训练有素，我翻身坐起，<br>等待引领它穿过我生命的，<br>街道，那可能曾经是我真正的生命。”</li>
<li>很快在即将来临的夜晚我们将像流浪艺人,出现在彼此的梦中。</li>
<li>在我最坏的梦里, 你,映着明亮的眼晴, 总是站立在墙垣近旁, 那些壙的基石是一颗心。</li>
<li>最后的雨降临于一个温暖的夜晚,清晨时分我的灾难盛开。</li>
<li>一位老妇曾经告诉我因为他内里被焚, 所以他的头变得白如霜雪。<blockquote>
<p>如灰烬。</p>
</blockquote>
</li>
<li>曾有过许多鲜花。<br>可我从无足够的时间。<br>我所爱的人儿们已经把自身推离我的生活,就像船儿漂离海岸。</li>
<li>若非这些年来我强忍住的泪水我早已像荆棘一样枯干。</li>
<li>后来,他们将由于厌倦和疲惫而松开彼此倒下, 将会有云,将会有雨,</li>
<li>在我们迷失得离爱情更远的时候, 我们繁殖词语, 长而有序的词语和句子。<br>假如我们依旧在一起, 我们可能已变成一片静默。</li>
<li>我的儿子散发着和平的气味，他母亲的子宫应许给他，上帝所不能应许给我们的东西。<blockquote>
<p>归来<br>这场雨，给了我，你所不曾应许给我的东西。</p>
</blockquote>
</li>
<li>他以为我是水手, 但知道我没有船。<br>而且我们没有海。<br>只有辽远的距离,和风。</li>
</ul>
<h2 id="2019-04-09">2019-04-09</h2><ul>
<li>有些誓言会悄然走开，有些吹散的秘密会自己回来。</li>
<li>meta learning。需要及时总结什么是让你学的多的途径，什么是浪费的途径。</li>
<li>“他赢过整个世界，也输了整个世界。”</li>
<li>回忆里的我也会努力。</li>
<li>一张望着脸的脸，一幅关于画的画。</li>
<li>“像一棵树阴覆着睡在公园长凳上的情侣。他们的爱也像一棵树。”</li>
<li>“我的情绪对你就像气球。我把丢失自己的权利交给了你。”</li>
<li>“我母亲把许许多多的云关闭在她那棕色的壁橱里”</li>
<li>他的手，很沉，像曾经握住了时间。</li>
<li>他找到了他的翅膀。</li>
<li>你的声音像极了风铃，倾诉于擦肩而过的风。</li>
<li>我们一起生活过的每一天，是陌生扉页里多出的一行。我的欲言又止，是谁的惜墨如金。直到我听见黄昏垂下如笺穗，该停笔了。</li>
</ul>
<h2 id="2019-04-08">2019-04-08</h2><ul>
<li>区别不同种类文章的处理方式：</li>
<li>适合精读的全文文章</li>
<li>适合作为reference</li>
<li>🌟 我发现，其实工业界里的任务，有很多基于用户行为、心理上的模式可以利用作为特征。而对于学界它们更需要摒弃这些特殊性而找到更为通用的算法。<blockquote>
<p>我很喜欢去观察、以及推理用户行为。这给了我一种解释的能力，一种控制欲。<br>尤其是airbnb那篇real-time personalization的论文，很多基于业务的属性被运用起来，比如这个场景下的搜索是congregated search（有集群效应），因此借助negative sampling可以有很好的效果。<br>也因此，很多工程师转产品经理很合适，因为他们第一手的数据和观察能够帮助他们看到很多这种行为的模式，而仅仅凭借臆想是很难很难做到的。<br>有一个正面例子，是豆瓣推荐。借助用户搜索的书名在推荐中插入相关的书评！</p>
</blockquote>
</li>
<li>一种很难能可贵的能力，清醒的狂热。</li>
<li>姜思达：歧视的一个表现形式，也可以是区分你我。</li>
</ul>
<h2 id="2019-04-07">2019-04-07</h2><h3 id="加缪">加缪</h3><ul>
<li>奉献一种超乎普通欢愉之上的形象。</li>
<li>写作，是誓言。是和我经历着同一个年代的人们，他们的希望和失落。他们出生于个人电脑诞生的时期。和平年代。生活在和平年代的艺术。加缪想表达的存在主义。存在主义的反面，是虚无主义。你越是紧跟暴君，就越孤独，因为你在向别人乞求你自己身上得不到的亲密感和安全感。</li>
<li><strong>这条路没有终点。因为人们总会沉默。</strong></li>
</ul>
<h2 id="2019-04-06">2019-04-06</h2><ul>
<li>360度视频拍摄。观看者可以选择不同的人来视线追踪。</li>
<li>🌟用户暂停视频。无论在什么平台都是一个值得利用起来的讯号。提供相关的概念解释，或者是链接。roku product studio。</li>
<li>学习乔布斯对开关键的质疑；以及对塑料键盘的质疑。为什么一定要有这个按钮。譬如，为什么要有视频开关按钮。为什么要有这个设备的开关按钮。</li>
<li>适应性UI。user interface也应该能够适应用户的偏好。</li>
</ul>
<h2 id="2019-04-05">2019-04-05</h2><ul>
<li>最好的内容提供商最后一定会自建渠道。<blockquote>
<p>Alan Kay: People who are really serious about software should make their own hardware.</p>
</blockquote>
</li>
<li>不要依赖阅读来提供思考。更不要以为依附于一些形象能够改变自己。</li>
<li>mauve（淡紫色）。纳博科夫。</li>
<li>物理隔离最终导致生殖隔离。这放在传播学上也成立。</li>
<li>【剧本】没有人可以幸免。我们都可能成为源头。“We have a generation now that has been trained through hundreds of thousands, perhaps millions of social media reps on what engages people on which platforms. <strong>In our own way, we are all Buzzfeed. We are all Kardashians.</strong>”</li>
<li>🌟 如何交割所有权</li>
<li>实体交易（netflix早期给人一种错觉。他们可以拥有所有电影。）</li>
<li>平台托管电子内容。（youtube给人一种错觉。来这里就可以获取这些内容。）</li>
</ul>
<h2 id="2019-04-04">2019-04-04</h2><ul>
<li>为什么国内的共享衣橱的项目很难做起来，因为国内的物流太完善了。</li>
<li>【快手】快手内部做私人内容的统计和智能助理。从帮助用户管理的智能程度定价分层级。</li>
<li>【快手】“快搜”里的内容分发，同样适合于信息叠加。比如我希望住酒店，譬如airbnb或者民宿。任何的介绍都比不上一段视频。然后再叠加必要的信息。</li>
</ul>
<h2 id="2019-04-03">2019-04-03</h2><ul>
<li>19年快手黑客马拉松第一名是：手语识别。我的想法：借鉴那个imagine cup的项目将声音背景噪音抹去的想法。给听障人士使用。</li>
<li>✍️【快手】从公开的视频聊天切入社交。</li>
<li>【快手】短视频的力量：是传递真相。哪怕仅仅是传递真相的感觉。他们说，“我相信你说的是真的。”<br>“尚育康的视频很真实。尚育康认为，就是因为粉丝就是看到了这些鸡真实的生长环境，知道它们不是圈养的，是真正的走地鸡，才会选择相信他，从他这里买东西。现在有30%的贵妇鸡，90%的贵妇鸡蛋都是通过快手销售。”</li>
</ul>
<h3 id="叶芝">叶芝</h3><ul>
<li>我祝福你不会太美，以至于把美看作完满的结局。</li>
<li>她的回忆里已留下50载冬夏。</li>
</ul>
<h2 id="2019-04-02">2019-04-02</h2><ul>
<li>经济学里几个很经典的概念：</li>
<li>保险</li>
<li>非合作型博弈论。</li>
<li>smart contract的有效程度和on-chain event的数量强相关。因为smart contract只能够根据on-chain event来出发，off-chain event会让参与者有defect的机会。</li>
</ul>
<h2 id="Ethereum">Ethereum</h2><ul>
<li>【剧本】连仅存的胜利都可以被压榨。他是一个 -拳击冠军- 。他失去了所有，为了那个价值百万的唯一翻身的机会。这是他唯一的溢价。<strong>未来世界会越来越难以产生溢价。溢价产生的前提在于信息不对等，或者价值不对等。但是总存在吸血鬼想要利用自己更大的影响力来抽空他们的荣耀。</strong>但不能是零和博弈，必须是合作类型的博弈。比如：在一场大型的团队合作游戏里？终于一个男孩他厌倦了，虽然支付了合约的价格，但是最终破坏了整个游戏。<br>背景：<strong>game-warping。通过影响博弈的收益预期。来强制使得双方合作并支付。关键在于如何强制隔离两者的身份避免共谋。</strong><blockquote>
<p>这个机制的核心在于：通过威胁非合作的结果，来强制其中参与方支付并理性进行游戏。<br>前提：即在没有干预的时候，他们也偏向合作的结果。同时博弈的action需要能够在链上broadcast，从而利用smart contract。<br>观察：但这个发明其实是在提供一个有利可图的方式，然后使得大家努力把交易场景搬上ethereum。<strong>平台的管理者应当有这类型的思考。</strong>实际上是p+epislon attach。 <a href="https://medium.com/@virgilgr/ethereum-is-game-changing-technology-literally-d67e01a01cf8" target="_blank" rel="noopener">Ethereum is game-changing technology, literally. – Virgil Griffith – Medium</a></p>
</blockquote>
</li>
<li>【剧本】<strong>AI时代，我们需要新的信息过滤机制。曾经这个机制来自于地缘限制，物理限制。人工智能能够创造真人都为之一叹的仿真品，比如文章、音乐、图片和视频。人工智能的作品将会足够支持大众阶级的消费，而高阶级的人能够享受人为的缺点。而缺陷是会被追逐的，大部分人会被单调的完美所统治。这意味着是否能够承受的稳定性，以及想象力。</strong><blockquote>
<p>当完美能够批量生产的时候。有害的不在于完美，而在于批量。<strong>人的鉴赏能力比作品本身的优劣更重要。为什么？这意味着我不是在对赌偶然性，我在锻炼自己的必然性。人工智能的作品，他们的音乐、画作不具备可解释性。而人可以。</strong></p>
</blockquote>
</li>
<li>facebook的cryptocurrency将首先登陆印度和whatsapp平台上。</li>
</ul>
<h2 id="2019-04-01">2019-04-01</h2><ul>
<li>看书，让生活有了隐喻。回归了语境。</li>
<li>kaggle平台Elo推荐系统比赛</li>
<li><a href="http://www.gifshow.com/i/photo/lwx?cc=share_copylink&amp;fid=1094121983&amp;timestamp=1554149881730&amp;type=2&amp;et=1_i%2F1629644057606397952_sl88&amp;userId=3x395m553j87sum&amp;photoId=3xbk84fiqbhqrj4" target="_blank" rel="noopener">视频的文字排版</a></li>
<li>有时候，会把身边熟悉的人当作是自己的坐标系，他们不变，仿佛自己的生活也是静止的。直到终于有人要离开了。一年就过去了。和你们相识是很偶然的事，和你们告别却仿佛成为必然。于是我喜欢上了偶然发生的事，比如偶尔下雪的天。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2019 Mar.]]></title>
      <url>http://chocoluffy.com/2019/04/05/%E7%A2%8E%E8%AF%AD-2019-Mar/</url>
      <content type="html"><![CDATA[<h2 id="2019-03-31">2019-03-31</h2><ul>
<li><p>TrimIt。一个有启发的故事。将barber通过Vans运输到客户那里，客户利用app预约剪头发。同时在剪头的时候打开车门，是效果很好的市场营销。这个可以应用于很多实体店的服务。<br>接下来的商业化：从理发延伸到你的私人造型师，随时预约随到；以及基于地理位置的需求pooling。</p>
<blockquote>
<p><strong>适用于提供相比家庭环境更专业的服务，却相比专业实体店更加便捷。类似需求比如：按摩、女士的美容美发美体等。</strong>相比剪发而言，美容很难做到在过程中打开车门让外界观摩，因为这个过程本身被认作是一个更私人的过程，而不是一个community聚集开放的过程。但同样能够包装营销的点在于服务后，将出门的过程赋予明星下车进场的意义。<br><strong>类似的灵感可以这么去找：在马路上沿着实体店铺走，看看哪种类别的可以被颠覆。</strong></p>
<p>这也是Uber、Lyft所在的运输行业的前景。<strong>运输也能够成为一个平台，上面有物流、还可以有各种实体服务业。reach everyone to everything.</strong></p>
</blockquote>
</li>
<li><p>线上3D超市机械手臂，用户远程挑选商品。</p>
</li>
<li>未来的短视频。你只要负责拍出最好的内容就可以了，平台通过后期来自动贴片广告(like Uru)。但生活场景上会有限制。</li>
</ul>
<h3 id="《乔布斯传》">《乔布斯传》</h3><blockquote>
<p>我答应自己在毕业前要看的几本书。 其中有《乔布斯传》和《堂吉柯德》。</p>
<p>我想，教育，以及独特的经历在达成这样的目的：<strong>有一个坚定想要的东西，不会因为生活巨大的震荡所干扰。</strong></p>
<p>而人的一生，也不过是通过漫长的道路，重新发现那两三个简单却丰盛的词语。然后从它们出发，去观察整个世界。</p>
<p>The journey is the reward. </p>
<p>以及我曾经写下的，不依赖理性而获得希望。<br><a href="https://chocoluffy.com/2019/04/05/The-journey-is-the-reward-%E3%80%8A%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/">The journey is the reward. -《乔布斯传》阅读批注</a></p>
</blockquote>
<h2 id="2019-03-30">2019-03-30</h2><ul>
<li>有同感。加缪认为这不荒谬。加缪借里厄医生的话表现过犹豫的。他回答过“在这人世上，什么都不值得人离开自己所爱。然而，我也离开了，却弄不清到底为什么。”，即便疲惫，即便有种无力感，即便他也说不清楚，里厄医生还是坚定的知道治疗为重。他说“这也不是英雄主义。但我不会爱这个让孩子受折磨的世界。”。相反，真正的荒谬说不定也可能是穷其一生去肯定自己的理想。比如毛姆的《刀锋》里的艾略特。他是穿着爵位的华服去世的。 <a href="https://movie.douban.com/review/5588895/?start=0#10794935" target="_blank" rel="noopener">保持距离，坚守理想（树上的男爵）书评</a></li>
<li>树上的男爵。上树，远离人群，做一个真正的孤独者。</li>
<li>以后如果我有机会把这些故事传递出去，我不想一开始就把他们的名字的说出来。<strong>我不需要他们名字的庇护。</strong></li>
<li>而本身教育的存在就是一个信息过滤和中心化的媒介。你拥有导师根据他们的经验和社会的俗成见解过滤和形成抵达学生的文化环境。而现在互联网、终端设备的普及将极大地打破很多精心营造的社会环境。<a href="https://chocoluffy.com/2018/04/15/%E7%A7%91%E6%8A%80%E7%9A%84%E7%9B%B2%E7%82%B9-%E3%80%8A%E7%AB%A5%E5%B9%B4%E7%9A%84%E6%B6%88%E9%80%9D%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/">科技的盲点 -《童年的消逝》读后感</a></li>
<li>【剧本】 <strong>我最担心的是，那些仍旧坚持打击黑暗的勇士，被认为失去了一些道德的力量。</strong></li>
</ul>
<h2 id="2019-03-29">2019-03-29</h2><ul>
<li>很美的东西：遥远的相似性。</li>
<li>【剧本】受影响的儿童是不知觉的，他们过早地失去了游戏而被卷入了成人严肃的比赛里。他们觉得他们是舞台上最闪耀的一颗，却说不清他们为什么必须站在万千宠爱的镁光灯里，又为什么只能笑。</li>
<li>cora。corazon 心脏。</li>
<li>未来的趋势是游戏+直播。社会问题的逃避所。<strong>讽刺的是，有时候，我宁愿没有退路。我们什么时候脆弱到一定需要有安慰剂才能直面自己的人生呢。但或许，我是错的。</strong></li>
<li>自由的前提是什么：独立。人们会容易习惯让渡自己生活的一部分给外在工具，比如把关注问候一些人的能力寄托给社交网络，把控制情绪的权利交给段子和八卦。这同样意味着一件事：也就是这是一个极易造“神”的一个时代。人们借助先进的工具能够很快地进入一个细分区域开始精耕细作，展现出被高估着的所谓专业能力。我们想说的崇拜，其实是距离不够近。</li>
<li>✍️ 和纪然的讨论：对知乎当下最好的战略是什么。为什么我会坚持说：越纯粹的体验，就越能够成为护城河。<blockquote>
<p>因为越纯粹的体验，意味着越私人。</p>
</blockquote>
</li>
<li>很多时候我们在问题里突出“最好”，并不是为了找到最好的答案，而是在强调往那个方向探索所需要的努力。</li>
</ul>
<h2 id="2019-03-28">2019-03-28</h2><ul>
<li>“夜晚，灯光昏暗，你只能看见你想看见的人。”</li>
<li>“没有广告的压力，Netflix就不用考虑每部片子的播放量，可以放手大胆地制作各种小众类型的片子，像前面提到的《罗马》就是一部小众的艺术片。因为对Netflix来说，最重要的不是保证播放量，而是保证每一个付了费的用户，打开Netflix都能找到自己想看的片子。因为用户最重要，所以Netflix把用户体验做到了极致，每部剧的页面都是极简风格，干干净净，没有花里胡哨的内容，也不显示播放量。前阵子它们甚至把每部剧的评论都取消了，因为觉得会对用户形成干扰。但大而全对用户来说是没有吸引力的，真正能形成粘性的是别人没有的优质内容和优质服务。”</li>
<li>Netflix：Cindy Holland，Intv</li>
</ul>
<h2 id="2019-03-27">2019-03-27</h2><ul>
<li>在动漫里，只是战斗恰好是最直观的方式来宣判胜负和时代的变迁。而在真实世界里，只要想法不死，总有一天会迎来新时代。</li>
<li>🌟<a href="https://www.youtube.com/watch?v=AyzOUbkUf3M&amp;feature=youtu.be" target="_blank" rel="noopener">The Next Generation of Neural Networks - YouTube</a> 把07年Hinton在Google的talk翻出来看了一遍。Hinton讲的是真的清楚，带着他的英式幽默。<ol>
<li>原来Hinton一开始的deep neural network只是stacked起来的restricted Boltzmann machine。而deep layers + back propagation的选项更早其实就出现了，但性能不够好。</li>
<li>labels虽然是最容易exploit的信息，但是Hinton还是选择了从unsupervised的generative model入手，只拿labels做最后fine-tune用。</li>
<li>用gaussian noise干扰auto-encoder kernel以强化decision boundary的部分真是精彩，如果当时Hinton接着去动态地更新noise而不是用fixed noise，这就是最早的GAN呀。</li>
<li>ravine，以及supermarket search的比喻很形象。要学习这种表达方式来传达复杂概念。</li>
<li>虽然只是07年，但我能从talk里看得出来后来才出现的Convolutional Neural Network，Attention以及Adversarial Network的影子。Adversarial的想法真的很有意思，我想在推荐算法里也试一试。<br>想起还在多大的时候上的来自Urtasun, Ruslan以及Roger等Hinton系的课，现在他们也散落四方成了能独挡一面的人物了。有种故事开篇的感觉，“世代传承的意志，时代的变迁，人的梦…”，哈哈哈太中二了。</li>
</ol>
</li>
</ul>
<h2 id="2019-03-26">2019-03-26</h2><ul>
<li>是你摧毁了，这个王国的魔术。</li>
<li>想劝退这整个冬天。</li>
<li>为什么这个冬天，没有像它曾经是的那样，落下。</li>
<li><strong>想到的时候，要有所举措。哪怕只是计划、记录，都比推迟到以后做要有效。</strong></li>
</ul>
<h2 id="《技术垄断》波兹曼">《技术垄断》波兹曼</h2><blockquote>
<p>4.5/5 </p>
<p>有些时候我会很警惕被热烈拥护的主流观点，我不是在反对主流本身，而只是想看清楚我们会失去什么，和那些还没被说完甚至被刻意隐瞒的话。</p>
<p>这也是这本书观察技术进步史的角度。</p>
<p>工具带有偏见，也以偏见塑造着使用者。这很接近麦克卢汉的“媒介即信息”的理论，比如互联网这个媒介的普及，在改变着我们理解这个世界的方式，”真实“，”隐私“等词语的含义也远不同于过去的理解。</p>
<p>我有种感觉，工具提供着的某方面的便捷，也同时在消解着其成就繁荣的意义。比如，信息泛滥的时代，在贬低着信息的意义；煽动情绪的泛滥，在消解着情绪本身的严肃性。而消解意义，正是成为可交易商品的前奏。直到信息，情绪，乃至生活本身，都能够成为别人的消费。[1]</p>
<p>在18年的年终总结，“抵抗存在的被遗忘”[2]，我从人的情绪本身出发，去观察媚俗。而波兹曼则再退一步，是工具的演化在逐渐塑造着人们的情绪。他说，要守护那些重要的故事和符号，成为一个忠诚的抗争斗士。我想这或许就是他的存在主义。</p>
<p>这个世界是喜欢魔法的。魔法的意义，在于将人们的注意力指向错误的地方，并通过这种做法，唤起我们的好奇心，而不是理解力。如果我们不假思索地接受新发明，到最后我们也只能完成工具能完成的事。就像我们习惯性地对这一群人说，到最后我们只能说出他们想听的话。</p>
<p>而讽刺的是，每个时代都会演化出那个时代伟大的声音，让受害者享受伤害，而放弃辩诉的权利。</p>
<p>我会记住来自波兹曼的提醒。技术从来不是必然的，也从来不是自然的，都带着某种计划、日程和哲学。也许能够提升生活品质，也许不能。因而技术需要监督、建议和克制。</p>
<p>[1] <a href="https://mp.weixin.qq.com/s/hbjX3sM5npLIgFYDxd8Z9Q" target="_blank" rel="noopener">大喜哥走了，沈先生“疯了”：成就与摧毁他们的，是同一种肮脏</a></p>
</blockquote>
<p><a href="https://chocoluffy.com/2019/03/30/%E6%8A%80%E6%9C%AF%E7%9A%84%E5%81%8F%E8%A7%81-%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/">《技术垄断》- 阅读批注</a></p>
<h2 id="2019-03-25">2019-03-25</h2><ul>
<li>得到它未必有什么功德，失去它也未必有什么过失，比如：名誉。-莎士比亚</li>
<li>有着国王的骄傲。</li>
</ul>
<h2 id="2019-03-24">2019-03-24</h2><ul>
<li>【剧本】黑镜。你严肃反抗的样子，也能够成为流量。**毕竟成就和摧毁他们的，都是同一种肮脏。<a href="https://mp.weixin.qq.com/s/hbjX3sM5npLIgFYDxd8Z9Q" target="_blank" rel="noopener">大喜哥走了，沈先生“疯了”：成就与摧毁他们的，是同一种肮脏</a></li>
<li>[18.10.27] 你是云，你想起我的时候，就化成了雨。</li>
<li>【海贼王】要是说了，不就不能和你们当朋友了嘛。艾斯：为什么非要和我做朋友。路飞：因为我没有其他依靠了。</li>
<li>“nothing in this world is more fearful than sweetness.”</li>
</ul>
<h2 id="2019-03-23">2019-03-23</h2><ul>
<li>youtube给人一种错觉。来这里就可以获取这些内容。<strong>平台：所有权的交割。</strong></li>
</ul>
<h2 id="2019-03-22">2019-03-22</h2><ul>
<li>专业和专业主义的减少。</li>
</ul>
<h2 id="2019-03-21">2019-03-21</h2><ul>
<li>他在起这个名字的时候，一定有着高望的眼眸。</li>
<li>有些老衣服，有时间的味道。</li>
</ul>
<h2 id="2019-03-20">2019-03-20</h2><ul>
<li><strong>未来的趋势，硬件是缩短获取data的距离以及数据采集，虚拟化；软件的机器学习可以很大程度上补充硬件的缺失。</strong></li>
</ul>
<h2 id="2019-03-19">2019-03-19</h2><ul>
<li>向max和段威学习，<strong>多主动思考，而不是做应激性的思考。</strong>要有自己思考的一套体系。<strong>这个时代对思考最大的伤害，不是滥竽充数，而是优质的信息太多，而不给你停下来思考，拥有自己想法的时间。</strong>联想起那个播客里提到的现象，警惕「信息水龙头」，而是要自己去打造多面维度的选择。</li>
<li>✍️ 理解在什么时候需要切入运营，并且大力出奇迹。</li>
<li>教育方向的创业项目：<ul>
<li>叮咚课堂：小班学生互动与AI老师。引入真人同学、助教、班级等社会化元素。理解课堂、以及教育的作用。<a href="https://www.iyiou.com/p/88641.html" target="_blank" rel="noopener">一对一出现模式困局，AI伪直播成为教育企业新玩法？-亿欧</a></li>
<li>优势：定价比真人服务低一个量级，对三线城市价格敏感地区的竞争力巨大。（拼多多）</li>
<li>数据的积累和个性化。<blockquote>
<p>与其把AI教师做的尽量逼真去试图蒙骗消费者，不如直接告诉消费者，AI教师的存在，以及作为助理的存在，甚至可以引入AI同伴来制造竞争压力。尽量复刻社会化互动。而互联网化的最大优势是，可以积累大部分的最佳实践和最大剂量的刺激。想起Path那个创业项目（积累最佳化的知识寻觅的path。譬如搜索途径等。）</p>
<p>直播。和真实世界的区别之一，在于数据的流向。真实世界可以被看作是最原始的阅后即焚，体验后即焚。</p>
</blockquote>
</li>
</ul>
</li>
<li>微信给我的一个启示。你一定要先足够强大，达到足够的垄断，才能保护你想要保护的东西，才有理想主义。</li>
<li>知乎的mission应该是：your private library + your lens to the world of knowledge。一个东西，越私人，越personalized，就有越深的护城河(moat)。知乎应该模仿即刻，把信息、知识收集以及收纳赋能给个体。是一个很适合的领边市场（基于同一个商业逻辑，最容易拓展进入的业务场景，比如uber延展到uber eats；google maps延展到google点评）。</li>
</ul>
<h3 id="VC_days">VC days</h3><ul>
<li>什么是在90s pitch里容易出问题的：<ul>
<li>不适合体验类产品。</li>
<li>不适合拥挤赛道的产品。比如fashion，以及e-commerce。</li>
<li>investor容易偏向新型方向上的需求，比如机器学习toB的方案； health tech；以及运动类别上的硬件。</li>
</ul>
</li>
<li>“虚空。捕空。”</li>
</ul>
<h2 id="一天世界_-_书本存在的意义">一天世界 - 书本存在的意义</h2><ul>
<li>书本的存在，佛像的存在。理解的一个角度是，如果不是它们，我会被什么填满。我一定也不相信佛像就是佛，我一定也不相信书本就是知识。书本是知识的象征。而我们需要象征而活着。因为，抵抗filter bubble。书也是一种技术。多面维度的选择。而不是信息水龙头。现实是世界是最好的屏幕，dybamic land。</li>
<li>深蓝色，像海底的呼吸。</li>
</ul>
<h2 id="2019-03-16">2019-03-16</h2><ul>
<li>我在生产的时候，也在消费它。我祈祷的时候，我也是我自己的菩萨。</li>
<li>为什么我们会觉得，美的东西可以甚至应当轻易地得到。</li>
<li>我们，都带着我们一路以来的教养，站在对方面前微笑。</li>
<li>我的脑袋是一只抽屉，里面只有一把剪刀和一只鹦鹉。我把我想听的剪下来。</li>
<li>我想被你的呼吸安慰。</li>
<li>旧货铺：时光。</li>
</ul>
<h2 id="2019-03-15">2019-03-15</h2><ul>
<li>和自己最信任的人，做着自己最想做的idea，这种感觉真好。</li>
<li>hammingway六字诗：for sales，baby shoes，never worn。</li>
<li>【剧本】上层人不仅聪明而且更加善良，他们为了更多人的安全，却手持着屠魔令。 </li>
<li>【剧本】讽刺。我准备好了丰盛的遗嘱，接着准备用我自己的死，成为今天的网络主角。<blockquote>
<p>关于媒体操纵，导致恶意言论二次发酵而产生更深远的影响。深夜偏远屋子，小男孩眼神里折射出电视屏幕的昏蓝色。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-03-13">2019-03-13</h2><ul>
<li>“computer is not the bicycle for the mind anymore, it’s the self-driving car for the mind. “</li>
<li>docker-compose相比kubernetes也是一种选择。其中docker image可以push到ECR(AWS docker image register)然后在<code>docker-compose.yml</code>里加入来源。</li>
<li>人设。从来都是观看者的想法。某种角度上是一个更具备效率的传达信息的机制。<strong>但我宁愿没有效率地看见你的完整。</strong></li>
</ul>
<h2 id="2019-03-12">2019-03-12</h2><ul>
<li>cafe的工作人员已经换了第三批了。有一天在路上认出了曾经的staff，主动向他打招呼，他说他已经不在这里工作了，但是今天专门过来买杯咖啡。</li>
</ul>
<h2 id="2019-03-10">2019-03-10</h2><ul>
<li>光从地底穿出来，仿佛我们是他们的天堂。</li>
<li>“大时代就是把人当玩意儿操弄的一个东西。”<blockquote>
<p>我很警惕一个人提到“大时代”、“宏大”之类的概念，这个修辞会不会在掩盖一些无法入眼的真实的受难。</p>
</blockquote>
</li>
<li>“正如有毒的癞蛤蟆对自身没有毒一样，人很快就会长出一层硬皮来<strong>抵御自己的诚实。</strong>” 库彻。</li>
<li>“只要我自己心目中的确定形态是依然完整，我就毫不欠缺任何人。”</li>
<li>“对生活给予的别无所求，仿佛猫的直觉。”</li>
<li>一个检查paper是否写得简练的方法：把自己当作读者，假设希望高亮这个概念的时候，需要高亮多少区域。</li>
<li>bear可以把note里的header作为link了！很多“摘抄”里的段落可以合理归类一下！</li>
<li>“有一个疑问：视频动态是朋友圈的反面，拍出最真是的东西，胡乱拍都可以。那上传视频是否跟这种状态有冲突? 由于可以上传视频，肯定会被一些微商使用来拍广告，甚至见到有朋友通过视频动态发一些有趣的小视频。会不会做的像POP IM那样只能拍不能上传比较好呢?其实，我前期放过一些有趣的游戏录屏在视频动态。”</li>
</ul>
<h2 id="2019-03-07">2019-03-07</h2><ul>
<li>这个时代成为内容提供者是最有优势的。<ul>
<li>因为版权。科技的进步会不断提高追溯的能力。<strong>而仅仅依靠交易即版权割舍的模式会被慢慢优化掉。（netflix早期的模式）</strong>。</li>
<li>以及分发能力在指数级的进步。</li>
</ul>
</li>
<li><p>而所谓机器学习，<strong>商业价值在于版权</strong>，GAN对版权的bypass。</p>
<blockquote>
<p>有点意思，这点和用户隐私也有类似的地方。fb当时出事之后其实根本不在意用户删除自己的账户数据，因为他们的行为数据已经被训练为模型，而模型所有权归属于fb。但仍然可以理解为公司利用模型来bypass了直接侵犯用户版权（用户数据）的风险。目前法律上判定基于原版权人作品重新制作是否侵犯版权一个重要指标是derivative work、proportion和直接利益诉求，在于多大程度上加入了自己的主观性，多大比例重合，以及是否直接涉及商业利益。可感觉GAN可以trick过这些，都还是很模糊的地带。突然发现原来大佬们all in ai都很有想法啊哈哈哈。</p>
<p>感觉是一个挺有意思的趋势，我一直感觉科技的发展其实是在强化版权拥有者的力量，以前我们直接买卖，所有权直接交割，现在我们慢慢步入订阅和租赁，只是占用使用权而非所有权，包括区块链普及之后大部分资产债券化也使得回溯每一笔交易以及持有者更可信和可能；但同时算法的发展和不可解释性也创造了很大的灰色地带，并甚至可以滥用为规避盗版指责的挡箭牌，“你说这图片、音乐、视频很相像，我说这是算法生成的全新东西，甚至就是以你的作品训练的，可都是算法的锅我都不知道呀”。于是又成了一个相互adversial的过程，哈哈哈GAN真香！</p>
<p>的确现在大部分所谓去中心化，保护用户隐私的应用根本达不到消费者水平，交易量瓶颈太明显了，同样是发邮件如果gmail几毫秒送达，而去中心化邮件客户端需要20分钟凭啥要消费者妥协。也是假设所有其他人都可能是attacker的条件太严苛，于是整个系统花太多traffic在各种共识的确认中。现在大部分所谓效能上的创新都是在往中心化的路子上走，Proof of Work 到Proof of Stake，于是斩下恶龙的骑士最终变成了恶龙？？对用户协议来说唉都是不平等协议，一个愿宰一个愿挨了，但我就是愿挨啊哈哈哈哈哈😂</p>
</blockquote>
</li>
<li><p>你翩翩赴约，像蝴蝶降临。车流 NYC。每一辆车都是在赴约吧。</p>
</li>
<li>信念，念信。我认出了模糊的字迹，从此化作我一辈子的力量。</li>
<li>19年的总结，最打动我的细节记录：<ul>
<li>规则。不以善恶为约束的规则，而是效益，哈耶克。以及与区块链的联系。我帮助你，可以不依赖我的好心。</li>
<li>堂吉柯德。我一度觉得这很荒谬。想到塞万提斯，没有这一点坚持，我是没有办法活下来的啊。想起，每一个人都背负着自己生活的背景和沉重故事，这越不止生活的高光与不堪那么简单，这还是历史，像风铃，还有很多每个人控制不了的东西。你同情我，说那些不值得，这里有更美好的东西，你看得见，你也可以拥有。可是，我没办法抛弃的了我的故事，也假装不了，我一路成长一路以来说服自己的力量，我没有办法轻易否定。我知道那么做了会很轻盈，是告别，是安慰，可是我做不到。</li>
</ul>
</li>
</ul>
<h2 id="2019-03-06">2019-03-06</h2><ul>
<li>低频大宗交易，最重要的还是品牌。从每个月买一次洗衣粉，每半年买一次牙膏是用什么牌子，而你又是怎么知道这个牌子的就了解了。</li>
</ul>
<h2 id="2019-03-05">2019-03-05</h2><ul>
<li>利用GBDT构建新的特征向量。GBDT缺乏online learning的能力，因此我们往往只能相隔一天甚至几天才能够update GBDT模型，就是说GBDT的部分几天更新一次，而LR的部分进行准实时的更新，这无疑是很好的工程实践经验。时至今日，我们已经开始使用大量不同的embedding方法进行特征编码，facebook当时的做法也对我们现在的工程实践有重要的参考价值。因为大量深度学习embedding方法的更新计算开销也非常大，但对实效性要求并不高，<strong>我们也完全可以低频更新embedding，高频或实时更新基于embedding特征的LR，NN等预测模型。</strong></li>
<li>etherum的Casper protocol。以及关于debt和rent。债和租。是很有趣的话题，值得研究。</li>
<li>快手直播pk的发明。</li>
</ul>
<h2 id="2019-03-03">2019-03-03</h2><ul>
<li>要找到最简练的说法。很多知识点，现在学习的时候发现学通了，要去找到最好的说法。</li>
<li><strong>加密货币</strong>很有意思的。尤其是对在security规则的设计上面，其实就是达到了哈耶克想要实现的秩序设计。比如，不被发现，并不是指不能够被窃听到，而是，即便你能够窃听到，你也会花费大量的时间在破解上而显得不值得。【从效应上驳斥。哈耶克。使得人们都会尽可能去遵守规则】</li>
<li>或许我们都只是这个世界路过的一条广告。</li>
</ul>
<h3 id="Social_status_as_a_service">Social status as a service</h3><blockquote>
<p><a href="https://www.eugenewei.com/" target="_blank" rel="noopener">Remains of the Day</a></p>
<ul>
<li>对于社交网络来说，加入时间的早晚对你的要求是不一样的。早期的人是proof of work，晚期的人更多的是利用了已有的名气。一个人的社会名声是最容易转移的。reputation is transferable。</li>
<li>社交网络的关键点在于反馈。<strong>twitter做成功的地方绝对不仅仅是UGC content，用户发布的内容，而是转发retweet。这个假设在于：没有多少人在意你午餐吃的是什么，他们是被你的幽默，你的才能所吸引，而引爆twiiter改变的关键是leaderboard。而同样关键的是，你的用户会成为你引导的方向。</strong>，成熟期的twiiter，大部分用户都成为幽默、话术的精通使用者。</li>
<li>对于prisma的分析很老道：<strong>这个应用的主角是风格突出滤镜而不是个体，每个人的作品都太像了，没有proof of work的空间帮助用户区分自己以获得社会地位。</strong>，“The star is the filter, not the user, and so it didn’t really make sense to follow any one person over any other person. Without that element of skill, no framework for a status game or skill-based network  existed. It was a utility that failed at becoming a Status as a Service business.” <strong>而社交平台的作用是，不断去放大和凸显这种区分。</strong><br>这个分析角度同样可以用在抖音上，如果用户获取的内容大部分归结到同样的几首歌，会压缩用户proof of work的空间。也是为什么抖音成为了强运营的模式，因为其内容来源的局限性。</li>
<li>为什么那些积分、徽章、认证或者是皮肤是简单而有效的方式。</li>
<li>分析一个社交网站的三个维度是：社会地位，效用性和娱乐性。</li>
<li>两个基础论点：<ul>
<li>人们是追求社会地位的动物。（这一点解释了为什么一些社交网络成功了而另外一些失败了）</li>
<li>人们遵守并追求效益最大化的路径。（这一点解释了为什么年轻人喜欢ins，而不是twitter，因为获得效益的难度不一样）、（这同样有另一层暗示，任何给用户效益设置上线的行为可能取得反面效果）</li>
</ul>
</li>
<li>作者也提到了抖音：<ul>
<li>算法分发，最大限度的区分了内容提供商的层级。同样也是的<strong>评价作品的好坏的标准，最大限度地贴合了作品本身的质量，而不是作者的人气。</strong></li>
</ul>
</li>
<li>作者提到另外一点：对于图状的社交平台来说，平台越大更容易出现赢者通吃的局面。“This development is interesting for another reason: graph-based social capital allocation mechanisms can suffer from runaway winner-take-all effects. In essence, some networks reward those who gain a lot of followers early on with so much added exposure that they continue to gain more followers than other users, regardless of whether they’ve earned it through the quality of their posts. One hypothesis on why social networks tend to lose heat at scale is that <strong>this type of old money can’t be cleared out, and new money loses the incentive to play the game.”</strong>，可以说，快手和抖音都是在试图解决这个问题，只是他们分别设置的threshold不一样。</li>
<li>作者提出了对于评估社交平台的几个重要指标：<ul>
<li>time to X followers.</li>
<li>ROI on posts for new users. (关于retention &amp; churn)</li>
</ul>
</li>
<li>而换句话说，social status，就是流量。而平台定义的就是设计流量分发的规则。</li>
<li><strong>很多时候，抄袭特征是或是抄袭功能是不够的。除了常见的原因之外，还有的是，功能很多时候是和规模息息相关的。</strong></li>
<li><strong>Story是一个很好的产品创新，在于其尝试去解决社交压力。有没有注意到ins上的stories的排序，是和你交互最相关的，你几乎不会看到你不互动的人的动态！因此发布的人可以更加随心所欲的发布。</strong><br>“Stories, by putting the onus on the viewer to pull that content, allows everyone to publish away guilt-free, without regard for the craft that regular posts demand in the ever escalating game that is life publishing. In a world where algorithmic feeds break up your sequence of posts, <strong>Stories also allow gifted creators to create sequential narratives.</strong>”</li>
<li>分析问题的另一个思路：问题出在了生产者还是消费者一端。</li>
<li>“We have a generation now that has been trained through hundreds of thousands, perhaps millions of social media reps on what engages people on which platforms. In our own way, we are all Buzzfeed. We are all Kardashians.”</li>
<li>“You had my curiosity, but now, under the algorithmic feed, you have to earn my attention.”</li>
<li>“but let’s be honest, the incentives to lower interest rates on social capital in all these networks, given their goals and those of their investors, were just too great. If one company hadn’t flooded the market with status, others would have filled the void many times over.”<br><strong>宏观的角度：当大家都在争相绑定社会地位的时候，也是social status降息的时候。同时也是社会地位转移形式的时候。</strong></li>
<li>作者解释：为什么年轻人喜欢用社交网络，因为这里是一个新的战场，成年人已经有很多途径来建立自己的社会地位，比如通过职位，教育经历，成就等等，但是年轻人一无所有，在社交平台上拥有地位是他们能够达到的最有效的方式。<br>这里有舞台和漂亮的灯，可我并不想站上去。</li>
<li>很多人不这么做不是因为他们不想，而是因为这对他们没那么有利。效益论。</li>
<li>如果你的服务是免费的那么获取你创造价值的最佳选择就是拥有一个市场让价值能够在那里得以实现和交换。<br>对工具需要进化到社区的一个argument：价值留存。</li>
</ul>
</blockquote>
<h2 id="2019-03-01">2019-03-01</h2><ul>
<li>你失望的样子，像飘落的雪。</li>
<li>慢慢发现自己的名字也会出现在别人的博客里。很奇妙的感觉。留下痕迹，说的就是这个意思吧。</li>
<li>【观察】不止一次碰到反馈，在头条号发的文章的阅读量比在公众号要高。思考下智能分发。</li>
<li>国内youtube是不是还是空白。b站？最好用的视频托管平台，压缩算法。</li>
<li>视频搜索。<blockquote>
<p>依旧是这个观察，比如我想了解蛋白粉，我会发现在youtube上的答案呈现的更加完整。</p>
</blockquote>
</li>
<li>按照张小龙的思路去理顺快手电商的做法。你的影响力的归途并不是将一个你自己都不信的东西卖给你的粉丝。</li>
<li>深度社区的集合（以虎扑、豆瓣为代表的“公共社区”）。中国amino。应当有即刻作为辅助工具。</li>
<li>平台：依赖的是用户规模，垂直。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[The journey is the reward. -《乔布斯传》阅读批注]]></title>
      <url>http://chocoluffy.com/2019/04/05/The-journey-is-the-reward-%E3%80%8A%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<p>我答应自己在毕业前要看的几本书。 其中有《乔布斯传》和《堂吉柯德》。</p>
<p>我想，教育，以及独特的经历在达成这样的目的：<strong>有一个坚定想要的东西，不会因为生活巨大的震荡所干扰。</strong></p>
<p>而人的一生，也不过是通过漫长的道路，重新发现那两三个简单却丰盛的词语。然后从它们出发，去观察整个世界。</p>
<p>The journey is the reward. </p>
<p>以及我曾经在日记里写下的，不依赖理性而获得希望。</p>
<h2 id="Apple_II">Apple II</h2><ul>
<li>你永远不知道是哪些经历改变了你。是哪些美好的回忆。乔布斯的父亲是一名机械工，<strong>即便是没有人看到的背面，也要尽心尽力。</strong></li>
<li>黑塞。在他能够欺骗他父亲的时候。整个世界就变了。</li>
<li>“不同的宗教，像是通向同一个房子的不同的门。”</li>
<li>要愿意把自己交出去。无论是名誉、身份还是利益。要让同伴感受到被信任。“如果他认为某件事情应该发生，那他就会尽力让他发生。”</li>
<li>乔布斯追求极简产品主义的来源：在雅达利公司的时候游戏说明书非常简练，“投入硬币，躲开克林贡人。”</li>
<li>一定要多去参加业界最前沿的讨论会。沃兹在家酿计算机俱乐部(homebrew computer club)里见到了Altair第一台个人计算机，其实是一块微处理器，他想到了他一直想设计出来的终端机和带有处理器的小型机的个人电脑方案，也就是未来的Apple I。</li>
<li>homebrew computer club: 精神是交换和分享，而不是做买卖。这是黑客伦理的体现：信息应该是免费的，也不能迷信权威。</li>
<li>比尔盖茨在完成了Altair的BASIC语言编译器后，被club里的成员复制了编译器并相互分享，他认为应当付费。</li>
<li>乔布斯开始说服沃兹把Apple I的想法商业化，卖这些电路板出去。他知道如何说服沃兹。赚不到钱没有关系，这一定会是一次有趣的经历。“即便我们赔了钱，我们也能拥有一家公司。”</li>
<li>过程中很关键的一个节点，韦恩和乔布斯说服沃兹把电脑设计归为苹果公司所有。他的理由是，一个伟大的工程师，只有和一个伟大的营销人员合作，才有可能被世界所铭记。里面同样一个插曲，沃兹其实和惠普报告了他的设计的，但是惠普公司觉得这个属于业余爱好者的玩具。</li>
<li>在home brew club里，从沃兹和乔布斯的讲话中能够感受得到他们的出发点。沃兹介绍了各个部件的发明，乔布斯则是说：“苹果的产品和Altair不同，所有的关键部件都已经内置在机器中了。他问了大家一个问题：人们愿意花多少钱来购买这么一台完美的机器？”</li>
<li>沃兹的父亲曾经发出过质疑，认为乔布斯并没有创造任何东西，大部分贡献都来自于沃兹。但是沃兹清楚地知道乔布斯的作用，没有他，沃兹可能还在免费地发放自己设计的电路板的原理图。</li>
<li>雅达利的奥尔康是一个很关键的人物。乔布斯曾经的上级，在未来很多场景里给乔布斯搭桥引线到他需要的人物。</li>
<li><strong>学会请求建议。即便与这个人的对话会失败，但可能他可以给你带给更重要的人。</strong>在投资人见到乔布斯并要求他们必须找到一个合作伙伴，要会销售以及商业计划的时候，乔布斯说：<strong>“给我三个推荐人选吧。”</strong></li>
<li>迈克马库拉。和乔布斯以及沃兹各持26%的股份。</li>
<li>乔布斯又一次扭曲了现实：在说服沃兹全职加入苹果公司的时候。他联系沃兹的家人、朋友来说服他。</li>
<li>马库拉向乔布斯传授的经验，苹果的营销哲学：<ul>
<li>empathy，共情。</li>
<li>focus，专注。</li>
<li>impute，灌输。人们的确会以貌取物。我们也许有最好的产品，最高的质量，最实用的软件等等，但如果我们以一种潦草马虎的方式来展示，顾客就会认为我们的产品也是潦草马虎的。要以创新的、专业的方式来展示产品。</li>
</ul>
</li>
<li><strong>苹果的公关是怎么找到的：乔布斯喜欢英特尔公司的广告设计，他直接致电英特尔询问他们的广告设计方，虽然经常被打发走，但是乔布斯几乎每天都会打来电话，直到设计方妥协来会面。</strong></li>
<li>Simplicity is the ultimate sophistication。Apple II。</li>
<li>乔布斯预定了第一届电脑展览会最前端的位置，要用最盛大的方式来发布Apple II。</li>
<li>为了说服他加入，给一个程序员寄了一张不可退票的机票。</li>
<li>施乐公司。Alan Kay，“预见未来最好的方式就是亲手创造未来”， “对待软件严肃认真的人，应该制造自己专属的硬件。”，也是施乐的工程师，开始思考取代电脑屏幕上的命令行和DOS提示符，并把桌面的概念应用到屏幕上。屏幕上会有很多文件和文件夹，用户可以用鼠标指向并点击自己想要使用的内容。<blockquote>
<p>我可以想象得到从Apple II到图形界面的转变。</p>
</blockquote>
</li>
<li>图像用户界面，GUI，也收到了施乐在当时另一个前锋概念“位图显示”的推动。它使得屏幕上每一个像素都是由电脑内存控制的，包括像素的明暗，能够支持图像，字体等效果。当时施乐的秘密项目，基于位图显示和图形界面的电脑样机，以及面向对象的编程语言SmallTalk。苹果允许施乐投资自己，于此同时要求向苹果展示其新技术。</li>
<li>学会关注敌方阵营的优秀人才。给他们想法，告诉他们在创造一个新的东西。尤其是当他们在被糟糕的将领，糟糕的商业决策管理的时候。这是挖角的最好时期。</li>
<li>尤其关注<strong>协调能力</strong>。推动一个事情完成，尤其是个人难以完成的项目，一定是需要协调的。</li>
<li>乔布斯25岁的时候苹果公司上市。面对他公司里出现的很多百万富翁开始过上稀奇古怪的富人生活，他说，“我答应过自己，不会让钱毁了我的生活。”<blockquote>
<p><strong>读书，帮助你可以更清晰地梳理自己，也更清醒地面对自己的命运，去接受那个可能不会更好也不会更糟的生活本身，并尝试做出改变。</strong></p>
</blockquote>
</li>
</ul>
<h2 id="Macintosh">Macintosh</h2><ul>
<li>乔布斯说“这是狗屎”，其实他想说： <strong>“这不是最好的方式。”</strong></li>
<li>乔布斯希望mac占地很小，扔了一个电话簿出来，说，mac和桌面的接触面积不应当超过这个电话簿的尺寸。</li>
<li>工程师提出了一个新算法能够画出圆形和椭圆。大家都说很好，乔布斯说：圆角矩形怎么样。然后说服了他。</li>
<li>45名mac的工程师的名字刻在没有人看到的电脑主板内部。这是一件艺术品。</li>
<li>整版广告：welcome IBM. seriously.</li>
<li>乔布斯主导的macintosh和曾经被逐出管理权的lisa项目之间有产生了冲突。lisa提早一年发布，而macintosh不兼容lisa以及apple II的软件。</li>
<li><strong>过程就是奖励。(The journey is the reward)</strong>即便是面对团队，也要给他们准备one more thing。</li>
<li><strong>当海盗，不要当海军。</strong></li>
<li>斯卡利，来自百事可乐的营销人员。</li>
<li>1984年。在展示中，乔布斯拿出了那个很经典的对比：电报和电话。许多人希望在大家的桌子上放上各式各样的电报，但电话let you sing, let you express the way you want。 我们要做电脑时代的电话。<a href="https://www.youtube.com/watch?v=1tQ5XwvjPmA" target="_blank" rel="noopener">视频：Steve Jobs Introduces the Macintosh.</a> </li>
<li><strong>想做一个富有创造性的人，就不能太经常回顾过去。无论过去是怎么样子的，都必须心甘情愿地接受，并将一切抛诸脑后。</strong></li>
<li>Macintosh的市场表现并不好，只有128k的内存，没有内置硬盘，风扇，导致零件经常过热而失灵。</li>
<li>1985年乔布斯被董事会免去了将近所有的行政职责。他喜欢和知识渊博的人交流，在经历了欧洲之旅，苏联之旅以及和生物诺奖教授交流之后，他决定新开一个公司，召集了5个曾经的苹果的员工，在教育领域，制造能够支持更强大计算能力的个人电脑。<strong>他自由了。结果是一些列炫目的产品，但都遭遇了市场失败的重挫。他后来巨大的成功，并非因为在苹果的下台，而是下台后华丽的失败。</strong></li>
</ul>
<h2 id="NeXT">NeXT</h2><ul>
<li><strong>所谓的扭转现实的能力，不过是一次又一次的争取。</strong></li>
<li><strong>以及一定要找到最好的人，最好的设计师，最合适的材料来做出世界级的标识。</strong>他说服了兰德给他设计Next的标识，他也说服了艾斯林格的Frog工作室停止与苹果合作并转而和Next合作。</li>
<li>乔布斯在NeXT一开始投入了700万美元，但只有了优雅的标识和时髦的办公室，没有产品，卖友营收，进入1987年。直到佩罗投入了2000万美元。</li>
<li>乔布斯和比尔盖茨的不同在于，是在基本理念上，是否应该做兼容的产品。乔布斯看好硬件和软件集成的端到端一体化的系统。</li>
<li>1985年乔布斯个人出资1000万美元入股了Pixar。他预想到，随着个人电脑的计算能力的增强，电子图像和动画会是最大的获益者。他说，“硅谷的人不尊重好莱坞的创意特质，而好莱坞的人则认为技术人员是那些只需要雇佣而不需要见面的人。”<blockquote>
<p>起因是因为朋友知道乔布斯喜欢艺术方面的灵感，于是带着他去认识了pixar的负责人们。</p>
</blockquote>
</li>
<li>与迪士尼的合作，让皮克斯获益。拉塞特，在迪士尼工作不畅，在皮尔斯做出的动画电影使人眼前一亮。<strong>要让最适合的人，拥有最大的发挥空间。</strong>在资金短缺的情况仍然给拉塞特拨款，tin toy成为了首个获得奥斯卡最佳动画短片的电脑制作动画。</li>
<li>乔布斯在皮克斯时期犯下的错误是，他认为普通消费者会喜欢用皮克斯的软件来制作3D图形。他直觉上的先见之明是，让艺术和数字技术融合。</li>
<li><strong>决定一个领导人的关键特质：极强的控制欲。然后这家公司便会逐渐成为他审美的模样。</strong></li>
<li>乔布斯回忆时说，“命运似乎诱骗我去做这件事，而这也许是为了把它做的更好。”</li>
<li><p>乔布斯认为有一个理想的统一的美的标准，人们应该被教育。<strong>包豪斯运动</strong>。</p>
<blockquote>
<p>包豪斯艺术风格：</p>
<p>形式追随功能。不是为了艺术而艺术，去掉多余的装饰。 </p>
<p>设计是为大众服务的，而不是为少数权贵服务的。</p>
<p>使用原材料的，而不经过过多的加工。</p>
</blockquote>
</li>
<li><p>在皮克斯和迪士尼合作的时候，乔布斯深深地感触到如何要有对自己的控制权。他决定，在「玩具总动员」发布的时候，皮克斯也要上市。<strong>他清楚，皮克斯需要钱，然后依次为筹码和迪士尼重新谈合同。</strong></p>
</li>
<li><strong>乔布斯创造了他那个时代最好的两个品牌：苹果和皮克斯。</strong></li>
<li>NeXT逐渐在转型成为一个软件公司，他们授权他们的企业软件被安装到不同的硬件平台上。但乔布斯清楚，这让他很沮丧。</li>
<li>windows用几年的时间模仿macintosh的图形用户界面，在1995年的windows 95上成为了有史以来最成功的操作系统。</li>
<li><strong>当竞争对手热烈地想要合作的时候，你要知道你已经站在了陷阱边缘。</strong></li>
</ul>
<h2 id="Comeback">Comeback</h2><ul>
<li>叶芝《再度降临》，“何等野兽，终于等到它的时辰。”</li>
<li>1997年。当苹果董事会重新邀请乔布斯回去出任CEO的时候，乔布斯犹豫了，他还在皮克斯当CEO，他问周围皮克斯的股东们，他们回应说，“史蒂夫，我才不在乎苹果会怎么样。”而乔布斯愣住了，他也才发现，他是在意苹果的存在的。</li>
<li>没有平庸的产品。要么是英雄，要么是垃圾。</li>
<li><strong>你要知道什么时候直接了当地表达自己的情绪。让自己毫无保留地相信一件事情，也是最精湛的欺骗。</strong>乔布斯重新登上舞台的那一天，他说，“告诉我这个地方出了什么问题”，他说，“是产品出了问题！”，“那么产品出了什么问题？”，“产品糟透了”，“它们不再性感了。”</li>
<li>【说服的艺术】”诸位，如果你们不愿意这样做，我下周就不回来上班了。因为我将面临成千上万个比这个困难得多的决定要做，如果你们在这样的决定上都不支持我，我注定会失败。所以如果你们不批准，我就辞职，你们可以怪到我的头上。“</li>
</ul>
<h3 id="1997年的Macworld">1997年的Macworld</h3><blockquote>
<p>主角和重心永远在于苹果，永远不要喧宾夺主让合作商分心。无论观众是对微软作为合作伙伴的出现是欢呼还是倒喝彩，一定要牵回来。乔布斯演讲的重心在：status report。苹果到底出了什么问题，以及<strong>更重要的，振奋人心。</strong></p>
<ul>
<li>apple become irrelevant.</li>
<li>cannot execute.</li>
<li>anarchy, cannot manage.</li>
<li>乔布斯回应，苹果在某些领域仍然extraordinary relevant。it execute wonderfully on some wrong ways。有很多很强的人在苹果，但是结果不好是因为计划不好。至于anarchy的理论，不，他觉得不是这样的。苹果里面的人依旧愿意，甚至非常希望跟随good strategy，但可惜的是这样的策略一直没有出现。<strong>将外界的猜测直接揽到了苹果的管理层上面，保护了苹果的工程师，他们依旧是很出色的人，但是苹果需要更加出色的领导者。</strong></li>
<li>直面地承认对手的好，但是要承诺我们会更好。 虽然很多creative content的从业者选择了macintosh，但是其实其中很大一部分都可以选择adobe的photoshop来完成，这是一个很强大的工具。你还记得上一次苹果和adobe很紧密地联系在一起，以及你还记得上一次我们跑到adobe那里说我们怎样可以制造一个电脑来使得photoshop更快。这些没有像它应该发生的那样发生，我们接下来会重点关注这一块。</li>
<li><strong>这是这次大会最经典的话：我们必须摒弃一种观念说，当苹果赢的时候，微软必须输。我们必须拥抱一个观点：当苹果赢的时候，是因为我们自己完成的很好。如果有人愿意帮助我们，那是极好的，因为我们需要那些帮助。但是如果我们把这些搞砸了，那不是别人的问题，而是我们自己的问题。</strong></li>
<li>apple is the largest education supplier company.</li>
<li>apple and microsoft combined takes 100% of desktop industry.</li>
<li><a href="https://www.youtube.com/watch?v=PEHNrqPkefI" target="_blank" rel="noopener">视频：Macworld Boston 1997-Full Version</a></li>
</ul>
</blockquote>
<ul>
<li>🌟【说服的艺术】 1997年MacWorld，乔布斯第一次代表苹果重返舞台。<strong>如何利用战争。不要让他很快的停止，只要让他们陷在战争里就行。以及清晰地了解到，战争也能够成为一种很有利的筹码，因为大家都希望结束战争。</strong>乔布斯给比尔盖茨打电话说，“微软在侵犯苹果在图形界面上的专利，如果我们继续打官司，几年之后苹果可以拿到10亿美元的罚金，这一点你知我知。但是那样的话，苹果反而撑不到那个时候。所以让我们想想如何立即解决这个争端。我所需要的是微软承诺继续为mac开发软件，并且微软向苹果投资，这样微软也能从苹果的成功中获益。”，最后微软同意向苹果投资1.5亿美元，换取无投票权的股份。</li>
<li>在盖茨的形象在屏幕中出现的时候，观众倒了喝彩。乔布斯即兴地安抚了观众，“如果我们想进步并看到苹果好起来，我们必须放弃一些东西。我们必须放弃这种如果微软赢苹果就必须输的观念。我想，如果我们希望在mac上使用微软office，我们最好还是对开发它的公司表达一点儿谢意。”<blockquote>
<p>不是所有拥有扭曲现实能力的人，都对产品的完美有着这样的忠诚。</p>
</blockquote>
</li>
</ul>
<h2 id="Think_Different">Think Different</h2><ul>
<li>品牌形象从来不是一系列突出产品的广告。<strong>创意目的并不是赞美计算机可以做什么，而是赞美富有创造力的人们在计算机的辅助下可以做什么。这不是在说处理器速度或者是内存，而是在说创造力。它的目标受众不仅仅是潜在的顾客，还包括苹果自己的员工。我们部分的员工已经忘记了自己是谁。要回想起自己是谁的方法之一，就是要想起你的偶像是谁。这是这次think different宣传活动的缘起。</strong></li>
<li>think different的广告。是用乔布斯的声音还是用德莱福的声音。乔布斯说“如果用我的声音，人们发现后会觉得那是关于我的广告。可那不是，那是关于苹果的。”乔布斯带他的广告制造人员去看每一个苹果的新品制造。</li>
<li><strong>知道自己在说什么的人，不需要powerpoint。</strong></li>
<li>在苹果公司创立之初，乔布斯首先确定了mac电脑的外壳，工程师们才依次制造合适的主板和原件。</li>
<li><strong>学会重来。乔布斯所做的每一件漂亮的事都曾有过返工的时候，当他觉得不够完美时，就会重来。</strong>如果你发现有些事做得不对，你不能只是忽略它，然后说以后再处理，这是其他公司的做法。<strong>很多时候关于体验的创意来自于不同行业的不同地方。在设计苹果店的genius bar的时候，去让每个人描述自己享受过的最好的服务，然后从那里入手开始观察。</strong></li>
<li>带最有价值的员工外出集思会。确定十大最应该做的事，然后把最后七件全部划掉，“我们只能做前三件”。</li>
<li>2001年，<strong>苹果战略：个人计算机不会成为边缘化的副线产品，而将成为一个数字中枢。</strong>，<strong>中枢的意义在于，你在这个地方进行相同活动的价值，大于你单独操作。</strong>，乔布斯说，<strong>“因为能够在imac上操作，使用imovie，摄像机的价值增加了100倍。”</strong>，类似的说法在ipod时期也出现了，<strong>因为itunes的存在，你音乐文件的价值增加了100倍。</strong><blockquote>
<p>很多时候要看准平台的上限。你在赌这个东西未来会不会成为人们生活的核心，甚至你要努力让它成为核心。</p>
</blockquote>
</li>
<li>科技都是会过时的，但是对科技和人性本质的理解不会过时。这就是为什么要站在人文和科技的交叉点上。</li>
<li>在adobe拒绝为apple提供专业领域的软件的时候，乔布斯坚定了他的决心：对一个系统中的所有关键元素实施端到端的控制。</li>
<li>🌟有意思的是，其实个人计算平台的演化也是从中心化逐渐过渡到去中心化的。那个时候乔布斯认为，当个人计算机成为了中心，可以使便携式设备变得更简单。<strong>苹果也是唯一一家提供整合方案的公司，硬件、软件、操作系统。苹果能够为用户体验负全部的责任。</strong><blockquote>
<p>人们很容易抗拒这一点。</p>
<p>怎么理解这个，“感受是私人的，审美也是私人的。而乔布斯为什么认为存在一种美的标准？”；回答：<strong>因为本身市场买卖这个过程就不是私人化的，你能接触到的每一个产品都在强制、单向地输出着它代表着的审美观。而审美的判断是在这个市场化的过程中产生的。乔布斯希望给消费者提供相对更好的体验。</strong></p>
<p>问题二：什么情况下迎合能够得到更好的效果，比如今日头条的资讯流？而什么时候输出更高的审美品味能够得到更好的效果？<strong>这里要分清楚两个概念，内容的迎合还是体验的迎合。而我们希望哪一种优势更难以复制。</strong></p>
</blockquote>
</li>
<li>每次团队觉得已经考虑很周全了，乔布斯会说“你们想过这个吗？”。</li>
</ul>
<h2 id="iPod_&amp;_iTunes">iPod &amp; iTunes</h2><ul>
<li>乔布斯在ipod上的一个做法：<strong>限制功能</strong>，比如在ipod上制作清单的功能是不需要的，可以在电脑上来做。而同类竞品rio则不得不通过复杂的功能在硬件上实现。<blockquote>
<p>这同样受益于苹果端到端的控制。</p>
</blockquote>
</li>
<li>同时乔布斯要求，ipod上不能有开关键。开关键是没有必要的。</li>
<li><strong>阻止盗版的最佳办法：提供一个比盗版服务更加吸引人的选择。</strong></li>
<li>【说服的艺术】“你们合作了这么久解决了什么？他们解决不了任何问题，你可以看看这里，我们有整合的方案。”</li>
<li>【说服的艺术】<strong>他会同意一些事，但永远不会实现。他会把你设进一个局，然后置之不理。</strong></li>
<li>itunes的成功带来了另一项微妙的好处，即用户的在线身份和支付信息。itunes于是可以很轻易地进入其他电子信息的分发，比如杂志出版商，应用程序以及视频等。</li>
<li><a href="https://www.youtube.com/watch?v=MTs5pOn7XFU" target="_blank" rel="noopener">视频：Every Apple iPod Ad ever. (2001-2012)</a> 其中ipod shuffle: “put some music on“很惊艳。</li>
<li><a href="https://www.youtube.com/watch?v=12bjWBZKd30" target="_blank" rel="noopener">视频：Macworld San Francisco 2005 The iPod Shuffle Introduction</a></li>
<li><strong>entry product &amp; professional product。entry product的意义在于扩大市场，让更多曾经不是这个市场的人进入这个市场。比如ipod shuffle。</strong></li>
<li>乔布斯说，商业界有个理论是，“第二个产品综合症”，症结在于对第一个产品的成功缺乏理解。</li>
<li><strong>专注。给苹果树剪枝。</strong></li>
<li>在古罗马，当胜利的将军凯旋时，传说会有一个仆人，在他身边重复“死亡警示“。意思是，记住你终将死亡。必死的警示有助于英雄们正确地看待事物。</li>
</ul>
<h2 id="iPhone_&amp;_iPad">iPhone &amp; iPad</h2><h3 id="Steve_Jobs和Bill_Gates同台">Steve Jobs和Bill Gates同台</h3><ul>
<li><a href="https://www.youtube.com/watch?v=x7qPAY9JqE4" target="_blank" rel="noopener">视频：Steve Jobs Introducing The iPhone At MacWorld 2007</a></li>
<li><a href="https://www.youtube.com/watch?v=wvhW8cp15tk" target="_blank" rel="noopener">视频：Steve Jobs and Bill Gates Together at D5 Conference 2007</a> </li>
<li>看产品的不同角度：微软看到的是各式各样的电脑厂商，他们希望搭建软件可以在这些厂商的硬件上运行。苹果看到的是消费者市场，当时没有一个电脑厂商可以提供端到端的体验。</li>
<li>问题：未来5年的设备会有什么改变。盖茨提到了很多很准确、实用的角度，比如导航、电子钱包等应用以及投影、柔性屏等设备上的进步。乔布斯则是回答“不知道”，设备里的体验大多是根据当时的消费者市场而来的，而当时大部分的需求是通讯，以及小部分的娱乐。</li>
<li><p>未来的电脑形态：盖茨提到了3D。3D是管理安排事情的一个形式。就好像你走进图书馆，你看到书本整齐地排列好。</p>
</li>
<li><p>ipad的想法先于iphone出现，并且帮助塑造了iphone。</p>
</li>
<li>iphone使用的康宁金刚玻璃其实很早就停产了，乔布斯一再拒绝接受康宁CEO的说法，最后在6个月时间内竟然做到了。</li>
<li>iphone一开始是将屏幕玻璃嵌入在外侧的金属外壳里，但是乔布斯觉得这样不好，屏幕显示是重心，因此要重新再设计一遍。</li>
<li>itunes和ibook面对的音乐和图书市场使用了两种不同的策略。itunes是每一首歌都分拆，以0.99$的价格，因为苹果是第一个尝试整合的公司。但是图书领域苹果不是第一个，同时先行者亚马逊搞砸了使得图书出版商强烈抵制。于是苹果采用代理制的模式，出版商可以随意定价，然后苹果提成30%。<strong>接力使力。借助这些图书出版商的抱怨来促成一些事情。</strong></li>
<li>乔布斯对于报纸行业的观点，“<strong>现在的核心问题不是自由派和保守派，而是破坏性和建设性</strong>，而你们却和具有破坏性的人同流合污。福克斯已经成为我们社会一个非常具有破坏性的力量。”</li>
</ul>
<h2 id="结尾">结尾</h2><ul>
<li><strong>创新者的窘境。发明某个事物的人往往是最后一个看到它过时的。</strong></li>
<li>开放还是封闭。乔布斯给苹果留下的端到端的控制有一个很重大的作用，就是<strong>推动改变</strong>。icloud这种将云端作为数字中枢的概念不是苹果所独有的，亚马逊和微软在2011年左右同样宣告了这个概念，但是唯有苹果，在控制了这个产业链上的每一个环节：电子设备，计算机，操作系统以及应用软件，只有苹果能够无缝衔接推动这项功能落地。</li>
<li><strong>政治在和你讨论一样东西它能不能做成，但是我们其实更应该讨论的是，它应不应该做成。</strong>反对者会和你说，根据什么什么法案，这做不到，要让这个通过这个党派，这做不到。但是他们从来不和你讨论，我们到底应不应该去做，我们应不应该推动全民医保，抑或是禁枪法案等等。</li>
<li><strong>理解的语序是关键，我们采用封闭的环境不是因为我们是控制狂，而是因为我们愿意为用户全部的体验负责。</strong></li>
<li><strong>我的责任是当事情搞砸了的时候说实话而不是粉饰太平。要清楚的知道现在是改革期还是维稳期。会小心不去伤害别人的领导者，在推动变革的时一般都没那么有效。</strong></li>
<li><strong>创新本身并不是我事业最主要的与众不同的东西，苹果之所以能够与人们产生共鸣，是因为在我们的创新中深藏着一种人文精神。</strong></li>
<li>有一种人，把自己称作企业家，实际上真正想做的却是创建一家企业然后把它卖掉，却不愿意费力气打造一家真正的公司，而这才是商业领域里最艰难的工作。</li>
<li><strong>这是我在试图创建的文化：我们相互间诚实到残酷的地步。任何人都可以跟我说，他们认为我做的就是一堆狗屎。而我也可以这样说他们。</strong></li>
<li><strong>我的动力是什么？我没有发明我用的语言与数学，我的食物基本都不是我做的。我所做的每一件事都有赖于我们人类的其他成员，以及他们的贡献和成就。我们试图用我们仅有的天分去表达我们深层的感受，去为历史长河加上一点什么，那就是推动我的力量。</strong></li>
<li>如果你积累了所有的这些经验，可能还有一些智慧，然后这些就这么消失了，会有些怪怪的。所以我真的愿意相信，会有些什么东西留存下来。但是另一面，也许就像一个开关一样，啪，然后你就没了。也许这就是为什么我从不喜欢在苹果产品加上开关吧。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VC Day项目观察]]></title>
      <url>http://chocoluffy.com/2019/03/31/VC-Day%E9%A1%B9%E7%9B%AE%E8%A7%82%E5%AF%9F/</url>
      <content type="html"><![CDATA[<p>近期我参与到了Cornell Tech组织的VC day，并代表Firis团队做了公开pitch。这篇博客作为我参与流程中的观察和思考。</p>
<p>能够在多名重量级VC面前实打实地pitch是一次很宝贵的锻炼机会。90秒时间，到时间强制打断，只有三张slides的展示机会。基本钉死了要我们剥离出这个产品最重要的东西。</p>
<p>不同的产品在准备故事的时候有不同的侧重点。</p>
<p>ToC的产品复杂的从来不应该是产品逻辑本身，毕竟如果光是产品的玩法都要介绍那么久，不直观，那么这本身就限制了其消费者市场的增长。ToC的产品重点应该放在需求和市场，去证明增长的潜力。</p>
<p>应当承认的是，投资人对不同类型的产品期望是不同的，很多情况下心里有一把杆子来衡量产品的「Growth」和「Profit」。ToC的产品在大部分情况下是侧重Growth的一面，可以承受短期的亏损，但是用户增长和留存必须好看，而ToB的产品则更侧重Profit的一面，是否从一开始就存在清晰的盈利模式。</p>
<p>目前我的一个观察是，当今其实很多的ToC的产品，实际上是做BtoC而不是CtoC。这是一个可以理解的趋势，因为渠道的红利在慢慢饱和，尤其针对移动端市场而言。</p>
<p>渠道本身的发明是为了降低信息传递的成本。<strong>但当渠道两端信息增加并缺乏有效的匹配机制时，将最终提高整个市场的交易成本。</strong>于是演化出两个改善方向，一是利用更有效的匹配算法，另一个则是在两端逐渐形成中心化模块化的资源集合，为了节约交易成本<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。前者，是以今日头条、快手为首的算法推荐方向，后者，是以拼多多、云集微店为代表的B2C平台。</p>
<p>这也提供了一个观察现场项目的角度。以下是除了我们之外的其余项目的记录，列有项目名称，简介以及一个现场反馈的评分。加粗的项目为反馈较好的项目（也包括我们的Firis！）</p>
<ul>
<li>weARlope: AR glass for streaming video content. 6</li>
<li><strong>Xboard</strong>: machine learning deployment and platform for corporation. 10</li>
<li>Lightbox: animation production collaboration platform. 4</li>
<li>Figi: fashion comparison app. 4</li>
<li>Qix: squarespace for bitcoin, visualization for smart contract. 5</li>
<li><strong>Auggi</strong>: computer vision for congestive health. 8</li>
<li>Ludus: sports peers betting platform. 4</li>
<li><strong>Tamper</strong>: sports headphone without phone. 8</li>
<li><strong>Skyhawk</strong>: insurance for flight emergency. 6 </li>
<li>Wellconnect: 6</li>
<li>Halo: virtual gift card. 5 </li>
<li>Owly: digital parental monitor platform for parents. 3</li>
<li>Archetype: auto translate from one typeface into another. 3</li>
<li>Table: hosting and sharing dataset. 3</li>
<li>Nudget: initiate meaningful conversation by triggers with parents. 4</li>
<li>Elsewhere: personalized traveling experience. 3</li>
<li><strong>Otari</strong>: smart yoga mat using computer vision. 8</li>
<li>Corcus: financial market for contents. like patreon but in cryptocurrency. 6</li>
<li>Moon: bakery delivery.  6</li>
<li>Contentor: 2</li>
<li>Grow: a slack extension for personal progress tracking. 8</li>
</ul>
<p>听现场VC们的点评也能看得出一些常见的问题，尤其对于只有90秒的pitch时间，这个形式有其偏好和局限。</p>
<ul>
<li>不适合拥挤赛道的产品。比如fashion，以及e-commerce。</li>
<li>适合主打商业模式创新的项目。比如Uber for X。</li>
<li>投资人容易偏好新方向上的需求，比如机器学习toB的方案； Health Tech；以及运动方向的硬件。</li>
</ul>
<p>总结一下：</p>
<ul>
<li>表达上一定要找到最核心的东西。</li>
<li>而逐渐学习到怎样快速提炼出现象的本质，就是商业能力上的成长。</li>
</ul>
<p>期待一个月之后的第二场VC day！</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">科斯的公司形成的理论。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[技术的偏见 -《技术垄断》阅读批注]]></title>
      <url>http://chocoluffy.com/2019/03/30/%E6%8A%80%E6%9C%AF%E7%9A%84%E5%81%8F%E8%A7%81-%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<p>4.5/5星。 </p>
<p>有些时候我会很警惕被热烈拥护的主流观点，我不是在反对主流本身，而只是想看清楚我们会失去什么，和那些还没被说完甚至被刻意隐瞒的话。</p>
<p>这也是这本书观察技术进步史的角度。</p>
<p>工具带有偏见，也以偏见塑造着使用者。这很接近麦克卢汉的“媒介即信息”的理论，比如互联网这个媒介的普及，在改变着我们理解这个世界的方式，”真实“，”隐私“等词语的含义也远不同于过去的理解。</p>
<p>我有种感觉，工具提供着的某方面的便捷，也同时在消解着其成就繁荣的意义。比如，信息泛滥的时代，在贬低着信息的意义；煽动情绪的泛滥，在消解着情绪本身的严肃性。而消解意义，正是成为可交易商品的前奏。直到信息，情绪，乃至生活本身，都能够成为别人的消费。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<p>在18年的年终总结，“抵抗存在的被遗忘”<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，我从人的情绪本身出发，去观察媚俗。而波兹曼则再退一步，是工具的演化在逐渐塑造着人们的情绪。他说，要守护那些重要的故事和符号，成为一个忠诚的抗争斗士。我想这或许就是他的存在主义。</p>
<p>这个世界是喜欢魔法的。魔法的意义，在于将人们的注意力指向错误的地方，并通过这种做法，唤起我们的好奇心，而不是理解力。如果我们不假思索地接受新发明，到最后我们也只能完成工具能完成的事。就像我们习惯性地对这一群人说，到最后我们只能说出他们想听的话。</p>
<p>而讽刺的是，每个时代都会演化出那个时代伟大的声音，让受害者享受伤害，而放弃辩诉的权利。</p>
<p>我会记住来自波兹曼的提醒。技术从来不是必然的，也从来不是自然的，都带着某种计划、日程和哲学。也许能够提升生活品质，也许不能。因而技术需要监督、建议和克制。</p>
<ul>
<li>文字被创造出来的时候，曾经有人这么反对：<strong>能改善的只是回忆，而不是记忆。</strong><blockquote>
<p>这个是一个很有意思的担心，虽然结果错了，但是其思考的角度值得借鉴。重点在于改变了什么。文字的出现，其实改变了“知识”和“真理”的含义。知识不仅仅只存在在人们的脑海里，它可以保存在客观世界里，被传递。一个人的生活能够被记录下来。</p>
</blockquote>
</li>
<li>或许从结果来看，人文主义所抵触的技术主义的论断很多都是错的，“但我们总是需要一些反对的声音，来缓和狂热的大多数人所制造的混乱。”</li>
<li>“新事物需要新的词汇，而新事物同时也会更改旧词汇。”</li>
<li>最像人的人，会是由机器人训练出来的。</li>
<li>“利用新技术获得能力的人而成为精英人群中的一员，而不具备这种能力的人会高估他们的权威和声望。”</li>
<li>新工具，破除了传统的知识垄断。少说了后半句话，也能够形成难以破除的新型的垄断。斩下恶龙的勇士，也可能成为下一个难以被斩除的恶龙。<blockquote>
<p>【剧本】黑白契约，续。而很多情况下，输家在向赢家喝彩。曾经的奴隶主，用痛苦来剥削你，现代的奴隶主，用福利来剥削你。而他们选择改变\接受改变\（他们按下核弹按钮，甚至接受基因改造）的原因，一点儿也不是好奇心，也是报复。越是民主的国家，也能够找到这样一个形象来完成复仇。复仇那个高高在上的精英阶层，那些1%。</p>
</blockquote>
</li>
<li>狭义的说，“流媒体会宣告教师职业的死亡，因为学校是印刷行业的衍生品，其生死存亡取决于印刷业在这个事业的重要性。”。但广义的说，教师这个职业永远也不会消失，因为信息筛选和传授永远都有价值。</li>
<li>数字的局限性：偏好容易获得的数据；导致高估量化的标准而低估无法量化的标准。</li>
<li><strong>任何一个工具都存在观念上的偏见，会倾向于将世界构建成某种特定形态。</strong>互联网的存在，导致我们看世界的方式和前人有很大的不同，我们对“何为真实”这个问题的理解已不同于过去。</li>
<li>人们习惯性对这一群人说，到最后我们只能说出他们想听的话。同样地，如果我们不假思索地使用技术，到最后我们也只能完成工具能完成的事。</li>
<li>但同时，因为技术能够改变一切的能力，也会反哺人们去探究那些他们曾经认为不会改变的价值，比如：亲情、真实与善良。</li>
<li>技术服务文明 -&gt; 技术统治 -&gt; 技术垄断。<blockquote>
<p>技术统治文明：阻止信息流动的手段。<br>而技术垄断的阶段，则是上述阻止流动手段失效的阶段。<br>【剧本】那些我们发明出来却唾弃诅咒的事物，或许曾默默守护着我们很久很久。</p>
</blockquote>
</li>
<li>工具诞生的开始，是为文明服务的。是人们的信仰引导了工具的发明，并限制了工具的使用。普遍于中世纪，因为存在一个更为宏大的概念，也就是神学，统治着大家的思想，因此工具的作用范围是局限的。</li>
<li>马蹬的发明，造就了中世纪的骑士阶级。</li>
<li>“一个人思维的进步和生活状况的改善根本就是同一件事。”很多时候人的愤怒，妒忌，都是来自于自己对生活预期的偏差，而这种偏差往往无辜，因为思维的局限性而导致受到其他人经历的干扰。要学会自己去调节这个预期。</li>
<li>培根提出了四种假象：<ul>
<li>族类假象：使我们误以为知觉可以等同于自然的真实情况。</li>
<li>洞穴假象：使我们听信源自前人和周围环境的错误观点。</li>
<li>市场假象：使我们被言辞所迷惑。</li>
<li>剧场假象：是我们受到哲学家的教条的误导。</li>
</ul>
</li>
<li>“19世纪最伟大的发明正是发明这种想法的本身。我们已经学会如何发明新的事物，但是为什么要发明这些事物，却显得不那么重要。人们相信，只要是能做的，就应该把它做出来。”<blockquote>
<p>【剧本】而讽刺的是，每个时代都会演化出那个时代伟大的声音，为统治的繁荣辩护。</p>
</blockquote>
</li>
<li>“宗教信仰让这个世界不再有意外事件发生，让人们在理论上能够理解各种事情，这也是宗教无可替代的地方。“这个比喻很精彩，给你一盒崭新的牌，如果前10张牌是从黑桃1到10，那个下一张牌你会觉得是黑桃J，但是一旦给你洗牌了，你就不会再相信下张牌的预期了。而中世纪的教堂的作用，就是在维护牌堆的合理顺序。直到伽利略出现，把牌堆重新洗过。</li>
<li>教育机构的激增，导致信息需要规范化、批量化管理，信息、知识需要组织、限制和区别对待，也导致了可以将信息流动的某些部分合法化，同时限制其他部分。</li>
<li>什么叫，双刃剑。破除了传统权威的工具，同样能够成就更坚固的新型权威。</li>
<li>🌟 一样东西演化的过程，是逐渐脱离其语境的过程。(context)。也即变得越来越独立。文字一开始存在在书本里，是具有很强的目的性和语境的，直到电报的出现，创造了“不受语境约束的信息”，于是信息的价值不需要与其在社会和政治的决策和行动中所服务的功能捆绑在一起。<strong>电报使信息成为一种商品，一种不需要考虑其用途和意义就可以自由买卖的物品</strong>。“在电报发明后的两年内，报社的命运不再取决于新闻报道的质量和有用性，而是取决于报道的数量和速度。”<blockquote>
<p><strong>直播使生活成为一种商品。</strong>慢慢生活也会脱离它的语境。直播让我们间断性质地瞥入一个人的生活。自由买卖的生活是什么意思，或许是去订制观看一种精心设计过的特殊体验。这些对我们的影响是，我们对自己生活的感受力会迟钝吗？</p>
<p>而失去语境的后果是，也失去了它一开始的力量。<strong>我们失去了这些符号，这些故事的意义。</strong></p>
<p>而任何文化都需要故事，需要它存在的意义。</p>
<p>如何抵抗？我的想法在年终总结里提到过，要保持感受、看见和理解的能力。</p>
<p>而尼尔波兹曼也给出了他的思路：成为一个忠诚的抗争斗士，守护着那些重要的故事和符号。</p>
</blockquote>
</li>
<li>我自己的一个变化，大学时候刚开始搭建博客，博客的副标题是，技术就是信仰。现在的我，能够理解当时的心情，但我也会羞愧地把这个标题换掉了。</li>
<li>虽然中国的信息过滤机制是为了维护统治，但这也取巧地保护了新时代信息混沌环境下的人们。</li>
<li>一个社会的制度和文明，就像是一个人的免疫系统，会破坏掉不需要的信息。一个很形象的例子，法庭，法庭里有很多的严格管控的机制来限制进入司法系统的信息量。比如陪审团不允许旁听是否接受某项证据的辩论。这些管控的依据是当前司法理论对公正的定义，即哪些信息应当被视为”相关”，哪些信息应被视为“无关”，而后者更为重要。<strong>法治，关心的是信息的‘破坏性’。</strong><blockquote>
<p>可以理解的，因为法律法规本身就是在规范期望，以达成共识。法院是一个很好的例子，其次是学校。</p>
</blockquote>
</li>
<li>bureaucrat: 官僚。bureau，最早指的是记账桌台上的布。“官僚”这个词指的是在培训对人类问题的内容及其他方面都无动于衷的人员。纳粹前高官这么说：“他和纳粹没有任何关系，他只是负责将人群大规模地从一个地方转移到另一个地方的技术问题。”</li>
<li><strong>这个世界是喜欢魔法的。魔法的意义，在于将人们的注意力指向错误的地方，并通过这种做法，唤起我们的好奇心，而不是理解力。</strong>在技术垄断时代，我们被机器各种奇迹般的效果所折服，从而倾向于忽略机器背后所蕴含的思想。</li>
<li><strong>我不是在担心技术，我只是在担心因为技术而失去的东西。</strong></li>
<li>”广告商所必须了解的，其实不是产品有什么好，而是买主有什么不好。 因此，商业支出的天平开始由产品研发向市场研究倾斜，这就意味着，商业活动开始从“生产有价值的产品”变成“使消费者感觉到有价值”。 商业活动逐渐成为伪疗法，而消费者则成了病患，不断从心理剧中获得安慰。“</li>
<li>”当前，人们普遍认为，有必要将计算机引入课堂。如果有人问：“为什么要这样做？”，答复将是 “为了让学习更高效、更有趣”。这样的答复根本没有回答“学习是为了什么？ ”的问题。 <strong>“效率和兴趣”是一种技术性答复，它所回答的是方法，不是目的</strong>，更没有提供任何思考教育哲学的途径。“<blockquote>
<p>想起一周前VC day上看到的一个用AR结合课堂考试的项目，在pitch中展示了很眼花缭乱的demo，而问答环节投资人第一个问题便是：除了新奇性(novelty)之外，你认为AR能够改变教育什么。</p>
<p>是有点严苛的审视角度，虽然在商业中很多的成败是相对的，但记住这个核心，可以帮助你决策的时候少走弯路。</p>
<p><strong>也只有我们了解了这些人倡导教育的原因，才能理解他们所推荐的教育方式。</strong>而为了了解这些原因，我们必须尝试去了解这些人的故事。希特勒给德国人民的故事是雅利安种族优越论。</p>
</blockquote>
</li>
<li>🌟 抵抗美国技术垄断的人除非知道某个民意调查问的是什么、为什么这么问，否则不会将这个民调结果放在心上；拒绝将效率作为人类关系中最重要的目标；不再迷信数字的魔力，不会将计算视为能够代替判断的方法，不会将准确视为真理的同义词；拒绝让心理学或任何其他 “社会科学”操纵语言和常识性 思维；至少对进步思想心存疑虑，能够区别 “信息 ”和 “理解 ”的不同；不会认为年长者已经是无关紧要的人；重视家庭忠诚和荣誉的意义，当他们 “伸手接触到某人 ” 的时候，希望那个人就在同一个房间里；认真对待宗教故事，不相信科学是能够创造真理的唯一思 想体系；知道宗教和世俗之间的区别，不会为了现代而漠视传统；敬佩技术的创造力，但不认为它代表了人类成就可能出现 的最高形式。</li>
<li>🌟 抗争斗士很清楚，永远不能将技术作为事物自然法则的一部分。不管是智商测试、汽车、电视机还是计算机，<strong>所有技术都只是某一特定经济和政治背景下的产物，都带着某种计划、日程和哲学，也许能够提升生活品质，也许不能，因此需要监督、批评和控制。</strong>简而言之，技术抗争斗士会在方法论和精神上与任何技术保持一定距离，因而在他们看来，<strong>技术总是显得有些陌生、从来都不是必然的、也从来不是自然的。</strong><blockquote>
<p>为什么教育很重要。</p>
<p><strong>教育在帮助一个人抵抗他熟悉之物的刻板印象。</strong>很多时候我们的刻板印象不仅仅来自于我们不理解的、陌生的东西，还有那些我们无比熟悉的东西。</p>
</blockquote>
</li>
<li>考虑到技术垄断的分裂力量，学校能够为年轻一代的教育做出的最 重要贡献，或许是带给他们学习过程中的连贯性、目标感、意义以及所 学知识之间的联系。</li>
<li>换言之，这是技术统治论者的理想状态——没有信仰和观点的人，有的只是各种可以出售的技能。</li>
<li>人文：人类在克服孤独、愚昧与混乱的过程中所表现出来的创造力。波兹曼认为教育的主体应当是“人文的上升”。</li>
<li><strong>为什么历史很重要：“如果对你出生前发生之事始终一无所知的话，那你永远都只是个孩子。”</strong>历史告诉我们，这个世界并不是一蹴而就的，我们每个人都站在其他人的肩膀之上。而某种程度上，“历史”这个名字是有误导性的。历史都带着某种特定的目的。<strong>确定的历史是不存在的，存在的只是各种各样的历史。</strong></li>
<li>自省：为什么我会相信这些思想。知道你所生活的世界从何而来，而不只是你的家庭根源。</li>
<li><strong>为什么我们会期待，美可以毫不费力地得到。并非所有值得付出努力的事情都是马上就能被理解的。感受美、鉴赏美的能力，同样需要训练。</strong></li>
<li>波兹曼有意识地给出了他的解决方案，这是难能可贵的。一是去了解技术的历史。理解人类是如何通过创造技术来定义人类自己的命运，克服生理学的结果当作宿命，比如自行车、眼睛的发明。二是去了解宗教。去探索人类存在意义的回答，那些富有创造力的故事和角度。而所有课程设置的目的都是为了“回归基础”。<strong>他并不幻想这样一个教育计划能让技术停止快速发展，但这也许有助于开始并维持一场认真的对话，允许我们与那个思维世界保持一定距离、提出批评意见并改变这个世界。</strong></li>
<li>🌟 为什么说要减少花费在八卦新闻、娱乐视频上的时间。因为这些事物是没有原因的也不可反驳的。<strong>他们的存在就是为了被忘记。</strong></li>
</ul>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://mp.weixin.qq.com/s/hbjX3sM5npLIgFYDxd8Z9Q" target="_blank" rel="noopener">大喜哥走了，沈先生“疯了”：成就与摧毁他们的，是同一种肮脏</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;"><a href="https://chocoluffy.com/2019/01/01/%E6%8A%B5%E6%8A%97%E5%AD%98%E5%9C%A8%E7%9A%84%E8%A2%AB%E9%81%97%E5%BF%98/">抵抗存在的被遗忘</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何向投资人讲好一个故事]]></title>
      <url>http://chocoluffy.com/2019/03/06/%E5%A6%82%E4%BD%95%E5%90%91%E6%8A%95%E8%B5%84%E4%BA%BA%E8%AE%B2%E5%A5%BD%E4%B8%80%E4%B8%AA%E6%95%85%E4%BA%8B/</url>
      <content type="html"><![CDATA[<h2 id="如何讲好一个故事">如何讲好一个故事</h2><ul>
<li>不一定要追求形式，比如要讲market, why now, validation, demo等等，而是以flow流畅地串联起来。记住一定不要讲core tech。<strong>目的是，如果最终audience提问的时候问：”你们这个是怎么做的？“，对你的tech感兴趣了，就说明你的story是成功的。</strong></li>
<li>对待不同的人，会讲不同的故事。比如对于投资人来说，最重要的永远是market和product。对待客户来说，最重要的是你到底能够帮助我解决一个怎样的问题，可以带给他多大的利益。</li>
<li>记得提到：why us the best team for this?</li>
<li><strong>对于成熟的投资人，讲好了market和product，他们有能力帮你脑补出你的商业模式。</strong></li>
<li><strong>要对这个行业滚瓜烂熟。很多时候投资人投资你，是在投资你对这个市场的判断比他好。</strong></li>
<li><strong>从大到小讲产品是不好的，而是应该从小到大。投资人在意的是你的future state。</strong>有些队伍喜欢通过从一个大市场切入然后不断不断地细分到最后一块小市场说这个是我们的聚焦点。逻辑反了，应当是从这个是我们的切入点，到这个是我们能够不断覆盖的市场。</li>
<li>不应当通过列举competitor来证明自己。</li>
<li>每一次demo的时候，第二张slide里应该放的是对于这个team来说最独特的东西。比如这个team最独特，成功的地方在于他们的traction，比如classpass这个例子里面，一张side by side的图表，左边是两年前的几项关键数据，右边是现在的关键数据，证明自己的growth。或者这个team最独特的地方在于他们的成员。或者说是他们的产品demo等。</li>
</ul>
<h2 id="tricky_questions">tricky questions</h2><ul>
<li>最经典的还是paul graham的5s倒计时马上回答：<a href="https://jamescun.github.io/iPG/" target="_blank" rel="noopener">YC interview question mock online</a>。</li>
<li>who is the first to fire？团队默契。</li>
<li>what other idea you think？观察创始人会多快忘记这个想法。</li>
<li>how many rounds in next 5 years and how big？创始人的计划。</li>
</ul>
<h2 id="和投资人交涉的注意事项">和投资人交涉的注意事项</h2><ul>
<li>cold email。让他们需要做的部分最少、最简单化。</li>
<li>呈现自己做了extra work。一个提到的例子是，一个团队在回复是否接受这个投资人的投资的时候，他们去向该投资人曾经投过的项目联系并且询问经历，最后呈现说“7 out of 10，他们认为你是最棒的…”</li>
<li>周日晚、周二早上是最好的发邮件联系的时机。</li>
</ul>
<h2 id="观察">观察</h2><p>仔细观察这些投资人在针对一个特定创业项目时候的切入点。</p>
<ul>
<li><strong>对于medical startup(health tech)来说，最重要的问题往往出自credibility以及false positive或者false negative。</strong><ul>
<li>credibility，是两端的信任问题。消费者是否接受这个诊断流程，以及当这些公司说要和医生端打通的时候，doctor：“we don’t care.”</li>
<li>false positive，消费者盲目乐观，错过了最佳治疗时期。</li>
<li>false negative，心理影响以及额外的治疗费用。<blockquote>
<p>按照这个逻辑，目前大部分关于医疗创业项目的核心想法在于，democratize the diagnosis routine. 处于诊断后期的复诊和反馈的创业项目仍居多。对于涉及到医疗器械甚至医护资源的想法，没有强有力官方关系的介入外人很难撬动。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[不依赖理性而获得希望 -《致命的自负》阅读批注]]></title>
      <url>http://chocoluffy.com/2019/02/28/%E4%B8%8D%E4%BE%9D%E8%B5%96%E7%90%86%E6%80%A7%E8%80%8C%E8%8E%B7%E5%BE%97%E5%B8%8C%E6%9C%9B-%E3%80%8A%E8%87%B4%E5%91%BD%E7%9A%84%E8%87%AA%E8%B4%9F%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<ul>
<li>哈耶克的思想很大程度上是对于两次世界大战，以及德国纳粹历史的反馈。</li>
<li>哈耶克反对的重点不在于意识形态，或者说社会主义是否在道德上可取，而是他是从<strong>“效应”</strong>的角度入手的，他认为社会主义所倡导的办法不能够达到目标。</li>
<li><strong>“秩序”</strong>。也是Vitalik很感兴趣的方面。组织在没有像德国纳粹那样的人物出现时为什么会崩溃，又是如何自发组织起来的。哈耶克一定很赞同这一句话，“不依赖理性而获得希望”。某种意义上，哈耶克是不赞同“理性的设计”的。不赞同是因为根本达不到所谓“绝对的理性”，只没有办法从一开始就设计出最完美的规则能够有效利用到所有信息的，但是可以通过设计规则来达到鼓励人们去交换并利用流通的信息。</li>
<li><strong>“拓展秩序”</strong>：处于本能和理性之间的，通过学习和模仿而形成的遵守规则的行为模式。<strong>合作的特点是：人们相互获益，并不是因为他们理解了这种秩序，而是因为他们在相互交往中刻意用这些规则来弥补自己的无知。</strong><blockquote>
<p>这可以追溯到大卫休谟：“为别人提供服务，这无需他怀有真诚的善意。“</p>
</blockquote>
</li>
<li>而计划经济，的确可能存在和谐状态，但是这种和谐是有前提的，这是以个人既无财产、特殊知识也得不到利用为前提。它是以停滞不前为代价的。<blockquote>
<p>规则和秩序的关系，就像docker的image和container。</p>
<p>我也想到了1月份在以色列参观的Kibbutz。<br>另一个想法。像社会主义，自由主义，这些词都有极大的空隙，是有很多调整的空间的。以色列的Kibbutz很像我们曾经的合作公社。但是有一个区别是，后来Kibbutz慢慢演化出来直到现在的规则是，生产资料公有，但是获利是按劳分配。而我们曾经的合作公社则都是公有和计划分配。这同样和<strong>“规模”</strong>是有联系的。<br>以色列一行给我的一个很深的印象是：“规模”。</p>
</blockquote>
</li>
<li>哈耶克：不知道的也是不能计划的。<blockquote>
<p><strong>我为什么会喜欢这个论断，因为它超出了对人性的假设和预期。”人性本恶“还是”人性本善“在这个逻辑里是不重要的。</strong>就算“人性本善”也不一定能够达成更好的平衡，而“人性本恶”也不一定会导致腐败。关键仍然在于哪个规则、秩序更有利于信息信号的传播和反馈。</p>
<p>这个论断是敏感的，因为很多人容易因为这个逻辑并不劝人向善，因为好像作恶也没有关系。但实际上，它恰恰指出了<strong>道德的软肋：我们希求善良、道德，但仅仅只有良好的愿望是不够的。</strong></p>
</blockquote>
</li>
<li>哈耶克：为了保障自由，“用抽象的规则代替共同的具体目标”。</li>
<li>哈耶克的论断只要集中对于近代的资本主义社会，它强调的是这一类秩序是自发形成的。没有解释原因，因而部分忽略了人类理性的作用，以及有某种“必然”演化的成分。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2019 Feb.]]></title>
      <url>http://chocoluffy.com/2019/02/28/%E7%A2%8E%E8%AF%AD-2019-Feb/</url>
      <content type="html"><![CDATA[<h2 id="2019-02-28">2019-02-28</h2><ul>
<li><p>近期有空可以研究的主题：</p>
<ul>
<li>p2p + 贷款利息</li>
<li>ripple；</li>
<li>firis 现在遇到的法律上问题的解决方案：<ul>
<li>snippet, how short to not be counted as infringement.</li>
<li>derivative work, how much degree of freedom.</li>
</ul>
</li>
</ul>
</li>
<li><p>研究一下微信运动的模式。一起做。</p>
</li>
<li><p>创建一个更强大的workflow:</p>
<ul>
<li>inoreader的web extension save webpage，然后订阅这个save到Reeder。</li>
<li>inoreader的一个好处是，大部分Feed归档、分类都是可以以feed的形式再次导出的。</li>
</ul>
</li>
</ul>
<h2 id="2019-02-27">2019-02-27</h2><ul>
<li>ripple: gateway，market maker，核心在于完成交换货币这件事和XRP的价值是没有绝对关系的。很妙的一个设计：利用人们逐利的心理使得虚拟路径无限逼近真实市场路径。缺点，gateway本身扮演market maker。</li>
<li>吃饭的时候聊天内容的质量与参与人数成反比。</li>
<li>尝试去寻找下一个bitcoin、ripple。</li>
<li>可以尝试每天早上在bear里固定一个专栏+模版，来制定今日的计划。然后每个任务开始的时候来计时。</li>
</ul>
<h2 id="2019-02-25">2019-02-25</h2><ul>
<li>Lollapalooza：跨学科多种因素共振造成的合力结果。</li>
<li><a href="https://blog.jessfraz.com/" target="_blank" rel="noopener">Jessie Frazelle’s Blog</a> 博客里介绍了很多关于Docker和Linux的hack，以及高度自动化的Docker实践。我也喜欢将自己的workflow高度自动化，但仍主要偏应用层。作为开发者也希望能够在底层以实现更多的自由度，向她学习。</li>
</ul>
<h2 id="2019-02-24">2019-02-24</h2><ul>
<li>为了让你们更近一些，我决定向后跑。</li>
<li>【未来】匹配。关于游戏的两个美好遐想：（1）游戏、广告往电影的体验演化。（2）游戏内容匹配生活。众包，其实是在解决一个实际场景的问题。参考recaptcha。</li>
</ul>
<h2 id="2019-02-23">2019-02-23</h2><ul>
<li>近几年所谓的“金融创新”：资金池 + 时间差。</li>
</ul>
<h2 id="2019-02-22">2019-02-22</h2><h3 id="堂吉柯德">堂吉柯德</h3><ul>
<li>他其实把自己心中很多善恶的标准都投射到了生活里。模仿书中读到的骑士的故事。以悲剧复现悲剧。即便是被欺负了，依然能够自我说服到是一个游侠骑士应当经历的，而变得十分欣然。</li>
<li>我真的很疑惑，为什么推崇如此夸张的理想主义？有什么用呢？自我陶醉？</li>
<li>反差很大的是，堂吉柯德对骑士道的起源、发展记得非常清楚，他自己提到的，”这个世道变坏了，需要骑士来保护弱小的人。“，同时，他也告诫自己做好了受苦的准备，风餐露宿是没有关系的。他把风车当作巨人而一路冲锋过去，把过路马车里的女客人当作是被绑架的公主而和车夫发起争执，甚至达到了需要你死我活的决斗的境地，每一次经历了所谓的惩恶扬善之后都命令战败的人去幻想的公主身旁复述自己的丰功伟绩，他也那么相信每一个游侠骑士内心都有着一个绝境时得以述说的公主…<br>按照这个描写的度来说，其实他已经稍稍妨碍到了别人的生活了，为什么作者塞万提斯要这么设计呢？</li>
<li>桑乔是世俗的，大腹便便，没有收到教育，一直因为封爵的幻想而追随着堂吉柯德。（突然又不想给我未来第二只猫命名为桑乔了…）</li>
</ul>
<h3 id="加缪">加缪</h3><ul>
<li>在我们身上保有反抗的力量，又不放任我们否定的能力。形成的悲剧敏感性，就将发展起来，找到它的表达方式。</li>
</ul>
<h3 id="哈耶克大全集_-_《致命的自负》">哈耶克大全集 - 《致命的自负》</h3><p>哈耶克对秩序的理解，超出了对人性感性的假设以及理性的局限。完美的理性设计是不存在的，而道德的软肋，我们那些希求善良、道德的美好愿望也是不够的。理解哈耶克的关键在于，他想要设计一种规则：人们在其中相互获益，并不是因为他们理解了这种秩序，而是因为他们在相互交往中刻意用这些规则来弥补自己的无知。</p>
<blockquote>
<p>🌟我为什么会喜欢这个论断，因为它超出了对人性的假设和预期。”人性本恶“还是”人性本善“在这个逻辑里是不重要的。就算“人性本善”也不一定能够达成更好的平衡，而“人性本恶”也不一定会导致腐败。关键仍然在于哪个规则、秩序更有利于信息信号的传播和反馈。</p>
<p>这个论断是敏感的，因为很多人容易因为这个逻辑并不劝人向善，因为好像作恶也没有关系。但实际上，它恰恰指出了道德的软肋：我们希求善良、道德，但仅仅只有良好的愿望是不够的。</p>
</blockquote>
<p>完整博文：<a href="https://chocoluffy.com/2019/02/28/%E4%B8%8D%E4%BE%9D%E8%B5%96%E7%90%86%E6%80%A7%E8%80%8C%E8%8E%B7%E5%BE%97%E5%B8%8C%E6%9C%9B-%E3%80%8A%E8%87%B4%E5%91%BD%E7%9A%84%E8%87%AA%E8%B4%9F%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/">不依赖理性而获得希望-《致命的自负》阅读批注</a></p>
<ul>
<li>吃早餐的时候想到。以后公司开年会可以讲这样的一个故事。自助餐的盘子。准备一大一小的盘子。而后大盘子的人会不会更容易浪费食物。周围会有很多的人给我们提来不同的盘子，估值，融资，股价，但只有我们自己清楚我们到底能够消化多少，我们能够撑得起多少。问题从来都不是出在最终多少食物被浪费了，关键的问题在于我们错误地估计了多少，以及我们认为浪费无所谓而松懈的心态。</li>
</ul>
<h2 id="2019-02-21">2019-02-21</h2><ul>
<li>“骑士精神极为强调尊重对手” 赢得不是优越感，而是光明正大的战斗。</li>
<li>那些我经常写下的，是祈祷，还是审判。</li>
</ul>
<h3 id="19-2-19_startup_studio的反馈">19-2-19 startup studio的反馈</h3><ul>
<li>关于pitch。始终在于如何讲好一个故事。关于Flow的问题。最后希望达到的效果是，如果audience会回应“how do you do that?”， 你就成功了。</li>
<li>面对不同的人，有不同的动机，就有不同的表达。</li>
<li><p>以及关于Health Tech的理解。medical startup: -problem of credibility-。</p>
</li>
<li><p>【剧本】关于耶路撒冷，或许只是我们的时代没有这些残酷的选择。而<strong>极端是，他操控了我们所有的故事。</strong></p>
</li>
<li>思考微博和Twitter的演变。</li>
<li>广告的本质是：影响力的交接。</li>
<li>写一个荒谬却无动于衷的故事：受害者与破坏者享受相互伤害的过程。</li>
<li>当你让数据做决策的时候，很多决策的可解释性反而降低了。</li>
<li>人们为什么想看日出？看世界慢慢附上颜色。<blockquote>
<p>[19.2.21更新]人们希望以一个不常有的形式冲击自己，像用冷水醒酒一样。人们对景色的新奇和期待远远超过了对自己内心的反照。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>朋友圈是一个精致社交的地方。但无论是“看一看”还是“时刻视频”也好，都还没有真正解决张小龙希望解决的问题，就是”真实“。只要最终依旧有强提醒，最终依旧会曝光给好友看。虽然他最新改版的slogan是正确的：“因你看见，所以存在”。但是实际上并没有真正做到。<br>[19.2.21更新] (1) 一个相反的事实观察是：当微信更新后给时刻视频新的入口“你的新好友动态”之后，朋友发时刻视频的频率反而提高了。 (2) 另一个观点是，“一定会曝光给好友看”不一定是坏事。关于自己生活动态的曝光，对发布者来说主要分两种目的，一种是刻意树立、维护自己形象，另一种是随意的分享一些情绪，观点。</p>
<p>一种改进是，默认发送给“最近互动的人”，后台记录了朋友圈里相互互动的人，然后发送时刻视频的时候，有一个选项是只发给互动的人。</p>
<p>管理“群组可见”的最大的坏处是，对自己反馈。这是一种很负面的反馈，用户会讨厌一个分组的自己，斤斤计较身份，带有目的性的自己。<strong>从工具本身削弱社交的目的性。比如微信时刻视频不提供任何滤镜。</strong></p>
<p>快手可以比微信更加真实的原因就在于陌生人的关系。就像微博的我比微信的我更加的真实。<br><strong>熟人：形象image。因为和我们生活的其他方面有交集。我们的形象是破碎而不连续的。而维持多面的形象非常费力。问题不出在熟人，而是出在交集。当多层社会关系出现交集的时候，就像在一席大桌饭宴上，你的态度是由你其中最严肃的社会关系所决定的</strong><br><strong>陌生人：名声reputation。能够持续的维护同一个形象而形成名声。没有交集的焦虑。</strong></p>
</blockquote>
<ul>
<li>“人并没有用视频记录自己生活的需求，看看自己手机里拍过多少视频就知道了，即使拍再多的照片也不会看，但是人有渴望交流的需求。”，张小龙在演讲时曾提到。<blockquote>
<p>用视频拍摄，其实不是为了记录，而是为了交流。快手实际上做到的是成为那一大部分人和外界交流的工具。而这在很多时候，是很多企业不屑于做的。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-02-20">2019-02-20</h2><ul>
<li>还是要逼着自己去输出！很多时候无意聊天的话题，可以很有启发。<blockquote>
<p>很多互联网的创业项目，都是努力成为一个漏斗状结构的中间窄口。<br><strong>只要存在瓶颈。就存在借助兼并而扩大话语权。</strong>而现代互联网企业就是通过两端的兼并，最终掌控这个领域资源匹配的话语权，而成为新的瓶颈或者平台。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-02-19">2019-02-19</h2><ul>
<li>bark 浏览器推送到iphone，很适合给惊喜~</li>
</ul>
<h3 id="海贼王">海贼王</h3><ul>
<li>乌索普：我只希望这还是谎言啊。我只是在说谎，明天早上醒来村民大家还是会迎来新的一天。</li>
<li>乔巴： 我是一只天生就是蓝色鼻子的驯鹿。我是怪物。</li>
<li>医治这个国家的，是人心 ，是漫天的樱花🌸。</li>
<li>弗兰奇建造的战船让师傅汤姆受了伤。船匠汤姆：不管建造什么样的船，都没有善恶之分，创造那艘船的人必须爱着它。 男人就要响当当得面对自己所造的船。 </li>
<li>罗宾：我只想知道这个世界的历史。冰山：如果对这个世界的好奇心会带来这个世界的毁灭的话就应该停止。罗宾：我只是为了草帽团。<br><strong>存在本身并不能成为罪恶。</strong></li>
</ul>
<h2 id="2019-02-18">2019-02-18</h2><ul>
<li><p>讽刺久了，会成为讽刺本身。</p>
</li>
<li><p>18年直播分成后的收入150亿往上 可以奔着200亿算 广告刚起步 19年奔着100亿。最主要的 快手支出少 不像抖音 买量全年百亿级。</p>
<blockquote>
<p>商业化是重点。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-02-17">2019-02-17</h2><ul>
<li>【软件】收集优秀的stack overflow的回答。</li>
<li>你的眼神，像蝴蝶飘落。</li>
<li>“每一个人，身上都拖着一个世界，由他所见过，爱过的一切所组成的世界。”</li>
</ul>
<h2 id="2019-02-16">2019-02-16</h2><ul>
<li>做一个自拍分析皮肤状态的app，拿到了手机用户自拍。或者这么说，为了拿到用户的自拍画像，去做一个自拍分析皮肤状态的app。后者的逻辑比前者更有投资价值。</li>
<li>研究一下notion+bear的组合。</li>
<li>刺青、高跟鞋、门前的草坪。是同一样东西。</li>
<li>reddef originals加rss</li>
<li><p>【商业观察】直播系统企业定制化；一对一直播；拍卖直播权。只有成交的人需要付金额。</p>
</li>
<li><p>从其他软件切回微信，像回家一样。</p>
</li>
<li>用视频记录自己，究竟是不是一个需求？<strong>需求是不会变的。但工具会改变门槛，需求会改变形式。</strong></li>
</ul>
<p><strong>对快手的用户来说，用段视频、直播记录自己的生活承载了他们社交的需求。但是抖音并不具备这个特性。抖音是城里人的一个娱乐工具，只要出现更新奇的刺激人们就会转移阵地。</strong></p>
<p><strong>而微信做时刻视频。也不是为了娱乐消费，而是为了分享生活。重点也不在于人（连基础的滤镜也没有）。</strong></p>
<ul>
<li>找机会总结sprint1的问题。从笔记里提炼。</li>
</ul>
<h2 id="19-2-15">19.2.15</h2><p>原来这就是成长。</p>
<p>原来我\你的每一句话，都有着我\你一路以来的教养。这就是为什么和我现在的队友沟通是那么舒服。</p>
<p>你可以专断，但是你得有服众的能力。</p>
<ul>
<li>总结sprint1。总结整个准备过程中的冲突和感受。</li>
</ul>
<p>关于协作能力。要服众。我一直以来都是小作品的单打独斗，只需要从好朋友里面找到最好的设计师以及最好的产品经理。但是未来对于想做到的更大的事来说，这是远远不够的。</p>
<p>max很会照顾人的情绪。他知道这个人的动机是什么，然后从他的角度给一个台阶下。甚至在其中不惜把自己的形象也揉碎。</p>
<p>其中关于是否要让所有成员都展示的话题。真心是要仔细想，到底是为了什么。路飞是这么想的，伙伴比梦想重要。<strong>仔细权衡哪个是更重要的。让每一个人都有参与感，还是一个展示甚至最后还不算分数！</strong></p>
<blockquote>
<p>【海贼王】里面索隆的变化。<br>一开始他是这么对路飞说的，我可以和你一起航海，但是如果你妨碍了我成为最厉害的剑豪，我会斩了你。而当他遇到鹰眼的时候要决斗，拼上了性命的那种的时候，路飞并没有拒绝、干涉他。<br>到后来熊的出现，他要承受路飞受到的伤害，他说，如果连伙伴都保护不了的话，还当什么剑豪呢。</p>
</blockquote>
<ul>
<li><p>毛选一开始，分清楚哪些是朋友，哪些是敌人。妈妈也这么说了，要协调好关系，使得哪怕是一个不起眼的人物，都对你心服口服。</p>
<ul>
<li>《毛选》</li>
<li>《我的奋斗》希特勒的自传</li>
</ul>
</li>
<li><p>一开始市场一定是越细分越好。max能够在一开始定位到电影、影视这个市场是对的。</p>
</li>
</ul>
<h2 id="19-2-12">19.2.12</h2><ul>
<li><p>closed-form solution: 解析解。很多时候loss function不是closed form的，也就是没有解析解。所以会用到gradient descent。</p>
</li>
<li><p>室友说，很多群其实都是replica，不如建成slack的channel。有点意思，比如羽毛球群和游戏王群就很适合作为channel。微信的群，主动权在参与的人；而slack的channel，主动权在所有人。</p>
</li>
<li><p>还是说，很多时候我在享受一种你把我当作朋友而我不把你当作朋友的高贵快感。我需要这么证明我的存在嘛。</p>
</li>
</ul>
<h2 id="2019-02-11">2019-02-11</h2><ul>
<li><p>可以通过dense pose estimation的点之间的角度来设置trigger！</p>
</li>
<li><p>逆向工程这个questo，#1 product hunt。重点在于OCR + quiz generation。generation的逻辑是，关键词detection以及一些关键数据的parse。思路其实很简单：</p>
<ul>
<li>比如数字。然后转换为问题”why…”</li>
<li>比如easy\difficult\best\worst。然后问题就可以转换为“为什么easy\difficult…”</li>
</ul>
</li>
</ul>
<h2 id="19-2-10">19.2.10</h2><ul>
<li><p>【产品设计】关于评分网站的设计。</p>
<blockquote>
<p>缘由：1. 你希望扳回大多数人的观点。2. 刻意造谣。</p>
<ul>
<li>你只能看到和你相似的一拨人的观点和评分。</li>
<li>然后将另外一波人的观点也呈现出来，开放非匿名的场合进行辩论。</li>
</ul>
</blockquote>
</li>
<li><p>很多时候我不自主地笑，都是因为我想起了家里人。尤其是妈妈。</p>
</li>
<li><p>有一些情绪可能会有帮助。比如，抵抗的情绪。为什么要专注在一件事上面。有一些脑洞，可能我自己也无法说服我自己。如果我只有7秒的记忆，我一定要做一件10秒的事。因为等我忘记了一切我还可以通过手头的事想起来。</p>
</li>
</ul>
<h2 id="19-2-8">19.2.8</h2><ul>
<li>改名叫 inplay。</li>
<li>【公司管理】及时给伙伴反馈！！哪怕简单地就是“已读”。学习max的做法。</li>
<li><p>产品UX借鉴anchor！！！</p>
</li>
<li><p>分析一部小说作品的一个角度，去观察哪个主角死去了，这往往意味着那个主角所代表的想法的妥协。</p>
</li>
<li><p>讽刺。他们来到陌生的地方，然后做着熟悉的事。</p>
</li>
<li><p><strong>美学概念，在社会背景下，更像是一种奖惩制度。</strong></p>
<blockquote>
<p>奖惩制度，也就是演化为一种标准。而不是一种感受。人们越来越擅长赞扬一个人的审美品味，这种抬高或许和赞扬本身无关，而和集体性有关，而在另一端，会不会有人因为个人的感受却受到惩罚？</p>
<p>社会群体有一个特质，会把很多个人感受抬高成为一种绝对标准。这里面摧毁了很多东西，妥协了很多东西。</p>
<p>个体坚持理性，知道什么时候应该刹车，说出“it is evil”这句话。</p>
</blockquote>
</li>
</ul>
<h2 id="19-2-7">19.2.7</h2><ul>
<li>你扶着扶手，我扶着你。</li>
<li>巴菲特在他的传记里最重要的一个概念是compound，复利。要专注。选出自己的前20个目标，然后选出最重要的前5个，之后就只专注在那5个目标的追逐上面。</li>
</ul>
<h2 id="19-2-6">19.2.6</h2><h3 id="《火星编年史》">《火星编年史》</h3><ul>
<li>你犹豫了。于是你的身上，有了我的影子。于是我心软了。你可以在现在杀了我，不过我很清楚，你终于会成为我。</li>
<li>英雄死了。不是因为这个世界不再需要英雄了。而是这个世界已经没有那么大那么难，来需要英雄来拯救了。现在，破坏世界、拯救世界的按钮在每一个人的手里。</li>
<li>大一的时候打过的一场记忆最深刻的辩论。政府是否应该支持人们移居到另一个星球？其中最佳辩手的论据是。正方，应该移居。为了去见证重新开始。为了那份孤寂。为了更好地去理解地球。</li>
<li>雷布拉德伯里的小说，真是太适合拍电影了。好莱坞那种。</li>
<li>雨。像破碎的玻璃。</li>
<li>这是我看雷布拉德伯里的第三本书，继《华氏451》和《蒲公英醇夏》。他真的是一个很天真的人。天真不是指他的性格，而是他想要做到的事，就是那么清晰地展现在读者面前。都是些很简单的梦想。书，童年。然后到这本书的主题，地球和战争。想象力是指技巧嘛，不只是的，也是一种理解，想传递存在着的另一种理解。这份理解曾经只被少数人拥有，现在走近了更多人的共鸣。</li>
<li>时间，是什么味道？像烟味。时间有声音吗，会不会很像钟乳石尖上滴落的水滴的回声，像地铁里错落有致的金属碰撞的声音，还是像一场夏天降临在石板的雨。</li>
<li>【灵感】可以以后这么写小说。以时间作为章节，然后把平时的故事转化为小说情节。每个章节，写的都是那些我望着地球时发生的故事。</li>
<li>小说里还有致敬《华氏451》消防员的彩蛋。</li>
<li>对比：<ul>
<li>黑人们的逃离。却把物体安置得整整齐齐。</li>
<li>道德委员会的抵达。爱伦坡的厄舍古屋。</li>
</ul>
</li>
<li>你的脸，每个人都叫的出一个古老的名字。</li>
<li>他们在火星仰头看着天空中的那个绿点，就像当初在地球上仰望着火星一样。</li>
<li><p>讽刺。他们来到陌生的地方，然后做着熟悉的事。</p>
</li>
<li><p>买单的时候负责结账的小哥哥，他在闲暇的时候在很专心的画漫画。</p>
</li>
<li><p>纸张，被阳光照得透明。</p>
</li>
<li><p>【推荐系统】复习一下很有用的概念</p>
<ul>
<li>SVD以及其变式</li>
<li>PLRS，看看如果用Ridge Regression效果怎么样。</li>
<li>skip-gram, everything into embedding.</li>
<li>理解maximum likelihood and logistic regression。</li>
</ul>
</li>
</ul>
<ul>
<li>【商业观察】为什么依赖算法分发。这是主动权的一个迁移。作为平台本身，我希望能够掌控所有的话语权。因为我的上游和下游越接近，我的价值就越会被削弱。这个也是中介存在的意义。<br>“Arcade City 的创建本身就基于两个基本原则。：允许司机制定自己的费率，并允许他们建立和维护自己的经常性客户群；这两个原则都是Uber在其服务条款中明确禁止的。”</li>
</ul>
<h2 id="19-2-5">19.2.5</h2><ul>
<li>【商业创意】as app.<ul>
<li>doc as app, <a href="https://www.producthunt.com/posts/coda-1-0-mobile" target="_blank" rel="noopener">Coda 1.0 + Mobile - A doc as powerful as an app | Product Hunt</a></li>
<li>text as ads. <a href="https://vidy.com/" target="_blank" rel="noopener">VIDY</a></li>
<li>video as app?</li>
<li>video as ads?</li>
</ul>
</li>
</ul>
<h2 id="19-2-4">19.2.4</h2><ul>
<li>paprika 《未麻的部屋》</li>
<li>Detroit: become humen</li>
<li>每一个产品经理都应该读：《游戏设计艺术》</li>
</ul>
<h2 id="19-2-1">19.2.1</h2><ul>
<li>其实每一滴雨，都是来自外太空的雪沫。</li>
<li>疯狂，是一种保护机制。它以牺牲自我的方法，不让任何人进入、打断自己的思绪。</li>
</ul>
<h3 id="google_cocktail_party_sound_problem">google cocktail party sound problem</h3><ul>
<li>unsupervised</li>
<li>visual with sound</li>
<li><p>consecutive frame with CNN(facenet)，sound by spectrogram</p>
</li>
<li><p>复习一下PLRS。</p>
</li>
<li><p>【公司管理】在亚马逊内部，鼓励员工提出创新项目的同时，会要求员工写一封邮件，邮件内将包含两大部分- 一篇新闻稿，以及大约6页的常见Q&amp;A备忘录。</p>
</li>
<li><p>关于微信看一看，是否改变了我的行为动机。我其实只是想要一个地方，你不必一定看到就行了。我不会太在意是熟人还是陌生人的圈子。</p>
</li>
<li>一个观察，需要验证是否正确。在抖音引入了微信的好友关系之后，发布的频次会下降。kill-time本身是一类逃避的行为，社交关系在这个背景里面是一种约束。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2019 Jan.]]></title>
      <url>http://chocoluffy.com/2019/02/21/%E7%A2%8E%E8%AF%AD-2019-Jan/</url>
      <content type="html"><![CDATA[<p>特别充实的一个月呢。</p>
<p>写下了过去一年的总结，像把手伸向夜空里的星星一样，我向着心里面打捞着微光闪烁。算是厘清楚了，我所追逐的自由的背面，不是束缚，曾经我以为是彷徨，当时的我觉得是媚俗。而再过去一个月，现在的我还想增加一个选项。比媚俗更可怕的，是基于媚俗的优越感。</p>
<p>我也第一次踏上了去以色列的旅途。边境，沙漠，集中营。如果不是学校组织，我自己恐怕是没这个勇气和胆识来这么多地方的。喜欢一种被陌生击碎的新奇感觉，却也熟知故事都是押韵的。一路上也捕获了很多灵感，特别是我未来第二和第三只猫的名字，我想叫你们Sancho和Dolorosa呢。而我遇见的最美的名字还是这座城市特拉维夫（Tel Aviv），翻译过来是，被石头堆叠起来的春天。我想，这就是文明（Civilization）的意思吧，带着人类最大的骄傲。</p>
<p>又开始了新的一轮项目开发和路演，也是我最享受的事。</p>
<p>我送给自己的成人礼：堂吉柯德。2019年，如果有什么书是你一定要看的话。加油！</p>
<h2 id="19-1-30">19.1.30</h2><ul>
<li>一个大概60多岁的爷爷在弹钢琴，《真心英雄》。他时不时地抬起头看着摄像头。3天前的视频，当时有93条评论。</li>
</ul>
<p>真实还是刻意。真实是很柔软的，我就是这样的了，你看这是我所有的软肋了，你还会嘲笑我吗。刻意，是很坚硬的东西。起源是不信任吧，我不相信如果我展现了真实的自己，你还能留在我身边，一开始就已经是挽留的姿态了。我就静静地在这里诉说，迎接着你。</p>
<p>张小龙在做微信公众号的时候提到过，他假想的场景是：一个盲人按摩师在这上面可以服务到更多的人，只有认可的人才会关注的，”再小的个体都能做出自己的品牌“。当我想到快手。我想到的是这个场景。</p>
<h2 id="19-1-29">19.1.29</h2><h3 id="startup_studio">startup studio</h3><p>interactive content\<br>extended trailor, opening end with unlock another outcome.<br>我们会聚焦在中小型的电影的宣传分发。</p>
<blockquote>
<p>在分发上，海尔兄弟、黄渤是如何利用快手进行分发的？<br>我们的优势就是可以玩起来！<br>怎么玩？<br>贴脸？还是直接整个人放进场景里？</p>
</blockquote>
<ul>
<li>去录音每一次startup studio。</li>
<li>your strength, your context.</li>
<li>两边队伍每一边分别选择人来阐述product narrative。</li>
<li>只有一个数字。</li>
<li>what -benefit-？free money？</li>
<li>不要放任何大的概念。不要放任何技术的词汇。</li>
<li>关于如何去讲一个故事，去观察乔布斯！</li>
<li>我的pitch的反馈。观众听到了一个”interactive movie trailer”，但是这个究竟是什么我没有解释清楚。<blockquote>
<p>关键是我自己还没有想清楚我究竟要的是什么。</p>
</blockquote>
</li>
<li><p>max提到了关键的一点：票房预售。</p>
</li>
<li><p>anonymous =  pseudonymous + unlinkable， bitcoin: pseudonymous + linkable。</p>
</li>
<li>一个好名字: two-hop ventures。只需要两次连接就可以接触网络里所有的node，这是一个极度中心化的结构。</li>
</ul>
<h2 id="19-1-27">19.1.27</h2><ul>
<li><p>创始人一定要放权。让idea boom。</p>
</li>
<li><p><strong>“后视镜”</strong>是麦克卢汉一个重要的思想工具，也是莱文森非常喜欢的一个观点。“我们透过后视镜看现在。我们倒退走步入未来。”</p>
<blockquote>
<p>哈耶克的“园丁”隐喻；加缪的“贫穷与阳光”。</p>
</blockquote>
</li>
<li><p>pocket稍后阅读和youtube的稍后观看。分析用户行为。</p>
</li>
<li>食堂的新机制有点像Quadratic Voting。选择同样的食物会花费更大的成本，偏向选择多样不重复的食物。在QV里投票给同一个候选人需要花费更多的成本。</li>
</ul>
<h2 id="19-1-26">19.1.26</h2><ul>
<li><p>基于graph的word2vec。人为创造连接。</p>
</li>
<li><p>推荐存在的次序问题。</p>
</li>
<li><p>一个camera，将一个人实时的移出屏幕。视频内不再出现这个人。</p>
<blockquote>
<p>【想法】一副眼镜。免费的，甚至可以赚钱。代价是视野中的平面会出现广告。在你选择屏蔽广告的时候收钱。</p>
</blockquote>
</li>
<li><p>在多人场景里可以过滤特定人物的声音，保留特定人物的声音</p>
</li>
<li>voiceit<ul>
<li>一个人读固定的语料（这个语料包含了所有音节），我可以利用这个来训练模型可以直接模拟这个人的声音。</li>
</ul>
</li>
</ul>
<h2 id="19-1-24">19.1.24</h2><ul>
<li>写博客的一个好处是，可以不断追加更新。</li>
</ul>
<h3 id="哈伯格税">哈伯格税</h3><ul>
<li>“使用哈伯格税的好处是可以在日常管理成本低廉的情况下，准确地给资产定价。事实上，哈伯格税可以让市场来完全决定某个资产（如房产）的价格。此外，还可以增强房产的流动性，缓解产权上垄断。哈伯格税带来的高分配效率意味着像房产这样的资产能拥有更高的使用率，大大降低了社区的社会成本。”<blockquote>
<p>以及转卖域名系统。</p>
</blockquote>
</li>
<li>“当然，对于一些应用（比如广告业）来说，哈伯格税的解决方案是很有意思的。对于广告招商而言，新的广告商可以（译注：通过支付原广告商对广告位的估价）立即取代原广告商来使用该广告位，大大提高了广告招商市场的流通性。”</li>
<li>类比progressive taxation，使得欧洲贫富差距稳定，但穷人依旧没法access to wealth generation。有些人觉得会不会有些人故意来prank你买你的东西，但其实没有这个问题因为你可以订很高的价格。最大的障碍是实施上面的。</li>
<li>荷兰拍卖是反式拍卖。从高往低until买家出现。但仍旧有反式荷兰拍卖，来负责补贴。</li>
<li><strong>tax as basic income. 税作为基本收入</strong><ul>
<li>What about utilising Harberger taxes to sell slots for your attention? Taxes are your basic income?</li>
<li>🌟【应用场景】固定人数的社群。你以你的估价来交付税以保持在这个社群里，但是一旦有别人付诸了这个价格可以挤掉你作为社群的一员。<ul>
<li>【应用场景】<strong>rare patron</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>唯一的制作人。利用哈伯格税的规则，别人可以以此买下这个资格然后你加入一个后制作人的群。</p>
<ul>
<li><strong>哈伯格税的应用场景是：稀缺市场的交换规则，以及闲置资源的流通规则。</strong></li>
<li>一个仍然留做讨论的问题是：收集到的税的流向。是留向售方，还是所有参与者，或者是特定的方向。可以模仿在Creative Commons里提及的模式。</li>
<li>Quadratic Voting强调少数群体发表更具决定性的观点。而不是一人一票。因为少数群关注的点会愿意把所有票都投在那个议题上的<br>在区分使用者的严肃程度。以及对待这个议题的态度的方式。<strong>提高了你重复发声的门槛。只有真正在意的人会选择重复发声。</strong></li>
</ul>
<p>少数人的意见也能够被关注到（surface）。<br> me<br>一个例子，现在饭堂开始改革让大家票选新的菜单，你一共有四票，你可以选择四种菜每个投一票，如果投给同样的菜需要平方的票，比如你特别喜欢烤鸡，你愿意耗费你四张票都拿出来成为给烤鸡成为最终的两票记录进去。如果这个饭堂实际上是一个社会的缩影呢，而那些票选的饭菜其实是gun control枪支管理，同性恋婚姻呢。</p>
</blockquote>
<ul>
<li>交易。把它看作是一个关于接受程度的衡量技巧。有效分类。合理去规避价格歧视的同时有效区分使用者。</li>
</ul>
<h3 id="如何补贴艺术（Intellectual_Property）_-_经济设计">如何补贴艺术（Intellectual Property） - 经济设计</h3><p>现在的版权：Copyright in most countries expires 50–100 years after the originator’s death. Patents expire. Just as we have private property and commons owned property, as a society we understand that at some point, ideas should become exploitable by all. 最有效的例子就是，现在迪士尼都在lobby政府延长他们使用米老鼠的年限。但实际上这些lobby的花销本可以用来生产更好的漫画。</p>
<p>讨论的关键就是，这是不是最有效率的做法？</p>
<blockquote>
<p>发现了一个规律。-创造一个稀缺市场，然后应用哈伯格税。-成本在于目前在现实中实施这个想法的执行成本大于从中得到的价值。</p>
<p>这里一个很核心的观点是，<strong>这个稀缺市场必须持续创造价值。使得稀缺的物件collectibles被持有是有价值的。</strong> As long as the collectibles are creating value for its owners, people will be willing to pay the cost to keep them.</p>
<p>-很直接的另一个场景：就是知识付费的圈子。-而电子化实现这个想法远比实物收回来得简单的多。而也只是恰好在这个场景下，利用blockchain是很方便实现想法的方式之一。</p>
<p>或者是粉丝群体的同人徽章。<br> 🌟 【应用场景】<strong>a permanent digital artwork of a temporary exhibit.</strong></p>
</blockquote>
<h2 id="19-1-23">19.1.23</h2><ul>
<li>公众展示了ZoomAI超分辨率技术，通过这项技术，爱奇艺首先实现了在移动端实时放大540P标清视频到1080P高清视频的超分辨播放功能。</li>
<li>YouTube在2018年11月全新上线了YouTube Video Looks产品，支持网红在视频里“标记”产品，并可以配合视频内容、网红动作自动在侧边栏显示相关产品，极大促进人们购买体验。</li>
<li>有一个功能，如果你看整部剧，就只为追某一个明星，那你可就太需要了。这就是“只看TA”功能。通过AI技术，系统可以智能识别出，某个明星的专属戏份。目前，爱奇艺和腾讯视频均有上线。比如《延禧攻略》中，你只要点击“只看 秦岚 片段”，就可以只看皇后娘娘的戏份了。</li>
</ul>
<ul>
<li><p>“美国基础电信设施的落后时FCC废除网络中立法案的至关重要的因素。特朗普政府废除了中立案。”</p>
<blockquote>
<p>网络中立法案，运营商不能差别对待内容。但事实是，youtube和netflix占据了70%的网络流量。<br>因为中立案的存在：在网络基础设施投资上无法获得足够的资金，也不愿意对网络基础设施进行长期的大规模投入。（因为没有incentive，公地悲剧）<br>在废除网络中立法案之后，美国的宽带普遍服务将不再主要依靠来自政府的资金的支持，二是可以依靠电信创新获得收入/来自资本市场的支持/来自互联网流量大户的差异化付费获得支持。</p>
</blockquote>
</li>
<li><p>我必须以摄像头的拍摄视频回复以解锁你的视频。</p>
<blockquote>
<p>视频记录是一个伪需求吗？张小龙。<br>朋友之间，我想知道你的所有动态，我也希望别人知道我的所有动态。你可以隐身。但是可以看到别人给你“挥手”的通知。</p>
<p>随时随地和朋友交流。voice box放进耳塞。</p>
</blockquote>
</li>
<li><p>主打视频的陌生人社交。dating app。</p>
</li>
<li>Canary in a coal mine 矿井中的金丝雀，指危险的先兆。</li>
</ul>
<h2 id="19-1-22">19.1.22</h2><ul>
<li><p>入手Text2Image。hand-written主题，适合：文章手写体，产品介绍图、代码介绍图、微信cover等。</p>
</li>
<li><p>team meet的启发。 <strong>段威说，要把team其他人想得厉害一点点。</strong> 自己的认知是局限的，说不定别人有更好的想法。max来定时间和任务。要学会控场，以及给队友以信心。是可以push的，但是要鼓励他们一定是可以做到的。</p>
</li>
<li><p>直播是正餐，固定时间一起吃；短视频是零食，随时随地独自啃。</p>
</li>
<li><p>【隐喻】理解哈耶克，就是理解这个关于园丁的比喻。</p>
<blockquote>
<p>因此他不能像工匠打造器皿那样去模铸产品，而是必须像-园丁看护花草-那样，利用他所掌握的知识，通过提供适宜的环境，养护花草生长的过程。《知识的僭妄》是哈耶克1974年的诺贝尔纪念奖演说的题目。</p>
</blockquote>
</li>
</ul>
<h2 id="19-1-21">19.1.21</h2><ul>
<li>【想法】把视频内容拨开。你可以移动视频内的物件。</li>
</ul>
<h2 id="19-1-20">19.1.20</h2><ul>
<li><p>“The new reality is that journalists simply do not own the news cycle: Even if Gawker, BuzzFeed News, and Fusion decided to stop covering it, others would take up the mantle,” Anne Helen Petersen writes at BuzzFeed. “The new role of journalists, -for better or for worse, isn’t as gatekeepers, but interpreters-: If they don’t parse it, others without the experience, credentials, or mindfulness toward protecting personal information certainly will.”</p>
<blockquote>
<p>今天看到的新闻。又让我想起了Newsroom里的，mission to civilize。</p>
</blockquote>
</li>
<li><p>The mission of each true knight is duty…<br>  nay, is privilege.<br>  To dream the impossible dream<br>  To fight the unbeatable foe<br>  To bear with unbearable sorrow<br>  To run where the brave dare not go<br>  To right the unrightable wrong<br>  To love pure and chaste from afar<br>  To try when your arms are too weary<br>  To reach the unreachable star<br>  This is my quest<br>  To follow that star<br>  No matter how hopeless<br>  No matter how far<br>  To fight for the right<br>  Without question or pause<br>  To be willing to march into hell<br>  For a heavenly cause<br>  And I know if I’ll only be true<br>  To this glorious quest<br>  That my heart will lie peaceful and calm<br>  When I’m laid to my rest<br>  And the world will be better for this<br>  That one man scorned and covered with scars<br>  Still strove with his last ounce of courage<br>  To reach<br>  The unreachable star “ ——《man of la mancha》<br>来自《新闻编辑室》</p>
</li>
<li><p>记很有意思的一件事。今天中午我主动把厨房清理干净，过一会儿室友也注意到了厨房变得特别干净问是不是我做的，我说嗯。下午再出房间的时候，我发现室友主动地去倒了垃圾并且还用了吸尘器把客厅清扫了一遍。市场设计在理性人群里，一个很有效的方式是，做好事，给予道德压力。是不希望被亏欠的心理使得善意延续。但前提太严格了，只有充分理性（相信信任优于背叛，以及相信对方也有这般的相信），才能避开囚徒困境。而有意思的是，名誉和道德的束缚究竟在市场里有多大的力量？</p>
</li>
<li><p>[19.1.20] 和爸妈视频。昨天晚上我调侃妈咪给我回复了和前一天道晚安时一样的话，妈咪今天在视频最后说拜拜的时候突然想起，说到：妈咪没有复制黏贴的喔，都是亲笔的。瞬间泪崩。</p>
</li>
</ul>
<h2 id="19-1-19">19.1.19</h2><ul>
<li><p>【剧本】而我终于捡起了你的影子，染上了你眼神深处的黑色。一个人成年的时候，会把自己的影子脱下，仿佛蛇褪下的蜿蜒而皲裂的皮。</p>
<blockquote>
<p>而我终于栖息在你的影子里。</p>
</blockquote>
</li>
<li><p>经济学里的一个概念“廉价的对话”。那么爱呢。我一直受到家庭的爱。它是否又会被剥夺意义？是有区别的。在于主动和被动。家庭的这个场景更多应该被解释成“慢慢习惯了”，我并没有刻意引入“价值”和“效率”这个观点。但是在Dating相亲网站上当我主动发送一万封我爱你的消息的时候，我是在主动引入一个价值的比较。当人渴望情感但又不想为止牺牲太多的时候，是在贬低对方的价值，不过是个备胎。《共享经济》</p>
</li>
<li><p>“当一件事情做成，「举世誉之」之时，不要沉湎其中，静静走开，追逐下一个目标。”</p>
<blockquote>
<p>很多时候管理者需要这种情绪。</p>
</blockquote>
</li>
</ul>
<h2 id="19-1-18">19.1.18</h2><ul>
<li><p>我很难说出温柔是什么，直到一只猫咪经过 -用温热的身体- 蹭了我一下。</p>
</li>
<li><p>【产品思路】微信至今没有一键已读。为什么？不能依赖工具来解决焦虑。最后的解决办法都应该回到人的身上。如果有了这个选项，是不是意味着你会添加很多无关紧要的群，把解决焦虑的办法留给一键已读。这反而会伤害到那些真正想和你对话的人。</p>
<blockquote>
<p>【产品思路】[19.2.10更新] 为什么微信的时刻视频没有做滤镜。因为在拍生活的时候是不需要滤镜的，只有镜头对着自己才需要滤镜。微信的时刻视频是希望你多分享你的生活，而不是你在分享一个你包装的形象。</p>
</blockquote>
</li>
<li><p>区分被动思考和主动创造。</p>
</li>
<li><p>cyclegan；真人虚拟主播</p>
</li>
<li><p>歌词：Underneath the chandelier\<br>Now I unzip the back to watch it fall\<br>Versace on the floor\</p>
</li>
<li><p>只是希望看见你而已，而你到底在做什么根本不重要。<br>=&gt; 完全360无死角的直播。抑或者，放在斗兽场，去负责帅气，去负责厮杀。</p>
</li>
</ul>
<h2 id="19-1-17">19.1.17</h2><ul>
<li>“当一点点剥去自己的思想的混乱，再一点点重新建立起自己认同的价值观。当我脑中所有的观念都一起出席这反思的审判，我才能确定生活值不值得热爱。无论如何，我们都是借着思想而生活的，所以问题的关键不在于从事哲学与否，而在于接受一种廉价的替代品、没有挑战性的替代品，还是试图进行真正的思考。”——《大问题》罗伯特 所罗门<blockquote>
<p>我为什么喜欢文学。我无法想象自己会身处在一个毫无美感的境地。加缪。</p>
</blockquote>
</li>
</ul>
<h3 id="商业文摘">商业文摘</h3><ul>
<li><p><strong>影响力的基础是可重复性。</strong></p>
<blockquote>
<p>这是理解抖音和快手的关键。抖音太多一次性流量了。</p>
</blockquote>
</li>
<li><p>🌟 <strong>一个思维的方式：看看什么被消除了。什么被取代了。那么基于那些消逝的东西，他们的意义也被削弱了。比如，互联网消除了距离。而很多的关系和期待是基于距离的。</strong></p>
</li>
<li><p>什么叫参与感。就是让渡一部分决策权给用户。</p>
</li>
<li><p>假新闻不会消失的。因为它带来了一笔很丰盛的生意。</p>
<blockquote>
<p>关键在于选择权。twitter上用户可以取关不信任的陌生人。fb的动态推荐却是你的好友为你选择的。</p>
</blockquote>
</li>
<li><p>“然而，在一个言论富集的时代里，言论自由又意味着什么呢？当信息稀缺的时候，限制言论是一个真实的威胁；而当信息富集的时候，把人们与他们可能会反对的言论隔离开，其影响也是罔顾事实、不可接受的。”</p>
</li>
<li><p>“但我越来越害怕的是另一个极端：人们织起一个个茧，凡是有悖于自己世界观的观点都被封锁在外，只因为那会触碰自己的底线。其结果，人人充满惰性，没有能力与其他任何人达成共识。”</p>
</li>
<li><p>twitter必须被拯救。<br>“这就是为什么 Twitter 必须被拯救：网络和媒体的结合是无可取代的，特别是在当今，人人都知道这是一个巨大的商机。但哪怕《华盛顿邮报》做得再好，它也只是茫茫媒体中的一员。媒体用以传播信息的平台才是那个真正的天平，但 Facebook 已经明确了自己的头等目标：吸引人气、聚集财富，而它对「工程师能让一切变得更好」的确信，进一步促成了这个目标。至于这种只关注怎样让人们觉得舒服的做法会带来怎样的外部效应，他们并不关心。<br>相反，<strong>Twitter 的弱点正是它极度依赖于人本身。用户要自己构建消息源，自己寻找关系网，自己传播所思所想、即便或许根本没人愿意听。然而，这个弱点带来的回报，就是能把信息以前所未有的广度和速度传播出去。这对社会是有益的。这份外部效应应当被守护。</strong>”</p>
<blockquote>
<p>同样是微信公众号的逻辑。你几乎只会从朋友圈那里发现新的公众号。他极度以来人本身。</p>
</blockquote>
</li>
<li><p><strong>网络效应的意思是，你的朋友在 Instagram 上发 Stories，对你来说，效仿他是对你们彼此价值更大的选择。</strong></p>
</li>
<li><p>没有初心的。都是从后往前看突然发现的。一个特征是去看是不是一脉相承。twitter前创始人evan william在blogger，twitter之后创办了medium。<br>fb从朋友家人的网络转变到一个包含媒体，新闻的公开平台，是因为无法收购twitter而做出的模仿。<br>做给ins做story，是因为他们无法收购snappchat。</p>
<blockquote>
<p>重新温故一下fb做出那几个重大改变决定的原因。</p>
</blockquote>
</li>
<li><p>🌟 <strong>影响网页阅读思考效率的，是相关文章！！！！是，你可能还感兴趣。</strong></p>
</li>
<li><p>其实我也会祷告的。每一次在别人的文字里看到“阳光”，我总会想起加缪的那句话。“为了纠正天生的无动于衷，我置身于历史和阳光之间。历史告诉我，世界上的一切并不都是美好的，而阳光告诉我，历史不是一切。” </p>
</li>
<li><p><strong>我送给自己的成人礼。唐吉柯德。2019年，如果有什么书是你一定要看的话。</strong></p>
</li>
<li><p><strong>不要让growth hack透支了你应当的思考。</strong></p>
</li>
<li><p>与人交往里，最应该学会的一件事是，要清楚你的很多感觉是来自别人的。你感觉交流很舒服，是因为对方很聪明能够让你感到舒服。</p>
</li>
</ul>
<h2 id="19-1-15">19.1.15</h2><h3 id="voiceit">voiceit</h3><p>voiceit。拿到了CEO的名片。微软AI for good 冠军。</p>
<blockquote>
<p>找到了一个切入点。帮助不方便说话的人，识别他们的声音。<br>phase1: 有一个limited set词语，大概50个，然后让用户重复读得以训练一个supervised learning的模型。<br>phase2: 准备几句话，里面包含了所有的phonetic，音节，然后让用户来阅读这些话，每一个用户可以训练一个这样的模型。不需要限制的词语集。decentralizd learning。<br>phase3: 一个general model，而不是分布在各个用户手机上的个性化训练的模型。speaker-independent。</p>
<p>把voiceit定位和智能家居一起。尤其是和alexa的结合。所有一个gateway。让这些残疾人能够接入已有的这些IOT软件和硬件。</p>
</blockquote>
<h3 id="team8">team8</h3><p>8200前任部长们出来做的项目。形成人才库，中心化批量生产公司。上层研究并决定方向，然后人才库分配匹配人才组建公司。</p>
<p>以色列科技</p>
<ul>
<li>移民</li>
<li><p>国防 8200组织，以色利的国防安全部。</p>
</li>
<li><p>头条是相信大力出奇迹的。</p>
</li>
<li>个性化内容 到 个性化设计。</li>
</ul>
<p>曾经在百度贴吧上出现的二次元恶搞。</p>
<blockquote>
<p>总结我们的startup studio的重心：<br>找到一个共识的地方。【降低用户的UGC制作门槛，不需要用户自己的生活场景，只需要用户的创意】<br>比如MV，电影、电视剧的场景等等。</p>
<p>找到user story。</p>
<p>【动次】的踹轨。以及合轨。<br>【马卡龙玩图】</p>
</blockquote>
<h3 id="人有没有表达偏见的自由">人有没有表达偏见的自由</h3><blockquote>
<p>自由是有边界的。这道辩题想要讨论伤害和边界。<br>来自<a href="https://chocoluffy.com/2019/01/17/%E8%BE%A9%E9%A2%98-%E4%BA%BA%E6%9C%89%E6%B2%A1%E6%9C%89%E8%A1%A8%E8%BE%BE%E5%81%8F%E8%A7%81%E7%9A%84%E8%87%AA%E7%94%B1/">人有没有表达偏见的自由</a></p>
</blockquote>
<h2 id="19-1-14">19.1.14</h2><h3 id="《共享经济》-_who_gets_what_and_why">《共享经济》- who gets what and why</h3><blockquote>
<p>区别于价格市场，配对市场里，价格不能清理市场，市场参与者在意他们和谁交易，以及建立长期关系。由配对市场引出的几个规则很有意思，比如2012年诺奖理论的“延迟接受”算法，隐式市场里的第二高价拍卖机制，以及在稠密市场的情况下对堵塞的不同反映机制（提前交易或者最后入场等）。关于市场设计同样重要的还有（1）如何形成市场的稠密性。（2）解决市场堵塞。（3）保护设计使得参与者能够安全透露真实意愿。（4）合理释放信号促进市场效率。没有五星的理由是作者太执着于特定细分市场的规则分析，而且中译版的题目有凑热点的嫌疑，这本书并没有主要讨论大家希望了解的共享经济，而是在分析匹配市场的规则设计，也算是让我回顾了一下本科的博弈论这门课。拍卖是个人类很古老而智慧的发明，看看以后我可以怎么运用起来。</p>
</blockquote>
<p>来自<a href="https://chocoluffy.com/2019/01/20/%E4%BB%B7%E6%A0%BC%E6%97%A0%E6%B3%95%E8%B0%83%E8%8A%82%E7%9A%84%E5%B8%82%E5%9C%BA-%E3%80%8A%E5%85%B1%E4%BA%AB%E7%BB%8F%E6%B5%8E%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/">价格无法调节的市场 -《共享经济》阅读批注</a></p>
<ul>
<li>慢慢养成了收藏名字的习惯。aesop，sancho，dolorosa</li>
<li>最终在王座上栖息的不过南柯一梦。猫坐在上面，总是会比人温柔的。</li>
<li><p>一片叶子落下，融化在另一片叶子的阴影里。</p>
</li>
<li><p>是失望在推动改变。</p>
</li>
</ul>
<h2 id="19-1-13">19.1.13</h2><p>耶路撒冷。</p>
<ul>
<li>6 million, holocaust. 南京大屠杀30万，20倍。</li>
<li>I couldn’t hear, he cannot speak.</li>
<li>父亲对女儿说，If you don’t read it, you cannot inherit anything.</li>
<li>父亲的兄弟亲手窒息了自己的小孩，因为小孩的哭闹会让一家人被纳粹发现。</li>
<li>他想自杀，但是活下来为了讲一个故事。他成为了唯一的目击者。生命的意义变了。</li>
<li>这个世界是残忍的，但他相信他的故事能够传递下去。</li>
<li>女儿在演讲的结尾这么说：请尽力和我对话。dialogue。</li>
<li>父亲是一个妇产科医生。负责接生。见证出生。而讽刺的是，他也见证了最无理的死去。interleaving of life and death.</li>
<li>当一个人活着，而其他人死去。他责怪他自己。</li>
<li>trump。经济的确改善了，这堵住了人们的口。为什么当时的年轻人相信纳粹。</li>
<li>《我的奋斗》统治的艺术。管理，本质上都是权力的施加和影响。而历史上最大范围的权力影响，就是纳粹。</li>
<li>马克吐温，历史不会重复自己，但会押韵。</li>
<li>大屠杀纪念馆。昏黄蜡烛。镜面无限闪烁。纪念馆只做一件事，就让我不断重复你的名字。</li>
</ul>
<blockquote>
<p>记忆。轻。<br>只是我们的时代没有这些残酷的选择。<br><strong>极端：他操控了我们所有的故事。</strong></p>
</blockquote>
<ul>
<li><p>和最好的朋友m一起聊天。他说，他曾经有一段时间很悲观，他觉得每个人都是一个棋子，都在被操控着。他说在最终被操控的那一天之前……我接话：“去自杀”。他说，“去成为操控别人的人”。</p>
<blockquote>
<p>我突然很欣慰我的回答。</p>
</blockquote>
</li>
<li><p>微信7.0的时刻视频。里面大部分都是女生发的抖音视频。但是微信里面暂时并没有编辑时刻视频的工具。张小龙希望做到的是记录真实。他说，人并没有记录的需求的。-但是人有渴望交流的需求。-“记录或者拍摄，拍一个视频并不是用户的需求，大家没有这个需求。不信你看一下自己的手机里有多少视频就知道了，你其实没有拍过几个视频。即使拍很多的照片也不会再看了。”</p>
<blockquote>
<p>朋友圈是一个精致社交的地方。但无论是“看一看”还是“时刻视频”也好，都还没有真正解决张小龙希望解决的问题，就是”真实“。只要最终依旧有强提醒，最终依旧会曝光给好友看。虽然他最新改版的slogan是正确的：“因你看见，所以存在”。但是实际上并没有真正做到。<br>[19.2.21更新] (1) 一个相反的事实观察是：当微信更新后给时刻视频新的入口“你的新好友动态”之后，朋友发时刻视频的频率反而提高了。 (2) 另一个观点是，“一定会曝光给好友看”不一定是坏事。关于自己生活动态的曝光，对发布者来说主要分两种目的，一种是刻意树立、维护自己形象，另一种是随意的分享一些情绪，观点。</p>
<p>一种改进是，默认发送给“最近互动的人”，后台记录了朋友圈里相互互动的人，然后发送时刻视频的时候，有一个选项是只发给互动的人。</p>
<p>管理“群组可见”的最大的坏处是，对自己反馈。这是一种很负面的反馈，用户会讨厌一个分组的自己，斤斤计较身份，带有目的性的自己。-从工具本身削弱社交的目的性。比如微信时刻视频不提供任何滤镜。-</p>
<p>快手可以比微信更加真实的原因就在于陌生人的关系。就像微博的我比微信的我更加的真实。<br><strong>熟人：形象image。因为和我们生活的其他方面有交集。我们的形象是破碎而不连续的。而维持多面的形象非常费力。问题不出在熟人，而是出在交集。当多层社会关系出现交集的时候，就像在一席大桌饭宴上，你的态度是由你其中最严肃的社会关系所决定的。</strong><br><strong>陌生人：名声reputation。能够持续的维护同一个形象而形成名声。没有交集的焦虑。</strong><br>[[张小龙回应一切！2019微信公开课一人撑到半夜，4小时演讲3万字实录]]</p>
</blockquote>
</li>
<li><p>同样的$100的东西，一次性付清$100，没有分4次每次到店来付$25好，需求的稳定性，优于强调这个交易的完成。</p>
</li>
</ul>
<h2 id="19-1-12">19.1.12</h2><ul>
<li><p>人们为什么想看日出？看世界慢慢附上颜色。</p>
<blockquote>
<p>[19.2.21更新]人们希望以一个不常有的形式冲击自己，像用冷水醒酒一样。人们对景色的新奇和期待远远超过了对自己内心的反照。</p>
</blockquote>
</li>
<li><p>意义，在连续被中断的空白里。照片。</p>
</li>
<li>凌晨坐巴士进山。哑暗的山峦。夜间飞行。马修姆。</li>
<li><p>果冻一般的云朵，凝固在天上。日出以后，就融化了。</p>
</li>
<li><p>最大的渠道最终会成为最大的内容生产商。了解一下，网络中立法案。</p>
<blockquote>
<p>[19.1.17更新] 国内一个很好的例子：腾讯大王卡。王欣的新社交应用马桶MT发布的时候，需要手机注册，使用腾讯大王卡的用户连短信验证都收取不到。</p>
</blockquote>
</li>
</ul>
<h2 id="19-1-9">19.1.9</h2><h3 id="itrek_-_Israel_innovation">itrek - Israel innovation</h3><ul>
<li>教授说，if only one reason: -“no fear of failure”-: frontier; geolocation, no nearby neighbours will buy from you, and you have to think and sell globally. -IQ is all the same, the bell curve.- But do not fear failure. 文化和个人同样重要。<blockquote>
<p>🌟 还是steve jobs那句话，once you know the world is made up by the people not smarter than you, the world will totally change.</p>
</blockquote>
</li>
</ul>
<p>坐在沙漠中心，真适合重新看一遍英国病人。</p>
<h3 id="重读《英国病人》">重读《英国病人》</h3><ul>
<li>在沙漠里一个字眼可以伴你走上几百英里。</li>
<li>我确信能够从沙漠里走出来，因为我很清楚怎样活在沉默里。</li>
<li>她念给我听，像是展开翅膀把我拢着。</li>
<li>我喜欢和你面对面谈话的理由是，你离我很远，这很安全。温柔。</li>
<li>我只看气质。从一个人的气质可以看出她所有的努力。</li>
<li>晚上在放篝火。灰烬旋转，上升。我们都老了。</li>
<li>我曾经只顾及自己的梦想，现在更多的，是你们的。</li>
<li>（以后用作小说开头）她知道，如果听见了窗外的雨声，巢里的鸟儿就会少一只。</li>
<li>他和他那严肃的天赋。</li>
<li>那里有星空的暗沉，有烟味。</li>
<li>“年轻的时候，我们不照镜子。一直到老了，我们开始在意我们的名字，我们的传奇，我们的生命对未来意味着什么。我们随着我们的名字变得虚荣，声称我们是最早的见证者、最强大的军队、最聪明的商人。纳喀索斯老了以后，才会想起要一幅他自己的刻像。”</li>
<li>沙漠。意味着，所有我们以为可以一直存在的，什么也没有留下。</li>
<li>从热气腾腾的帐篷走出来，像是溺水的人终于被救起。</li>
<li><p>沙漠里的夜晚。上弦月。selenophile. 迷恋月亮的人。</p>
</li>
<li><p>我突然发现我很容易被震撼到。仅仅是一小点阳光就足够挽留我了。沉默也能。</p>
</li>
</ul>
<h3 id="Jeffa">Jeffa</h3><p>野蛮。<br>估计可以预定年度最讽刺的一幕了。<br>那一刻我仿佛置身罗马斗兽场。有的粗语挑衅，有的挑逗。</p>
<p>我所理解的温柔，是靠近，不打扰。</p>
<blockquote>
<p>温柔，直到，猫咪经过，蹭了我一下。这</p>
</blockquote>
<p>甲板上的缝隙。褐色猫躲在哪里。</p>
<blockquote>
<p>那如果他们真的在打架，又或是喜欢被挑逗呢。或许我也是误会。我一定不会出声的。我会沉默。</p>
</blockquote>
<ul>
<li><p>tel aviv.<br>tel: layered<br>aviv: spring<br>一层又一层堆叠起来的春天。<br>Aviv is Hebrew for “spring”, symbolizing renewal, and tel is a man-made mound accumulating layers of civilization built one over the other and symbolizing the ancient.</p>
</li>
<li><p>不破不立。我皲裂而展开花瓣般弧度的皮肤，是我曾奋力成长的证据。平滑是我闲致的礼物和诅咒。</p>
</li>
<li>可是一想到教堂和音响的组合就觉得很奇怪啊。</li>
</ul>
<h2 id="19-1-10">19.1.10</h2><p>屋顶上的鸭子。仅仅因为市民喜欢<br>smart city：city listen to its residents.</p>
<h2 id="19-1-8">19.1.8</h2><ul>
<li><p>学习vitalik的看书和思维训练方式。<br>“我重读了你博客上的所有文章，发现有两个非常重要的经济学成果，一个是基于Greg Mankiw的menu cost model，另一个是Fischer Black关于货币均衡的不确定性的论文。”</p>
</li>
<li><p>【剧本】<strong>受害者享受受害的过程。</strong>【享受这个过程带来的流量】-&gt; CNN和特朗普都很享受现在互相开战的状态。</p>
</li>
<li><p>很多人只是懒，并不是没有需求。人们会很轻易地压抑甚至改变自己的真实需求，仅仅为了迎合社会期望，自我保护，或者一些私人欲望，比如懒。</p>
</li>
<li>很多人创业是不得已的。能力强的人有更多的选择，也有更多的诱惑。</li>
<li>-不同性格的人都会运用这些智慧来自圆其说。-昆德拉。一个圆。那些人，最终不过从家庭走向了家庭，从流浪回到了流浪。</li>
</ul>
<h3 id="回顾">回顾</h3><ul>
<li>这一次选举的结果不会凭空增加国民财富和就业机会， 它不过是以选举人的意志重新分配了财富， 而分配， 意味着你在一份的花销多了， 势必对另一部分的花销有影响。</li>
<li>人们可以在自己的本能和欲望中注视到许多象征的缘由。 或许象征本身， 就是人们所力所不及却昼夜痴狂的一种群体记忆吧。而没有了回响， 也就没有了意义。</li>
<li>selenophile. 迷恋月亮的人。</li>
<li><p>我反悔了。我要养两只猫而不是一只，伊索和桑丘。Aesop and Sancho. 伊索的出现，对我来说像一个寓言。而桑丘，则是唐吉柯德最忠诚的仆人。每一个寓言都需要一颗忠实守候的心呐，我只希望那颗心可以不是我的。</p>
</li>
<li><p>以色列，灰色山脉，拆弹。英国病人。</p>
</li>
<li>山坡，森林。刘慈欣。带上一双眼睛。</li>
<li>看书，有很多个故事的陪伴。</li>
<li>导游在以色列服兵役时是狙击手，在边境的驻扎地营救了两个来自叙利亚的小孩子，姐弟。雪夜。500千米之外的的家园被侵入。黑夜，姐姐左手二级烧伤。<blockquote>
<p>以色列边境，灰色山脉，弃屋残骸，拆弹。翁达杰。英国病人。</p>
<p>翠绿山坡，细雨湿透了每一片花瓣，森林。刘慈欣。带上她的眼睛。</p>
<p>在大巴上望着窗外看着这个世界路过。联想起好多心事，但感觉好幸福，我有好多故事的陪伴。</p>
</blockquote>
</li>
</ul>
<h2 id="1-7">1.7</h2><h3 id="itrek_-_影响israel五个最重要的因素">itrek - 影响israel五个最重要的因素</h3><ul>
<li>map geolocation</li>
<li>enormous youth</li>
<li>self identity. Islam</li>
<li>Water belongs to whom? Build dam! A weapon of war!</li>
<li><p>Dictatorship </p>
</li>
<li><p>想法：直播那棵树🌲直播带来的即时反馈。</p>
</li>
</ul>
<h2 id="1-6">1.6</h2><ul>
<li>这段时间对外输出有点多了。还是要每天留多些时间给自己。今年的重点是技术开发和产品思考。不要让别人偷走你的孤独。</li>
</ul>
<h3 id="vitalik谈话记录">vitalik谈话记录</h3><p>（以下文字来自文章）</p>
<ul>
<li>大量资金的介入带来的流动性意味着投机活动的增加。限制流动性很大程度上可以限制投机。因而在这个阶段，大量资金进入加密货币领域并不是一个很紧要的需求。</li>
<li>新加坡的沙盒实验</li>
<li>一种对加密货币估值的方式是将其当作一个通过收取交易费盈利的公司，特别是在一些交易费被燃烧或者重新分配给POS验证者的案例中。</li>
<li>影响很大，因为量子计算将使许多现代使用的密码学不再有效。数字签名算法将不再有效。公钥加密不再有效。零知识证明的纠缠不再有效。<br>好消息是，对于这些不再起作用的东西，人们在十多年前就已经找到了替代品：基于哈希的签名，-零知识证明的STARKs-，基于椭圆曲线同基因的公钥加密。我认为它将带来一场转变，但最终，我们知道如何适应它。</li>
<li>比如说，我认为广告在传统广告方面肯定被高估了。但是广告更广泛的范畴是试图影响公众的思维方式，让你的产品受益。我认为在未来的几十年里，我们会看到很多广告领域的创新，好坏都有。<br>（译者注：很巧的是，前不久A16Z的合伙人Benidict Evans也表达了类似的看法，他认为广告和市场营销本质上是一类业务，更宏观一点，这些都可以归类为“获取用户”，也就是Vitalik说的影响公众的思维方式。<br>仔细想想看，现在的消费者是如何形成消费决策的？他们是如何得知某件商品或者服务的？他们信任谁的推荐，他们愿意为谁买单，或者排超级长队？<blockquote>
<p>去关注那些自然流量产生的地方。</p>
<p>以及ig的marketplace！！<br>我们曾经觉得，社交就是社交，卖东西是卖东西，后来拼多多和微商狠狠的给我们上了一课，以后这类融合只会更多。）<br>-广告的本质是：影响力的交接。-</p>
</blockquote>
</li>
<li>自由避税天堂和一般的自由主义天堂都有个问题，那就是既吸引喜欢自由的人，又吸引富有却不太有趣的人。<blockquote>
<p>怎样可以设计机制获得核心的人群。</p>
</blockquote>
</li>
<li>我更感兴趣的是社会类科幻小说，尤其是那种探索复杂系统的，比如人们如何互动，政治和经济系统如何运行，以及它们是如何失败的。 <em>特别是在没有出现希特勒这样的人物的情况下，系统如何失败。</em></li>
<li>另一方面，有时候高效率是需要规模经济做支撑的，比如陆地交通，只有亚洲这些国家，中国，韩国，日本，才有高铁。<blockquote>
<p>以色列是没有地铁的。这不能说明以色列的公共交通是不高效的。这只是说明它不需要地铁的高效。它的出租车系统，单车系统就能够高效地支撑起社会运输功能。效率这个词是和规模挂钩的。而效率上的新发明，也严重依赖于规模程度和规模经济。所以中国会有高铁，有四通八达的地铁，而以色列不需要高铁甚至地铁。<br><a href="https://orange.xyz/p/297" target="_blank" rel="noopener">对话Vitalik：社会进步有时候只是幻觉，真的发生的时候却很难理解               - 橙皮书</a></p>
</blockquote>
</li>
</ul>
<h3 id="《让大象飞》">《让大象飞》</h3><ul>
<li>直接从伟大愿景开始不是不可能。只是太难了。伟大愿景是被公众和媒体重新构建出来的，为了让成功更具说服力，更具备因果关系。</li>
<li>人数多了就开始出现分工了。以及身份的扮演，乃至角色的社会压力。这些对初创企业是不够有效率的。其次是决策效率。想象一下组织二三十个人晚上吃什么这个过程。</li>
<li>-更大的互动性和实时性。参考RocketOn，这也意味着愿意暴露更多不受主流关注的行为和数据并且在其中找到共识。-RocketOn这个例子：每个人的虚拟avatar化身在网页上保存然后可以相互交流。<blockquote>
<p>我做笔记这个过程：我们大部分人更擅长的是被迫思考，在一个应激的环境下产出思考。譬如看资讯给一些批判；看书之后写个书评。要尝试去在一个主动关掉信息输入的环境下，主动去构筑一个世界。哪怕这会是一个暂时糟糕的世界。要锻炼这种能力。</p>
</blockquote>
</li>
</ul>
<h2 id="2019-1-4">2019.1.4</h2><p>所有的社区的核心都在于人。最终体验的终点都会是个性化。</p>
<h3 id="《订阅》3-5/5">《订阅》3.5/5</h3><p><a href="https://chocoluffy.com/2019/01/04/%E9%9D%9E%E4%B8%BB%E6%B5%81%E7%9A%84%E4%B8%BB%E6%B5%81-%E3%80%8A%E8%AE%A2%E9%98%85%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/">《订阅》- 阅读批注</a></p>
<blockquote>
<p>现在的快手，像是youtube。而仔细观察之后微博则像是他们打算留存IP的地方。<br>[19-2-21更新] 微博关注点在普通人对名人动态的关注。而普通人平时的随意记录所能够得到的反响非常少，类似豆瓣，除非去蹭热点。这个是应该由算法解决的问题。而快手给了一大部分人曾经微博提供的功能。</p>
</blockquote>
<ul>
<li>《奈菲文化手册》、《重新理解创业，一个创业者的途中思考》。</li>
<li><strong>被肤浅地理解本身，就是一种解构-重构的过程。</strong>现在的我们所做的和以前的我们并没有什么不同，以前的我们通过年久失修的电台和拼凑的报纸获得资讯，现在的我们依赖youtube，快手。<blockquote>
<p>youtube是传递信息，娱乐，互相理解的一个很重要的方式。</p>
<p>这可以意味着更多的改变，也可以意味着更少。那一点的信息足以让我怀疑政府的动机，而那一点的破粹也足以让我对美好失去信心。</p>
</blockquote>
</li>
<li>当我们看不懂，看不惯的时候，我们习惯说那是一个人人哗众取宠的名利场。<blockquote>
<p>[19-2-21更新] 当我们看不懂，也不想看懂另一个人的时候，我们习惯说那是一个人在哗众取宠。</p>
</blockquote>
</li>
<li>而视频，曾经是制作成本和分发成本最高的娱乐方式。</li>
<li>快手课堂。商业化。是我感兴趣的方向。</li>
</ul>
<h3 id="《newsroom》">《newsroom》</h3><ul>
<li>truth. no twitter. </li>
<li>“empathy. he got knocked down, but you won’t get taller.“</li>
<li>《树上的男爵》。最终还是从树上下来了。</li>
<li>我们每一天都在吵。知道为什么在我和他们的每一次争吵里我都会赢吗。因为他们让我赢的。</li>
<li>记者： you like the unguarded moments.</li>
<li>你不需要一个律师来告诉你什么是正确的，什么才是合理的。他们知道什么是对的还是错的。某人在热烈宣扬的正义，往往意味着不正义。</li>
<li>people get the face they deserve.</li>
<li>你的偶像是谁，Will吗，很接近了，是ed murrow。</li>
<li>i don’t want to expand the definition of news, i want to narrow it. </li>
<li>i am not talking about apparatus. </li>
<li>please tell me you know i am right, please!</li>
<li>Irish stoicism</li>
<li>baptism</li>
<li><strong>i am here to beg you not to do it.</strong><blockquote>
<p>一个被raped的princeton student，要利用互联网复仇。ACN的新CEO认为这是一个promo的节目，邀请受害者和凶手在同一个节目对话。producer不希望这个节目发生。可是当他去访问受害者做pre-interview的时候，受害者乞求他去做。<br>极端吸引极端。我的眼泪出来了，我的伤口在这里。让我复仇吧。<br>所有的outrage都可以通过复仇来反击。<br>总有人会享受相互伤害，但那不是文明。 </p>
</blockquote>
</li>
<li><strong>mission to civilize</strong></li>
<li>you know what, in the 6 minutes ago, we did the news well, you know why? because we decide to.</li>
<li>“There’s a hole in the side of the boat.That hole is never going to be fixed and it’s never going away and you can’t get a new boat. This is your boat. What you have to do is bail water out faster than it’s coming in.”</li>
<li><p>我很感动你依旧反抗我。这才是我想要的。</p>
</li>
<li><p>netflix 用支线剧情来做教育视频。</p>
</li>
</ul>
<p>知识付费。</p>
<ul>
<li>PGC高成本</li>
<li>实体教育，同一遍知识讲很多遍。<a href="https://36kr.com/p/5144691.html" target="_blank" rel="noopener">https://36kr.com/p/5144691.html</a></li>
</ul>
<h2 id="2019-1-2">2019.1.2</h2><ul>
<li>微信两次把重要功能留给下拉手势了：小程序和时刻视频。</li>
<li><p>视频配乐来自物体识别。</p>
</li>
<li><p>私家车车身卖广告。</p>
</li>
<li>对于其他生物而言。老弱病残意味着死，而我们生而为人，意味着他们还可以有尊严地活着</li>
</ul>
<p>重新编辑的权利：</p>
<ul>
<li>微博在你进行了推广之后，不允许你重新编辑微博了！很有意思的点。你如果阅读量少，可以无限制修改！</li>
</ul>
<h2 id="2019-1-1">2019.1.1</h2><p>2018年度总结: <a href="https://chocoluffy.com/2019/01/01/%E6%8A%B5%E6%8A%97%E5%AD%98%E5%9C%A8%E7%9A%84%E8%A2%AB%E9%81%97%E5%BF%98/">抵抗存在的被遗忘 - 2018年度总结</a></p>
<h3 id="素材">素材</h3><p>动荡的生活，容易带来一种时光飞逝的感觉。当我还没来得及记住多伦多的整个夏天，眼前的雪，带来了纽约的冬天。</p>
<p>昨晚登机回国，和小伙伴们告别，哭得稀里哗啦。候机的时候，想看会儿书，本来在kindle里昆德拉的《不朽》开了个头，但最后还是认输地从背包里掏出来加缪的这本手记。那一刻我有一种感觉，我以后可能再也离不开他的文字了。</p>
<p>我很难解释清楚这个秘密。我想起他总提到的反抗。这意味着在一个分崩离析的世界里保持清醒，却也不依赖理性来获得希望。</p>
<p>加缪。有意思的几件事。小偷的正直。和妓女的爱。</p>
<p>每个人身上都有些荒谬的，矛盾的地方。某个人在某些特定场合热烈宣扬的正义，或许是极大的不正义。</p>
<p>每个人都带着自己的荒谬生活着。回忆，被传颂成诗。</p>
<p>为什么我不喜欢别人把我当作好人。我会习惯性的说我不是。</p>
<p>堂吉柯德是为了反对中世纪的骑士文化而写就的反骑士小说，而塑造了最脍炙人口的骑士主义。我要的，是自由。</p>
<p>自由，是选择的权利。</p>
<p>今年对我来说的关键词是选择和荒谬。是徘徊和坚定上路。是沉默和阳光。为了纠正我天生的无动于衷……</p>
<p>那些我经常写下的，是祈祷，还是审判。</p>
<p>有时候真的蛮害怕的，失去感受的能力，像失去雨的冰凉。失去完整叙述一件事的能力。时间就像风一样流过，而我却看不见风的尾巴。</p>
<h3 id="关键词">关键词</h3><ul>
<li>人容易变得很宏大。带着更大规模的爱与恨，喧嚣和寂寞。</li>
<li>我们要允许有些东西它不会改变。它需要代价。它没有意义。</li>
<li>每个时代的愚昧都是固定的，而且装饰着不同的样子。我感兴趣的，是你的理由和过往，而不是你的选择。</li>
<li>假装。</li>
</ul>
<p>我的回忆像文字，而文字，也不过回忆。它被静静地写下来，没有什么意义，只期待着被朗读过。</p>
<p>《小说的艺术》里他提到，“小说的意义是发现只有小说才能发现的，探索人的具体的生活，保护它，<strong>抵抗存在的被遗忘。</strong>”</p>
<blockquote>
<p>这个时代是流行告别的。亦或者说，只在我们告别的时候，我们才想起来它们的存在。</p>
</blockquote>
<ul>
<li>游戏时代和严肃性。</li>
<li>和庆祝无意义。</li>
<li>自由的背面。是束缚。是彷徨。是媚俗。</li>
</ul>
<p>微信公众号：沉默与阳光<br>简介：为了改变天生的无动于衷。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[价格无法调节的市场 -《共享经济》阅读批注]]></title>
      <url>http://chocoluffy.com/2019/01/20/%E4%BB%B7%E6%A0%BC%E6%97%A0%E6%B3%95%E8%B0%83%E8%8A%82%E7%9A%84%E5%B8%82%E5%9C%BA-%E3%80%8A%E5%85%B1%E4%BA%AB%E7%BB%8F%E6%B5%8E%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<p>4/5星。</p>
<p>区别于价格市场，配对市场里，价格不能清理市场，市场参与者在意他们和谁交易，以及建立长期关系。由配对市场引出的几个规则很有意思，比如2012年诺奖理论的“延迟接受”算法，隐式市场里的第二高价拍卖机制，以及在稠密市场的情况下对堵塞的不同反映机制（提前交易或者最后入场等）。关于市场设计同样重要的还有（1）如何形成市场的稠密性。（2）解决市场堵塞。（3）保护设计使得参与者能够安全透露真实意愿。（4）合理释放信号促进市场效率。没有五星的理由是作者太执着于特定细分市场的规则分析，而且中译版的题目有凑热点的嫌疑<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，这本书并没有主要讨论大家希望了解的共享经济，而是在分析匹配市场的规则设计，也算是让我回顾了一下本科的博弈论这门课。拍卖是个人类很古老而智慧的发明，看看以后我可以怎么运用起来。</p>
<ul>
<li>价格无法调节。甚至不应该调节的时候。考虑的是配对的市场。</li>
<li>除去价格市场，还有这个配对市场。双面配对的过程。</li>
<li>价格，某种意义上消除了歧视。（区分理解价格歧视）只要你买得起，你达到价格。配对市场，是很远古的一种交换方式。</li>
<li>【逻辑】我们思考正面，为了更好的认识反面。</li>
<li>市场不是完全自由放任的，因为市场参与者都知道市场在运行的规则。</li>
<li>互联网，使得市场稀疏成为可能。以色列的很多餐厅，固定晚上八九点才开门。一个稠密的市场。也只有在稠密的市场，中介才会存在。而稠密的市场一个弊端就是堵塞的出现。而<strong>堵塞的出现意味着（a）渠道的重要性已经盖过了商品本身，（b）交易渴望提前完成。而市场之所以要降价，是为了降低市场的稠密度。</strong></li>
<li>简单与复杂。成长，是一个慢慢变复杂的过程。简单，在于专注于自己；复杂，来自于别人。</li>
<li>进化是配对的缔造者。</li>
<li>目前的交易都是匿名的。基于纸币的交易。</li>
<li><strong>商品越无法标准化，越成为一个配对市场而不是一个自由交易市场，同理的，如果我希望设计一个自由交易市场，首要任务就是标准化。</strong>小麦的批次是没有不同的。而学生申请等是极度个性化的。<strong>配对市场里，价格不能清理市场，市场参与者在意他们和谁交易，以及建立长期关系。</strong></li>
<li>市场会逐渐走向贫富悬殊的极端，因为稠密性的好处。</li>
<li>肾脏交换项目。核心是使参与同个交易的市场变得稠密。原本只能够两者交换的情况变成一个链式结构，允许陌生人之间的匹配，然后同时手术交换。</li>
<li>速度竞争还是价格竞争，哪一个利于市场的健康发展。金融市场的一个变化是，恢复价格竞争，使得优先几毫秒获取到信息的这个行为失效。这个模型里，市场内一秒内的报价被累加，取代交易在快速交易者之间进行的情况，而在那些提交了更高报价和更低询价的交易者之间进行。<strong>匹配市场突出速度竞争，会导致市场建造渠道来达到目的，造成资源浪费；价格竞争，使得对信息渠道的投资失去意义，而转向对实际价值的预估。</strong> (以前交易所都要建的的很近，甚至交易所还推动了光纤的发展)。<strong>价格竞争的一个弊端，就是速度，无法立即完成交易。</strong></li>
<li>在市场稠密（堵塞）时选择提前竞争的，往往是次优者。</li>
<li>Airbnb和Uber的例子，把原本是提前预定（缺乏交流）的市场聚合成一个稠密的市场，并提供了工具来实时交流。<strong>这些市场的特征：需要花费大量时间去发现和交流信息资源。这就是机会。</strong></li>
<li>Ebay原本是通过拍卖出售的，但是后来也改成了固定价格出售，因为这种交易方式更快，你可以立即买到任何你想要的东西，且无须承担拍卖失败的结果（尝试另一次拍卖）。<strong>拍卖的弊端：你必须等待他人做出选择才能做决策。优势：你可以预估它对自己的真实价值。</strong></li>
<li>典型的匹配市场：房屋买卖，就业市场，升学市场。最终因为市场堵塞都导致一系列表现为以有限时间内决策的交易方式。</li>
<li>需要人为制造一些不方便。<strong>这也是熟人社会的特点，设计一个依赖良好信誉的社会。</strong>而一个陌生人的社会，如何让人相信和陌生人交易也是安全的。事实是，买家和卖家都希望从对方那里得到安全保证。</li>
<li>相互以用户名评分（双方几乎都是好评）-&gt; 用户可以匿名给商家评论。</li>
<li>一个很有意思的现象，<strong>ebay曾经的拍卖机制导致一个策略就是最后进场。而自由价格市场在市场堵塞的时候往往导致的策略是提前交易。</strong>拍卖机制导致用户隐藏自己的关键竞价信息，当参与者不愿透露真实信息时，市场往往会失效。</li>
<li><strong>“延迟接受”算法</strong>：（2012年诺贝尔经济学奖）<ul>
<li>买家、卖家各准备一个偏好排序</li>
<li>每一个卖家给首选发邀请</li>
<li>买家在所有收到的邀请里默认选择自己偏好最高的一家（或N家，根据具体情况），并回绝其他的选项。</li>
<li>每一个卖家再依次给第二、第三顺位等发送邀请<br>可以证明这个匹配算法里不会产生阻塞配对（配对结果是稳定的）。同时参与者不会提前离场，因为值得等待。<strong>同时这个市场并不堵塞，因为参与者提前做出了决策。（不必等待他人所做决定而得到自己的结果）</strong>；以及参与者能够透露自己的真实意向；<strong>前提：需要一个机器中介，在收到双方的意向之后同时统筹做出匹配结果的回应</strong>。（同理反过来也行，比如每一个买家给首选的卖家发邀请，卖家方可以保留前N个选择，cache住和未来通过非首选收到的邀请一起比较，取前N个。）<blockquote>
<p>而现实生活中的很多市场往往还达不到上文所讨论的稠密程度。</p>
<p>没想到复习了一遍本科上的博弈论。</p>
</blockquote>
</li>
</ul>
</li>
<li>细节决定设计。好的市场设计，是鼓励参与者去交流他们真实的想法并且能够保护住的。</li>
<li>匹配市场和信号。<strong>延迟接受算法的前提是双方的偏好排序。</strong>有时候在“延迟接受”算法所需要的偏好排序是在市场里不存在的，比如美国的大学申请Common Application，学生可以通过这个系统申请大部分的美国大学，但同时<strong>每一份申请都是独立且平等的。这个时候提高市场效率的方式是，设计机制暴露参与者的偏好信号- （比如在系统里添加一个功能是允许用户给其中三所学校发送标记，说明自己有优先的意愿。）同样的场景也发生在社交相亲（Dating）的市场里，迷人的女性会收到大量的信息而无法及时回复，而男士会因此给更多的女性发送信息，导致市场堵塞。</strong>经济学里的一个概念叫做“廉价的对话”，一旦对话变得廉价，它便不再能可靠地传递任何信息。<strong>比如一封“我爱你”的邮件，一旦群发给一群人的时候，它就不再有意义了。</strong>所以很多仪式、时尚会刻意营造一种稀缺感。**当装饰泛滥的时候，它便不再能够传达意义了。<blockquote>
<p>于是一个Dating App可以这么设计。设计一个虚拟的物件（譬如玫瑰），每个人每天限制限量有3只（少量），无法通过交易得到。可以在发送信息的时候附上这个物件以传达更多的真实偏好信号，而促进市场效率。</p>
</blockquote>
</li>
<li>生物界有一种现象叫做“尾羽”，尾羽能够吸引异性，但同时也容易吸引捕食者的注意。这个特征被进化所保留了，实际上传达的是一种“健康”的信号，“即便我有那么不方便的尾羽我依旧存活了下来”证明我的生存能力。人类社会里也是有很多“尾羽”现象的。资产多的银行会修建恢弘的大楼，为了让人们相信他们有雄厚的财力而且不会逃跑到别的地方去。<strong>阻塞市场里，注意区别主动和被动的信号，主动的信号传达的信息优于被动的信号。兴趣偏好是主动的，尾羽、好的成绩、恢弘的大楼是有利条件，是被动的。</strong>另一个思考的方向是，这个信号是否对双方都有利益价值。尾羽对于雌孔雀、华丽大楼对顾客都没有直接利益，但在<strong>拍卖中，发信号者的付出与接受者的收益相等。</strong><blockquote>
<p>约会Dating App因为特别容易聚集陌生人，能够很容易形成一个稠密的市场，但是市场的堵塞是影响其市场有效性的重要原因。</p>
</blockquote>
</li>
<li>证明稀缺资源，其实就是在证明机会成本：我本可以把它用在别的地方，我本可以把信号发给别人。</li>
<li>在确定拍卖物品对自己的价值的时候，已第二高价成交的隐式买卖优于最高价的公开买卖。<strong>买方的利润：物品对自己的真实价值 - 自己所支付的价格。</strong>在最高价成交的公开买卖中，买方为了收益，会报小于自己实际价值的价格。而在第二高价的隐式买卖中，买方报出自己实际价值是安全的，即如果成交获得的利润是稳定的，无关于自己的报价。而对于卖方来说，第二高价隐式买卖市场里成交的价格反而会高于最高价成交公开买卖的成交价格，因此也是有利的。<strong>但在买家无法确定物品的价值的时候，情况会变化。</strong></li>
<li>还有一种荷兰式拍卖，强调完成拍卖的时间要迅速，于是反向从一个固定价格向下移动，直到有人按停秒表并按照那个暂停位置的价格完成买卖。<blockquote>
<p>总结：<strong>拍卖最重要的一个功能就是：价格发现。但需要提防由于信息公开导致的价格狙击，即最后入场的问题。</strong></p>
</blockquote>
</li>
<li>交易金钱化的弊端：（以肾脏买卖举例）<ul>
<li>客观化。失去道德价值。</li>
<li>强迫性。当价格满足时一定会完成的交易。</li>
<li>失去同情心。譬如公众会认为穷人和弱势群体可以通过买卖肾脏来换钱，那么不需要给予同情。</li>
</ul>
</li>
<li>肾脏买卖的一个极端推理是：心脏买卖。如果达成交易的时候你会死呢？</li>
<li>亚当斯密在《国富论》里说，“我们期待的晚餐不是来自肉贩、啤酒酿造者或者面包师傅的善行，而是因为他们考虑到自身的利益。”</li>
<li><strong>解决方案，是市场设计的挑战。但也正是因为有人反感，我们才有机会去理解这些反感，也能理解在极端情况下它对市场意味着什么。</strong>同时这也是一个社会问题。志愿兵是有工资支付的，服役是一个荣耀的被社会认可的经历，同样的，我们也值得期待那些捐献过肾脏的经历成为认可的经历。</li>
<li>很有意思的推理。我告诉你A、B、C三家餐厅傍晚处理拥挤问题的方式，由此我可以推理出他们桌布的颜色。</li>
<li>哈耶克：“自由主义者对社会的态度，就像园丁照料花草的态度，为了创造有利于花草成长的最舒适环境，必须充分了解植物结构和植物起作用的方式。”在花园，完全不靠任何帮助而自由生长的是野草。<blockquote>
<p>而恰好自由价格市场是最合适的一种发现价值（发现信息，反馈信息）的机制。</p>
</blockquote>
</li>
<li>哈耶克：“比起放任原则，对自由市场最大的伤害可能是那些自由主义者对经验法则的固执己见。”</li>
<li><strong>市场就像语言。它们都是古老的人类发明，都是人类用来自我管理、合作、协调和与他人竞争，最终找出谁得到了什么的工具。</strong>市场是人类发明物。就像过去几千年农业所经历的转变。第一批农民种的是他们找到的东西，但随着时间推移，农民能够保留他们种的最成功的作物的种子，然后在接下来的几年种植这些种子，所以他们不经意地成为了植物栽培者。</li>
</ul>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">原版书名《Who Gets What - and Why: The New Economics of Matchmaking and Market Design》，中译版名字《共享经济 - 市场设计及其应用》。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[人有没有表达偏见的自由]]></title>
      <url>http://chocoluffy.com/2019/01/17/%E8%BE%A9%E9%A2%98-%E4%BA%BA%E6%9C%89%E6%B2%A1%E6%9C%89%E8%A1%A8%E8%BE%BE%E5%81%8F%E8%A7%81%E7%9A%84%E8%87%AA%E7%94%B1/</url>
      <content type="html"><![CDATA[<p>2018新国辩，哲理辩论（第二场）周玄毅VS黄执中：人有/没有表达偏见的自由。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<h2 id="正方：人有表达偏见的自由（周玄毅）">正方：人有表达偏见的自由（周玄毅）</h2><ul>
<li>我们对偏见本身就是有偏见的。有些偏见可能无关痛痒，而另外一些却会遭到极力的排斥。</li>
<li>如果没有表达偏见的自由的话，有一个“<strong>backlash</strong>”的问题需要考虑到，就是很多本来就是的偏见会被包装成不是偏见，而成为的更加偏见。一个观点，会被包装成事实。</li>
<li>有伤害性的话语应该保留，因为人们可以自我调节，学习从愤怒转向对此感到悲哀。</li>
<li>伤害是我们应当付出的代价。</li>
</ul>
<h2 id="反方：人没有表达偏见的自由（黄执中）">反方：人没有表达偏见的自由（黄执中）</h2><ul>
<li>互联网，因为人失去逃避的空间。同时人在群体里会不断加强和迎合自己的偏见。微光吸引微光，是这个时代最大的症结。</li>
<li>这道辩题谈的不是自由，而是伤害。</li>
<li>法律保护的人。<strong>分清楚，我们想做的，和我们只能做的。</strong>现在提及裹小脚会引起大家的反感，但是提到女人就应该生儿育女好像就没有那么多的反感。这个时代是会慢慢清晰的。</li>
<li>极端是有市场的。极端塑造极端，让温和的人成为极端的一份子，你要以我这样的方式去反击。<strong>撒旦不需要建教堂就可以拥有信徒，而上帝的信徒们要每周都去做礼拜。</strong></li>
<li>有些事情它不该是这样，但是它只能是这样。我们不该遏制自由。但是在伤害面前谈自由，我们是驱羊入狼口。我们应该在确保安全的时候才谈论自由。它只能是这样。</li>
<li>那些被遏制住的恶怎么办？我们不拯救一个人的灵魂，我们只拯救一个人的行为。我们只要你不要伤害别人就好。<strong>我们永远在保护现在还活着的人。</strong></li>
<li><strong>为什么我们在仇恨之中学得快？是另一个极端的力量。我们要有在平静之中成长的能力。而不是依赖仇恨、报复来成长。</strong></li>
</ul>
<p>我认为，反方还可以这么说：</p>
<ul>
<li>法律在划分合法的那一条线的时候，也画出了一条可以肆意踩踏的线。</li>
<li>底线，是由最恶劣的影响所设定的。而不是最中庸平均的那一条。我们在探讨的是这个裁决的尺度。有自由，是为了那些顶端的丰盛果实，是为了破除专制的天花板；而没有自由，是为了守住底线，是为了提防人性的深渊。选择天平的任何一边都有它的理由，重要的是看在这个时代下，我们更容易滑向哪一端，更需要提防那一面。社会政策的讨论有一个很重要的标准是，slippery rope，滑绳子理论，任意一端，只要有轻微的改变，就非常容易加速滑向极端的那一边。</li>
</ul>
<h2 id="结语">结语</h2><p>最后正方毫无悬念地赢了。正方很好地守住了一个策略就是：任何的言论都是偏见，而人们应当要有发表言论的自由。但说实话，正方给我的启发不多，大部分都是意料之中的论点。</p>
<p>黄执中感觉没那么在意输赢。没有总结，也无须梳理，他更恳切地想在有限的时间里表达更多的观点。</p>
<p>我认为，黄执中应该这么坚持打：对方辩友说的都是对的，但不是这个时代。</p>
<p>每一个时代都有每个时代需要保护的东西。</p>
<p>信息贫乏的时代，只有少数人拥有话语权，我们需要言论自由，是因为我们防止那些少数的声音成为唯一的真理。我们在倡导，保护那些大多数人的声音能够被表达出来。</p>
<p>信息富集的时代，大多数人拥有着话语权，他们用海啸般的反馈威胁着、淹没着他们反对者的声音。什么是民粹主义。而这个时候的言论自由是，我们要保护那些少数人。保护少数人的声音能够被听到。</p>
<p>科技创造碎片化的社会，而这也在让我们每一个人成为少数人。</p>
<p>自由，这个词能够传达的意思远远超过了对方辩手做出的表达。保护或许并没有自由听着那么潇洒，乐观，甚至正义。但保护，是自由在这个时代更应该被注重的含义。</p>
<p>自由是有边界的。这道辩题想要讨论伤害和边界。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://www.youtube.com/watch?v=RPFWBDktOVg" target="_blank" rel="noopener">辩论视频链接</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[非主流的主流 -《订阅》阅读批注]]></title>
      <url>http://chocoluffy.com/2019/01/04/%E9%9D%9E%E4%B8%BB%E6%B5%81%E7%9A%84%E4%B8%BB%E6%B5%81-%E3%80%8A%E8%AE%A2%E9%98%85%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<p>未来的娱乐内容的分布：越来越多的续集会出现在电影院线上，因为这是风险最小的；精品剧集集中出现在订阅式流媒体，而原创新品则放在Youtube等低门槛平台负责曝光造势和社区影响力。</p>
<a id="more"></a>
<ul>
<li><p>这些创作者所代表的视频形式（<strong>游戏解说、美妆教程、开箱视频</strong>）都不是我们能在电视上看到的内容。任何业内人士，即便是YouTube的高管，都没有预见这些前所未见的内容形式会成为YouTube的主流。</p>
</li>
<li><p>你可以试想自己是一家电视网络的总裁，如果有人来说服你投拍这样的节目——几个人一起完成精心设计的特技镜头，观看父母给自己的女儿梳辫子，或者用4K高速摄像机拍摄超慢镜头的动作——你会同意吗？或许不会。但这些正是Dude Perfect、Cute Girls Hairstyles和The Slow Mo Guys等频道积累数百万订阅者所采用的方式，而这些频道的主人也来到了峰会现场。</p>
</li>
<li><p>Sorted Food频道的英国大厨们所做的不是一个简单的烹饪节目，他们会认真听取观众的反馈，几天后就能推出<strong>粉丝们呼声最高</strong>的菜谱教学，而传统烹饪节目的观众可能要等到下一季才能看到自己喜欢的菜式。德斯汀·桑德林是一位来自亚拉巴马州的工程师，他在自己的频道Smarter Everyday上讲解太空旅行、激光祛除文身等各种物理知识。这个系列短片的<strong>更新频率</strong>远超PBS（美国公共电视网）的周六教育节目，或者TLC（旅游生活频道）偶尔播出的教学内容。贾马尔·爱德华兹在YouTube上创立了数字音乐网络SBTV，他当时年仅16岁。这个频道专注于展现被MTV（音乐电视网）忽视的东伦敦地下音乐（Grime），艾德·希兰的歌手生涯也是从SBTV开始的。岑科·维格尔在2002年开设了首个网络视频新闻节目The Young Turks，它现在已经是全世界最大的网络新闻节目。</p>
</li>
<li><p>事实上，各大品牌已经开始在YouTube上提前放出它们准备在超级碗投放的广告，作为年度“广告大战”的一部分，这样它们就可以选出最受观众欢迎的广告，并将其正式投放到超级碗上。</p>
</li>
<li><p><strong>如果你想把自己的产品摆上货架，就要跟那些大型零售商进行谈判，而如果想在谈判桌上占据有利地位，最好的办法是将多个产品捆绑在一起。</strong>以快消品行业的宝洁和食品行业的雀巢为例，过去一个世纪以来，它们已经从产品种类单一、规模较小的公司，发展成规模庞大的跨国巨头，旗下拥有多个知名品牌和数千款产品。其中有些产品是它们自己研发生产的，但大多数产品是通过收购其他公司积累下来的。它们会利用自家最畅销的产品（比如汰渍和奇巧巧克力）来争取更好的货架位置，同时确保商家为它们不太知名的新产品预留库存位置。 <strong>不过零售商们可不会甘愿吃亏。看到对手越来越强硬的手腕后，它们也开始并购新的连锁商店，开拓新的市场，除了可以实现更大的规模经济以外，这样做还是为了向供应商争取更有利的谈判地位。它们可以利用这种优势做很多事情，比如限制新产品的库存，与供应商商讨更低的进货价格。这些谈判就像是生产商和销售商之间的拉锯战，双方都想在对方身上占到最大的便宜。</strong></p>
<blockquote>
<p>有限的渠道终究会导致双边（生产商和销售商）的兼并。为了争夺话语权。生产商并购为了更大的规模经济，更低的边际成本和与销售商谈判间更有利的位置。销售商兼并则为了压低上游生产商的价格。权力是流动的。而向中心化发展不是没有道理的。本质在于稀缺。漏斗形状。<br>科技提高的生产力，为了解决稀缺的问题。可是存在完全富余的世界吗，最终稀缺的是人的注意力。</p>
</blockquote>
</li>
<li><p>不过零售商们可不会甘愿吃亏。看到对手越来越强硬的手腕后，它们也开始并购新的连锁商店，开拓新的市场，除了可以实现更大的规模经济以外，这样做还是为了向供应商争取更有利的谈判地位。它们可以利用这种优势做很多事情，比如限制新产品的库存，与供应商商讨更低的进货价格。这些谈判就像是生产商和销售商之间的拉锯战，双方都想在对方身上占到最大的便宜。</p>
</li>
<li>电视网络和分发商的兼并活动所导致的一个结果是，掌握在几个人手里的少数大型媒体集团决定了大多数人观看的内容。数十年来，这些巨头一直都是大众媒体的把关者。他们并非是被选举出来的，但他们当中的少数人（十个左右）拥有巨大的文化权力，能够决定人们可以生产什么内容，可以消费什么内容。<ul>
<li>兼并是趋势。为了话语权</li>
</ul>
</li>
<li><strong>只要存在有限的货架空间［包括放在实体货架上的图书、CD（激光唱片）和DVD，以及有线网络带宽或广播频段这种“虚拟货架”］，内容生产商和分发商就不得不为了内容的配置而互相拉锯，导致行业内出现更多的联合行为，少数把关者也会掌控更大的权力。</strong><ul>
<li>只要存在瓶颈。就存在借助兼并而扩大话语权。</li>
</ul>
</li>
<li><p>但<strong>互联网最重要的影响可能是带来了无限的货架空间。</strong></p>
</li>
<li><p><strong>我们的观看选择丰富起来以后，花时间消费相同视频和节目的人也变少了。</strong>这也是为什么现在的YouTube播主可以成为最受高中生欢迎的名人，但其他人却从来没有听说过他们的名字。</p>
<blockquote>
<p>什么叫【碎片化的世界】。</p>
</blockquote>
</li>
<li><p>“在前7个月里，我们的观众都是青少年，或者是喜欢我的书的图书管理员。”约翰说道。但是在几个月后，有一件事让他们认识到了这个不大但热情的群体的力量。有段时间，约翰和汉克对目前运作良好的国际发展项目进行过一些调查，并开始对小额信贷的概念产生兴趣。小额信贷的意义是通过向穷人提供少量的贷款来帮助他们脱离贫困。他们开始接触一家叫作Kiva的非营利组织，<strong>人们可以通过这个平台向需要小额信贷的人提供贷款。他们向Kiva提出要去探访部分获得资助的人。</strong>在Kiva工作人员的带领下，约翰和汉克来到了多米尼克共和国，并用他们的视频日志讲述小额信贷的概念以及Kiva正在做的工作。在这些视频日志上线后的几天之内，Kiva就收到了大量来自他们粉丝的捐款。Kiva告诉这两兄弟，他们的影响力“比奥普拉还大”。</p>
<blockquote>
<p>【反馈的力量】<br>人对自己的决定是抱有期待的。</p>
<p>节目：<br>【那些获得过帮助的人】<br>【善良的结局】</p>
</blockquote>
</li>
<li><p>以反对为主导的运动。再辅以娱乐化。这是我能想象到的最恶劣的节目内容。</p>
</li>
</ul>
<blockquote>
<p>现在的快手，像是youtube。而仔细观察之后微博则像是他们打算留存IP的地方。</p>
<ul>
<li>《奈菲文化手册》、《重新理解创业，一个创业者的途中思考》。</li>
<li><strong>被肤浅地理解本身，就是一种解构-重构的过程。</strong>现在的我们所做的和以前的我们并没有什么不同，以前的我们通过年久失修的电台和拼凑的报纸获得资讯，现在的我们依赖youtube，快手。<br>youtube是传递信息，娱乐，互相理解的一个很重要的方式。</li>
</ul>
<p>这可以意味着更多的改变，也可以意味着更少。那一点的信息足以让我怀疑政府的动机，而那一点的破粹也足以让我对美好失去信心。</p>
<ul>
<li>当我们看不懂，看不惯的时候，我们习惯说那是一个人人哗众取宠的名利场。</li>
<li>而视频，曾经是制作成本和分发成本最高的娱乐方式。</li>
<li>快手课堂。商业化。是我感兴趣的方向。</li>
</ul>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[永远存在的镜头 -《不朽》阅读批注]]></title>
      <url>http://chocoluffy.com/2019/01/02/%E6%B0%B8%E8%BF%9C%E5%AD%98%E5%9C%A8%E7%9A%84%E9%95%9C%E5%A4%B4-%E3%80%8A%E4%B8%8D%E6%9C%BD%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>昆德拉的小说是没有结局的。</p>
<p>他自己也在小说里面承认了这一点。他没有一个希望匆匆奔向的目标。他说“小说不应该像一场自行车比赛，而要像一场宴会，频繁上菜。一个新的人物，他不是任何东西的因，也绝不产生果”，我也恍然，原来这就是《轻》的由来。</p>
<ul>
<li>曾经，谋杀或许会被看作是一种英雄主义。希特勒死去的那天，善恶就变得是相对的了。</li>
<li>“新闻记者的权利并在于提问，而在于一定要得到回答。”什么是不朽。哪里有永远存在的镜头。不朽，意味着永恒地回答。</li>
<li>小说体裁：在一篇文章中出现的人物，作为下一章的主题。</li>
<li><strong>“悲剧所崇尚的敬意要比孩子牙牙学语的无忧无虑危险的多。”</strong></li>
<li>人性是没有终点的。只是侧重点不同。在不同的时代，人们在寻求不同的东西。譬如战争时期过后重建在废墟之上的存在主义。邪恶，欲望，虚荣心是不会消失的。</li>
<li>轻浮，就如同其名义上写的那样，是一种减肥疗法。</li>
<li>大部分时候的争论，吊柜的地方在于，“并不是他们真的如此相信他们所捍卫的意见，而是忍受不了别人说他们没有道理。” 这隐含着几个层面：1）争论的结果并不意味着失去荣誉。而这正是我反感给“胜家”所谓的更有说服力的人颁奖的理由。都是给观众看的。给真正的胜家的奖励，是他们的思想传播了出去。赢者能够获得荣誉，并不意味着输家就失去了荣誉。2）他们把他们的意见当成了他们的我的一个属性。“他们把这些对意见的攻击当作了对他们的人身攻击。”</li>
<li>很多青少年容易有的一个通病，就是以为通过粗暴的反对，反对大多数人所赞同的观点，就能够进入成年人的生活。</li>
<li>🌟 <strong>在感受的时候，观察的时候。我觉得我在成为我。而我们应当尊重别人成为他们自己的时刻。哪怕那个过程和我们不同。</strong></li>
<li>我宁愿你皱紧眉头对我告别。</li>
<li>在这些文字里保留着几百座雕像和他们的眼泪。</li>
<li>某些人喜欢一些东西，其实是因为喜欢归属于这批跟随者的骄傲。</li>
<li>【写作技巧】每一个段落引入一个具象。然后在最后总领。“在这些话的后面隐隐约约显出了一座瑞士花园的别墅。还有那个如彩色气球般挥手告别的手势…”</li>
<li>【写作技巧】先不带名字的描述这一个故事。在后面的段落里再以真人的行为和名字介绍动机并以接入之前的开头</li>
<li>演员在以他伟大的感情使我们赞叹不已以后，又以无法解释的冷谈使我们感到困惑。</li>
<li><strong>眼泪，经常因为他看到了自己而激发出来。</strong></li>
<li><strong>在寓意前急忙鼓掌的人，他们不懂他的骄傲。</strong></li>
<li>“他的诗篇容纳了今人已经遗忘的词汇，或者再也引不起今人丝毫兴趣的词汇。麦芒…细草…”</li>
<li>【写作技巧】关于巧合。”正当第一片枯叶落到芝加哥城里的时候，教授进入水池。我们把教授看作是秋天的使者。他浸入其中的水在我们看来含有眼泪的咸味。“</li>
<li>回忆。是给不曾命名的东西命名，和唤醒本该沉睡的东西。</li>
<li>reason原因，理性，德语grund。有地面的意思。我的理智，是我所依赖的大地。</li>
<li>昆德拉的小说是没有结局的。他自己也在小说里面承认了这一点。他没有一个希望匆匆奔向的目标。他说“小说不应该像一场自行车比赛，而要像一场宴会，频繁上菜。一个新的人物，他不是任何东西的因，也绝不产生果。”原来这就是《轻》的由来。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[抵抗存在的被遗忘 - 2018年度总结]]></title>
      <url>http://chocoluffy.com/2019/01/01/%E6%8A%B5%E6%8A%97%E5%AD%98%E5%9C%A8%E7%9A%84%E8%A2%AB%E9%81%97%E5%BF%98/</url>
      <content type="html"><![CDATA[<h2 id="1">1</h2><p>今年的关键词让我来选择，是“告别”。</p>
<p>我告别了给予我第一场雪的城市，和一群我最最依赖的伙伴。</p>
<p>这个时代也是流行告别的。</p>
<p>我们在这短短一年里见证了许多伟岸的身影远去了。在新闻宣告的那一霎那，这是我们第一次告别，有些时候却也是我们第一次相逢。我们被留下了，只能在他们的喃喃细语里，在他们构建起的浩瀚世界里和他们团聚。声音慢慢微弱了，但回响还在。</p>
<p>可是不是所有的告别都有如此明晰的痕迹可循。世界越来越大，还有许多的存在，他们的告别没有挥手，不被宣告，而是悄无声息地被遗忘。</p>
<p>我想聊聊这最后一种告别，也是最漫长的告别—遗忘。</p>
<h2 id="2">2</h2><p>我们比以往任何一个时代都要强烈地连接着。</p>
<p>更多的连接，人容易因此变得很宏大，伴随着更大规模的爱与恨，触碰和喧闹。情绪和爱慕是可以被煽动的，像风一样。很多的人愿意把自己的生活寄托在这份轻盈之上。有时候他们却哭了，因为风大了。</p>
<p>越来越多的创业项目关注着“即时性”，他们想要在最短时间内达成共识的力量，他们说红色比蓝色更高贵，他们享受亲手捧起的花瓶再亲手摔碎，他们做着惩恶扬善的事，噢不对，或许他们只喜欢他们自己的善良。</p>
<p>科技在强化着每一个人的影响范围。它没有说明书，它直达结论，放大着每一个人心里的天使和魔鬼。我们慢慢会明白，毁灭事物的，有时并非来自主观恶意，或许是因为我们的能力。</p>
<p>而遗憾的是，我们不能责备风。</p>
<h2 id="3">3</h2><p>我们都需要有人注视着我们，昆德拉说。</p>
<p>陌生人的目光，熟悉的目光，爱情满溢的，或是远方的目光……我们索取着，也由被索取之物所改造。</p>
<p>我警惕一种目光，叫做正确的目光。每个时代的愚昧都是心急的，它急着证明自己的正确性，它依仗着数字上的优势，它急着成为不朽。而我们越孤立无援，就越沉迷于自己的正确，就越乞求目光的赞美，越想强调自己的自由，这是我们这个时代的个人主义。</p>
<p>自由的反面是什么，从前的我一直认为是束缚，现在的我想，是媚俗。</p>
<p>我们熟练地说着绝对正确的话，说给绝对的少数人听。而科技的趋势，在让我们每一个人成为那个少数人。作家雷布拉德伯里描述过一个世界，书是被一页一页地删减撕去的，因为社会上来自少数族群的压力。</p>
<h2 id="4">4</h2><p>是这些媚俗导致了遗忘。是这些生命无法承受的轻浮。</p>
<p>这个时代是讨厌重量的。我们渴望在笑声中消解悲伤。渴求在有意义的赋予中规避生活真实而荒谬的一面。我们大力地附和，其实渴望的不过是安全感。我们有时躲起来，为了被寻找。</p>
<p>我相信这是人的本能反应。这不代表这个世界变得更坏了，只是意味着这个世界更透明了。而真实总是沉重的。人们拥有了能够触及到地平线的眼眸，也要开始被迫锻炼起消化与和解的能力。于是有的人选择了用遗忘来和解，有的人选择反抗。</p>
<p>我们反抗的，从来不是这个世界。我们反抗一种绝对性，反抗由愚昧装束而成的万能药。每一种药，一旦冠上了万能的名义，它的修辞就代替了论证。我们的对手，是那些修辞，是日益膨胀的焦虑情绪。</p>
<h2 id="5">5</h2><p>具体怎么反抗呢。我不知道。</p>
<h2 id="6">6</h2><p>小说《华氏451》里，写到了一小部分文字让我印象很深刻。</p>
<p>作者避开了讨论遗忘与记忆的问题，很讨巧地创造了一种技艺能够过目不忘地记住所看过的文字。他让逃去森林避难的学者们成为一个个“行走的图书馆”，以给世界的真实留下了延续的可能。书里写得很美，这些学者们”似乎跟普通人没有两样，就像是跑完了一段长跑，经过漫长的寻觅，见过美好的事物被毁，到如今垂垂老矣，聚在一起等待曲终人散，灯枯油尽。他们并不肯定自己脑中携带的东西会使未来每一个日出散发出较纯净的光辉，他们毫无把握，除了确知那些书贮存在他们平静的眼眸内，那些书完好无缺地等待着，等待来年可能会出现的那些指头或干净或脏污的顾客。“</p>
<p>我想，我们也不需要过目不忘。只要还有人愿意记住就好，只要还有人愿意写诗，愿意守护文字的重量。只要还有人愿意记录这个世界的真实，而无所谓美好。只要还有人愿意感受，愿意看见，愿意理解。</p>
<p>我想，小说里那个粗粝而麻木的世界其实很早就崩塌了，远在这些学者奋力记住之前。当面色赤红拥有钢铁意志的蒙塔格看着克拉莉丝的背影消失在雨夜里，他过了许久，走进了雨幕下，“他慢吞吞地仰起头，有那么一下子，张开他的嘴……”。</p>
<p>那一刻，他对蓝色冰冷的雨，有了第一次的想象。</p>
<h2 id="7">7</h2><p>在感受、看见和理解的时候，我觉得我在成为我。</p>
<p>而我们应当尊重别人成为他们自己的时刻。哪怕那个过程和我们不同。</p>
<p>而存在的力量，或许正在于允许存在。</p>
<p>我看见有的人在发光，他给了这个世界发光的许可。我也看得见夜幕下的徘徊，我想要理解黑暗的不同层次，和黑暗的理由。</p>
<p>这是我的存在主义。</p>
<h2 id="8">8</h2><p>去年的年终总结恰好写在多伦多一年里最冷的一天，像极了某种远古的仪式，藏好了就不要再回头了。今年的我停笔在纽约今年最后一晚的大雨里。我坐在屋内静静地看着玻璃窗外街灯投下的光，被明亮地打碎，又重新愈合，仿佛看着一场无声的电影。</p>
<p>屋外的雨是大的，屋内的人听不见声音。</p>
<p>五月，终于把开发半年多的项目带到了微软的国际决赛，彩带与荣耀，而我只记得其中一支专注机械视觉义肢的队伍在给残障人士戴上产品重新握住一小罐塑料水瓶的刹那，她不可思议到在沙发笨拙地跳起落下，随即红了眼眶。</p>
<p>六月，我和多伦多告别。去机场的路上把五月天的歌放到最大声，在递出信的那一刻哭得稀里哗啦。谢谢和你们创办了鲸语，你们是我曾经走在单打独斗的路的终点，是我要想再次启程时想起的第一批人。也是你们，我会永远记住一座城市和这座城市无关。</p>
<p>八月，新校区。一次在大概快十一点的时候的学校实验室里吧，我从洗手间回来，一个穿着褐黄色职工衣服的人静静地靠在图书角里，捧着一本书。我经过的时候他抬起头来，我们相互点了点头。没有什么寒暄，我走远了悄悄回过头多看了一眼。耳机里的音乐恰好随机到一首现场的交响曲。曲终，响起了很长很长的掌声，仿佛磅礴大雨。突然感觉挺美的。从那时起，我有点喜欢康奈尔这个地方了。</p>
<p>十一月，做出了一个可能影响未来深远的决定。我只须坚定往前走，剩下的交给时间。</p>
<p>鲁迅曾经写下这样的话，“人类的悲欢并不相通，我只是觉得他们吵闹”。他写下了事实，人无法分担他未曾经历过的痛苦，这很无辜。屋外的大雨，屋内的人听不见声音。</p>
<p>但同样存在的是，人类世界有了感受，有了看见，有了惺惺相惜。我们有着相异的命运和苦难，却仍然极力奔向，守候对方的努力，是我认为最打动人的东西。所以同样也是鲁迅，他也写下了，“无穷的远方，无数的人们，都和我有关” 。理解它们的语序是尝试去理解这个世界的荒谬的关键。有限，命运……这些字眼可以把人导向虚无，也可以指向浪漫，这是每一个人时刻都在做却难以察觉的选择。</p>
<h2 id="9">9</h2><p>塞万提斯在《堂吉柯德》的结尾这么说，我的愿望只有一个，那就是：让人们厌弃骑士小说中的那些胡编乱造的故事。最终，一部坚定反对骑士文化的作品塑造了我相信的骑士文化。</p>
<p>我的愿望也很简单，抵抗那些因由媚俗而胡编乱造的虚无故事，抵抗存在的被遗忘。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Dec.]]></title>
      <url>http://chocoluffy.com/2018/12/31/%E7%A2%8E%E8%AF%AD-2018-Dec/</url>
      <content type="html"><![CDATA[<h2 id="18-12-31_2018年度总结">18.12.31 2018年度总结</h2><blockquote>
<p>塞万提斯在《堂吉柯德》的结尾这么说，我的愿望只有一个，那就是：让人们厌弃骑士小说中的那些胡编乱造的故事。最终，一部坚定反对骑士文化的作品塑造了我相信的骑士文化。</p>
<p>我的愿望也很简单，抵抗那些因由媚俗而胡编乱造的虚无故事，抵抗存在的被遗忘。 - <a href="http://chocoluffy.com/2019/01/01/%E6%8A%B5%E6%8A%97%E5%AD%98%E5%9C%A8%E7%9A%84%E8%A2%AB%E9%81%97%E5%BF%98/">抵抗存在的被遗忘</a></p>
</blockquote>
<h3 id="草稿">草稿</h3><ul>
<li>人容易变得很宏大。带着更大规模的爱与恨，喧嚣和寂寞。</li>
<li>我们要允许有些东西它不会改变。它需要代价。它没有意义。</li>
<li>每个时代的愚昧都是固定的，而且装饰着不同的样子。<br>-《小说的艺术》里他提到，“小说的意义是发现只有小说才能发现的，探索人的具体的生活，保护它，抵抗存在的被遗忘。”</li>
<li>游戏时代和严肃性。</li>
<li>和庆祝无意义。</li>
<li>自由的背面。是束缚。是彷徨。是媚俗。</li>
</ul>
<p>微信公众号：沉默与阳光<br>简介：为了改变天生的无动于衷。</p>
<h2 id="18-12-27">18.12.27</h2><p>而金童玉女们，也喜欢上了这个童话，而相爱下去。</p>
<h2 id="18-12-26">18.12.26</h2><ul>
<li><p>时间留给我刺身，而我已经觉得刺身不再酷了。</p>
</li>
<li><p>宿舍一楼有一张长桌。随着太阳的移动我也得不断挪腾位置以栖息在由大柱子形成的荫蔽中。而当我所一端移到另一端的时候，我知道是时候要去吃午饭了。</p>
</li>
</ul>
<h2 id="18-12-25">18.12.25</h2><h2 id="《订阅》读书笔记">《订阅》读书笔记</h2><blockquote>
<p>从了解youtube这个产品开始，去理解抖音、快手。</p>
</blockquote>
<ul>
<li>以反对为主导的运动。再辅以娱乐化。这是我能想象到的最恶劣的节目内容。</li>
<li>【快手】追求播放量意味着没有底线的迎合。“视频真正的力量不在于它本身能吸引观众，而是它能吸引观众去欣赏创造者的其他作品，为它们点赞，写出发自内心的评论。或者为了不错过最新的视频而订阅一个频道，他们可能会购买创作者的周边服装，可能去参加粉丝见面会，也有可能创作他们自己的视频。”<blockquote>
<p><strong>设计策略，使得对用户关注的程度来分级。来找到真正的铁杆粉丝。</strong></p>
</blockquote>
</li>
<li>所有的视频平台针对的都是腰部创作者。头号玩家是不缺机会，对他们来说真正稀缺的是他们的时间成本。-&gt; 科技的趋势就是反垄断。因为没有了科技让我只能相信人性。而千百年来的王朝起伏只是在不断复证人性而已。</li>
<li>科技也让我明白：“你不应为自己热爱的事物感到羞耻，理性主义是值得追求的。”</li>
<li><p>Youtube起始的社区，被认为代表了一种气质。一种为nerd、宅时代正名的使命。给他们带上印记，让他们相信他们代表着全新的意志。造就一种大卫和歌利亚的局面，哪怕是人为的。或许这才是用户运营的方向。</p>
<blockquote>
<p> 从反面说一句。突然想起了《德米安》里的战争，《轻》里的媚俗。“为什么人们很少为了一个理想而活着，现在我却发现许多人都能为一个理想而赴死”。论文字的稀释。唉或许不应该在年轻的时候尝试去解构这些东西。但，终归还会是好事吧。</p>
</blockquote>
</li>
<li><p>宁愿从每个视频中获取10个订阅者，也不希望从一个视频中得到1万个订阅者。</p>
</li>
<li><p>一本没有上锁的日记。</p>
</li>
<li><p>人们通过电视、电影寻求的是一种逃离感，而不是真实感。这意味着开明，意味着打破内容上的垄断。而从另一个方向上，也意味着仅仅是我的生活，我的喜怒哀乐也能够成为别人的消费。</p>
<blockquote>
<p>中心化实际上是一种保护。它给个体保留了私人的空间，隔离了风险。而让人们担忧的地方则是决策权的让渡。与此相反地，去中心化归还了人们的决策权，科技进步的方向是不断增强个体的决策能力以抗风险，更完备的工具保护私人隐私，更完备的规则等，可是瓶颈始终不在于决策能力而是在于人的理性，缺少匹配强力武器程度的文明是蛮荒时代。完全的去中心化加上自由市场意味着更多打着合法的名号的剥夺和买卖。自由，一定要有理性做前提。而现在的我们，太习惯把自由当作终点。一个不容分说的方向。</p>
</blockquote>
</li>
</ul>
<p>这像是一份浮士德的契约。我得到了光环和拥簇，却不能够说出“生活真美好啊”。</p>
<ul>
<li>Youtube提供了选择。娱乐性还是专业性。有没有专业娱乐性这么一说呢。</li>
<li>必须承认的是，twitter和youtube对社会包容度的提升的贡献不亚于任何一个传统媒体。</li>
<li>“这个世界并没有那么可怕，因为我已经在Youtube上看到过这些了。”这句话的反面是，“这个世界或许也没那么美好，因为我也已经在Youtube上面看到过这些了”。</li>
<li>Youtube上最成功的内容，通常和相对主流的兴趣相关，只是观众难在其他媒体上看到这些内容。比如：游戏视频、美妆视频。有一个共性，“它们是我们喜欢的东西，但我们在社会上不太敢于承认。”</li>
<li>内容行业搭配广告作为盈利模式是最坏的搭配。竞劣。</li>
<li>“如果我能知道身处事件中心的人正在经历什么，那为什么还要看一个记者站在广场前给我报道。”<blockquote>
<p>不止于客观。</p>
</blockquote>
</li>
</ul>
<h2 id="18-12-24">18.12.24</h2><ul>
<li><p>When you look at your list of friends, they are your Facebook friends not because you share a hobby, <strong>but because you’ve know them for a while.</strong></p>
</li>
<li><p>Facebook constantly pushes you to add more friends with the infamous “People you may know” feature. <strong>Knowing someone is one thing, but having things to talk about is another.</strong></p>
<blockquote>
<p>论坛：基于兴趣。是fragmentation碎片化的。<br>facebook：”people you may know”。温情牌。的确是有社交价值的。但代价太大。本质上是在逆现代化进程的。它把你的亲戚关系，朋友关系都搬到线上，还自以为是的认为所谓“亲情的互动”要比“资讯获取”更重要，而因此一个幼儿园的认识的人评论过的一个thread要比我喜欢的猫咪排的更前。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>突然有一个梦想。在业余时间维护一个社交app。一个工具，是帮你自己自建一个空间。你可以存储你的照片，音乐。大家都是业余时间维护这个项目。不需要这个项目来赚钱。</p>
</blockquote>
<ul>
<li>尽头 唐诺</li>
<li>他们想吓我，我们怀揣着巨大的信息差以为我会畏惧巨大的未知。但我恰恰一定也不害怕未知。</li>
<li>在于还有多少人愿意听这个故事。人文主义。自由。与正义。“因为当想听这个话的人不够多的时候，它就失去了力量。就是说它只能靠一些接近仪式的形式，希望能够保留在某些地方。”<blockquote>
<p>我觉得，当一样东西不被接受，被抛弃之后，它便成为了仪式而保存下来。我不想因为受到了鼓动才感受到，我不喜欢仪式。</p>
</blockquote>
</li>
</ul>
<h2 id="18-12-23">18.12.23</h2><ul>
<li><p>自由的背面。是束缚。是彷徨。是媚俗。</p>
</li>
<li><p>结尾式的作品。即便我们看穿它，也还得忍受它，而不如庆祝它。昆德拉的作品里，出现过好多的“玩笑”，“可笑”，到这里终于和解了吗。《庆祝无意义》总结。</p>
</li>
</ul>
<h2 id="微信7-0">微信7.0</h2><p>微信7.0看一看，是时候让我找个时间回顾一下Google Reader了。</p>
<p>分享到朋友圈我认为其实是一个强操作。因为现在大家看朋友圈几乎成为了一个必然发生的事情，这也意味着分享这一行为带来了很多社会压力（即便有分组的功能存在但压力仍然存在）。压力在于，你分享什么很大程度上定义了别人对你的印象。</p>
<p>而看一看给予了更多空间，给这些但达不到强操作的兴趣行为。同时可以以此为契机引入智能推荐（也就是用算法来调整和过滤），和朋友圈的严格按照时间顺序做了一个平行实验，也是对标头条的算法，通过这个实验也可以看看头条未来战略上想引入的社交分发的效果是怎么样。</p>
<p>头条现在最想从算法推荐切入到的社交推荐，恰好是微信的强项，而看一看可以作为一个很好的试验田。</p>
<p>目前最大的弊端我认为在于，被滥用而降低的社交推荐的质量，后续几个版本可能会引入更多用户控制的元素，譬如屏蔽某些人某些话题等等。不过对大多数人来说可能质量也没那么重要。对质量的需求很大程度上是由你所处在的人群决定的。</p>
<ul>
<li>昆德拉和黑塞一定喜欢精神分析学派。在作品里穿插夸张而奇异的梦然后总能在后面的文字里复现梦的动作和释义。</li>
</ul>
<h2 id="18-12-22">18.12.22</h2><p>微信即邮箱<br>第一个tab微信： 短邮件<br>朋友圈：阅读空间<br>公众号：QQ邮件订阅平台<br>看一看：前Google Reader社交分享功能。（pocket）</p>
<blockquote>
<p>联想起Google Reader关闭的原因。</p>
</blockquote>
<p>🌟 总结一下自己使用Reeder的经验：</p>
<ul>
<li>做好分类。及时区分高质和低质的信息源。以及区分高频和低频的信息源。<strong>质量和频率</strong>，以及话题active search。</li>
</ul>
<ul>
<li>下雪。还是说是他们在等我。</li>
</ul>
<h2 id="18-12-21">18.12.21</h2><ul>
<li>7.0<br>给避开强操作的行为留出空间：看一看<br>以及让朋友圈承载更少的功能：story</li>
</ul>
<p>短视频这一仗 说腾讯输还说不定 看一看就是社交分发。</p>
<p>🌟 宗庆 裂变创业。</p>
<ul>
<li><p>她不知道，他一直在看她。</p>
</li>
<li><p>invincible summer</p>
</li>
<li><p>待会儿跨年。希望有人和你在一起。希望是你的好朋友，刚认识的人也好，男朋友就算了。你们站在一起，在跨过零点的时候，他\她会替我拍拍你的肩膀，和你说，“七七新的一年也要温柔也要努力加油喔”。我们其实只认识了三周吧，你已经给了我很多很甜的感觉。对我一个超级相信存在主义的人来说，这意味着太多了。嗯嗯就是这样。</p>
</li>
<li><p>人们对朋友圈的期待变了。快手，革的是朋友圈的命。</p>
</li>
<li><p>豆瓣租房 融泽嘉园挺好的~</p>
</li>
<li><p>不要在年轻的时候自以为解构所有。自以为没有意义。</p>
</li>
</ul>
<h3 id="公众号改名">公众号改名</h3><p>湾：为什么改了这个公众号名字？因为王尔德的童话口马？<br>我：我慢慢相信的存在主义<br>我：让我相信，我想为我的忧伤举起一只玫瑰 更贴近的可能像是加缪的“沉默与阳光” 的出发点吧～<br>湾：希望你可以通过文字实现这个想法<br>湾：It is an inspiration<br>湾：总觉得你的阐释比这个公众号的名字深一些 这个名字给人一种“非主流”错觉 语言被污染了，模糊了你想表达的意思<br>湾：“我想为我的忧伤举起一朵玫瑰”<br>湾：比“忧伤与玫瑰”听起来深刻 壮美很多<br>湾：（给你一个小读者的角度哈）<br>我：哈哈哈有道理的但我可能更不希望因为 名字就被期望深刻吧 不过文字污染倒是一个很严重，而且有意 思值得讨论的问题～<br>湾：嗯那你希望名字被误解／污染吗<br>我：好问题其实我宁愿被当作坏人而不是好 人吧可能和这里是同样的想法<br>湾：你觉得自己的想法比大众的认可<br>我：嗯嗯～ </p>
<p>我：其实我可能更希望通过产品来实现这个想 法这个时代软件可能比文字拥有着更普 遍的自由但是诱惑也更多也很难 </p>
<p>湾：离大资本和市场更近<br>湾：更普遍的自由<br>湾：有看到你的鲸语啦， 给软件取一个这么诗意的名字，哈哈哈<br>湾：希望可以使用到你想要创造出的软件啦<br>湾：我就，走上了文字的路，就这样走啦<br>我：“普遍的自由”的表达里其实普遍已经暗地地否定了自由了 每个人都有自己最擅长的东西吧～<br>都有自己想追逐的自由 如果硬是要考虑市场的 接受程度这个游戏从前提开始就不好玩了<br>不需要打倒任何人这片海域上最自由的人就是海贼王 不知道为什么又想到这一句哈哈哈 </p>
<h2 id="18-12-19">18.12.19</h2><p>“后来也渐行渐远渐无书了。” 我觉得我可能会这么想呢。</p>
<blockquote>
<p>过年给七七的寄语，我想说这么样的一段话。</p>
<p>我还很不了解你，我不确定你的长相（我明明是还蛮看颜值的人），是否已经有男朋友。但可能这些也没那么重要吧。我知道你的文字，你的开朗，你生日8.17，你喜欢摇滚，我记得那些看到微博来自你的未读消息时候的开心，以及已经熟练的每次打开微博通过四下点击看到你的动态。<br>我对我在意的人很不擅长表达。<br>告诉你一个秘密 我也在纽约。<br>结尾：<br>我也很想养猫，我们的时间增加半天<br>我也很爱看书。</p>
<p>I don’t mind, if you forget me. Because, I never forget you.</p>
</blockquote>
<p>我可能没有那些温暖的回忆。我可能只是底色悲凉。我本来可能会一直孤独下去。只有很少很少的人能够接近我的生活。我的心只是一块冰。而一旦我接受了你，可能会是一辈子的事吧。</p>
<p>那么多次告别。会让我无法迎接嘛。</p>
<ul>
<li><p>现在的网恋 就是柏拉图</p>
</li>
<li><p>经济学 辩论 难点 在于抓住主要矛盾</p>
</li>
<li><p>思考合作伙伴的利益点。人是有反馈机制的 你越压抑我 我越能找到破解的方法。</p>
</li>
<li><p>转载的时候，能不能顺带我的博客~</p>
</li>
</ul>
<h2 id="18-12-18_哈伯格税(harberger-tax)">18.12.18 哈伯格税(harberger-tax)</h2><blockquote>
<p>导语：<br>哈伯格税的提出，是为了解决闲置私人资产的流通。私有资产会导致垄断，而极端的公有化又容易造成公地悲剧。这套体系的提出，也是在思考绝对的私有制和公有制之间是否存在折中的方案。<br>我一直认为没有最正确的经济体系，只有最适应这个时代的体系。当人们慢慢习惯一个强调使用权而非拥有权的时代，当个体的身份、群体之间的关系逐渐虚拟化和碎片化，我们会不会更容易接受这项议题：我和陌生人们按比例共同拥有着这些资产，譬如我们的房屋，手机，乃至我们的移民身份……<br>现在的经济市场对曾经的人们来说，一度也是激进市场。尝试去理解哈伯格税，也是为了去理解那些潜藏在身边的观念和需求的变化。<br>或许未来已经来了，只是还没扩散开。 - <a href="http://chocoluffy.com/2018/12/18/%E8%B0%88%E8%B0%88%E5%93%88%E4%BC%AF%E6%A0%BC%E7%A8%8E%E4%B8%8E%E6%BF%80%E8%BF%9B%E5%B8%82%E5%9C%BA/">谈谈哈伯格税与激进市场</a></p>
</blockquote>
<p>🌟 知乎专栏链接：<a href="https://zhuanlan.zhihu.com/p/52724869" target="_blank" rel="noopener">谈谈哈伯格税与激进市场 - 知乎</a><br>🌟 豆瓣书评：<a href="https://book.douban.com/review/9836743/" target="_blank" rel="noopener">谈谈哈伯格税与激进市场（Radical Markets）书评</a></p>
<h2 id="18-12-16">18.12.16</h2><ul>
<li>所有辩论的前提都应当是博学。</li>
<li>演员这个职业。它所得到的评价是异步的。不像医生，教师，他们面对他人的目光能够及时用自己的目光为自己辩护。《生命不能承受之轻》</li>
<li>🌟 自由的对立面是什么。以前的我一直觉得是徘徊，现在觉得是媚俗。</li>
<li>“无我”，意味着参与着媚俗。</li>
<li>下雨天。黄昏。有着不被雨水沾湿的光。</li>
<li>如果说。有什么是图片，视频永远无法匹敌文字的理由。是你自己的想象。是自由。是可以反驳的逻辑。</li>
</ul>
<h2 id="18-12-15">18.12.15</h2><ul>
<li>很多时候，大家对于渴求的东西，修辞会代替验证，情绪会覆盖观点。</li>
<li>文字，是抽象的记录。计算机编写的是规则。人们记录的记录工具会越来越接近原始的感官刺激，而我最亲密的情感，我希望被找到的样子，则藏在我内心深处。</li>
<li>【文字解读】fall。落下。也是秋天了。</li>
<li>【文字解读】起色。起初的颜色。</li>
<li>whale fall。</li>
<li><strong>我会寻找各种办法来确保自己的孤独。</strong></li>
<li>吃早餐，外国友人，开心地谈话结束后瞬间换脸低头。</li>
</ul>
<h2 id="18-12-14">18.12.14</h2><ul>
<li><p>关于快手。关于直播。关于直播改变教育，改变人的命运。<br>互联网的本质，是消除信息垄断。而非增加垄断。</p>
</li>
<li><p>Waitbutwhy</p>
</li>
<li><p>互联网的出现打破的是信息的垄断。而短视频。直播。打破垄断的是另一些东西。</p>
</li>
<li><p>《奇葩说》知道一个人的死期要不要告诉他？一个人的死，不是他过世的时候，而是他被遗忘的时候。而很多的人，我们的第一眼，也是我们的最后一眼。</p>
</li>
<li><strong>很多人都在做同样的东西，而只要他们相信的不一样，他们的人生就是不一样的。</strong></li>
<li>🌟 <strong>一个人，在微信里，留在一个群。一个人也是一个群。</strong></li>
</ul>
<h2 id="18-12-12">18.12.12</h2><h3 id="《不朽》">《不朽》</h3><blockquote>
<p>昆德拉的小说是没有结局的。他自己也在小说里面承认了这一点。他没有一个希望匆匆奔向的目标。他说“小说不应该像一场自行车比赛，而要像一场宴会，频繁上菜。一个新的人物，他不是任何东西的因，也绝不产生果。”原来这就是《轻》的由来。</p>
</blockquote>
<h3 id="Xplore:">Xplore:</h3><ul>
<li>小孩子，长发男生，为了吸引女性长辈的注意。自己钻进一个吊床，然后说help me。最后自己掉了下去。</li>
</ul>
<h3 id="坎昆之行（12-12）">坎昆之行（12.12）</h3><ul>
<li><p>清晨在洞穴里看到的一块岩石的刻文。it took thousands of years for us to unite… 一闪而过一些念头，是跨越千年的王权颠覆，种族斗争吗…仅仅因为喜欢这个韵脚而随手留下了照片。下午茶的时候，无意间发现另一块标语。No Straw Please…here we unite with this important change… 突然间我仿佛看出了岩石刻文的含义。we take thousands years to unite with the earth… 我们用了上千年的时光与这颗蓝色星球达成的和解，不要这么浪费了…<br>好像是一个美丽的意外。我愿意这么相信。</p>
</li>
<li><p>我时常会轻易地，因为阳光明媚，而毁约。</p>
</li>
<li><p>而我就算用尽比喻，也终究会日落。习惯在枝头。目送。</p>
</li>
<li><p>“我们燃烧而没有光，如正午的烛火。”这也是曼德尔施塔姆的诗句，他没有说的是，这烛光也带着灼人的热。若心曾经被渴望与期盼灼伤，那每一个无论是否实现了的愿望就都不算虚妄。”</p>
<blockquote>
<p>还有后半句。即使没有光，还有热。</p>
</blockquote>
</li>
</ul>
<h2 id="18-12-11">18.12.11</h2><ul>
<li><p>故事没有任何下文。</p>
</li>
<li><p>被世界出卖的人则逃进自己的内心世界。</p>
</li>
<li><p>不朽，意味着永恒审判。</p>
</li>
<li><p>油灯照亮的隐喻，历史。</p>
</li>
<li><p>“塞万提斯，让骑士精神成为一种笑谈。类似的，二千年前的游侠以武犯禁、仗剑列国，而今天坊间的小说上与采花贼大战争夺地盘为美女解衣疗伤的先生们也冠着侠客的名头……一个名词就是这样被稀释去的。”（豆瓣）</p>
</li>
<li><p>“一页书的价值只存在于它被翻到的时候，而后来的生活定会翻遍和翻乱这本书上的每一页。”</p>
</li>
<li><p>萨特。Like all dreamers, I confused disenchantment for truth.</p>
</li>
<li><p>文明和科技的关系。我认为文明和科技是反相关的。因为科技本身是迎合人的欲望的。你在让渡你的很多权力给科技。</p>
</li>
<li>人性本恶，本质上是比人性本善更加乐观主义的。因为愿意承认它的存在，就是一种乐观。</li>
</ul>
<h2 id="18-12-8">18.12.8</h2><ul>
<li>我对生活，有些秘密的权利。</li>
</ul>
<h3 id="坎昆之行（12-8）">坎昆之行（12.8）</h3><ul>
<li><p>飞机上邻座的一个白发老爷爷，递给他的伴侣一个写上了大号字备忘录的手机，一行只够写两个单词就得换行了。<br>Top 10 things to do: 第一条是，Hold her hands during flight off. </p>
</li>
<li><p>飞机上的显示屏在播美式综艺节目，一对情侣在进行问答题，女士被绑在半空中，底下是一盘热巧克力，男士站在名主持人Ellen旁边，因为回答不出来“圣诞老人的麋鹿叫什么名字”而抱头跺脚，在现场爆发的哄笑声中看着自己的另一半从空中坠落到巧克力汤中。屏幕再次播放了一遍慢动作。我突然感觉很荒谬，这种场景仿佛见过，可能是在《华氏451》，还是《娱乐至死》里。是吗，我们这么快，就迎来了曾经科幻小说的剧情。<br>（每个时代都有这个时代的现实科幻主义）</p>
</li>
<li><p>午觉醒来拉起机窗帘幕。是很深很深的蔚蓝。</p>
</li>
</ul>
<p>“而此刻的情绪感受并不是我一个人在经历或是经历过的，这种感觉就好像当我觉得自己是在一片空无中，或是一片茂密的森林中独自行走时，突然发现一些脚印，一些生活用品，甚至骨头，而原来许多人也和我一样，在人生的路上曾经彷徨，孤单，痛苦过。”</p>
<blockquote>
<p>这很重要。那个手势很重要。</p>
<p>我们要抵抗的是，是宿命论。不是平庸，而是注定平庸。</p>
</blockquote>
<p>成长的一个标志是，我不再乞求宠爱了。</p>
<p>“我们从不曾停止交换故事。”</p>
<h2 id="18-12-7">18.12.7</h2><p>【关于媒体】“商业媒体，如果只有商业逻辑，那就只能是附庸，不可能伟大。媒体要有非商业逻辑，什么是非商业逻辑，人生观，价值观，世界观。没有三观只谈商业逻辑的媒体，作茧自缚，为奴为俾，还不自知。”</p>
<blockquote>
<p>商业逻辑，就是去发现商业价值，如果有，就去追逐。这是一种附庸，一种权力关系的妥协。-而媒体应该要有非商业逻辑。-<br><a href="https://chuansongme.com/n/2698369515908" target="_blank" rel="noopener">《财经》杂志小丑<em>孕峰</em>传送门</a></p>
</blockquote>
<h2 id="18-12-6">18.12.6</h2><ul>
<li><p>【关于朋友】我的好朋友，也是我很崇拜的，性格很好的人。我学会了一点，有些时候遇到事情，我会开始想，如果我是相如，或者max，我会怎么做。</p>
</li>
<li><p>计算机，有着比文字更普遍的自由。<br>我们在撰写规则，用户在根据这个规则继续他们的生活，在适应着。<br>一个工具越普遍，它牺牲的是使用者的自由。<br>我有点更喜欢文字。可能是分工不一样吧。</p>
</li>
<li><p>订阅：未来获得服务的稳定性。</p>
</li>
</ul>
<h2 id="18-12-3">18.12.3</h2><h3 id="《夜空总有最大密度的蓝色》">《夜空总有最大密度的蓝色》</h3><blockquote>
<p>【书评】这或许会成为我最喜欢的诗集了。我想像作者那样，写出镜头般的文字，就像她说的，“把被摄者内心之中的情感以及故事，稍许变换颜色呈现出来”。把这些存在作为礼物的一半留下来。然后静静地等待。等待每一个不同的人怀揣着自己的心事去解读另一半的故事，带着自己的期待与不安，过去的明亮与失落……我不想苛求理解，如同我不愿苛求恩赐。但或许正因为不理解，我才得以自由。而我也愿意出于相同的理由，感受他人的可爱之处并留下余地。- <a href="http://chocoluffy.com/2018/12/12/%E3%80%8A%E5%A4%9C%E7%A9%BA%E6%80%BB%E6%9C%89%E6%9C%80%E5%A4%A7%E5%AF%86%E5%BA%A6%E7%9A%84%E8%93%9D%E8%89%B2%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/">《夜空总有最大密度的蓝色》阅读批注
</a></p>
</blockquote>
<ul>
<li><p>“喜欢拼图的我，其实喜欢的是满地碎片。”（倪湛舸）</p>
<blockquote>
<p>喜欢下雪的我，其实喜欢的是融化。</p>
</blockquote>
</li>
<li><p>“有一种感觉，是：大概是因为内心想要努力隐藏的东西，终于被人看见的缘故吧。”</p>
</li>
<li><p>图书馆就是我们的记忆。当你展开这些书页时，这些过去的人就能获得重生，就能够再度得到生命。（博尔赫斯）</p>
</li>
</ul>
<h2 id="18-12-2_海贼王">18.12.2 海贼王</h2><ul>
<li><p>弗兰克：50年？那么久的事，我那时还么生下来呢，不是我泼冷水，50年那么长，我也不会等下去。。<br>布鲁克：我怎么能！<br>弗兰克：恩？<br>布鲁克：我怎么有权利去判断他有没有等下去呢？</p>
</li>
<li><p>乌索普：“如果痛苦的时候不能陪在他身边，还算什么同伴啊！”<br>“一直以为，我只要静静地看着他，那家伙就能理所应当的成为海贼王。但是不是这样的。就算是路飞也是会输的，他也会疼得大喊大叫。所以啊，那家伙需要本大爷的力量。”</p>
</li>
<li><p>蔡康永：什么是成长。小时候的快乐是来自外在的刺激。长大之后学会了从内部去感受而得到喜悦。</p>
</li>
<li><p>李诞：审美是一个人一生经历的总和。不要随意去否定一个人的审美。不要随意去否定他人的经历。对一个人的经历来说，很有多不可控的因素。比如童年。要尊重这种不同。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[哈伯格税：面向共享经济的创新？]]></title>
      <url>http://chocoluffy.com/2018/12/18/%E8%B0%88%E8%B0%88%E5%93%88%E4%BC%AF%E6%A0%BC%E7%A8%8E%E4%B8%8E%E6%BF%80%E8%BF%9B%E5%B8%82%E5%9C%BA/</url>
      <content type="html"><![CDATA[<blockquote>
<p>导语：</p>
<p>哈伯格税的提出，是为了解决闲置私人资产的流通。私有资产会导致垄断，而极端的公有化又容易造成公地悲剧。这套体系的提出，也是在思考绝对的私有制和公有制之间是否存在折中的方案。</p>
<p>我一直认为没有最正确的经济体系，只有最适应这个时代的体系。当人们慢慢习惯一个强调使用权而非拥有权的时代，当个体的身份、群体之间的关系逐渐虚拟化和碎片化，我们会不会更容易接受这项议题：我和陌生人们按比例共同拥有着这些资产，譬如我们的房屋，手机，乃至我们的移民身份……</p>
<p>现在的经济市场对曾经的人们来说，一度也是激进市场。尝试去理解哈伯格税，也是为了去理解那些潜藏在身边的观念和需求的变化。</p>
<p>或许未来已经来了，只是还没扩散开。</p>
</blockquote>
<p>了解哈伯格税的缘由，来自于以太坊创始人Vitalik今年四月的一篇书评博文<a href="https://vitalik.ca/general/2018/04/20/radical_markets.html" target="_blank" rel="noopener"><on radical="" markets=""></on></a>，关于Posner和Glen Weyl的新书《激进市场》<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。书里阐述了四项激进的实验性策略，涉及经济和政治等不同领域，分别尝试去调解新时代背景下的财产权，选民投票权，移民以及数据隐私等议题。</p>
<p>而其中最令我感兴趣的哈伯格税，来自于作者对闲置物品财产权归属问题的研究。辅助参考了作者另外一篇论文《产权只是另一种形式的垄断》<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，我也想写下一些我的看法。</p>
<h3 id="哈伯格税_(Harberger_tax)">哈伯格税 (Harberger tax)</h3><p>首先，这个税的规则是：</p>
<ol>
<li>为私人拥有的财产提交自己的估价，同时根据估价，每年提交相应的税。</li>
<li>市场上的任何人都可以支付你提交的估价，而强行达成交易。</li>
</ol>
<p>简单来说，这个规则会让你为自己的财产估值而付出代价。如果估得低，别人提出的匹配价格也低，可以直接买走你的财产，而如果估得高，则自己需要上缴的税也会高，以此来达到平衡，鼓励每个人客观的评估自己的财产。</p>
<p>这一套规则首先尝试解决一个影响市场交易效率的问题：<strong>私有财产估价虚高。</strong></p>
<p>这个问题的基础出于一个假设：<strong>产权是一种垄断</strong>，而由于垄断带来的持有者议价能力的提高阻碍了市场的交易。简单来说：<strong>私有财产所创造的议价问题会阻碍分配效率</strong>。</p>
<p>通过提议每个人为自己的估价提交税，哈伯格税同时尝试解决的第二个问题则是，<strong>解决闲置资源的市场匹配。</strong></p>
<h3 id="质疑">质疑</h3><p>首先分析一下实用性。</p>
<p>在尝试将这个想法运用在真实的交易场景中的时候，会发现实际情况不一定能够满足这个理论的基础假设。</p>
<p>如果我们希望交易的闲置物品是大宗商品，我们处于一个买方市场而非卖方市场的时候。对资产的垄断并不能推出交易时报价偏高的结论，因为存在市场其他产品持有者的价格压力。<strong>此时你的议价能力是由市场上其他竞争者所决定的，而非来源于你的垄断</strong>。</p>
<p>因此该论文所讨论的假想对象，还是集中在诸如土地，房产，高科技设备等偏向卖方市场的资产，有垄断企图的资产。这一部分资产将因为哈伯格税的存在而减少闲置成本的耗费。</p>
<p>进一步推断，这个假设同样也适用于“人为造成”的供应者市场。譬如：极其个性化定制的商品，或者由于人的关联价值而留下的纪念品，遗物比如梵高的向日葵画等等。</p>
<p>作者在论文中确实证实了我这个推断的前一部分，论文提到了土地等自然资源，以及房产资源，同时作者还补充了，公司财产的处置也可以应用该规则。同样适用的，还有专利法则。作者引用了第三方调查认为某种意义上，知识作为一种垄断财产，专利法则也是在妨碍知识在市场上被更好地分配和利用。<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p>
<p>这些经济学家认为，打破垄断的唯一方法，是对财产通过税收进行国有化。( only solution to the monopoly problem was nationalization (through taxation) of many forms of property. ) 进而引出了拍卖机制。</p>
<p>同时需要注意的还有，哈伯格税致力削弱的财产垄断，影响了原有的哪些垄断的好处。作者认为，因由私人产权所带来的垄断，给予了拥有者投资改善该资产的激励。某种程度上来说，<strong>私人产权意味着，拥有把这个资产空置的权利</strong>。<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> 而该稳定的所有权及其预期，将允许所有者通过后续投资 (investment) 而获利。类似地，譬如公司品牌归属于该公司私人资产的范畴，同时也具有长期稳定的预期，除非公司倒闭该品牌会一直伴随其中。而这在某种程度上也解释了为什么腾讯视频等大型视频内容提供商愿意花大价钱去制作小众而口碑好的产品，譬如奇遇人生等。相反地，如果我对资产有着不确定的预期，假如未来的某一天都可能有人剥夺该资产，伤害的是所有者的投资意愿。在相同的例子里，如果某视频网站处在一个极其激烈的，随时可能被取代的市场环境，利己的策略是赚快钱存活下来，而非花大价钱投资品牌。</p>
<p>基于这个思路，我认为这项哈伯格税可能带来的<strong>最大的害处，或许就在于人们可能低估了拥有权不稳定的情况对人们行为预期的影响，在于私有财产不再神圣不可侵犯</strong>。</p>
<p>这意味着很多。</p>
<p>这意味着你只是在行使财产暂时的使用权，而非拥有的权利。这意味着你无须对财产作进一步投资，你无须有和它更加长远的规划。</p>
<p>对我一个存在主义者来说，这也是认为，我无须真正感受它，驯服它，以及想象和它的未来。没有归属感。好吧挺讨厌的。</p>
<p>听起来有点熟悉吧，这其实就是公地悲剧的原型嘛。曾经我们说解决公地悲剧的其中一种办法是，外部利益内部化，也即建立内部私有产权机制。而哈伯格税这套理论，在某种意义上是希望逆向拆解了私有产权而创建了一个公有资源的交易环境。而相比公地场景下直接的的共同所有权 (common ownership) ，作者提出的部分共同所有权 (partial common ownership) 更像是一个折中的方案。我与其他人共同拥有资产，从而在保留我对资产的投资愿意的同时，也允许我通过资产的重分配而获利。</p>
<p>改善“资产垄断而妨碍分配效率“还有没有其他方式呢。在知识产权上，我们有一个更极端的典范，就是有时限的知识产权。知识，专利作为短期内发明者的私人资产，在保护期结束后归属于全人类所有。但是面对社会私人资产譬如土地，房产，施行有时限的产权会面临很大的社会阻力。某种意义上哈伯格税预示着大范围的财富再分配，这对于资产持有者多的人群影响最大。</p>
<h3 id="创新点">创新点</h3><p>除去上文所提及的哈伯格税规则实行的潜在弊端，这项规则有没有带来什么创新的地方呢。</p>
<p>我认为其中一点是根据交易前提交的自我评估的价格交税。重点在“交易前”和“自我评估”。类似的规则还会有很多变式，譬如“交易后的补偿价格”，或者是引入“第三方的司法评估”。之所以哈伯格税选择这一种搭配，我认为是为了<strong>最大化私人信息的准确性</strong>。</p>
<p>经济学，相比于自然科学，其中一个很大的区别在于，没有绝对的“所有信息”，信息而是分散的，是分布在每一个人上的。于是，经济学讨论的是一种机制，如何设计更适合将分散的信息信号传播给其他人，从消费者传播给生产者。<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup> 而人们自己对财产的估值，就是这样一种私人的分散的信息。信息越准确，越能反应局部的供需关系，越能提高市场的交易效率。</p>
<p>第二点是哈伯格税尝试促进的闲置物品的分配效率，而不是私人产权所着重的投资效率，在我们这个时代背景下的意义。当前在公司运作规则上常见的股份制或许会扩大其适用的范围。我们或许会同时和很多陌生人共享某些财产的拥有权，也拥有即时买入卖出这部分权利的机会。而当大多数人都或多或少参与进资本市场，拥有获得回报的权利，这会不会某种程度上削弱了近期民粹主义兴起的根基。相反地，让没有利益干系，责任能力的人具有投票权，往往迎合的是极端的革命家口号。<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></p>
<p>其次是对共享经济体系的影响。人们对这个时代的伪共享经济体系比如Ofo，Uber等等有很多误解，首先我觉得一个比较好区分是否是共享经济的方式，是去看这个商业模式是在分享闲置资源，还是在不断创造新的资源。当你看到的数据是数百万的小黄车被新制造出来投放进市场最后成为堆叠如山的城市垃圾，当你发现世界上超过2/3的Uber司机实际是全职司机，其中超过80%买车为了赚钱糊口<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>……<strong>这不是通过分享闲置资源而取得进步的共享经济 (sharing economy)，而是利用新创造出来的资源以及大数据的调度而形成的按需经济 (on-demand economy)</strong>。这是科技进步带来的优势，而非制度的优势。</p>
<p>在这一层澄清的基础上，去理解哈伯格税所面向的共享经济，是去平衡私人投资维护资产的意愿以及当资产闲置时用于市场交易的效率。开个脑洞，用Airbnb来举个例子。其实目前Airbnb面临的一个很棘手的问题是，出租房屋在经历了租客之后的维护。租客本身和房屋没有利益关系，底线是不破坏，这很大程度上依赖于租客的素质，而别说租客对房屋的投资意愿了，比如说清理，装饰，置办家具等等了。引入哈伯格税会带来什么改变呢，试想一下，每一个租户从上一个租户那里按照后者评估的价格买来该房屋的使用权，同时租户也为自己的使用期间估算价格并计算哈伯格税上缴给房屋拥有者。<strong>这个哈伯格税实际上，就是个体能够承受资产空置的代价，本质上也是个人对资产使用价值的理性评估</strong>。当我喜欢租这个房屋的时候，我愿意为了多住它而设置高的估值并上缴更多的哈伯格税，而当我结束租房希望出手交易的时候，可以设置较低的估值而找到下一个租客。这个规则的改变带来的变化是，出租的房屋和租客本身建立的利益关系，也因此由于该利益关系带来的对投资意愿的鼓励。试想想这种情况如果租客乱破坏房屋市场上还会有人愿意和他达成交易吗。</p>
<p>作为脑洞这种设计还是具有很多明显漏洞的，但是实际在共享经济的背景下利用哈伯格的税收规则来定义人们的行为是具有借鉴意义的。以此延伸，另外想稍作启发的一点是。<strong>哈伯格税本质上增加财产持有的门槛，而这在某种意义上也是区分真正使用者，减少滥用（spam）的一种思路</strong>。参考hashcash 的设计原理<sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup>。为了炒房空囤房屋，为了营销发送大量垃圾邮件等等情景在某种程度上都可以归属于滥用，房屋的所有权被滥用导致闲置，邮件发送的廉价使用权被滥用导致垃圾邮件。而当我们逐一根据其滥用的方向征收成本的时候，对房屋所有权征收哈伯格税，对机器发送邮件验证哈希增加计算成本，是不是可以缓解滥用带来的危害。</p>
<p>正如上文论述的哈伯格税的优劣之处，该理论的确阐述的是一个激进市场，而难以在短期内为政府所用。鉴于法律上的自由中立原则，以及法案决定的警示效应，该理论也很难短期通过法律。即便如此，这套理论带来的启示是多方面的，是面向一个我们可能很快就会迎接的共享经济的时代。</p>
<p>而每一套理论框架的优劣势都是动态的。随着科技的变化所不断降低的实施成本已经深刻地改变了很多曾经既有理论的基础，而这也将为我们带来新的思考方向。 自由一定比管制优越吗，自由和隐私的边界在哪里……等等有趣的议题我觉得基于这个时代的技术都能够给予新的诠释。</p>
<p>我也很感兴趣哈伯格税这套理论能够在哪些场景应用。目前通过调查已知的，是在一个DAO游戏《进化星球》的药水价格机制的设计中出现过<sup id="fnref:9"><a href="#fn:9" rel="footnote">9</a></sup>。如何找到一个合适的场景，虚拟代币交易或者二手市场等等，会是我后续一直关注的方向。</p>
<p>或许未来已经来了，只是还没扩散开。</p>
<h3 id="Q&amp;A_(2019-6-5更新)">Q&amp;A <small>(2019.6.5更新)</small></h3><ul>
<li>关于提问“其实同样存在其他成本，比如折旧，机会成本等等，这些都算持有成本，为什么要强制征税？” 答：这个强制的税算是把这些隐式的成本给可视化了从而推动用户决策，中心仍是为了帮助用户找到自己对资产的真实估值（因为无论偏高还是偏低都对自己不利）</li>
<li>关于资产类别的问题。答：我个人也不认为由政府对“实体”资产征收具有可行性，但是在小范围人群内能够对所有人交易转移所有权，流动性极高的信息（包括电子身份，以及域名，知识产权这些）是我认为可行的。</li>
<li>和fomo 3d的区别。答：fomo3d是庞氏的机制，其推动资产流动的动力不是来自于自由交易（共赢）而是来自于发展接盘者（零和）。</li>
<li>局限性？答：是存在这类问题的，因为强调了资产的流动性而容易导致降低了用户对资产的投资预期，比如你如果知道域名可能在未来某个时间被交易走你可能对这个域名内容投入的努力会减少等等，因此作者在论文中也建议，对那些偏向价值累进的资产场景（比如房屋，知识产权等等，重视一些投资价值）征收相对较低的税。</li>
<li>关于IP一块的讨论。答：是适用的场景。简单来说，这会导致专利流氓的持有成本增高的特别快，防止他们holdout。</li>
</ul>
<ul>
<li>知乎专栏链接：<a href="https://zhuanlan.zhihu.com/p/52724869" target="_blank" rel="noopener">哈伯格税：面向共享经济的创新？</a></li>
<li>豆瓣书评：<a href="https://book.douban.com/review/9836743/" target="_blank" rel="noopener">哈伯格税：面向共享经济的创新？</a><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">《激进市场》同样入选了经济学人18年的年度书单。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;"><a href="https://chicagounbound.uchicago.edu/cgi/viewcontent.cgi?article=12668&amp;context=journal_articles" target="_blank" rel="noopener">《Property Is Only Another Name for Monopoly》, Posner and Weyl</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;"><a href="https://chicagounbound.uchicago.edu/cgi/viewcontent.cgi?article=12668&amp;context=journal_articles" target="_blank" rel="noopener">《Property Is Only Another Name for Monopoly》, Posner and Weyl</a>  Page 52.</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;"><a href="https://orange.xyz/p/254" target="_blank" rel="noopener">再谈哈伯格税：极端的计划经济和市场经济，没准是同一个东西                                                                         - 橙皮书</a></span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline; vertical-align: top;"><a href="https://site.douban.com/280724/widget/notes/193432971/note/643686878/" target="_blank" rel="noopener">哈耶克：知识在社会中的运用</a> 我认可哈耶克所代表的芝加哥自由主义经济学派的观点。</span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline; vertical-align: top;"><a href="https://mp.weixin.qq.com/s?__biz=MzA4MTM5NTYzMA==&amp;mid=2659494084&amp;idx=1&amp;sn=051f4dad152486be3799e8b69c50b1a2&amp;chksm=84e5a205b3922b13c9b1e725a155c1e9ad4df4384709ccfb7b016bfae89a191cdce8a0995282&amp;scene=0#wechat_redirect" target="_blank" rel="noopener">《人类简史》作者分析特朗普崛起：自由主义终结了么？</a> 复习一下民粹主义在美国总统大选中的影响。</span><a href="#fnref:6" rev="footnote"> ↩</a></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">7.</span><span style="display: inline; vertical-align: top;"><a href="https://www.nytimes.com/2018/08/09/nyregion/uber-nyc-vote-drivers-ride-sharing.html" target="_blank" rel="noopener">Uber and the False Hopes of the Sharing Economy - The New York Times</a></span><a href="#fnref:7" rev="footnote"> ↩</a></li><li id="fn:8"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">8.</span><span style="display: inline; vertical-align: top;"><a href="https://orange.xyz/p/62" target="_blank" rel="noopener">hashcash算法：中本聪关于区块链的秘密都在这里                                                                           - 橙皮书</a></span><a href="#fnref:8" rev="footnote"> ↩</a></li><li id="fn:9"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">9.</span><span style="display: inline; vertical-align: top;"><a href="https://forum.evolution.land/posts/7" target="_blank" rel="noopener">EvolutionLand (进化星球) 是什么！ · EvolutionLand</a></span><a href="#fnref:9" rev="footnote"> ↩</a></li></ol></div></div></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《夜空总有最大密度的蓝色》阅读批注]]></title>
      <url>http://chocoluffy.com/2018/12/12/%E3%80%8A%E5%A4%9C%E7%A9%BA%E6%80%BB%E6%9C%89%E6%9C%80%E5%A4%A7%E5%AF%86%E5%BA%A6%E7%9A%84%E8%93%9D%E8%89%B2%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<p>这或许会成为我最喜欢的诗集了。</p>
<p>我想像作者那样，写出镜头般的文字.</p>
<p>就像她说的，“把被摄者内心之中的情感以及故事，稍许变换颜色呈现出来”。把这些存在作为礼物的一半留下来。然后静静地等待。</p>
<p>等待每一个不同的人怀揣着自己的心事去解读另一半的故事，带着自己的期待与不安，过去的明亮与失落……我不想苛求理解，如同我不愿苛求恩赐。</p>
<p>但或许正因为不理解，我才得以自由。</p>
<p>而我也愿意出于相同的理由，感受他人的可爱之处并留下余地。</p>
<ul>
<li>“只想听陌生的音乐。想跟无法再度聆听的音乐，永远地，擦身就此别过。如此一来，就不必爱上它或怎样，应该就可以只是单纯地说，好美的音乐。”<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li>
<li>“今天的我，因做到无视昨日的我而美丽。”</li>
<li>蚕与绢。我生命的一部分。这里有我错过的天空和黄昏。</li>
<li>心情不好的时候，我会偷偷和自己说一些话。“就在现在，这个星球的某一个地方，依旧大雨如注。”而忽然间我的黄昏变得明亮。（突然间黄昏变得明亮，因为此刻正有细雨在落下。 或曾经落下…）</li>
<li>“电视剧里循环播放的梦想与爱，不是真实的。活着的人唯一能为你做的，或许只有背叛。”</li>
<li>人们极力去讨论的玫瑰与爱，也同样热衷于看到破碎和崩塌。</li>
<li>有一些概念是很有力量的。比如理解，爱与自只有被这些力量吸引去的时候，会愿意打碎些什么。</li>
<li>“你还好吗？他们温柔的话语，雕刻出你孤独的形状。”</li>
<li>我喜欢突然想起些什么东西，因而忽而忘记，也有一种诗意。</li>
<li>人，成为人，不过是。“梦破碎了，山河仍在。我想早早化身为山河。想对那些活着而拼命寻求幸福的人，鄙夷地抛下一句“庸俗”，而后，化身成为最最平庸的山河。”</li>
<li>【关于存在主义】“我与你的存在本身，不起任何作用，唯有你我之间的心意，或许才是这个世界真正需要的东西。那一日你曾说过的话语，至今仍滚落在地，温柔地摩挲着水流。”</li>
<li>“如同丢弃在黑夜里的手电筒，曾经温热。”</li>
<li>“制服这东西，会让你我，勉勉强强拥有一层身份。你会变成哪一种大人呢？”</li>
<li>“故乡的夜景一粒粒，自我的皮肤脱落而去。”</li>
<li>祝你，有一个高糖度的冬天。</li>
<li>就算用尽比喻，也终究会日落。</li>
<li>你喜欢称赞落雪，而离别的话语，你全都忘了。</li>
<li>我时常会轻易地，因为阳光明媚，而毁约。</li>
<li>同样绵延湿润的，还有我记忆中的雨。</li>
<li>【关于美感】”在无所谓生，无所谓死的时间，我意识的根基处，有一抹淡粉色颜料。” 在我的眼眸深处，在我还能够想清楚为什么之前，我就已经这么做了。</li>
<li>我习惯用下雪，来计算这一季的冬天。</li>
<li>“明明没有发烧，却知道自己病了，这或许意味着，我已经成为大人了。”</li>
<li>“我对你的无知，是一种暴力。你从哪里来，要往哪里去，我无意了解，是一种暴力。”</li>
<li>人类会想要给自身以外的生物命名，比如：萤火，脚印。</li>
<li>我们在做什么，其实就是在定义它的边缘。比如，我爱你是有形状的。是一个试探的菱形。而雪，撤销了大地的形状，给了我再爱一次的权力。“在似乎无所不知，实际一无所知的城市里，只选择自己认识的路，向超市走去，仿佛在为空白的大地，勾勒它的边缘。”</li>
<li>我为我的任性，取了你的名字。</li>
<li>“我愿被你肤浅地爱着-用哪怕不经意嗅到一抹春天的气息，就险些将我遗忘的轻松心情。” 因为你有了春天，而我有了你的回忆。</li>
<li>吃下的一块蛋糕，突然感觉，这就是这一季冬天最后的夜晚。</li>
<li>“假如全人类同时打开手机，会不会有一些星星，从夜空消逝？”</li>
<li>“把梦撕碎，就会变成钱。”， “比起血液，电力与天然气，对城市更为关键。”</li>
<li>【剧本】人类发明了一种化妆品，习惯于在眼尾纹上星屑，从此不再抬头。</li>
<li>“他人的言语绝不会，成为我的正确答案。”</li>
<li>给倒塌的遗址取名，叫作“人生”。</li>
<li>这个世界最不需要的，必定是我的温柔。</li>
<li>“为了和谁一起扮演人类，我想把这里是天国这件事，永永远远当作秘密。”</li>
<li>盛夏，是透明的。</li>
<li>【关于忘却】“春季，生日那天沐浴的祝福，没有人会永不忘记。因此年年樱花盛开，都会有短短的两秒，把我们衬的透明。”</li>
<li>漫长恋情的开始，有一面白白的墙壁，我在上面用小小的字写着：我喜欢上你了，你已经完蛋了。</li>
<li>“冬天发现的红色树果，我宁愿不去知晓它的名字而活着。”</li>
<li>【关于美术馆】一个人看着一个人看着一个人。无动于衷。</li>
<li>“十字路口像大海一样，蓄积着光亮。”</li>
<li>【关于理解】你那不被理解的部分，才是你可爱的地方。我们都在祈求这个世界的理解。“假如有谁，能得到他人百分之百的理解，那么这样的人，便没有存身于世的意义。”“而每一个人，都应该更深切地了解，自己有多么可爱。”<br>“每当与人交谈的时候，我总抱有这样的想法：这句口头禅，真是其人本色的流露啊；就连脸上的表情，也带有一种其人自己都未察觉的惯性的笑容；又或者，他附和别人的方式，好特别……类似这样的一些属性，这种种表现，我都希望自己能够敏锐地捕捉到，并将它们定义为‘一个人的可爱之处’。-我一向觉得，自身对于他人而言，是一种不可理喻的存在，并且向他人寻求理解，也是一种荒谬不堪的暴力。他人总是超乎想象地难以理解我，但正因为不理解，我才得以自由；正因为这份不理解，我才得以活下去。我之所以拥有感受他人可爱之处的能力，也必定出于相同的理由。-”</li>
<li>【关于记录】作品是双向的，是读者和作者一起完成的。文字只是作者完成一半的礼物。每一个人怀揣着自己的心事去迎接另一半的故事，带着自己的期待与不安，过去的明亮与失落。”-我想写镜头一样的诗。把被摄者内心之中的情感以及故事，稍许变换颜色呈现出来-我想写这样的文字-…假如你有一点点喜欢我的诗，那绝非由于我文字的力量，而是打一开始就存在于你自身之内的某种力量…世界看起来如许美丽，是因为你自己如许美丽。”</li>
</ul>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">引号内为原文引用，非引号内容是我的读书批注。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Nov.]]></title>
      <url>http://chocoluffy.com/2018/11/30/%E7%A2%8E%E8%AF%AD-2018-Nov/</url>
      <content type="html"><![CDATA[<h2 id="18-11-28_作者小结">18.11.28 作者小结</h2><p>给我影响最大的作者，应该是加缪和昆德拉。</p>
<h3 id="加缪">加缪</h3><p>为什么？</p>
<p>我觉得我最珍惜的一种能力，是能够感受的能力，是我的敏感。这意味着我拥有着发现不一样的世界的权利。我不愿意错过美好的东西。</p>
<p>“为了纠正天生了无动于衷，我置身于历史和阳光之间，贫穷告诉我，历史不总是美好的，而阳光则让我明白，历史并不是一切。”，理解加缪思想的一个切入点，就是去理解他的核心，“沉默与阳光”，沉默意味着的是荒谬，每一个人的沉默里的故事。而阳光，是能够不再沉默的权利。</p>
<p>你会发现，有些词语你会反复地提及，慢慢地，变成了祈祷。</p>
<h3 id="昆德拉">昆德拉</h3><p>喜欢昆德拉，是从他耶路撒冷奖的颁奖词之后，从《轻》到了《不朽》。</p>
<p>“人之所以为个人，不是因为他思考着和其他所有人都同样的东西。恰恰是因为他失去对真理的肯定和对别人的一致同意。而小说，则是个人想象的天堂。在这块土地上，没有人是真理的占有者。”</p>
<blockquote>
<p>联想到一点：雷布拉德伯里讨论过的，社会上少数族群的人带来的对文字、言论自由的压迫。社交媒体的初衷，就是为了被看到，被发现。公开的文字和书里的文字。</p>
</blockquote>
<p>“人类一思考，上帝就发笑。”，这句话是劝阻人们不思考吗，不是的，恰恰相反。他希望人们多去思考，并与此同时记住自己视野的狭隘。<strong>没有那种唯一的、明确的真理。真理最终使人丧失个性。</strong></p>
<p>而说到底，他和加缪是殊途同归的。</p>
<p>《小说的艺术》里他提到，“小说的意义是发现只有小说才能发现的，探索人的具体的生活，保护它，<strong>抵抗存在的被遗忘。</strong>”</p>
<blockquote>
<p>这个时代是流行告别的。亦或者说，只有当我们告别了，我们才想起来它们的存在。</p>
</blockquote>
<p>最后还是回到了发现人的生活。</p>
<p>艺术的三大敌人是：媚俗，对既成思考的不思考，以及不快活的人。他认为欧洲文化最珍贵的地方在于对个人的尊重，对个人的特殊思想的尊重，对个人享有的私生活不被侵犯的权利的尊重，鼓励思想游荡在温和与闲在的自由中。</p>
<blockquote>
<p>感觉终于有点理解，为什么欧洲会有GDPR的出现。个人的私生活是不得侵犯的。因为-侵犯会带来改变-，能够侵入每个人的私生活就有能力去干涉并改变他的私生活，哪怕披着的是以良善的美好愿景。对自由的另一种诠释。</p>
<p>抖音的slogan: 记录美好生活<br>快手的slogan: 记录生活记录你</p>
<p>而什么是美好？</p>
</blockquote>
<h3 id="哈耶克">哈耶克</h3><p>理解哈耶克。要从他的自由主义立场出发，思考他宣扬的自由市场的优势，是更充分地利用分散的信息。</p>
<p>柏拉图：哲学王 -&gt; 亚里士多德：法治。</p>
<h2 id="18-11-27《不朽》">18.11.27《不朽》</h2><p>每个人根据自己性格的不同，最后不过成了一个环，有人从家庭走向了家庭，有人从孤独最后留在了孤独。</p>
<p>个性是少于人的。那个离别的手势里，有另一些平行世界。</p>
<h2 id="18-11-26">18.11.26</h2><p>短视频，之于图片，之于文字，在于细节，在于共情。</p>
<p>短视频会逐渐剧情化，电影化。而当短视频接管越来越多人们获取信息的注意力的时候，其本身也即承担了资讯分发的功能。未来的内容资讯消费方式，会越来越接近人们在电影院消费电影的方式。</p>
<h2 id="18-11-25_流量变现">18.11.25 流量变现</h2><p>抖音：公域流量【流量大而不稳定】<br>快手：私域流量【很简单的一个区分方式是，你对看过的这些内容的记忆是归因去平台，还是个人IP】</p>
<ul>
<li>不同的流量类型，变现方式是不同的。</li>
</ul>
<p>对于一个个人的IP，它的变现模式目前来说是相对固定的，是首先完成粉丝积累toC，然后完成品牌的转化toB。【之所以需要toC的一步是因为核心仍在于证明流量的稳定性】</p>
<p>对于抖音来说，需要把握好这种临时的大流量的冲击力，以及短暂的欢愉带给人的冲动所促成的消费行为。</p>
<p>而快手，则可以更好地借鉴目前微博变现流量的方式。快手，本质上在我看来，是这个时代的微博，也是一个更加符合“微博”定义的平台。【注意这也不一定是好事。举例，豆瓣存在的必要性】</p>
<ul>
<li>对于经济学来说，人们最容易犯的一个错误就是：<blockquote>
<p>把自然科学的思维放在了社会科学上。<br>没有绝对的“所有信息”，而是分散的，分布在每一个人上的信息。于是，经济学讨论的是一种机制，哪种制度更适合这类信号传播给其他人。</p>
</blockquote>
</li>
</ul>
<h2 id="18-11-23">18.11.23</h2><h3 id="《未来简史》">《未来简史》</h3><ul>
<li><p>当火车头跌落悬崖的时候，第200厢的车厢仍在稳定地前移。变化从来都是渐进的历史过程。没有好莱坞式的世界末日。而是当有一天我们回过头来，发现我们已经写不出诗，不再流泪的时候。我们成为了当年的我们所认为的神，成为了另一种物种。</p>
<blockquote>
<p>什么是自由。对自己生活的控制权。我们在让渡很多的决策权给智能的技术，我们在牺牲很多抵达终点的过程。我们想让手机使我们更快乐，而不是自己使自己更快乐；我们想让安眠药、抗抑郁药使我们更安心，而不是自己让自己安心。<br><strong>当我们习惯了把喜怒哀乐的权利让渡出去。然后想着自己还能够紧紧攥住自己更重要的善良，自己生而为人的自由意志。而不过一样的选择罢了。</strong></p>
</blockquote>
</li>
<li><p>什么是超能力。能够研发出假肢，让截肢的患者能够重新走路的科技，也能为健康人进化升级。科技的双刃剑，举例，伟哥和整容技术。</p>
</li>
<li><p>高跟鞋的流行。以及住宅门前草坪的流行。乃至抽烟和纹身。都是人们证明身份的一种象征。高跟鞋，意味着我不再需要进行体力劳动。门前的草坪，意味着我不再需要用草坪来畜牧，种植，区分自己和劳动阶级。抽烟、纹身意味着我身体能够承受得了这些伤害。</p>
</li>
<li><p>人与动物的区别在于，人类能够大规模的合作。这都是基于人类想象的秩序。基于共识。有了共识，才愿意遵守一样的规则。</p>
<blockquote>
<p>共识的力量而不是物质世界的力量。举例，苏联的解体。没有城堡的轰然崩塌，没有玻璃的破碎和战火的声音。是一份人人皆知的协议，分开了这个世界。</p>
</blockquote>
</li>
<li><p>“大多数人生活的意义，都只存在于彼此讲述的故事之中。” 除了客观，主观之外，还有另外一种存在的形式，是存在于“相互主体”之中（共识）。从宗教神话，到社会仪式，都是来自于我们认为这有意义。</p>
<blockquote>
<p>不要去追求他人定义的意义。他人定义的美好。</p>
</blockquote>
</li>
</ul>
<h3 id="其他">其他</h3><ul>
<li><p>门前一棵不愿凋零的树。像墓碑一样伫立着。讨好着这个季节最后的明媚，却冷落了风。</p>
</li>
<li><p>未来的人们。有着更大规模的爱与恨，喧嚣与寂寞。我们现在拥有的很多能力，就曾经是历史纹路下的超能力。</p>
<blockquote>
<p>每一个虚构的命题，都仅仅只是把过去作用在现在的变化，放大了。</p>
<p>即时信息共享的芯片，就是现在的互联网。</p>
</blockquote>
</li>
<li><p>每个时代都有着这个时代所特有的无知。以及时代所特有的无知的伪装。</p>
</li>
<li><p>我无法说服自己相信黑塞的想法。</p>
</li>
<li><p>“诗的存在，并非让你去明白的意义，只是为了让你将它读出来。”</p>
</li>
<li><p>【18.9】任意有可被交易。的思维是有惯性的。 <strong>你想相信这个世界上有一些事情它没有代价。它很不方便。但它很美。</strong></p>
</li>
</ul>
<h2 id="18-11-22_社交平台">18.11.22 社交平台</h2><h3 id="如何解决平台上的不良内容这个问题。">如何解决平台上的不良内容这个问题。</h3><p>一个发现：是基于人的。如果和名誉绑定之后，</p>
<p>如果每一次发布是困难的。是会消耗的。这一点可以阻止spam。handcash的思路。</p>
<blockquote>
<p>专家来制定规则（点赞或者踩内容来决定该用户的名誉值），众人平等权利发布。</p>
</blockquote>
<h3 id="社交的附加价值">社交的附加价值</h3><ul>
<li>我喜欢一个人，关注一个人，就有兴趣希望进入他的圈子。关注他的圈子。这一点是很自然的成为一个premium pkg的一个附加功能。然后完全交给志愿者来负责日常更新和维护这个附加圈子。<br>一个月一块钱。一万的订阅者。其实就足够养活一个辅助的运营志愿者团队。<blockquote>
<p>这个想法本身有点意思：我依靠着看见你的生活而生活。一个人看着一个人看着一个人。</p>
</blockquote>
</li>
</ul>
<h2 id="18-11-20_《好笑的爱》">18.11.20 《好笑的爱》</h2><ul>
<li><p>我在很多不同的领域工作，寻找我的风格，寻找我自己。当我写下我第一个故事之后，我确信我找到了自我，我成为写散文的人，写小说的人，而不是其他的任何什么人。</p>
</li>
<li><p>那时候，我深深渴望的唯一东西就是清醒的，觉悟的目光。我在小说里发现了它，所以对我来说，小说不仅仅是一种体裁，而且还是一种态度，一份立场。</p>
</li>
</ul>
<h2 id="18-11-19">18.11.19</h2><p>人们习惯把成功道德合理化。</p>
<h2 id="18-11-17_《不必交谈的时刻》">18.11.17 《不必交谈的时刻》</h2><ul>
<li>太轻易写完的悼词宛如被太快总结完的一生。</li>
<li>伟大的肖像没有表情。</li>
<li>他们在句子中表现的那么兴奋，可他们实际上却没有兴奋，只是为了显得合群。</li>
<li>对孩子最好的引诱是让他们去阅读 。这样就算他们遇到糟糕的事 ，也会知道还有个备份的世界 ，那里有备份的梦想 、备份的宁静 、备份的旅行 、备份的诗句 ，还有备份的爱情 。<blockquote>
<p>我不记得从哪一篇读书笔记里写到，读书的一个优点，是它有让你放慢步调的神奇。以前一直以为这是落俗套的解释，现在慢慢明白那是一种“听我慢慢诉来”。以纸张抵挡脚步。现在发现读书的另一个优点，那里原来有一个备份的世界，换句话说，一个避难所。第三个论点，一个人的阅读史也是一个人的心灵成长史。</p>
</blockquote>
</li>
<li>在所有的整理项目里 ，最难整理的是回忆 。 人回忆是因为人老了 。年轻人是来不及回忆的 ，他们有新的人生要品尝 ，新的世界要观看 ，新的笑话要笑 ，新的伤心要哭 。直到有一天 ，你就只能回头看 ，直到失去聚焦的能力 ，带着混沌走向失忆 。是的 ，我亲见一个我所见过的最不轻易动容的人 ，在回忆的当口流下眼泪 。在一本书的最后一页 ，我看见一句话 ——当时一激动 ，拿出小黑本 ，就抄了下来 ：我只能等待最后那场健忘症的来临 ，它将擦去人的整个一生 。 ——路易斯 ·布努埃尔<blockquote>
<p>“失去聚焦的能力”。宛如黄昏下读书。忽然抬起头来，天暗了。毛姆</p>
</blockquote>
</li>
<li>回想去年的谈话 ， 有一句我还记得 ——人都可以拍出至少一张大师级别的照片 ，但不是每个人都可以拍出一整组大师级别的照片 。这是偶然和蓄谋的区别 ，也是文艺爱好者和真正创作者的区别 。如今都是这样 ，这个时代的气质就是这样 ——大家发挥着世俗生活里剩余的文艺热情 ，为的是拍一张照片 ，唱一首歌 ，然后转向下一个 。<blockquote>
<p>很有趣的一个话题，有没有什么东西是绝对小众的？还是说，小众这个概念是被人为创造出来的，总有那么些人，在被别人了解中获得满足，而当原有小众的东西走向大众，于是再创造一个新的小众话题占为己有。</p>
</blockquote>
</li>
</ul>
<h2 id="18-11-16">18.11.16</h2><p>最近每次和投资人pitch结尾的时候，我都会习惯说 that’s our everything, thank you! 慢慢变成一种仪式。这个项目是我的所有了。这段时间以来的每一个愿望和流浪。请你好好收下。 </p>
<p>一些精彩的思路：</p>
<ul>
<li>Ari论文。db里生成十个honey word，如果用户填写这个honey word就可以马上知道是hacker。</li>
<li>利用kernel的信息压缩。</li>
</ul>
<h2 id="18-11-14_法律与自由">18.11.14 法律与自由</h2><p>很多时候，美国最高法院作出的抉择，和道德立场无关。和道德、良善的定位无关。而是和选择的自由有关：</p>
<p>麻州决定将合法的婚姻范围扩大到同性的伴侣，即同性恋合法化。原因是at stake is an individual freely choosing the person with whom to share an exclusive commitment. 关键在于个体能否自主选择。</p>
<p>很多类似的议题都可以参考相似的逻辑，比如法律是否支持堕胎等。尤其当许多宗教信仰的判断介入道德判断和定义的时候。自由选择是更重要的。 </p>
<blockquote>
<p>问题并不在于选择的道德价值， 而是个体作出选择的权利。 【自由中立看法 】</p>
<p>反驳：但是政府虽然是以中立性原则做出的决定，但是决定做出并公示之后带来的效果并不是自由中立的。</p>
</blockquote>
<h2 id="18-11-13_诗">18.11.13 诗</h2><p>湖面的落日，逆着时间，上升。</p>
<p>我每次看见你，就想起了我。</p>
<p>加缪的文字：沉默和阳光。</p>
<p>我把我的狂乱，真实，高高地筑上了堤坝。而我的技巧还无法抵达。</p>
<h2 id="18-11-12_强连接性的工具">18.11.12 强连接性的工具</h2><p>人的诉求是不会消失的，只是会被压抑住，然后在相反的方向更加强烈的释放出来。</p>
<p>如果强连接性的工具意味着减少了人们日常之间的直接交流（被默认为低效率），那么在另一端在创造出共同临场感和陪伴感的体验中，将得以释放这种力量。</p>
<p>将来大多数人们的空闲时间会被虚拟社交、直播软件所占据。并不是因为人们有多希望发生这一场对话。而是因为它必须维持着，以证明个体还有着被连接和沟通的价值。</p>
<blockquote>
<p>镜面另一端耀眼的太阳，像是更温暖的光。</p>
</blockquote>
<p>而当，对话，失去了对话最初的意义。你必须存在，却和你没有关系。</p>
<p>我不喜欢这种逻辑。</p>
<blockquote>
<p>当虚拟比真实更加真实。当在虚拟的世界里你能获得更多的尊严感和自由感。甚至是“尊严”和“自由”。</p>
<p>一个近视的人摘掉眼镜也能够坚定地相信这个眼前世界的真实。</p>
<p>微博回复：是的！而且有些时候你想努力改变，克服的东西，在别人眼里不过只是风车而已。看见这些东西或许并不是因为悲观，也可能恰恰相反。</p>
</blockquote>
<p><strong>这个思考的角度是，对于使用强连接性工具，失去的是，我们拒绝的自由。</strong></p>
<h2 id="18-11-11_诗">18.11.11 诗</h2><p>叶子落下了，燃烧过。焦虑的颜色。</p>
<blockquote>
<p>留下燃烧过的痕迹。燃烧过的颜色。</p>
</blockquote>
<p>我写下的每一个字，我在接近它，确认它。</p>
<blockquote>
<p>而成为祈祷。</p>
</blockquote>
<h2 id="18-11-9_碎语_-_偏见与偏爱。">18.11.9 碎语 - 偏见与偏爱。</h2><ul>
<li>这是我的偏见，也是我的偏爱。</li>
<li>小说的真实感：<ul>
<li>《刀锋》黄昏在医院里看着床上奄奄一息的舅舅，窗外摇晃而来的一束岛灯。</li>
<li>加缪《局外人》，他第一次把手伸给我，我感到了他手上的痂皮。</li>
</ul>
</li>
<li>给自己一个写作训练：“以及”和“比较”。<ul>
<li>往棺木上抛洒的血红色泥土，以及夹杂在泥土中的白色树根。《局外人》</li>
<li>一场沾湿了每一片花瓣的雨。</li>
<li>天色变暗，以及暗沉下来的还有你的目光。</li>
<li>城里的喧嚣来自低处，比照在海湾上的灯光还遥远。《若有若无之间》</li>
</ul>
</li>
</ul>
<h2 id="18-11-8_碎语_-_夏季的天，黑的很慢。">18.11.8 碎语 - 夏季的天，黑的很慢。</h2><ul>
<li>有些时候我把回忆写出来，是为了忘记。</li>
<li>什么时候，我有勇气迎接《堂吉柯德》和陀思妥耶夫斯基。</li>
<li>当回忆只剩下修辞。当回忆不需要修辞。</li>
<li>诗应该由失败的人来写，因为他们表达的是一种渴望，而不是叙述一件事实。而对于历史，则恰恰相反。成功的，写下了一段历史；而失败者，留下了诗。</li>
<li>博尔赫斯，“等你到了我的年纪，你也会几乎完全失明。你只能看见黄颜色和明暗。你不必担心。逐渐失明并不是悲惨的事情。那像是夏季天黑的很慢。”<blockquote>
<p>时光得流逝感。那是天黑得很快的冬天。</p>
</blockquote>
</li>
<li>神话里的国王，他在巫师使他睡在猪圈里之前也不曾做过梦。</li>
</ul>
<h2 id="18-11-6_碎语_-_过期，是你错过了我的期待。">18.11.6 碎语 - 过期，是你错过了我的期待。</h2><ul>
<li>吸电子烟的人，就像熬着夜喝着枸杞水的人，是懦弱的。</li>
<li>在黄昏，总觉得这个时刻适合等候。</li>
<li>过期，是你错过了我的期待。</li>
</ul>
<h2 id="18-11-3">18.11.3</h2><p>奇葩说第11.3期。你已经很努力了，不是一句好话。因为他只看到了一个方向，甚至于他只承认你的一个方向。最大的忽悠是，给你欢呼的人群，给你奔跑的伙伴，给你远方的颁奖台，你就慢慢地开始跑了，而你并不知道奔跑的意义。<br>相反，如果这句话来自于自己。来自认可而非评判，是一种总结，则是好话。</p>
<ul>
<li>什么是一个好的反馈？反馈的形式、反馈的量级都是可以控制的。都是工程师自己的哲学。然而人们总是倾向于把恶魔制造了出来，才认得出它地狱般的样子。<blockquote>
<p>【18.4.19】连接的弊端。而社交媒体，正在促成这样的情况。它曝光了，或者说它带来了很多以前看不到的节点，但它用海啸般地反馈来威胁小众，只剩下沉默。</p>
</blockquote>
</li>
</ul>
<p>社交网络：我注视着你注视之物而得到注视。</p>
<blockquote>
<p>社交网络，不过是熟记有一条通往你的路径。</p>
</blockquote>
<p>落叶，像无数朵璀璨重生的花。</p>
<p>一个不断分离，精细化的社会。雷布拉德伯里《华氏451》里的少数族群。<br>advantage:</p>
<ul>
<li>comfort，效率来自于隔离。</li>
<li>发言的人是专业的人，他付出了他的名誉。</li>
</ul>
<p>disadvantage:</p>
<ul>
<li>更容易受煽动。蛊惑人心的专业观点。</li>
<li>标签。</li>
<li>简化。一个人的生活被简化为他的社会职责。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Oct.]]></title>
      <url>http://chocoluffy.com/2018/11/02/%E7%A2%8E%E8%AF%AD-2018-Oct/</url>
      <content type="html"><![CDATA[<h2 id="18-10-31">18.10.31</h2><ul>
<li>又被免餐了。要感恩！！</li>
<li>反思一下，为什么当初小米上市的时候会被洗脑。始终记得那句话，“在他人贪婪的时候克制，在他人克制的时候贪婪”。整体来说，小米的管理人员还是值得信赖的，能够承诺硬件利润永远不超过百分之五，在资本面前，已经成为了一种理想主义了。不过公司的管理方式，以及上市后整体的发力方向还是有很多改进空间的。这次的股市风波又让我想起一个故事，数据调查显示，股票经纪人在鼓吹某只股票之后平均两个月内会抛售该只股票。</li>
<li>仅仅是生活，都可以成为别人的消费。观赏其他群体的生活，成为了新的娱乐消费方式，但是却又极力抵触那种生活侵入自己。<blockquote>
<p>社会分工精细化的一个弊端。会变得把明明真实的生活当作一场戏剧来看。如果大众渐渐接受“效率来自隔离”的逻辑，那么他们为什么要接受平等呢？我不想看到这种后果。“书，会被一页一页撕去”，雷布拉德伯里。</p>
</blockquote>
</li>
</ul>
<h2 id="18-10-27">18.10.27</h2><h3 id="《小说的艺术》米兰昆德拉">《小说的艺术》米兰昆德拉</h3><ul>
<li>越宏大的概念里，人的“生活世界”就容易被忘却。人，成为了使命的一部分。</li>
<li>仅仅是写下日记，认真地记住自己的生活，就足够了。发现唯有小说（日记）才能发现的东西，乃是小说（日记）唯一的存在理由。真理用几句话就可以总结，为什么我们还要写小说。因为摇摆，因为模糊。因为我无法总结孤独是什么，幸福是什么却仍然想要感受生活给予我的任何一种情绪。</li>
<li>我唯一能够确定的，是这个世界的暧昧。是没有一个唯一的，绝对的真相，是相互矛盾的真实。做到这一点，需要很努力的理解。这不是对存在主义的颂扬或者批评，我的基础不是一种道德态度，而是一种探询。</li>
<li>人总希望世界中的善恶是明确分开来的。因为人有一种天生的、不可遏制的欲望，那就是在理解之前就评判。而宗教和意识形态就建立在这种欲望上。</li>
<li>未来的小说，它们的存在理由，它们的荣耀，以及它们在所处社会中的作用，就是确证人们所说的，以及人们必须说的。【核心：没有什么是必须说的，没有什么是一定对的】</li>
<li>假如小说真的应该消失，那并非是因为它已精疲力竭，而是因为它处于一个不再属于它的世界。我们的时代注视着时下发生的事情，想法没有延续性，感情，生活不再是一件作品，而是现在必须享受必须了结的事情，跟所有别的事情一样，是一个没有明天的手势。</li>
<li>我很难判断自由与快乐的方向，我只知道他们已无法与我们时代的精神和平相处。把很多承诺交给未来是很不负责的，让未来去评判我的现在的生活，我的回忆，我会觉得未来它配不上。</li>
<li><p>-&gt; 这带来了一个问题。如果我不相信未来，也不相信上帝和人性，我应该相信什么。昆德拉说：“我什么也不信赖，只信赖塞万提斯那份受到诋毁的遗产。”</p>
</li>
<li><p>【诗】你是云，你想起我的时候，就化成了雨。</p>
</li>
<li>我知道自己很多时候很天真烂漫。所以我很希望找到一个环境能够尊重我的天真烂漫。</li>
<li><p>cornell tech身边真的有很多很厉害的人。认识土耳其念律师来这边希望创业，谷歌工程师兼面试官，拿了200百万天使轮的超级奶爸，从cern量子碰撞机研究中心出来的，从比特币里拿到几千万身家的，为的是social impact来创业。去和他们交流。</p>
<blockquote>
<p>性格和命运，是同一个概念的两个名字。黑塞。</p>
</blockquote>
</li>
<li><p>相信天赋还是教育，天赋是生物性垄断，而教育是社会形态的垄断，如果改变不了生物的欲望，尝试去塑造社会的欲望。</p>
</li>
<li>选择。</li>
</ul>
<h2 id="18-10-21">18.10.21</h2><ul>
<li><p>一个更加去中心化的结构，将管理数据的权利交换给用户个体的做法，是会减少还是更加恶化了数据的滥用。在自由市场的环境下，我觉得是后者。</p>
</li>
<li><p>生活品类的搜索入口应该是地图而不是搜索引擎。</p>
</li>
<li><p>人们把恶魔创造出来，才认出它地狱般的样子。</p>
</li>
<li><p>越来越自我为中心，也越来越有以自我为中心的理由和资本。</p>
</li>
</ul>
<h2 id="18-10-20">18.10.20</h2><p>没有你们呼喊我的名字，我不会站在这里。海贼王。</p>
<h2 id="18-10-19">18.10.19</h2><ul>
<li>【诗】<br>音速比不上光速，<br>仿佛我看得见，<br>你呼喊不到的未来。</li>
</ul>
<ul>
<li><p>坐缆车，母亲不小心把孩子摔在了地上。<br>孩子开始撕心裂肺地哭。声音特别尖。哭恐怕是最无辜的选择了。突然觉得好孤独。他没有办法选择，他在施害者的怀里哭。哪怕这伤害是无意的，他没有其他的选择，哪怕仅仅只是逃离。<br>声音萦绕在空中，在纽约最繁华的灯光里。</p>
</li>
<li><p>文学给了我感受的能力。一份份被善待或曲解的微笑。</p>
</li>
</ul>
<h2 id="18-10-4">18.10.4</h2><blockquote>
<p>多一些时间思考本质。历史只是轮回。发生在淘宝天猫上的历史，在qq微信上的，还会让后人再思考一次。</p>
</blockquote>
<p>我想要更精致的生活，这意味着什么？</p>
<p>只要你有资本搭建一个舞台，你就能够得到一场狂欢。而它的代价是，蜂拥而至的游客，让你的舞台剧没有终止也不敢终止。</p>
<p>这让我想起Google和Apple的区别。一个是我能够替你做成很多事情，你只要让我接管就好了；一个是我做出了一个很好的工具，你可以用它成为一个更好的自己。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<p>这意味着我们要成为平台。我们要开放我们的能力为每一个平凡人赋能。这意味着我们在搭建一个自由的市场，却必须小心谨慎地不让它成为一个斗兽场。</p>
<p>我觉得，无论资本最终把我们领向什么地方，是那点点的理想主义让我能够接受我自己，去认可我自己。</p>
<p>陪伴；家乡；家乡。这些词语是快手给我的力量。不需要也不应该向公众定义什么是美好。只需要做出最好体验的工具让每个人维系这些感情。</p>
<p>克制永远比服从欲望要难。</p>
<p>快手和抖音们在取代的，是微信朋友圈。</p>
<p>快手：平等。效率来自于隔离？</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">Jobs的比喻：computers are bicycle for minds. 关于bicycle的比喻。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[对李开复新书演讲《AI·未来》的一点思考]]></title>
      <url>http://chocoluffy.com/2018/10/05/%E5%AF%B9%E6%9D%8E%E5%BC%80%E5%A4%8D%E6%96%B0%E4%B9%A6%E6%BC%94%E8%AE%B2%E3%80%8AAI%C2%B7%E6%9C%AA%E6%9D%A5%E3%80%8B%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<p>很开心开复老师能够来到Cornell Tech做演讲，这篇博客也是我对其演讲观点的一些记录和想法。</p>
<a id="more"></a>
<h2 id="中国的独角兽">中国的独角兽</h2><p>他谈到了美团是怎么发展起来的。把一千只copycat放在斗兽场里面，最后胜出的就是美团。</p>
<p>我突然有种感觉，中国近些年的科技发展，更多在于科技创新压榨社会阶级差距；在于incentize，引导这个差距的引力支撑起服务业。</p>
<p>开复老师接着提到美团是怎么超越他的同行的：低人力成本实现的外卖服务。这个逻辑其实很脆弱，虽然我必须承认这套逻辑会持续在中国社会起作用。人口转型是一个很大的话题，这里暂不作赘述，但我觉得某种意义上近几年中国的独角兽过多依赖于中国目前的阶级差距来提供资本主义式服务。</p>
<p>只要这个阶级差距依然存在，技术，尤其是人工智能造成的垄断，只会因为自由市场而造成更多的剥削而不是更少。</p>
<p>开复老师提到的另一个例子是创新工场投资的一个借贷金融软件App，他们通过抓取用户手机里的数据以及并合第三方数据平台的数据来预测一个用户还账单的可能性，其中涉及的特征，包括了用户的工作，薪资，发薪日期和社交信息等等。就在老师讲的过程中，我也明显感觉到身边外国的同学发出的诧异声。自由乃至自愿的交易数据，是会伤害还是改善用户的生活。为什么会有GDPR这个协议的诞生。很多关于数据隐私和便利的问题<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，从投资人的角度他们会尽力说服你利用好这一波数据红利，这一类应用的存在乃至其庞大的用户体量，或许并不能证明其科技的优越性，仅仅是因为法律的漏洞提供了这种可能性而已。</p>
<p>我好奇，当中国没有阶级差距带来的廉价人力资源的时候，当没有这些数据监管漏洞的时候，开复老师还能够用什么例子来比较。</p>
<h2 id="人工智能取代人类">人工智能取代人类</h2><p>相比于目前关于科技进步的消极言论，譬如未来会产生一个几近无用的人口阶级依靠福利存活，李开复老师给出了他认为的合理转变。人们未必能在短时间内在专业技能上得到提升，但是却有可能转移到更富于情感交流，与人互动频繁的岗位中。人工智能在这个阶段还做不到模拟人类的情绪以及和人进行精神上的互动。</p>
<p>模仿(优化)的前提，是量化。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p>
<p>很多人会提到图灵测试，甚至有时新闻会大肆宣扬某些技术通过了图灵测试，人们难以分辨幕布后面的究竟是机器还是人类。我一直对这类新闻持谨慎态度，并非是因为对技术发展的悲观，而是感叹于实际应用条件的严苛：</p>
<p>交流的力量，甚至说陪伴的力量，在于被理解，而非仅仅存在。</p>
<p>就像你即便身处最热闹的派对，依旧可能感受到深刻的孤独感一样。我们祈求在诉说中得到安抚，听见回响，就像一个慢慢蒸腾而上温热气泡，情感是脆弱的，容忍度是极低的。机器一旦承受起人们情感交流的期待，便容不下一点失误。每一次失误，是将是对其真实性的永恒打击。</p>
<p>我的语言，性格和温柔都只是提前编好的程序，而你在我心里没有任何分量。<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p>
<p>正是对这份真实的认知，让曾经所有交流，所有情感失去了重量。</p>
<p>基于这个前提能够预想的未来是，人工智能会逐渐承接商务的沟通，仅仅是信息的传递和整理呈现，比如：自动化的客服服务，售后服务，功能说明书以及菜单等等。而人们则会应对更多个性化交流的场景，比如：老年人陪护，私教，美容时尚咨询以及婚礼规划师等等。<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p>
<p>Todo: 下一篇博客尝试写一下关于中心化和去中心化的比较，去中心化并没有被包装那么美好，这意味着每一个节点个体需要承担起曾经由中心化承担的风险，这也意味着所有的责任：维护，收益等都交付给了节点本身，这意味着专业信息的不平等造成的差距会进一步增大，也意味着任何对效率的追求都终将引向中心化的复辟。也思考下平等和效率的冲突，快手和抖音现在竞争的本质。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://www.wired.com/2016/06/apples-differential-privacy-collecting-data/" target="_blank" rel="noopener">Apple’s ‘Differential Privacy’ Is About Collecting Your Data—But Not ​Your Data | WIRED</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">这或许就是自由市场最擅长的事情了吧。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">Google Duplex人工智能打电话和餐厅预约时故意模仿人类语气地说出“Emm..”，在网络上引起极大的抨击。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;">李开复老师完整演讲的<a href="https://drive.google.com/file/d/1UoGy6pIScLBn4cLL_HgikA1gaSJbFVC8/view" target="_blank" rel="noopener">slides</a>。</span><a href="#fnref:4" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Sep.]]></title>
      <url>http://chocoluffy.com/2018/09/04/%E7%A2%8E%E8%AF%AD-2018-Sep/</url>
      <content type="html"><![CDATA[<h2 id="18-9-19">18.9.19</h2><p>在室内看着室外大雨。仿佛在看无声电影。</p>
<h2 id="18-9-17">18.9.17</h2><p>写给<a href="http://chocoluffy.com/2018/09/01/%E7%A2%8E%E8%AF%AD-2018-Aug/#comment-4099331549">该博客评论</a>的回复：</p>
<p>鲁迅曾经写下这样的话，“人类的悲欢并不相通，我只是觉得他们吵闹”，他写下了事实，人无法分担他未曾经历过的痛苦，这很无辜。但同样存在的是，人类世界有了聆听，有了接近，有了惺惺相惜。我们有着相异的命运和苦难，却仍然极力奔向，守候对方的努力，是我认为最打动人的东西。所以同样也是鲁迅，他也写下了，“无穷的远方，无数的人们，都和我有关” 。理解它们的语序是尝试去理解这个世界的荒谬的关键。有限，命运…这些字眼可以把人导向虚无，也可以指向浪漫，这是每一个人时刻都在做却难以察觉的选择。</p>
<p>选择理解，选择安静，这是我的祈祷。那是我一直相信着的并愿意为之奋斗的世界。我始终觉得，这个世界在人们心中呈现的样子，远比这个世界本身重要，而且重要的多。共勉！</p>
<h2 id="18-9-10">18.9.10</h2><ul>
<li><p>月色甄默成诗。</p>
</li>
<li><p>对自己最好的奖励：5km和早睡。</p>
</li>
</ul>
<h2 id="18-9-4">18.9.4</h2><ul>
<li>翘掉课，去饭堂随机和一个不那么熟的人坐下来吃饭，听听他们的愿景。</li>
</ul>
<p>今天和来自和前腾讯的mba对话：<br>远程控制是完整无人车逻辑的一步。解决的是无人车离开高速路之后情景。<br>toB，最终变成富士康为代表的流水线工厂。<br>无人车最终会消除品牌溢价。<br>双边市场，增长是相辅相成的。<br>中国的5g，是领先于世界的。<br>无人车，区块链。未来世界的挑战越来越是跨学科的。</p>
<ul>
<li><p>我真的属于由对话推动思考的人。</p>
</li>
<li><p>微博：这里没有我的熟人，却成为了我很亲近的地方。<br>微信朋友圈：我很在意你，于是我选择了沉默。</p>
</li>
<li><p>今日份的梦境：<br>Amazon的AR游戏，点阵游戏，我走在车水马龙之间。身边很多隐形的警察，谁办了坏事，谁成为红点，于是离它最近的普通点就会变成警察来追捕红点。</p>
</li>
<li><p>睡前的梦：<br>我在很认真的和猫粮说关于她的秘密。我花光了今世的所有幸运来和你说一句话。</p>
</li>
</ul>
<h2 id="18-9-1">18.9.1</h2><p>都是有原因的。<br>有些动作，你看得出它背后的所有阳光与祈祷。<br>有些坏，其实是所有曾经饱受的戾气，浮夸和嘲讽在那一瞬间借由那个人表达而已。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Aug.]]></title>
      <url>http://chocoluffy.com/2018/09/01/%E7%A2%8E%E8%AF%AD-2018-Aug/</url>
      <content type="html"><![CDATA[<h2 id="18-8-30">18.8.30</h2><p>未来人们不需要做什么创造性的工作。只需要更正机器人创造的事物。我们不需要美与丑，我们只需要正确和错误。</p>
<p>于是人变得越来越像机器人。而机器人越来越有人性。</p>
<p>[18.9.10更新:] 刚刚，就在写代码的间隙，在Behance看到这样一幅画。<br><img src="https://mir-s3-cdn-cf.behance.net/project_modules/fs/e7be6c66472289.5b174556777b5.png" alt="CUDA"></p>
<p>作者Manolo Gamboa Naon，一幅只由圆形和三角形组成的画，AI生成的，很可能是利用了GAN的技术。</p>
<p>我在想象这幅画诞生的过程。其实没有了对颜料的敬畏，那些小心翼翼托起画板的动作，好像并不会妨碍我们认为这不是一幅堪称杰作的画。它很精致漂亮，让我觉得它仿佛也有灵魂。而它的高贵气质背后是不需要沉淀的，灵魂不需要凝聚和起承转合，所有创造发生在电路的一瞬间，电光石火。</p>
<p>我们会学会怜惜这份魅力吗，它的美完全不惧怕毁灭。它也不稀有。它打破了我所有能惋惜的伦理和道德。我们为什么会想要珍惜一些东西，而恣意打破另一些。当我想到这些美好没有任何理由地出现了，而且毫无畏惧，那些敏感的细腻的发明者可能被精致而麻利的挑选工人取代。我突然有点伤心了。</p>
<h2 id="18-8-29">18.8.29</h2><p>怎么说呢，感觉自己突然喜欢上康奈尔的一个时刻：</p>
<p>刚刚大概快十点的时候吧，我从洗手间回来，一个穿着褐黄色职工衣服的人静静地靠在图书角里，捧着一本书，我经过的时候他抬起头来，我们相互点了点头。没有什么寒暄，我走远了悄悄回过头多看了一眼。<br>耳机里的音乐恰好随机到一首现场的交响曲。曲终。响起了很长很长的掌声。仿佛磅礴大雨。</p>
<p>突然感觉挺美的。嗯，有点喜欢这个地方了。</p>
<h2 id="18-8-28">18.8.28</h2><ul>
<li><p>电视没有消失，它移到了人们的手机上。当人们的欲望被越来越容易的满足。容易有更多的欲望。</p>
</li>
<li><p>关于责任心<br>为什么要做一个社会责任心的人。<br>这个社会很少为你准备灯光和奖状。但你要知道，你仍然在发光，你依然重要。<br>你在发光，给了别人发光的允许。</p>
</li>
<li><p>研究生开学第一课<br>那么宝贵的一小时，director会讲些什么呢，她选择的话题是脆弱和信任。<br>we make ourselves vulnerable, then we build trust.<br>和团队分享你成长的故事，不要讲任何职业path的东西。<br>early form of listening.</p>
</li>
<li><p>很多内容已经不适合再谈了 或者说谈厌了 但并不代表它不再作用。为了质疑的质疑，削弱了质疑的力度。</p>
</li>
<li><p>真正的区分永远在人。有的人可以拿着终极答案而无所知，有人可以从果壳里破译宇宙。</p>
</li>
<li><p>“沉浸感的本质，在于孤独。”</p>
</li>
</ul>
<h2 id="18-8-14">18.8.14</h2><ul>
<li>正直的人没有犯错的机会，在他们那里，善良也被看作有三六九等之分。而一个虚伪的人，却可以随心所欲地做好事。真讽刺。</li>
</ul>
<p><strong>可以尝试去记录，去描述生命中发生的事，而不下结论：</strong></p>
<ul>
<li>[8.15]飞机落地迎接。一个老爷爷带着魔术师般的黑色礼帽；两个孩子钻出围栏冲向一个中年男人。</li>
<li>[8.10] 书店二楼商业圈的角落，美容店开始做清晨动员，柜员们站成一排，和大堂经理喊口号：“相信自己，我们是最棒的，我们能行…”，重复了三遍。这家书店位于广州的中心。</li>
</ul>
<h2 id="18-8-13">18.8.13</h2><ul>
<li>关于选择</li>
</ul>
<p>聪明是一种本能，而善良是一种选择。</p>
<p>你们很优秀，也希望你们承受起来优秀的重量。</p>
<ul>
<li><p>准备和猫粮的晚餐，准备一份回忆。</p>
</li>
<li><p>商业创意的趋势是：不要让你去找资讯或者商品，让他们来找你。准确分类好那一部分是逛的，哪一部分是你准确想要的。特定是二手这个市场，做一个工具，比如chrome extension结合桌面提醒，当想要的东西出现的时候提醒我。</p>
<blockquote>
<p>延伸：每次用豆瓣移动端版都会看到一些自己感兴趣的文章：因为那些文章是我收藏的书或者电影的比较好的点评。</p>
</blockquote>
</li>
</ul>
<h2 id="18-8-10">18.8.10</h2><ul>
<li><p>早晨晨走：关于北极圈的事情，关于公益。一个关于直播的项目，你的钱投入的每一棵树苗可以直播看到它的情况。</p>
</li>
<li><p>连接性究竟意味着什么？</p>
<blockquote>
<p>twitter\weibo究竟带来了什么？<br>理想主义。堂吉柯德。TNR（the news room，去观察一个时代是如何对待英雄的离去）。酷与不酷。</p>
</blockquote>
</li>
</ul>
<h2 id="18-8-9">18.8.9</h2><h3 id="反思">反思</h3><ul>
<li>不要对自己亲近的人那么任性。</li>
<li>不要总是想证明自己比别人更优越。</li>
<li><p>时刻清楚，什么才是最重要的！！无论是对家里人，还是对创业伙伴，还是对朋友。</p>
</li>
<li><p>虚构最大的胜利，就是当我们有了迟疑：“真实不值得”。</p>
</li>
<li><p>警惕那种科技，它什么也没有创造，却带来繁华纸醉的幻觉。</p>
</li>
</ul>
<p>它仅有的功勋是连接那些早已存在的东西。<br>我期待的empathy并没有出现。<br>被推到了世界繁华纸醉的边缘。不，应当是我要走向那些角落，我不喜欢，我有我自己的方向。</p>
<h2 id="18-8-4">18.8.4</h2><p>夜晚走在家乡的大海边。<br>若隐的海岸线，瓷黄灯光，和微咸的空气。<br>如果。</p>
<p>看昆德拉写托马斯与萨宾娜交换的礼帽。<br>感觉，时间流逝，就是在和时间交换一些东西。<br>爵服，灯光，交杯和心碎。<br>这真像浮士德的契约。<br>我好奇，令我身上法术失效的那一刻，咒语是什么。</p>
<h2 id="18-8-3">18.8.3</h2><ul>
<li>连接一千位铁杆粉丝。小密圈。</li>
</ul>
<p>一个艺术工作者只需要一千个铁杆粉丝就可以自由地创作。</p>
<p>而其实小密圈现在只是局限于图文瀑布流 连创始人都是这么定位的 是一个付费分组朋友圈。</p>
<p>其实小密圈仍然没有解决内容水化这个问题。</p>
<p>取代的是，豆瓣小组。</p>
<p>时间点很好，在微信公众号，知乎等出现一部分专业人士。对现有的变现效率不满意。尤其是微信公众号打赏，知乎live。</p>
<ul>
<li><p>后续。资讯的后续更新和报道。</p>
</li>
<li><p>在你没有一个核心想法的时候，你看似可以接受所有东西，好像整个世界都是给你开放的，但实际上不是。你想想，你会凭借什么做选择？你对不同机会的感受力是否一样，你是否容易收到裹挟？</p>
<blockquote>
<p>美学感受越丰富，兴趣就越坚定，道德选择就越准确，他也就越自由，也可能越不幸。</p>
</blockquote>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[写在微软Imagine Cup决赛圈之后]]></title>
      <url>http://chocoluffy.com/2018/07/26/%E5%86%99%E5%9C%A8%E5%BE%AE%E8%BD%AFImageine-Cup%E5%86%B3%E8%B5%9B%E5%9C%88%E4%B9%8B%E5%90%8E/</url>
      <content type="html"><![CDATA[<p>Imagine Cup全球决赛圈刚刚在西雅图结束，恭喜smartARM代表加拿大赛区赢下了冠军<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。有点遗憾因为个人签证原因没能在队员身边参与决赛全程，但在五月底去温哥华的加拿大赛区比赛仍然让我记忆犹新。从一个side project起步，到因为学院孵化器负责人推荐参与微软的比赛，再到在温哥华展示拿下加拿大赛区第二名<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>进入全球决赛圈，这期间认识了很多很有意思的队伍，和他们的故事。有一些感想记录在这里。</p>
<h2 id="关于动机">关于动机</h2><p>我感觉这次Imagine Cup一行给我感触最大的就是“动机”。几乎针对每一个队伍，裁判都很感兴趣去倾听团队背后的故事，为什么你们会做这个，为什么你们会组成一队。这也是很一脉相承的story-telling。毕竟整个人类文明，人与人之间的交流，都是story-telling的一种。而越有感染力的故事，越容易凝聚力量成就伟业。</p>
<p>可是这同时也让我警惕。</p>
<p>就在我给故事添加上一个修饰词：富有感染力，的时候，是不是有一种危险是我贬低了故事的维度，而把丈量标准的价值观强加在了这件事物上。容易落得的一个境地是，如果一个故事没有感染力，是不是它就没有价值。我们只是说在某个公认的测量标准上它处于劣势，而不能够去斥责其整体的价值。</p>
<h2 id="关于价值溢出">关于价值溢出</h2><p>这越来越证实了一句话。科技所应用的场景会给这项科技本身带来更大的价值叠加。这既是优势也是风险。优势是你找到了一个更适用的市场场景，而风险是外行人会关注于那个市场本身的情绪和舆论而大于科技本身。</p>
<p>这一次获胜的队伍smartARM是一个关注义肢市场的机械臂项目。其利用嵌入机械手掌心的raspberry pi和camera pi实现近距离的物体识别，然后根据预先映射好的动作流程来指导机械手指的运动，实现对物体的抓握等操作。与此同时我注意到一个细节，操作者佩戴了myo，一个用于捕捉手臂肌肉信号的可穿戴设备。基于其硬件基础，这个队伍有意思的地方还在于其模仿苹果等公司的商业理念：我们卖硬件，但我们是一个软件服务商。他们允许用户自定义抓握的操作，上传云端服务器，分享以及获取他人的操作recipe。</p>
<p>他们的项目本身有很多很有价值的地方，但仅从现场演示的效果来看他们仅仅展示了最基础的功能就戛然而止，也令我感到很遗憾。但对于对科技稍陌生的观众来说，这最基础的演示也远已足够震撼。</p>
<p>令我印象更加深刻的是这只队伍展示的市场调查。目前义肢市场上充斥着良莠不齐的手臂模具样品，某些几百刀的商品其能够实现的功能却近似只是装饰。能够利用硬件和计算机视觉帮助这类人群实现哪怕是仅有的抓握操作，将会是很宝贵的进步。更何况基于raspberry和myo的硬件组合成本可以压在250刀以内，如果进一步自主实现肌肉电流信号追踪，成本可以压得更低。</p>
<p>这也再一次令我想起那个观点：未来已来，只是还没有扩散开。我们其实已经拥有了足以改变许多领域的科技能力和成果，只是他们还没有普及开来。</p>
<p>这其实也昭示现在科技和资本转向的方向。相比近15年来基于互联网和移动设备等基础设施发展起来的各式服务，我们会迎来越来越多基础建设上的创新，譬如AR/VR平台，区块链应用。而我们也将以此获得很宝贵的一段缓冲期，来围绕新的基础设施来构造面向大众市场的服务，找到更匹配的用户场景。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://techcrunch.com/2018/07/25/smartarms-ai-powered-prosthesis-takes-the-prize-at-microsofts-imagine-cup/" target="_blank" rel="noopener">Techcrunch报道Imagine Cup决赛优胜队伍</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;"><a href="http://web.cs.toronto.edu/news/current/U_of_T_wins_at_the_Canadian_Finals_of_Imagine_Cup_2018.htm" target="_blank" rel="noopener">加拿大赛区结果</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Jul.]]></title>
      <url>http://chocoluffy.com/2018/07/24/%E7%A2%8E%E8%AF%AD-2018-Jul/</url>
      <content type="html"><![CDATA[<h2 id="18-7-28">18.7.28</h2><ul>
<li><p>越强大的过滤工具，只会让你发现分散更多的注意力。因为你都在看到你感兴趣的东西，这比糟糕的内容更诱惑而分散注意力。比如曾经的电视和现在的手机。都是看剧的时间。</p>
</li>
<li><p>下一次有人问我，为什么我喜欢创作。因为我觉得，“生活和创作并不是两种天分，而是同样的能力。”</p>
</li>
<li><p>“喜欢一些违背直觉的东西，比如这束玫瑰，瞒着夏天开放了。”</p>
</li>
<li><p>来自山谷里冰蓝清澈的小溪<br>来自一盏仍然温热的酒杯<br>最不在意出身的 是雨 </p>
</li>
<li><p>每个下雨天，在大地行走的人们都成了提线木偶。</p>
</li>
</ul>
<h2 id="18-7-27_《声名狼藉者的生活》">18.7.27 《声名狼藉者的生活》</h2><p>福柯的文字里能感受到的发力点在“演出”和“权力”。他喜欢观察权力冲突的时候发生交替的东西，譬如曾经默默无闻的底层群体以主流的方式成为永恒的讽刺…p307</p>
<p>权力是一种合谋关系。</p>
<p>当一种权力的影响范围越来越大，譬如一类技术，一种群众思潮，某些主义，我们所警惕的东西不应只是这种力量是否会被所有者滥用，还有，当每个人都可以让这种强大的力量为他所用，满足自己的目的，反对别人。p308</p>
<p>权力，为人望而生畏，却同时被人们所深深包容。因为悲剧是轮回的。</p>
<ul>
<li><p>【剧本】会不会迎来这样一个时代，我们明明说着相同的语言，却无法相互理解，宛如呼叫与仪式之别。</p>
</li>
<li><p>去想象他们经历的来由，去追溯发生在凶手身上的悲剧。</p>
</li>
</ul>
<h2 id="18-7-25">18.7.25</h2><p>VR、AR是参与感。对内容行业。<br>区块链是信用。参与进支付行业。</p>
<p>去中心化的意思是，以前中心化面临的风险和失控，现在每一个节点都摊上了。</p>
<h2 id="18-7-23">18.7.23</h2><p>你凭什么认为，最美好的东西，靠所有人投投票就可以投出来了。不，不是的。以前我们听过一些童话故事，其中一个是在海边捡石子的小男孩，他渴望捡到一个如金子般温暖的石子。但为什么，美，可以被随随便便的看到。</p>
<h2 id="18-7-17">18.7.17</h2><p>分清楚主次，读纸质书是在创造。读kindle是在收集总结。</p>
<h2 id="18-7-15">18.7.15</h2><ul>
<li><p>有一种蛇 很长很长 反应很慢很慢 直到你忘记了我 我还爱着你</p>
</li>
<li><p>是要有多大的信任，我才愿意把我最柔软的一面留给你。是下雪。</p>
</li>
<li><p>好像什么在燃烧。好像又有什么扑灭了。扑通扑通。机场分别。终于我的脸上拥有了下雪的痕迹。</p>
</li>
<li><p>越来越感觉，区块链还缺少一个真正的底层支持。其应用层的创新还没有到时候。以太坊大部分的是dapp项目，能活跃超越4个月的都不多。</p>
</li>
</ul>
<h2 id="18-7-9_区块链解决公地悲剧问题">18.7.9 区块链解决公地悲剧问题</h2><p>和朋友闲聊，突然感觉到其实区块链很好地解决了公地悲剧（tragedy of the commons）问题。</p>
<p>解决公地悲剧的方式之一，除了极端的私有化，还可以是collective rules，也即所有权的明确划分。而所有权的界定是基于共识的。</p>
<p>而恰好，区块链所解决的去中心化的信任问题本质上就是撮合了共识。通过保证智能合约的执行，使加入网络的人遵守约定的规则，而token的持有和流通，体现了个人对集体的贡献值。市场会奖励为扩大共识做出贡献的人，从而使得个人利益与集体利益的捆绑，解决公地悲剧。</p>
<p>打个比方。股票，是对公司的所有权进行了划分。而某种意义上，区块链的token分发，像是拓展了股票的操作范围，不仅是公司的所有权，还有私人财产，抽象知识，个人隐私的所有权都可被界定和流通。这其中存在着很多价值压榨（非正义）的空间这里暂不讨论。但有意思的是，用另一种说法，这种持用token的方式是相较于公司更为非正式但同样高效的生产关系。这是区块链的一项很有价值的发明。</p>
<p>抛开技术层面聊区块链其实仅仅只是服务于好奇心罢了，要说真正投项目还是做基础建设（跨链、闪电网络等）的方向比较靠谱。也时刻警惕国内现在盛行的价值观洗脑。短期内不要碰ICO。</p>
<h2 id="18-7-8">18.7.8</h2><ul>
<li><p>AI做regression和prediction，本身不带有市场。</p>
</li>
<li><p>在加拿大all in小程序。可以用有赞商城！基本就打通了商业的闭环。</p>
</li>
</ul>
<blockquote>
<p>注意观察生活中一些人气高涨的地方。不需要特别的措施就有人气。那意味着机会和需求。例子：享物说，一开始发现只要是送东西，反应都特别快。<br>很多时候看那些创业访谈。很关键的一环，xx时候获得了xx的天使投资。你把自己准备好了，所有事情都水到渠成。</p>
</blockquote>
<h2 id="18-7-5">18.7.5</h2><ul>
<li>海贼王教会我的 世界上总有人在为你的幸福祈祷。</li>
</ul>
<p>价值投资看best。忽悠，看散户。</p>
<blockquote>
<p>人的价值是最重要的。YMCA。创造一个社区。礼橙是不是可以沿着这个思路来做，找到你的专职司机。建立与客户的联系。但同时离不开平台这个工具。</p>
</blockquote>
<p>一个陌生人正推开玻璃门。<br>像拨开一片云彩。</p>
<ul>
<li><p>任何因科技进步淘汰的，只会换一种方式再次出现。因为人性不变。<br>电视被淘汰了吗？只不过转移到手机里了。</p>
</li>
<li><p>马车被淘汰了。人偷懒的欲望不变。</p>
</li>
</ul>
<h2 id="18-7-1">18.7.1</h2><p>订阅盒子。把消费选择的空间提前到家门口。</p>
<p>这种定价策略也可以模仿在信息消费里。根据使用阅读来收费。</p>
<p>GAN -&gt; 个性化定制。你选择概念，我生成样本，然后你来选择。我通过GAN来取代设计师的这个过程。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[谈“破窗理论”下弱势群体的保护主义]]></title>
      <url>http://chocoluffy.com/2018/07/01/%E8%B0%88%E2%80%9C%E7%A0%B4%E7%AA%97%E7%90%86%E8%AE%BA%E2%80%9D%E4%B8%8B%E5%BC%B1%E5%8A%BF%E7%BE%A4%E4%BD%93%E7%9A%84%E4%BF%9D%E6%8A%A4%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>书本会被一页一页地撕去。《华氏451》</p>
<a id="more"></a>
<p>“破窗理论”在不同的领域有着不同的定义，在可能更为人所知的心理学领域，“破窗理论”表示的是公众场合下曝光的不良现象会诱使产生更多的负面行为，譬如，“一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西”<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。</p>
<p>而在经济学领域，“破窗理论”主要是在论证“损害有益”这个观点。一个典型的例子，巴斯夏曾提到<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，“店主粗心的儿子不小心砸破了一扇窗户玻璃。而每个看到这种局面的人，都会不约而同地如此这般地安慰这位不幸的店主：‘不论发生什么不幸的事，天下总有人会得到好处。人人都得过日子呀，如果玻璃老是不破，要玻璃工干什么呀’”。</p>
<p>听似有理。甚至可以联系起凯恩斯的“宏观调控”理论，罗斯福新政等在经济萧条时名噪一时的经济调节策略。这些政策都相似地利用“销毁”来创造新的需求。这个方向再极端的观点，或许是曾经一些学者提出的，发动战争来增长经济维持社会和平的荒谬观点<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>
<p>而值得思考的是，为什么每当经济萧条的特殊时期，凯恩斯主义都会重新盛行？</p>
<p>下面是我的思路。</p>
<p><strong>“打破窗户以加速资金运转”的说法之所以错误是因为这个本质在于控制了资金运转的方向。</strong></p>
<p>这个事件的支持者会提到玻璃厂得以因此存在，补窗工人也得以存在的理由。同样的事情也发生在战争复兴制造业的说法，因为战争的发生，使得工业制造业得以进一步地发展。这个论点忽略的是资金运转的机会成本，原本将会被自由交易的金钱被强制印加在了某一特定方向上<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>。</p>
<p>而我们认为这个方案较为劣等的假设是，我们认为人们自由交易得到的价值高于某一强制性交易。</p>
<p>这个假设是关键的。这意味着两点，一是以下的思路都基于这个假设的成立，自由比管控能带来更多的价值。而二则是暗示着，这个假设是可变的，它只在它适用的场景下成立，如果我们能找出“管控带来更多价值”的场景，我们可以推理出截然不同的结果。</p>
<p>首先，一个更符合自由主义经济学家观点的思路是，认为假设是成立的，自由交易比管控经济可以带来更多的价值。</p>
<p>他们会指出历史上的反面例子，罗斯福新政里面的，政府强制倾倒牛奶，为了维持牛奶价格的稳定和农民工人的生计。之所以需要政府介入并强制性地创造稀缺，是因为政府在短期内着手保护的是农民这个群体。因为他们在自由贸易中是暂时受害的一方，也是因为短期大众对奶制品的需求并不那么受价格因素波动而波动。</p>
<p>-&gt; 弱势群体是需要保护性政策的。而尤其当弱势群体成为了当前政体下的主要诉求者。</p>
<p>-&gt; 一个有意思的问题是，什么样的社会会创造更多的弱势群体？我们可以将逐渐碎片化且小众的群体比作弱势群体吗，如果可以，互联网是不是在加速这种保护性政策普及的过程？类似的，社会的现代化，如果我特指的是人群的专业化(specialization)，是不是也在加速这个过程？</p>
<p>如果弱势群体的存在证实了政府经济管控的必要性。这同时也意味着，他们更容易接受政府在政治层面实施管控的合理性。</p>
<p>于是我们得到一个结论<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>。<br>-&gt; <strong>一个创造出更多碎片化群体的社会，更容易接受政府管制的行为。</strong></p>
<p>联想起在雷布拉德伯里在《华氏451》里描述的一种社会现象。书本会被一页一页地撕去，因为来自少数族群的压力。</p>
<p>以上<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://baike.baidu.com/item/%E7%A0%B4%E7%AA%97%E7%90%86%E8%AE%BA" target="_blank" rel="noopener">破窗理论，来自百度百科</a>。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">巴斯夏《看得见的与看不见的》。 以面向大众的亲切口吻阐述了自由主义的好处。简单概述主旨，所有来自上级的强制调控本质上都意味着一种财富转移，而不是财富创造。譬如税收，补贴等等政府行为。自由贸易，意味着一种对未知信息的探索和反馈机制，以“看不见”的方式调节市场行为。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">想起了乔治奥威尔《1984》里的观点，“战争即和平”。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;">同样可以论证“税收”这一行为。</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline; vertical-align: top;">马东曾经说过。被误解，是表达者的宿命。结论或许是争议的，但重要的是，我们抵达的方式。</span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline; vertical-align: top;">这篇博客是由我阅读巴斯夏《财产、法律与政府》一书的笔记拓展开来。 我觉得还可以拓展的点有，分析我们现在大数据、人工智能以及分布化技术所指向的未来的经济体系。</span><a href="#fnref:6" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Leetcode题目解析]]></title>
      <url>http://chocoluffy.com/2018/07/01/Leetcode%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>My Leetcode solution collection. </p>
<a id="more"></a>
<h1 id="milestone">milestone</h1><table>
<thead>
<tr>
<th>Title</th>
<th>Description</th>
<th>Solution</th>
<th>Speed &amp; Percentile</th>
</tr>
</thead>
<tbody>
<tr>
<td>1. Two Sum</td>
<td>find a pair summing to target value.</td>
<td>hashmap with early stop.</td>
<td>7ms, 98%</td>
</tr>
<tr>
<td>2. Add Two Numbers in Linked List</td>
<td>doing addition and curry.</td>
<td>dummy node for linked list.</td>
<td>41ms, 98%</td>
</tr>
<tr>
<td>3. Longest Substring Without Repeating Characters</td>
<td>as title.</td>
<td>bitmap in replace of <char, int=""> hashmap recording most recent position. if there is a collision then found a repeated character.</char,></td>
<td>19ms, 98%</td>
</tr>
<tr>
<td>4. Median of Two Sorted Arrays</td>
<td>find median number from two sorted arrays.</td>
<td>do binary search on the shorter array between nums1 and nums2, compare the max\min number of left\right hand side. Median is a position that the number of elements at two sides are equal.</td>
<td>42 ms. 98%</td>
</tr>
<tr>
<td>5. Longest Palindromic Substring</td>
<td>as title.</td>
<td>straightforward: for loop each element and expand at both side; best: only expand at right and jump through repeated elements as repeated one no matter how long it is will definitely be a valid palindrome string</td>
<td>4ms, 100%</td>
</tr>
<tr>
<td>6. ZigZag Conversion</td>
<td>given a string, and place it in a zigzag way, then collect them row by row to form a new string.</td>
<td>create zigzag moving iterator that follows the pattern of the normal for loop iterator. Essentially, to have a direction indicator that will change the zigzag iterator’s moving direction.</td>
<td>21 ms, 98.44%</td>
</tr>
<tr>
<td>7. Reverse Integer</td>
<td>as title.</td>
<td>check integer overflow before potential operations, trick is to check if applying reverse operation can yield original result.</td>
<td>16 ms, 99.17%</td>
</tr>
<tr>
<td>8. String to Integer (atoi)</td>
<td>as title, with some edge cases.</td>
<td>convert each character to integer, check if overflow before any further operations.</td>
<td>4ms, 100%</td>
</tr>
<tr>
<td>11. Container With Most Water</td>
<td>an array of integer, as vertical lines on coordinates, together with x-axis forms a container, find the one holds most water.</td>
<td>two pointer at two ends moving inwards. we can prove that moving the longer line inward is always worse than the current result. Thus we move the shorter line inward.</td>
<td>4ms, 100%</td>
</tr>
</tbody>
</table>
<h2 id="todo">todo</h2><ul>
<li><p>summarize common modular operations and helpful algorithm functions, with their time complexity, such as “longest common substring\subsequence”, “check if integer overflow”. </p>
</li>
<li><p>summarize common data structure implementation, such as trie tree. put the above two section on <a href="http://chocoluffy.com/2018/06/30/Leetcode%E7%AE%97%E6%B3%95%E6%80%9D%E8%B7%AF/">Leetcode算法思路</a>.</p>
</li>
<li><p>also recording each solution’s time &amp; space complexity. </p>
</li>
<li><p>check “Discussion” tab for smart tricks.</p>
</li>
</ul>
<h1 id="1_two_sum">1 two sum</h1><ul>
<li>最快的算法里对std::sort的使用。</li>
</ul>
<p>虽然理论上sort是nlogn，但是在实用中sort可以在某些情况下提高速度。尤其当c++的library function对其添加的优化。</p>
<h1 id="2_add_two_numbers">2 add two numbers</h1><ul>
<li>想清楚什么时候需要引入dummy node。</li>
</ul>
<p>常见的原因是为了更简便地处理while loop里面的edge case，比如这里的第一个node的初始化。我们创建新node是依赖while loop的逻辑的，如果为NULL，在loop使用node-&gt;next会seg fault。所以通过创建dummy node使得可以直接在loop里使用node-&gt;next。然后最后用dummy-&gt;next返回整个链的head。</p>
<h1 id="3_longest_substring_without_repeating_characters">3 longest substring without repeating characters</h1><ul>
<li>map<char, int=""></char,></li>
</ul>
<p>优化这个结构的时候，可以考虑bitmap的使用。类似bucketsort的原理。如果是字符则是默认256长度的bitmap，然后对应的位置放置其value。</p>
<h1 id="14_longest_common_prefix">14 longest common prefix</h1><p>problem: as title.</p>
<h2 id="ideas">ideas</h2><ul>
<li>[me] vertical scanning. time complexity: O(S), where S is the sum of all characters in all string. space complexity: O(1).</li>
<li>divide and conquer. because LCP satisfies the associative property, that LCP(1,…, n) = LCP(LCP(1,…, n/2), LCP(n/2+1,…, n)). as like in finding min or max. time complexity is O(S), space complexity is O(mlogn), n is the number of string, m is the average length, since divide and conquer requires to store intermediate results.</li>
<li>binary search. an improvement on the vertical scanning. apply the binary search on the shortest string and do the vertical scanning to validate if it’s LCP. time complexity is O(S * log(min string length)), space complexity is O(1).</li>
</ul>
<h1 id="866_prime_palindrome">866 prime palindrome</h1><p>problem: find a prime number that is also a palindromd over N.</p>
<h2 id="ideas-1">ideas</h2><ul>
<li>find palindrome then check if prime. </li>
</ul>
<p>the set of palindrome is smaller, and for each palindrome, we can test whether it is prime in O(N^1/2).</p>
<p>-&gt; find the set of palindrome number over N.</p>
<p>-&gt; how to find the next palindrome number.</p>
<p>from the center move outward, find the critical digit to add 1.</p>
<h2 id="summary">summary</h2><p>define the palindrome root. say 121 is 12. thus we can use palindrome root to construct palindrome number by increase it by 1 at a time. </p>
<ul>
<li><a href="https://leetcode.com/articles/prime-palindrome/" target="_blank" rel="noopener">https://leetcode.com/articles/prime-palindrome/</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Leetcode常用数据结构和算法总结(python实现)]]></title>
      <url>http://chocoluffy.com/2018/06/30/Leetcode%E7%AE%97%E6%B3%95%E6%80%9D%E8%B7%AF/</url>
      <content type="html"><![CDATA[<h1 id="Data_Structure">Data Structure</h1><h3 id="stack">stack</h3><p>单调栈的使用：</p>
<ul>
<li>找到每个元素下一个更大的元素。</li>
</ul>
<h3 id="palindrome">palindrome</h3><p>很多时候和prefix，suffix联系在一起。</p>
<h3 id="trie">trie</h3><p>和hash相比在存储string的时候的一些好处：</p>
<ul>
<li>找到所有具有common prefix的keys</li>
<li>以字典顺序遍历所有string的时候</li>
<li>当hash不断增大的时候，会出现很多hash collitions，对于trie来说当大部分的字符串具有类似prefix的时候，效率比较高。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trie的具体python实现.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.end = <span class="keyword">False</span> <span class="comment"># 需要这个属性来mark一下，是否到这个node为止组成的这个word存在！！比如insert('apple')之后，'app'最后'p'这个点的end应该是False的。</span></span><br><span class="line">        self.c = &#123;&#125; <span class="comment"># 利用recursion的想法，每个当前的children node都为一个Trie tree. key: char, val: new Trie().</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span><span class="params">(self, word)</span>:</span></span><br><span class="line">        node = self</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> word:</span><br><span class="line">            <span class="keyword">if</span> w <span class="keyword">not</span> <span class="keyword">in</span> node.c:</span><br><span class="line">                node.c[w] = Trie()</span><br><span class="line">            node = node.c[w]</span><br><span class="line">        node.end = <span class="keyword">True</span></span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prefixnode</span><span class="params">(self,word)</span>:</span></span><br><span class="line">        node = self</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> word:</span><br><span class="line">            <span class="keyword">if</span> w <span class="keyword">not</span> <span class="keyword">in</span> node.c:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            node = node.c[w]</span><br><span class="line">        <span class="keyword">return</span> node</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(self, word)</span>:</span></span><br><span class="line">        node = self.prefixnode(word)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> node:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> node.end <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startsWith</span><span class="params">(self, prefix)</span>:</span></span><br><span class="line">        node = self.prefixnode(prefix)       </span><br><span class="line">        <span class="keyword">return</span> bool(node)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="sliding_window">sliding window</h3><ul>
<li>two pointer sliding window</li>
</ul>
<p>右指针先expand直到满足条件，然后左指针move直到break条件，常适用于找到最小区间。</p>
<ul>
<li>mono deque(double ended queue)</li>
</ul>
<p>pop直到结构内元素单调然后push。</p>
<h1 id="Algorithm">Algorithm</h1><h3 id="union_find">union find</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">最简单的版本</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># a parent array of N, record each position's root parent index. </span></span><br><span class="line"><span class="comment"># if two points's root equals, then they are in same group.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span><span class="params">(parent, idx)</span>:</span></span><br><span class="line">	<span class="keyword">if</span> parent[idx] == <span class="number">-1</span>:</span><br><span class="line">    	<span class="keyword">return</span> idx</span><br><span class="line">    <span class="keyword">return</span> find(parent, parent[idx])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的版本</span></span><br><span class="line"><span class="comment"># mark these two points as from same parent, by finding each one's and compare.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">union</span><span class="params">(parent, x, y)</span>:</span></span><br><span class="line">	root_x = find(parent, x)</span><br><span class="line">    root_y = find(parent, y)</span><br><span class="line">    <span class="keyword">if</span> root_x != root_y:</span><br><span class="line">    	parent[x] = root_y</span><br><span class="line">        </span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">优化后的版本</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span><span class="params">(object)</span>:</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">    	self.parent = <span class="number">0</span> <span class="comment"># record parent node's index.</span></span><br><span class="line">        self.rank = <span class="number">0</span> <span class="comment"># record current tree's rank, rooted at current node.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 路径压缩版本：path-compression version.</span></span><br><span class="line"><span class="comment"># 每一次find的时候，都把自己的parent设为当前找到的parent。来避免worst case: O(n) 的 find time complexity。</span></span><br><span class="line"><span class="comment"># 设置parent[0] = 0 为总的根, 于是所有level为1的点，parent值都为0。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span><span class="params">(parent, idx)</span>:</span></span><br><span class="line">	<span class="keyword">while</span> parent[idx] != idx:</span><br><span class="line">    	parent[idx] = find(parent, parent[idx])</span><br><span class="line">    <span class="keyword">return</span> parent[idx]</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 最小树版本。</span></span><br><span class="line"><span class="comment"># 避免在随意合并的时候形成的worst case: O(n)的linked list形状，best case：balanced tree. </span></span><br><span class="line"><span class="comment"># 让小rank的树append到大rank的树下，也就是设置小rank的parent</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">union</span><span class="params">(parent, x, y)</span>:</span></span><br><span class="line">	root_x = find(parent, x)</span><br><span class="line">    root_y = find(parent, y)</span><br><span class="line">    <span class="keyword">if</span> root_x &gt; root_y:</span><br><span class="line">    	parent[y] = root_x</span><br><span class="line">    <span class="keyword">elif</span> root_x &lt; root_y:</span><br><span class="line">    	parent[x] = root_y</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    	parent[x] = root_y</span><br><span class="line">        root_y.rank += <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>在优化之后，查找find的first time worst case：O(logn)， 因为有path compression，之后所有的find操作都为常数，因此 amortized time complexity为O(1)。如果没有优化，worst case: O(n)。</p>
<h3 id="partition_algorithm(in_quicksort)">partition algorithm(in quicksort)</h3><p>保持数组部分有序的方式，找到一个pivot，根据这个pivot对这个数组重新arrange之后保证pivot左边数字都比它小，而右边数字都比它大。T：O(n), S: O(1)。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># two pointers, i and j, such that every elements at left of i are smaller than pivot, which gives that the elements between i and j are larger than the pivot. and finally swap the pivot with the index i position to yield the correct partition.</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> j &lt; len(s): <span class="comment"># use j to iterate throught the array.</span></span><br><span class="line">	<span class="keyword">if</span> s[j] &lt; pivot: <span class="comment"># swap with index i, </span></span><br><span class="line">    	swap(i, j)</span><br><span class="line">        i++</span><br><span class="line">        j++</span><br><span class="line">    <span class="keyword">elif</span> s[j] &gt; pivot:</span><br><span class="line">    	j++</span><br><span class="line">swap(i, pivot_index)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extension: 当存在和pivot值相同的元素的时候，如果需要将其置于中间，需要three pointers，多引入一个pointer k指向数组的最后，然后每当有元素大于pivot的时候，和k位置交换元素，同样利用j来遍历数组，保证小于i位置的都比pivot小，大于k位置的都比pivot大。</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">k = len(s) - <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> j &lt; len(s): <span class="comment"># use j to iterate throught the array.</span></span><br><span class="line">	<span class="keyword">if</span> s[j] &lt; pivot: <span class="comment"># swap with index i, </span></span><br><span class="line">    	swap(i, j)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> s[j] &gt; pivot:</span><br><span class="line">    	swap(j, k)</span><br><span class="line">        k -= <span class="number">1</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">    	j += <span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h3 id="KMP_string_pattern_matching">KMP string pattern matching</h3><p>本质是找：针对一个string的最长prefix\suffix匹配。基于这个table，在pattern match的时候，当遇到部分匹配的情况时，我们可以利用match这部分的longest prefix\suffix match直接从suffix的位置继续开始匹配，而省略了其中的一部分匹配过程。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># construct the lookup table, f(i) records that up till position i, the length of the longest prefix\suffix match.</span></span><br><span class="line">f(<span class="number">0</span>) = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">    t = f(i<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">while</span>(t &gt; <span class="number">0</span> &amp;&amp; b[i] != b[t])</span><br><span class="line">        t = f(t<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">if</span>(b[i] == b[t])&#123;</span><br><span class="line">        ++t</span><br><span class="line">    f(i) = t</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Graph">Graph</h3><p>关于图像遍历的算法常见技巧：</p>
<ul>
<li>直接修改graph二维数组来做visited的作用，而不需要新建一个等大小的数组增加内存开销，尤其对于recursion影响大。</li>
</ul>
<h3 id="BFS">BFS</h3><p>算法重心在于level的累加，是当queue中来自上一层的所有node都pop出来之后，level += 1。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line">queue = []</span><br><span class="line">queue.append(source)</span><br><span class="line">level = <span class="number">0</span></span><br><span class="line">directions = [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">-1</span>], [<span class="number">-1</span>, <span class="number">0</span>]]</span><br><span class="line"><span class="keyword">while</span> len(queue) &gt; <span class="number">0</span>:</span><br><span class="line">	level += <span class="number">1</span></span><br><span class="line">    size = len(queue)</span><br><span class="line">    <span class="keyword">while</span> size &gt; <span class="number">0</span>:</span><br><span class="line">    	size -= <span class="number">1</span></span><br><span class="line">        curr = queue.popleft()</span><br><span class="line">        <span class="keyword">for</span> dx, dy <span class="keyword">in</span> directions:</span><br><span class="line">        	newx, newy = curr[<span class="number">0</span>] + dx, curr[<span class="number">1</span>] + dy</span><br><span class="line">            <span class="keyword">if</span> new_position_valid():</span><br><span class="line">            	grid[newx][newy] = <span class="number">0</span> <span class="comment"># mark visited.</span></span><br><span class="line">                check_if_meet_final_target() <span class="comment"># return level-related number.</span></span><br><span class="line">                queue.append(newx, newy)</span><br></pre></td></tr></table></figure></p>
<h3 id="find_majority_element">find majority element</h3><p>Q: there is one majority element in the array, it appear more than n/2 times. </p>
<p>solutions:</p>
<ul>
<li><p>binary search tree with counting.<br>insert the node into binary search tree, if such leaf already exists, increase the value of that node till one exceeds n/2. for a balanced binary tree, T: O(nlogn), S: O(n), need extra n space for creating binary tree.</p>
</li>
<li><p>moore voting(find_candidate + validate)<br>validate的时间是O(n)。使用类似semaphore的想法。利用一个counter，如果相邻的连续是相同的就counter++，如果不同就清零更换一个character。</p>
</li>
</ul>
<h3 id="product_puzzle_without_division_in_O(n)">product puzzle without division in O(n)</h3><p>Q: given an array of element, return another array of same size, where each element is the product of all element except for itself. you cannot use division. do this in O(n) time.</p>
<ul>
<li>构建左右累计数列。<br>一个很实用的技巧，当这个位置和其他所有位置的信息相关的时候，或者，如果naive的做法是基于每个点从中往外扩开的情况的话，可以考虑这个方向。也即，从左一次做累计操作，O(n)，同理从右也一遍。在本题中则是构建累乘数列，<code>L[i] = L[i- 1] * A[i - 1]</code>, <code>R[i - 1] = R[i] * A[i], i = n - 1, i--</code>. 则<code>prod = L[i] * R[i]</code></li>
</ul>
<h3 id="subarray\substring_matching_by_hashing">subarray\substring matching by hashing</h3><p>应用比如 plagiarism。<br>构建一种算法，使得计算hash value的阶段可以累加，也就是说对于一串字符串来说，不需要每次在插入字符或者删除字符的时候对所有字符编码O(n)，而只需要O(1)的复杂度来更新hash value：<br>找到一个base，<code>next = (prev * base + new_char) % large_prime</code>，类比构建正数分位。</p>
<h1 id="General_Tricks">General Tricks</h1><ul>
<li><p>在python里，当在循环里面需要匹配多个字符的时候，往往需要考虑边界问题，尤其是在循环停止之后漏掉的字符，这个时候多用slicing operation: <code>s[:i+1]</code>而不是直接用index ref这种： <code>s[i+1]</code>，因为slicing operation可以避免index overflow的问题。</p>
</li>
<li><p>大数相加、相乘时注意overflow的问题，在cpp和java里会出现，在python里不会。</p>
</li>
<li><p>XOR可以用来辅助（A XOR A = 0; A XOR 0 = A）</p>
<ul>
<li>even\odd apperance.</li>
<li>find missing number.</li>
<li>find duplicate.</li>
</ul>
</li>
<li><p>merge sort. 可以记录大小元素的先后顺序。可用于count inversions。</p>
</li>
<li><p>quick sort. 核心在于partition，剩下的就是divide and conquer，在partition的时候，重点在O(n)的时间内，选取一个pivot，同时将所有比pivot点小的点移动到pivot左侧，比pivot点大的点移到右侧。本质上看，这个O(n)的操作，可以找到第n-index(pivot)大的元素也即pivot。可用于find k largest elements。</p>
</li>
<li><p>space complexity优化的技巧。看每一次独立的遍历中依赖的变量数量。通常在dp问题里面会遇到。简单的情况是依赖于前一个或者前两个（fibonacci数列）的subproblems的答案，那么其实所需要的空间就为依赖的变量数即可，大部分dp都涉及构建一个两维的dp table，但如果每一次独立循环中问题只涉及本行和前一行的subproblems的答案，空间通常可以优化为max(row_size, column_size)，只需要每次不断地更新那一列即可。</p>
</li>
<li><p><code>y = x &amp; !(x - 1)</code> will get the rightmost set bit of x. 因为(x - 1)的作用其实是反转所有rightmost set bit以右的bits。</p>
</li>
<li><p>BST可以拓展来用于interval, number of elements in range。</p>
</li>
<li><p>关于heap和BST的区别：</p>
<ul>
<li>误区：heap的find max\min为O(1)，比BST更好。但其实我们可以用extra variable来拿BST的max\min从而达到同样的效果</li>
<li>因为heap从底部插入数据，而bst是从顶部插入数据。所以heap的insert的amortized time complexity是O(1)因为最底层占了一半以上的数据。</li>
</ul>
</li>
<li><p>function stack也算作time complexity里。</p>
</li>
<li><p>BST很多时候可以和divide and conquer\DP联系在一起。因为本质上每一个root都可以将range分为两个独立的range（subproblem）。结合具体问题进一步完整recursion或者dp table。</p>
</li>
<li><p>关于permutation&amp;combination（排列组合），当选取的相同元素之间的排序不重要的时候，用组合combination, <code>C_(m+n)^(n) = (m+n)!/m!*n!</code>，当选取的相同元素之间的顺序也算的时候，用排列<code>A_(m+n)^(n) = (m+n)!/m!</code></p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《加缪手记第二卷》阅读批注]]></title>
      <url>http://chocoluffy.com/2018/06/29/%E3%80%8A%E5%8A%A0%E7%BC%AA%E6%89%8B%E8%AE%B0%E7%AC%AC%E4%BA%8C%E5%8D%B7%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<p>我只想静静地描述眼前的世界。这是我生命的美好，我的存在主义。</p>
<a id="more"></a>
<p>昨晚登机回国，和小伙伴们告别，哭得稀里哗啦。候机的时候，想看会儿书，本来在kindle里昆德拉的《不朽》开了个头，但最后还是认输地从背包里掏出来加缪的这本手记。没别的，心情不好的时候无意走出洞穴<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。而加缪的文字，是我任性凝视烛影的秘密。</p>
<p>我很难解释清楚这个秘密。我想起他总提到的反抗。这意味着在一个分崩离析的世界里保持清醒，却也不依赖理性来获得希望。</p>
<p>凭什么说真实更美。要我说，是想象。</p>
<p>以下的文字是我在飞机上重读《手记》第二卷时写下的零碎批注。附上了所在的页码以便日后回溯。引号内的文字为原文的引用。</p>
<ul>
<li><p>准备添一本杂文集，那些不凭借理性获得希望的人。</p>
<blockquote>
<p>由理性出发的，终由理性解构。<br>加缪：由疯狂所支使，并以理性写下的东西那么美好。p3</p>
</blockquote>
</li>
<li><p>产生敌意的另一种可能：“自己被打败了，便巴不得且卑劣地想见到那还在顽抗的也倒下去”。p5</p>
</li>
<li><p>革命合法化。和提高社会福利是一个道理。有种同样潜在卑劣的动机。解构人的冲动。p5</p>
</li>
<li><p>如果戏剧无意义，那更荒谬的是，戏剧里的情绪。p6</p>
</li>
<li><p>现在每次提起镜子，我都会想起昆德拉。他把礼帽放在她头上。他们看着镜子里赤裸的自己<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>。时间的意义，是交换礼物。p10</p>
</li>
<li><p>科塔尔。人有时候会荒谬到愿意摧毁一切来掩盖自己的一个毛病。如果来一场传染病，是不是他就不会被捕了，是不是他就可以和人群拥抱在一起<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。荒谬的点在于，他追求至美，却表现地至恶。p11</p>
</li>
<li><p>“而下坡的时候，一个人的日子即不再属于自己”。p12</p>
<blockquote>
<p>毛姆：人老去，像是在黄昏里读书。天色愈暗，直到看不清眼前的字，只剩温度。</p>
</blockquote>
</li>
<li><p>荒谬的作用，其实是造成一种混乱。“而一旦做出了荒谬的结论并愿意接受这样的人生，这意味着如何在一个分崩离析的世界里保持清醒。”</p>
<blockquote>
<p>有些人从同样的前提指引到了不同的结局，比如尼采和黑塞。从蛋里诞生新的生命，然后毁灭这个世界<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>。注：黑塞曾患有精神分裂，其在德米安中阐述的毁灭这个世界，也可能其实意味着的是自杀。</p>
<p>而教徒们的上帝，其实也是给了其中一种解决混乱的方式。归依吧。这里有所有你想知道的答案。你的幸福，你的祸害卑劣（撒旦）都有因有果。不必混乱。</p>
<p>加缪的选择不是去打破一切，而是相反，不去规避任一成因。“去建立，尘世生活规范。”</p>
</blockquote>
</li>
<li><p>“真正的艺术家，就在于他可以成为他所描述的那种人，经历他笔下写的那些事。”，理解这句话，在于理解一个前提，“经历了一件事并不让其成为谈论这件事的最佳人选”。p13</p>
</li>
<li><p>纪德。</p>
</li>
<li><p>“海涅的墓志铭: 他喜爱布伦塔河的玫瑰。” p18</p>
</li>
<li><p>“衡量对一个人的热情，就是看他愿意为这份热情付出多大的代价”。p18</p>
<blockquote>
<p>同样是来自handcash的启发而有的比特币。对于解决Spam和噪音的一种方式。</p>
</blockquote>
</li>
<li><p>“人永远都有一套哲理来解释自己为何缺乏勇气。“ p20</p>
</li>
<li><p>所有的哲学都是为了让人摆脱虚无主义。很多人看到了加缪阐述的“荒谬”的一面，但是没有看到他的“反抗”。而值得思考的是，为什么现代社会会把人引向虚无主义。还记得那篇文章，描述现代的工作。大部分都会成为bullshit。 因为人的介入再也比不上机器的效率，人变得不再不可替代，而人的道德说这个社会不是原始森林，淘汰的方式不能是生存毁灭。 我们会出现一个受圈养的阶级。这个阶级存在的意义是维持不变。<br>很多时候我们感觉到焦虑，陷入混乱。并不是因为这个世界被现代所改变（我们现在所解决的温饱，所渴望得到的幸福）。”我们感到混乱，只是因为我们跟不上这样的动荡“。p21</p>
</li>
<li><p>有时候真的蛮害怕的，失去感受的能力，像失去雨的冰凉。失去完整叙述一件事的能力。时间就像风一样流过，而我却抓不住风的尾巴。p22</p>
</li>
</ul>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">柏拉图的“洞穴比喻”。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">《不能承受的生命之轻》</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">《鼠疫》</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;">《德米安》</span><a href="#fnref:4" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Jun.]]></title>
      <url>http://chocoluffy.com/2018/06/28/%E7%A2%8E%E8%AF%AD-2018-Jun/</url>
      <content type="html"><![CDATA[<h2 id="18-6-29">18.6.29</h2><ul>
<li>《身份的焦虑》未来身份界限会越模糊。国籍成为一种古老的勋章。</li>
</ul>
<p>基于身份的内容发现机制。导致的回音室。</p>
<ul>
<li><p>token是对所有权的定义。只有流动的资产，token才有意义。</p>
</li>
<li><p>关于近期的ofo，谨慎看跌ofo的前景：<br>有一种拖延的技巧，叫做“有合作意向”。<br>滴滴关键的一票否决权，导致ofo最终采取动产抵押而不是融资。<br>场内的竞争对手，其实是对付场外巨头最好的潜在伙伴。可惜已经没机会了。</p>
</li>
</ul>
<h2 id="18-6-27">18.6.27</h2><ul>
<li>昨晚登机回国，和小伙伴们告别，哭得稀里哗啦。候机的时候，想看会儿书，本来在kindle里昆德拉的《不朽》开了个头，但最后还是认输地从背包里掏出来加缪的这本手记。</li>
</ul>
<p>突然有种感觉，我可能这辈子都离不开它了。</p>
<p>黑塞和加缪是同一个前提的两种思路。</p>
<p>对怀疑精神的缘由也要保持怀疑性。</p>
<ul>
<li><p>我喜欢在陌生海域的宁静。</p>
</li>
<li><p>不能承受的生命之轻：轮回。</p>
</li>
<li><p>总把虚度看作虚荣。仔细想想好像也对。</p>
</li>
</ul>
<h2 id="18-6-25">18.6.25</h2><ul>
<li><p>需要独处的时间，才能精确地找到自己和表达自己。试试在公众场合说话就知道这种感觉了。很多概念你想透了却很难传达出来，也还是和缺乏训练有关。</p>
</li>
<li><p>设置奖项对于观众来说是重要的。</p>
</li>
<li><p>我最害怕的人，就是那些当我看着他的时候，已经无法想象他孩童时代的样子。由于我出生和成长的环境，在某些方面，我不得不变得相当成熟，但我希望自己至少有一部分，能保留一个幼稚的成年人的状态。</p>
<blockquote>
<p>描述一种失落：在你的身上看不到你童年的样子。<br>突出年龄，是在突出一个人感受的能力。感受能力（有点类似存在主义）和经验、定见是相冲突的。经验，是捷径，是规避你亲身体验而达到目的的一种方式。长大成人意味着我们逐渐从美学判断进化到伦理判断。<br>-&gt; 昆德拉：如果我看到了童年的样子，也就是超越了时间。</p>
</blockquote>
</li>
<li><p>如果一个人拍下的照片和视频也会随着人一起老去。</p>
</li>
</ul>
<h2 id="18-6-24">18.6.24</h2><p>准备添一本杂文集，主题是“那些学会了不凭理性获得希望的人”。 </p>
<h2 id="18-6-23_《德米安》讨论会">18.6.23 《德米安》讨论会</h2><p>拜火教</p>
<p>《青年艺术家的肖像》<br>叔本华。尼采。</p>
<p>对生活二分存在的真实 和社会规则的无法调和。</p>
<p>主动表现本性。</p>
<p>【荒谬】没有人为理想而生 而不少人却愿意为理想而死</p>
<p>比特币给未来世界的运行方式提供了参考。但究竟是不是他还不好说。</p>
<h2 id="18-6-20">18.6.20</h2><p>种姓制度是怎么来的？接上帝之名的种族清洗又是什么？因为我们把很多事情想得理所当然。</p>
<h2 id="18-6-19">18.6.19</h2><ul>
<li><p>资讯的最终存在形式是回音室。例子：虎扑。不同的主题有不同适合的互动形态。</p>
</li>
<li><p>永远分清楚，哪些是平台的光，哪些是自己的光。离开了舞台中心，你还能不能看见自己，承认自己。</p>
</li>
</ul>
<p>经验是带有定见的。像是乘船过河之后的山路都会习惯背着船在爬。里面包含了自恋的成分。这段经历可以没有价值，才是自由的开始。如果一个人一直在找寻生活的意义，他就没有生活。加缪。</p>
<ul>
<li><p>快，意味着什么。如果公司的核心被转移到了非创新部门。这是很致命的。</p>
</li>
<li><p>给一幅摄影作品起的名字：夜还不够黑。</p>
</li>
</ul>
<h2 id="18-6-17_产品系列故事集">18.6.17 产品系列故事集</h2><blockquote>
<p>每一个产品形态都是一种意识形态。不要低估规则的力量。</p>
</blockquote>
<h3 id="名字：百万审判。">名字：百万审判。</h3><p>hq trivia 在同一时刻凝聚百万人的力量。去选择肯定或者否定一个人。<br>当大部分人否定了你存在的意义，你是否就没有意义呢。<br>综艺主持人在节目里说出了对女性冒犯的话，瞬间应用里出现了观众的请愿书，希望判处他的死刑。<br>他最后买下了保险，打开了应用的申请界面，写下: 我可以平安地活过下个生日。<br>对一个人安全的赌注市场，最终会成为一个暗杀市场。<br>法律在画出一条安全的区域的时候，也画出了肆意踩踏，野蛮原始的区域。</p>
<h3 id="名字：黑白契约。">名字：黑白契约。</h3><p>云集微店 你只需要贡献你的社交关系链，你们的关系，剩下的全部由我们来包办。<br>容易被量化的，就容易被滥用。数据的缺陷还有，只能测量容易被测量的。<br>你的社交关系能够给你带来利润，你的运动汗水可以给你挣电费。你的财产所有权能够成为投资品。<br>浮士德的契约。<br>白色的契约，是什么。又在哪里。</p>
<h3 id="名字：假面天使。">名字：假面天使。</h3><p>收集人们悲剧故事的使女。不敢直视人生的残疾人。都是假面天使。<br>在社交网络上吸引眼球的素材。<br>你的苦难也值得注意力。讽刺的地方在于，一夜成名的故事让残疾人感受到了驾驭命运的快感，成为天然缺陷的奴役不如成为自己的奴役。【黑塞】 </p>
<blockquote>
<p>“我做了坏事而父亲仅责怪我的湿鞋”…这是父亲的神圣光辉第一次显得黯淡，也是我童年体验之树的第一道刻痕，要成为自我，每个人最终都得毁去这棵树。我们命运内在的核心脉络就寄身在这些无人知晓的经历中。这些裂痕最终会弥合，痊愈，被遗忘，然而在心中最私密的角落，它依然在生长，流血。</p>
</blockquote>
<p>我拥有上帝吻过的脸颊，独一无二的标志，而我用它来寻找群体的认同。<br>苦难的意义是什么，是为了和没有苦难时的生活一样吗。个性的意义，不是去追逐一致。<br>而讽刺的是，所有高贵的欲望，都可以被商业逻辑所统治而利用。一种无力感。</p>
<h3 id="名字：古老的勋章。">名字：古老的勋章。</h3><ul>
<li>身份的认同和分裂。部落主义。</li>
<li>分层的社交网络。电子世界里的种姓制度。</li>
</ul>
<blockquote>
<p>故事本身已然存在，我思考，下笔，是故事借由我的指尖而流转。像洞穴里的火光。柏拉图。</p>
</blockquote>
<h2 id="18-6-16">18.6.16</h2><p>再一次在别人的博客里看见自己 <a href="https://blog.mythsman.com/social/" target="_blank" rel="noopener">我的博客圈 | Myths的个人博客</a>。</p>
<p>要更努力一点。做一个有主见的人。<br><a href="https://livc.io/" target="_blank" rel="noopener">Zhao Li（李钊）</a><br><a href="https://www.byvoid.com/zhs/blog" target="_blank" rel="noopener">网志 - BYVoid</a></p>
<p>这个世界还很大，很奇妙，很值得停留啊。</p>
<blockquote>
<p>不要太把自己平时的生活当作全部了！</p>
</blockquote>
<p>自己也稍微关注下有哪些好点的商业方面的书。<br>波兹曼。<br>参考 <a href="https://www.douban.com/search?cat=1001&amp;q=%E5%88%9B%E4%B8%9A" target="_blank" rel="noopener">搜索: 创业</a></p>
<p>🌶️ 鲸语其实是一个很典型的案例。究竟要解决什么问题。痛点是什么。信息流的意思是消遣，不能解决任何问题。定位于生活工具意味着你要切实地解决了一个生活场景。</p>
<blockquote>
<p>会有很多人和你说这很不错。但没有人用它！</p>
</blockquote>
<p>痛点之间也有排序。</p>
<h2 id="18-6-15">18.6.15</h2><p>比特币解决的问题，一是安全性；二是门槛以及稳定性。波动巨大隐含着一些信息，存在投机的人，市场里充斥的是情绪而不是实际价值。</p>
<p>现在很多做电子钱包的都慢慢转行做交易商。什么是切入点。</p>
<blockquote>
<p>做电子货币交易 先做电子钱包<br>做美食 周边服务 先做地图</p>
</blockquote>
<ul>
<li>道德选择越坚定，也就越自由。<blockquote>
<p>[18.7.4更新] 我一直相信，花芽破土而出，一个人爱上什么，一本书的写出，一个电影的创作。都是一种自发性，源自由衷，源自有三千个选择，却独握自己的喜爱，绝不出让和妥协。<br>自由的反义词是束缚吗。或许是的，但我觉得，也或许是彷徨。</p>
</blockquote>
</li>
</ul>
<h2 id="18-6-14">18.6.14</h2><ul>
<li><p>音乐随机到了一首现场的交响曲。曲终。响起了经久不息的掌声。仿佛磅礴大雨。</p>
</li>
<li><p>遗憾定义了我。而不是成就。那样很美。因为错过了好朋友，我懂得了理解。因为创始人的离开，我学会了忠诚。因为习惯了平淡，我憧憬浪漫。</p>
</li>
</ul>
<h2 id="18-6-12_孵化器会议记录">18.6.12 孵化器会议记录</h2><ul>
<li>be the same level of specificity and seriousness. </li>
<li>be clear!!!</li>
<li>🌶️ 所有confusion都来自于shutting mouth. </li>
</ul>
<h2 id="18-6-10">18.6.10</h2><p>《惶然录》，《高窗》，《小于一》。</p>
<p>在你确定感恩的东西之前。感恩，究竟是不是一种美德？你是在感激恩情，还是在感激享受权力的感觉，在感激恩赐。</p>
<p>就像我会把勇敢放在美德这个列表的结尾。为什么很少有人会为一个理想而活着，而许多人，甚至能为一个理想而赴死。说这是勇敢，我觉得很荒谬。</p>
<blockquote>
<p>《德米安》，如果一个人让另一个人害怕，原因就是害怕的人承认了前者的权力。<br>-&gt; 很少有人为理想而生 而不少人却愿意为理想而死</p>
</blockquote>
<h2 id="2018-6-7">2018.6.7</h2><p>财产权起源于，这个岛屿是一个和平的协议，双方一致同意。<br>财产权不是天然绝对的，也不是永久的。财产权永远取决于谈判，并且只能在没有任何一方变得极端或极强的情况下维持下去。</p>
<blockquote>
<p>协议之所以可以维护，而不是被诉诸以战争强夺，是因为双方势力接近。谈判只存在于势均力敌的两方之间。</p>
</blockquote>
<p>只要民众能得到他们的生活必需品，认为规则是公平的，他们通常就会满意。</p>
<blockquote>
<p>公平和公平感。公平感关系的是期望。</p>
</blockquote>
<h2 id="2018-6-6">2018.6.6</h2><ul>
<li><p>为什么一定是代币？不能是真实货币。</p>
</li>
<li><p>关于值得与不值得。这个时代的许多商业故事会告诉你很多东西都是值得的。你的注意力值得回报，你的社交关系值得变现，你的财产所有权值得投资。而你的自由是，这不值得，也不需要值得。你要有反驳的权利。</p>
</li>
<li><p>布拉德伯里的小说章节之间都由一些小物品串了起来。</p>
</li>
</ul>
<h2 id="2018-6-5">2018.6.5</h2><ul>
<li><p>让你痴迷的，不是手机，是自由感。马东说的一句话，他说的时候是自由，我觉得，应该是自由感。</p>
</li>
<li><p>信息爆炸的年代，我又突然想起那个故事，那个在沙滩上捡石头的男孩。他摸着石头的温度，一个一个丢回进海里。当终于捡起那块温暖金黄色的石头，他习惯性地也把它扔回了冰冷的大海。</p>
</li>
</ul>
<h2 id="2018-6-3_我假装虚伪">2018.6.3 我假装虚伪</h2><ul>
<li><p>我写下一段句子，像写下一段誓言。</p>
</li>
<li><p>为什么要假装虚伪？我欺骗这一切，因为我喜欢被别人猜不透的感觉。我故意虚伪，以免未来自然而然地虚伪。</p>
</li>
</ul>
<ul>
<li>隐私究竟是不是我们现在需要解决的最大的问题，抑或是，隐私是不是用户目前最大的需求。一个分布式时间戳能够解决什么消费市场的需求。智能合约怎么用。</li>
</ul>
<h2 id="2018-6-2">2018.6.2</h2><p>没有什么会让你更加接近。</p>
<p>天地间是有了落日，有垂荷，有蒲公英酒酿。后来才有了诗与文学。</p>
<p>一种期待。那些曾经出现的冲动，能够随着纸页展开。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[离别的信]]></title>
      <url>http://chocoluffy.com/2018/06/17/%E7%A6%BB%E5%88%AB%E7%9A%84%E4%BF%A1/</url>
      <content type="html"><![CDATA[<p>很多时候，我都好想去那么想象从自己视角出发的，真实世界里的海贼王故事。相似的冒险和伙伴，不同的敌人和岛屿。海贼王没有画出来的，如果船长路飞，并没有那么受幸运眷顾，如果路飞也只是一个普通人呢？如果伙伴遇上了更好的机会去实现他们的梦想呢？</p>
<p>之前HiTech的一个记者出关于鲸语的文章那次，他其中一个问题是，你觉得这一路以来什么是最重要的。我几乎没有怎么犹豫，一路上最重要的，是你们。</p>
<p>你们是我静寂了很久的路上慢慢传来的烟火声。</p>
<h2 id="Gloria">Gloria</h2><p>你身上有一种少有的艺术家的气质。怎么说呢，你的很多选择都很个性，有时候勇敢地让我也很佩服。以及最重要的，人还极其的善良。</p>
<p>我应该是在和你不断讨论社团的时候熟络的。从发文章，开发小助手，网页游戏，备战招新，讨论赞助，到见证以你为中心的新一届ada，17年年初诞生了鲸语，紧接着大半年的四处奔波，终于迎来的kinder，然后到现在进了hatchery五个逗比的稳定团队……</p>
<p>原来，三年，可以被这么地概括是嘛。</p>
<p>很多很多的偶然。有时候我也在想，如果任意一个偶然没有那样发生，是不是我们五个现在也不会这样认识，是不是也不会有鲸语的出现…</p>
<p>想起来挺残酷的，还好命运放了我一马。</p>
<p>很多和你们相遇的回忆我都曾写在了鲸语第100天的文字和博客里。我以前大都选择一个人走，而你们走进我的生活，像是静寂了很久的路上慢慢传来的烟火声。我其实和你们认识前不叫Luffy的，我来多伦多后改作Luffy，也是希望未来能够有一帮特别在意的伙伴一起打拼点什么。我很开心，在我离开多伦多的最后一天回望。我不仅找到了我的伙伴，也留下了很多痕迹。</p>
<p>我最后选择了去美国，但我在创业这条路上还是会继续尝试的。一旦我下定决心上路，你们一定会是我第一个想要告诉的人！如果有机会，我还想和你们一起冒险，无论未来是在加拿大，美国，还是国内！</p>
<h2 id="Ajax">Ajax</h2><p>我特别喜欢你对待朋友的方式。能够成为你的朋友很有安全感。</p>
<p>我们能一起经历过虫灾也算难兄难弟了哈哈。</p>
<p>我第一次见你应该是在发布ada logo的那次会上，然后慢慢熟络上的。很多很多的偶然。有时候我也在想，如果任意一个偶然没有那样发生，是不是我们五个现在也不会这样认识，是不是也不会有鲸语的出现…</p>
<p>想起来挺残酷的，还好命运放了我一马。</p>
<p>你是一个特别会生活的人。这一年来我因为肠胃问题吃了不少苦头，也因此限制了我很多的选择，很遗憾没能放开和你们一起吃一起玩。</p>
<p>其实我刚来多伦多最早认识Arie、Tracy他们的时候是叫Allen的。后来改作Luffy，也是很中二地希望未来能够有一帮特别在意的伙伴一起做点什么。我很开心，在我离开多伦多的最后一天回望。我不仅找到了我的伙伴，也留下了很多痕迹。</p>
<p>这两年我也见证着你从设计师到全栈的成长。我总觉得，只要你下定决心做些什么你都可以做出来，而且赢得很漂亮。</p>
<p>虽然我选择去了美国，但我在创业这条路上还是会继续走下去的，一旦我下定决定做什么，你、gloria、kinder、浩人都会是我第一时间想要告诉的人！</p>
<h2 id="Kinder">Kinder</h2><p>你对很多事情专注的程度让我很佩服。</p>
<p>因为smart table认识你和博文之后，在你们身上我也经常看见自己的影子。让我觉得很遗憾的是，当我们进了hatchery准备大干一场的时候，我长期的肠胃问题又削弱了我很大一部分的生产力，这一次提早回国也是想检查调整一下身体。</p>
<p>我相信你在技术上会渐渐有独当一面的能力。你会发现其实提升并实现自己能力的方式有很多很多。身边会有很多选项，很多值得努力的方向。在这些时候，选择比能力更为重要。</p>
<p>技术是一种自由。很享受和你们天马行空地讨论产品、技术，然后再一步步实现，我们在用我们的思路影响着周围世界。有时候我真的希望，大家坐着一圈写代码、唱歌、聊天讨论的日子可以一直持续下去，那些日子都很丰盛。</p>
<p>虽然我选择去了美国，但我在创业这条路上还是会继续走下去的，一旦我下定决定做什么，你们都会是我第一时间想要告诉的人！无论未来是在加拿大、美国还是国内。</p>
<p>最后，最重要的是，守护好gloria。祝福你们哇~~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[该隐的印记 -《德米安》读后感]]></title>
      <url>http://chocoluffy.com/2018/06/13/%E8%AF%A5%E9%9A%90%E7%9A%84%E5%8D%B0%E8%AE%B0-%E3%80%8A%E5%BE%B7%E7%B1%B3%E5%AE%89%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>通往真正自我的小路就像毛姆笔下的刀锋。时常想起它的结尾，毛姆对读者写道，喏，书里的角色最后都各得其所，这就是你想要的完满结局。你们开心了吗。我也曾执意想找到毛姆的答案，却总是无功而返。我在猜，人们会习惯以讽刺为惆怅封笔。</p>
<a id="more"></a>
<p>我觉得，关于自我的讨论很大程度被诉求所主导。无论是选择大众理想带来的温暖，还是小径的召唤，自我的牺牲与拯救不过是同一种选择下的两种诠释。站在上帝视角这么看，人们最终得到的，无非是取决于自身的东西，而这也是他们的力量和无辜所在。</p>
<p>说实话我并没有完全被黑塞说服。从该隐的印记的重新诠释，到“天职”的表述，无不带有强烈的主动性。可这却正好击中了小说的主题所在。黑塞在奔向最真实的自己，我们在观赏他最动人的尝试和最癫狂的痴语。也慢慢理解到他在小说开头写道的话，“我的故事并不令人畅怀，也不像杜撰的故事那样甜美和谐，它味如痴语、混乱、癫狂和梦幻，就像所有那些不愿再自欺欺人的生活一样”。 </p>
<p>我也不清楚结束阅读之后我还能记得什么。只是依稀记住，他文字里符号化的梦境总让我想起昆德拉<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，他小说的主题总提醒我毛姆和一小丢的加缪。但或许就像蒲公英的种子融进了风里，总有落地扎根的那天我会终于看见方向，然后在另外一本书的文字里牵引回来，留下新的注脚。这也是我能努力做到的浪漫。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://book.douban.com/subject/1017143/" target="_blank" rel="noopener">《不能承受的生命之轻》</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 May.]]></title>
      <url>http://chocoluffy.com/2018/05/30/%E7%A2%8E%E8%AF%AD-2018-May/</url>
      <content type="html"><![CDATA[<h2 id="2018-5-31">2018.5.31</h2><p>严格区分主动阅读和被动阅读。<br>被动阅读是消遣，和灵感。每天要给主动阅读留时间。</p>
<h2 id="2018-5-30_区块链">2018.5.30 区块链</h2><p>去中心化只是手段，不是目的。目的是实现共赢。</p>
<ul>
<li>信用门槛的降低。IPO时的经消费是巨大的。</li>
<li>企业存在的一个作用之一是：降低交易成本。企业的边界也就是当内部交易成本等同于外部交易成本的时候。基于这个假设，如果外部市场交易成本已经足够低，是不一定需要企业这种管理模式的。</li>
<li>著名经济学家科斯有一个论断：权责界定越明晰，经济就越容易达到帕累托最优。去除非对称的信息，近似削弱中介的价值。<blockquote>
<p>反过来想，中介要实现商业上的优胜，在没有创造的前提下会努力提高信息流通的成本，以造就严重信息不对称的市场。</p>
</blockquote>
</li>
<li><p>智能合约：带来的动态门槛。</p>
</li>
<li><p>流动性：对未来供给的保证。</p>
</li>
</ul>
<blockquote>
<p>场景有点分散：<br>好评和差评不值钱。</p>
</blockquote>
<ul>
<li><p>很多人一上来就谈怎么做，好像这件事就应该发生一样。</p>
</li>
<li><p>提起灯，我总想起祈祷。</p>
</li>
<li><p>你离开之后，这世上就多了一种颤抖的心跳。</p>
</li>
<li><p>我们用一种工具去完成一件事情。对于工具的评判是，我们会因此去寻找适合用这个工具的事情。比如：我们用社交媒体分享我们的生活。也就是说，我们会去寻找适合用社交媒体分享的生活。</p>
</li>
</ul>
<h2 id="2018-5-29">2018.5.29</h2><p>没有剩余价值的未来<br>streaming money<br>没有惊喜 也没有悲伤<br>因为所有都是值得的</p>
<h2 id="2018-5-28">2018.5.28</h2><p>山顶的雪 糖霜<br>有很冰很冰的风<br>这座山，像是鼠疫的地形<br>有些风景我只想一个人走<br>我喜欢lead 来找路<br>海明威 乞雪</p>
<p>如此惆怅 脑袋一片空白 书是生活的循环 我希望看见那些生活 如此心碎 如此惆怅。</p>
<ul>
<li>福特的那句名言：如果问人们要什么，他们会说要一匹更快的马。对这个“用户调查”的分析不应该止步于“用户啥都不懂”、“不要听用户的话”，而应该想人们为啥要更快的马？他们的真正需求是：行动得更快。</li>
</ul>
<h2 id="2018-5-27">2018.5.27</h2><ul>
<li>和这个世界对话太多容易有孤岛效应，和自己对话太多容易有回音室效应。</li>
</ul>
<h2 id="2018-5-24">2018.5.24</h2><p>倒着时差赶比赛，在公交上迷迷糊糊睁眼。陌生而轰鸣的车厢，热烘烘的空气。给我感觉像在看一场，盛大而苍老的马戏表演。</p>
<p>阳光。与贫穷。加缪。</p>
<p>想起《局外人》里默尔索跟着抬棺材的队伍在烈日下行走的样子。他流了很多汗，于是不流眼泪。</p>
<p>挺有意思的，仿佛那些书里的场景，也逐渐变成了我回忆的模样。</p>
<p>比赛最终拿下了第二名，将会代表加拿大赛区去微软总部参加世界范围的决赛了。这几天补一篇tech报道，也好好放松下~</p>
<h2 id="2018-5-23">2018.5.23</h2><ul>
<li>相比看书，看电视、电影最大的不好，【1】是你失去了你对节奏的把握，主动权，甚至想象方向的权利。【2】图像相比语言没有逻辑，只剩审美，难以反驳。</li>
</ul>
<h2 id="2018-5-22">2018.5.22</h2><p>我主动想要的东西，比我得到的任何东西，都要美。</p>
<p>很多文字，作者或许并不会想要写下一个主旨句，比如翁达杰，比如海明威。他在期待一种默契。静默里的相视一笑。遇到这些地方，仔细留意，那些意外的美。</p>
<p>我心目里作家的排序：<br>1.【加缪，翁达杰】他们诠释着浪漫的两种极端，<br>2.【昆德拉，桑塔格，黑塞，布罗茨基】的洞察力，<br>3.【布拉德伯里，博尔赫斯】的想象。<br>这仿佛也是我所追求的生活的排序。我不允许我的生命里没有浪漫。</p>
<p>如果你也喜欢加缪，我们可以做很好的朋友了；如果你也喜欢翁达杰，我想追你。</p>
<blockquote>
<p>我也很喜欢桑塔格！很受启发。</p>
</blockquote>
<h2 id="2018-5-20">2018.5.20</h2><p>剥夺言论自由的前一步，是剥夺知情权。这是现代科技媒体逐渐演化的方向。</p>
<blockquote>
<p>从微薄的关注被关注式，到抖音头条的全部推荐式。你的知情权的主动性在逐渐降低。</p>
</blockquote>
<h2 id="2018-5-15">2018.5.15</h2><p>记忆，是被上色的。</p>
<h2 id="18-5-14">18.5.14</h2><p>你要记住，世界上最难的是理解；也要明白，这世上也有很多事物并不是为了被理解而存在的。</p>
<p>理解，不能成为一种妥协，更不能成为一种优越的侵犯。</p>
<h2 id="18-5-13">18.5.13</h2><p>亲爱的妈咪，母亲节快乐!</p>
<p>这段时间让你操心了。我现在也愈发地相信，我的身体健康得很，是我偶尔太焦虑和敏感了。和你们都说出来之后，真的舒服很多。我一定继续努力克服心理因素！剩下的几天都要开开心心吃好的！</p>
<p>这几天有两个瞬间你还记得嘛。</p>
<ul>
<li><p>我在房间看书。妈咪进来，说我们一起看吧。我：你的书呢？妈咪：我看你。</p>
</li>
<li><p>生病了妈咪在照顾我，你突然提到，你不知道当你得知我有了女朋友的时候，那会是什么感觉。</p>
</li>
</ul>
<p>就像平淡生活里的其他时刻，这些瞬间很快就过去了，但也是那个瞬间，我忽然觉得我这一辈子都不会忘记了呢。或许这就是幸福吧。</p>
<p>我直觉地觉得，未来可能有一天，我会被领到一个空阔而陌生的地方，有人会提醒我，那里会是我未来几年生活的地方，他们说那是我的家，而我会不吭声地抗议，那不是。</p>
<p>我想，爸爸妈妈所在的地方，就是我的家。</p>
<p>妈咪要多多吃肉，多多锻炼，也多多督促爸爸锻炼。</p>
<p>节日快乐！</p>
<p>宝贝</p>
<h2 id="18-5-12">18.5.12</h2><p>回家了。在家楼下的花园里散步。</p>
<p>我贪婪地四处望着。想记住家的所有模样。</p>
<p>我直觉地觉得，未来可能有一天，我会被领到一个空阔而陌生的地方，有人会提醒我，那里会是我未来几年生活的地方，他们说那是我的家，而我会不吭声地抗议，那不是。</p>
<p>游乐场的边栏被涂成了亮粉色。算是给小孩子们的礼物嘛，我想。我下意识地绕进乐园的里侧，蹲下去。果然，栏柱的根部没有被完全漆完，褐红色的颜料裸露着，那也是我记忆里边栏的样子。</p>
<p>想起来不禁觉得好玩。我在用逻辑说服自己，记忆里那些熟悉的角落没有变。就像我在说服时间，你不必汹涌。</p>
<p>是这些墨绿色，褐红色，这些湿润和温热组成了我最初的十八年。</p>
<p>一个小女孩蹦蹦跳跳地从游乐园里跑出来，她抓着一支硕大的充气宠物玩具，用力地往前方扔去，捡起，再扔去。她跑着上了桥，接着把玩具扔出去的时候刮来了一阵风，玩具落进了湖面。她在桥上的栏杆旁趴了一会儿紧紧地瞅着，突然转过身跑开了。我在原地看着，以为她去找她爸妈搬救星来把玩具捞起来。我绕着湖面走了好久，跟着玩具缓缓漂流的方向。过去了半个多小时。我忽然意识到，她，或许不会再回来了。</p>
<p>好像，也只是一个玩具气球而已。</p>
<p>又是为什么，是旁观者更心碎。</p>
<p>…</p>
<p>会不会终于有一天，我也不小心弄丢些什么东西，我会不会哭着闹着想找回来。还是说，像这样不吭声地永远分别了，留下了身后的喧嚣与躁动，还有，无尽的风。</p>
<h2 id="18-5-11">18.5.11</h2><ul>
<li>不要那么快去接受这个世界现有的样子，不要那么快去接受什么是美好或丑陋。我们终其一生在寻找一些词语，然后去从那里出发，来观察这个世界。加缪。</li>
</ul>
<p>学会一种反直觉的思考方式。</p>
<ul>
<li>又看回到苹果的一段视频，乔布斯回到低谷的苹果的时候的演讲。这个世界的注意力很短暂，我们需要让大家记住我们想要被记住的样子。牛奶企业花了20年去说服消费者喝牛奶对身体好。nike从来不仅仅只局限在鞋子上。他们的广告不去讨论他们的气垫，为什么他们的鞋子比reebok的好。不，他们在赞颂伟大的运动员。<blockquote>
<p>很有魅力的一段话。</p>
</blockquote>
</li>
</ul>
<h2 id="18-5-9">18.5.9</h2><p>就像，我有一天也会把这些日子放在枕边。</p>
<p>也当我终于有一天，会去轻描淡写生活的盛大与苍老。《轻》，脑海里想到的是他们在村庄里埋下小狗的样子。花园沉入了黄昏，皎洁的月亮悬在清空，像一盏被忘记关掉的灯。</p>
<blockquote>
<p>想起对于一种空气的描写，凛冽而苍老的蓝色空气。</p>
</blockquote>
<h2 id="18-5-3_家">18.5.3 家</h2><ul>
<li><p>我在房间看书。<br>妈咪进来，说我们一起看吧。<br>我：你的书呢？<br>妈咪：我看你。</p>
</li>
<li><p>生病了妈咪在照顾我，她突然提到，她不知道当她得知我有了女朋友的时候，那会是什么感觉。</p>
</li>
</ul>
<h2 id="18-5-1">18.5.1</h2><ul>
<li><p>想成为一个敏感的人 因为你是敏感的 你感受着 拥有着和这个大多数人的世界不一样的东西。</p>
</li>
<li><p>对不知名的陌生人的问候，也是对自己的问候。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[玩具气球]]></title>
      <url>http://chocoluffy.com/2018/05/12/%E7%8E%A9%E5%85%B7%E6%B0%94%E7%90%83/</url>
      <content type="html"><![CDATA[<p>回家了。在家楼下的花园里散步。</p>
<p>我贪婪地四处望着。想记住家的所有模样。</p>
<p>我直觉地觉得，未来可能有一天，我会被领到一个空阔而陌生的地方，有人会提醒我，那里会是我未来几年生活的地方，他们说那是我的家，而我会不吭声地抗议，那不是。</p>
<p>游乐场的边栏被涂成了亮粉色。算是给小孩子们的礼物嘛，我想。我下意识地绕进乐园的里侧，蹲下去。果然，栏柱的根部没有被完全漆完，褐红色的颜料裸露着，那也是我记忆里边栏的样子。</p>
<p>想起来不禁觉得好玩。我在用逻辑说服自己，记忆里那些熟悉的角落没有变。就像我在说服时间，你不必汹涌。</p>
<p>是这些墨绿色，褐红色，这些湿润和温热组成了我最初的十八年。</p>
<p>一个小女孩蹦蹦跳跳地从游乐园里跑出来，她抓着一支硕大的充气宠物玩具，用力地往前方扔去，捡起，再扔去。她跑着上了桥，接着把玩具扔出去的时候刮来了一阵风，玩具落进了湖面。她在桥上的栏杆旁趴了一会儿紧紧地瞅着，突然转过身跑开了。我在原地看着，以为她去找她爸妈搬救星来把玩具捞起来。我绕着湖面走了好久，跟着玩具缓缓漂流的方向。过去了半个多小时。我忽然意识到，她，或许不会再回来了。</p>
<p>好像，也只是一个玩具气球而已。</p>
<p>又是为什么，是旁观者更心碎。</p>
<p>……</p>
<p>会不会终于有一天，我也不小心弄丢些什么东西，我会不会哭着闹着想找回来。还是说，像这样不吭声地永远分别了，留下了身后的喧嚣与躁动，还有，无尽的风。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Apr.]]></title>
      <url>http://chocoluffy.com/2018/04/30/%E7%A2%8E%E8%AF%AD-2018-Apr/</url>
      <content type="html"><![CDATA[<h2 id="18-4-29">18.4.29</h2><ul>
<li><p>【梦境】海贼王外番 心愿粘土。一座城市的窑洞，老人放粘土进传送带，变成各式商品出现在城市的各个角落的传送带上。各式商品中唯独有一样不存在，因为老人的女儿。</p>
</li>
<li><p>怎么为图像 漫画辩护？相比于文字的抽象。</p>
<blockquote>
<p>真正有害的说不定不是图像的“限制了想象力”的解释，而是电视革命里，内容不容分说的属性， <strong>缺少了想象和驳斥的机会。也因为图像没有逻辑，难以反驳。</strong></p>
</blockquote>
</li>
<li><p>【剧本】认清自己，是多么难啊。他抹去挂在的睫毛的泪珠。他翻去下一页。画外音：这个时刻适合反省，下一时刻适合哭，再一个时刻放上购买链接。</p>
</li>
</ul>
<p>为什么隔离很重要。和这个世界沟通的越频繁而无法克制，和自己的沟通就越贫乏且越少美感。美感，作为一种私人想象的征兆，还是有助于剥离于被动操控的一切。“它的出现昭示着我们的功利关系得以安顿，于是我们可以安心注视那非功利的一切。”</p>
<h2 id="18-4-24">18.4.24</h2><p>听说，时间流逝，就是在和时间交换一些东西。<br>爵服，灯光，交杯和心碎。<br>这真像浮士德的契约。<br>我好奇，令我身上法术失效的那一刻，咒语是什么。</p>
<p>离我在2014年第一次站上国际比赛的舞台，已经四年了。四年是一段很完整的轮回，也几乎标记着我大学生涯的起点与落幕。<br>每个人都在等待着迎接着一些目光。昆德拉。<br>也像是在做一幅画。生命，是在梳理着纹路。晴朗的日子。阳光投影出我的轮廓，至于生命里的其他细节也就不重要了。<br>生命里一些很安静的时刻。一些轰然而至的时刻。一些逃离的时刻。<br>总有一天，有一阵大风会带着我启程，离开，飘散。一如那些恩惠的日子。我一定会想起那天清晨在蓝山，墓碑上刻着“永恒的风”。</p>
<p>墓志铭还是很有趣的一个东西呢，正如有的名字是用水写成的，有些名字也终将在风中飘散。</p>
<p>问 为什么有时候你和我说晚安 有时候不呢<br>因为每次和你有交集 我都希望我是最后才走的那个</p>
<h2 id="18-4-20">18.4.20</h2><ul>
<li><p>追求思考，而不是追求了解。<br>追求活力，而不是追求生活。<br>少看社交媒体，少看图像视频，多追本溯源的思考，多观察。</p>
</li>
<li><p>从来都是机会成本的问题。</p>
</li>
<li><p>不存在更加优越或者低劣的制度，只是人性的开明和狭隘而已。</p>
</li>
</ul>
<h2 id="18-4-19">18.4.19</h2><blockquote>
<p>终于慢慢理解到了，<strong>缺乏多样性的后果，意味着存在着某种绝对正确，或者绝对安全的答案。</strong>而社交媒体，正在促成这样的情况。它曝光了，或者说它带来了很多以前看不到的节点，但它用海啸般地反馈来威胁小众，只剩下沉默。</p>
</blockquote>
<ul>
<li><p>我如果养猫，我要给她起名Aesop。</p>
</li>
<li><p>学会一种思维：就是如果一个东西存在着，并不意味着它就值得存在。它的存在本身会因此掩盖了很多对其潜在弊端的讨论。因为附和，是最容易的一种决策方式。（呃…其实就是一句中国的老话，知其然更要知其所以然）</p>
</li>
</ul>
<h2 id="18-4-12">18.4.12</h2><ul>
<li><p>【梦境】昨晚的梦，在一个虚构的故事世界里面，一个悬疑的案件正在发生，你作为其中一个参与者，你可以改变故事情节的最终走向，通过推理和调整这个世界里的物体，以及破坏一些案件必备的条件来实现结局逆转。那是一个正对着城堡门口的藏匿在丛林之中的高台顶楼。</p>
</li>
<li><p>《生命不能承受之轻》里面提到的动机。人生就是一个不断和别人交换动机的过程。直到我们被填满，交代不下回忆的重重。</p>
</li>
</ul>
<h2 id="18-4-6">18.4.6</h2><ul>
<li><p>有一些名词当作动词来理解的时候好美，比如：化石。</p>
</li>
<li><p>所有的挣扎最终指向的，不过是珍惜而无从挽回。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《童年的消逝》文摘]]></title>
      <url>http://chocoluffy.com/2018/04/15/%E3%80%8A%E7%AB%A5%E5%B9%B4%E7%9A%84%E6%B6%88%E9%80%9D%E3%80%8B%E6%96%87%E6%91%98/</url>
      <content type="html"><![CDATA[<p>当一种社会产物行将被淘汰时，它就变成了人们怀旧和研究的对象。</p>
<a id="more"></a>
<p>读后感全文链接：『 <a href="http://chocoluffy.com/2018/04/15/%E7%A7%91%E6%8A%80%E7%9A%84%E7%9B%B2%E7%82%B9-%E3%80%8A%E7%AB%A5%E5%B9%B4%E7%9A%84%E6%B6%88%E9%80%9D%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/">科技的盲点</a> 』，以下为阅读文摘。</p>
<hr>
<h2 id="引言">引言</h2><p>童年不同于婴儿期，是一种社会产物，不属于生物学的范畴。至于谁是或不是儿童，我们的基因里并不包含明确的指令。人类生存的法则也不要求对成人世界和儿童世界进行区分。事实上，如果我们把“儿童”这个词归结为意指一类特殊的人，他们的年龄在 7岁到——比如说——17岁之间，需要特殊形式的抚育和保护，并相信他们在本质上与成人不同，那么，大量的事实可以证明儿童的存在还不到 400年的历史。的确，如果我们完全用一个普通美国人对“儿童”这个词的理解，那么童年的存在不超过 150年。且举个小小的例子：庆祝孩子生日的习俗，在 18世纪的美国大多是不存在的，而且，事实上，以任何形式准确标注孩子的年龄都是一个相对新的文化习惯，不过 200年而已。再举个更重要的例子：直到 1890年，美国的中学只招收 7%的年龄在 14岁到 17岁的人。另外 93%在和许多更加年幼的儿童一起从事着成人的劳动。一些儿童更是日出而作，日落而息，这在各大城市比比皆是。</p>
<p>它们大多是通过观察传播媒介如何影响社交过程而产生的一系列推测；尤其是印刷术如何创造了童年，电子媒介又如何使之“消逝”。</p>
<h2 id="第一部分_童年的发明">第一部分 童年的发明</h2><p>马歇尔·麦克卢汉曾评论说，当一种社会产物行将被淘汰时，它就变成了人们怀旧和研究的对象。</p>
<p>引发了研究童年历史的热潮。为什么发生在现在？至少我们可以说，<strong>最好的历史往往产生于一个事件完成之后，产生于一个阶段进入尾声，而另一个新的、更强劲的阶段还不可能到来的时候。</strong>历史学家通常不是来歌功颂德，而是来埋葬历史的。不管怎样，他们发现做尸体解剖要比写进度报告来得容易。</p>
<p>最伟大的雅典哲学家柏拉图（ Plato）针对这个主题写过大量作品，光是针对如何对青年进行教育的问题就提出过不少于三个不同的方案。此外，他的一些最为难忘的谈话，是探讨诸如美德和勇气是否可以被教育出来的问题。（他相信是可以的。）因此，<strong>希腊人发明了“学校”这个概念是毫无疑问的。在希腊语中，“学校”一词的意思是“闲暇”。这反映了一种典型的雅典式的信仰：他们认为闲暇时，一个文明人自然会花时间思考和学习。</strong>就连凶悍的斯巴达人，虽不像他们的邻居一样强调思考和学习，但也建立了学校。</p>
<p>每一个受过教育的人都知道，北方蛮族入侵后，罗马帝国跟着就灭亡了，传统文化被神秘化，欧洲随后陷入所谓的愚昧黑暗时代和中世纪。学校的教科书很好地论述了时代的变迁，不过有四点经常被忽略，而它们对童年的来龙去脉关系尤深。第一点是人的读写能力的消失。第二点是教育的消失。第三点是羞耻心的消失。而第四点是前三点所导致的后果，即童年的消逝。</p>
<p>因此，欧洲人回到了一种人类交流的“自然”状态，一种以谈话为主、通过歌唱来强化的状态。纵观人类的历史，那正是人类办事和创造文化的方式。</p>
<p>在《爱弥儿》（ Emile）一书中，卢梭告诉我们：“阅读是童年的祸害，因为书本教我们谈论那些我们一无所知的东西。”</p>
<p>在文字世界里，做成人意味着有机会了解用非自然符号整理和记录下来的文化秘密。在文字世界里，儿童必须变成成人。但是，在没有文字的世界里，儿童和成人之间就没有必要明确区分，因为不存在什么秘密，文化不需要提供训练就能被人理解。</p>
<p>但是，只有在一个严格区分儿童世界与成人世界，并且有表达这种区别的社会公共机构存在的文化里，这种想法才是可行的。中世纪没有这种区分，因而也没有这样的社会公共机构。</p>
<p>印刷创造了一个新的成年定义，即成年人是指有阅读能力的人；相对地便有了一个新的童年定义，即儿童是指没有阅读能力的人。</p>
<p>印刷机是让人类卷入争夺优先权和竞争国家占有权的第一个发明。”为什么出现这种现象并非偶然？她指出，<strong>因为印刷使一个人说的话和写的著作得以万世流芳，从而创造了一个崭新的和普遍的自我观念。</strong></p>
<p>究竟是谁发明了马镫、大弓纽扣，甚至眼镜，没人知道，因为个人成就的问题在中世纪几乎不受重视。其实，在印刷机发明之前，“作家”这个概念，用现代意义来衡量是根本不存在的。</p>
<p>要理解那些影响是如何跟童年的起源和成长发生关系的，我们可以用哈罗德·英尼斯（ Harold Innis）的学说作为指导。英尼斯强调说，传播技术的变化无一例外地产生了三种结果：它们改变了人的兴趣结构（人们所考虑的事情）、符号的类型（人用以思维的工具），以及社区的本质（思想起源的地方）。简单来说，每一部机器都代表着一个想法或各种各样想法的混合物。然而，它们首先并不是那种导致发明者构想出一部机器的想法。例如，我们无法知道，当时古登堡心里在想什么，使得他把葡萄压榨机跟图书制作联系了起来，但我们可以很有把握地推断，他毫无意愿扩大个人主义，或者就此削弱天主教会的权威。</p>
<p>过去的文学传统中从未有过暴露私人生活的作品，也没有个人观点得以公开表现的既定“声音”或语气，自然也没有对想象中的、其实不存在的人群讲话的习俗。</p>
<p>但自从有了印刷的书籍之后，另一种传统便开始了：孤立的读者和他自己的眼睛。口腔无须再发声音，读者及其反应跟社会环境脱离开来，读者退回到自己的心灵世界。从 16世纪至今，大多数读者对别人只有一个要求：希望他们不在旁边；若不行，则请他们保持安静。整个阅读的过程，作者和读者仿佛达成共谋，对抗社会参与和社会意识。简而言之，阅读成为反社会的行为。</p>
<p><strong>在这种环境下，人们对个性的要求变得不可抗拒。这倒不是说印刷术创造了个人主义，而是个人主义成为一种正常的、可以接受的心理条件。</strong></p>
<p>印刷给予我们自我，使我们以独特的个体来思索和谈话。而这种强化了的自我意识便是最终导致童年开花结果的种子。</p>
<blockquote>
<p>尝试模仿这个逻辑来思考互联网。印刷带来的是永恒的机会，激发了个人主义。虽然个人主义早已存在。</p>
</blockquote>
<p>“印刷的书，比其他任何设备都更能把人从此时此地的控制中解放出来……印刷品使事件变得比它本身更有影响……印刷形式的存在才是真正的存在：其余的世界往往变得更虚无缥缈。学习变成了从书本中学习……”</p>
<p>对于这个断言，马丁·路德的一番话是令人信服的最好例证。谈到印刷，他说，印刷术是“上帝最崇高、最无限的恩典。凭借它，上帝的福音事业可以广泛传播”。</p>
<p>“一个字一旦被写下来，”苏格拉底说，“它就会四处滚动，态度冷漠地来到理解它的人中间和与它绝不相关的人中间。它并不知道该给谁看，不该给谁看。”那时苏格拉底并不知道印刷，否则这个问题又会复杂百倍。</p>
<p>自从有了印刷术，未成年人必须通过学习识字、进入印刷排版的世界，才能变成成人。为了达到这个目的，他们必须接受教育。因此，欧洲文明重新创造了学校，从而使童年的概念也变成社会必需的了。</p>
<p>童年之所以能从工业化的英国的贪婪中幸存下来，原因有几个。<strong>其中之一是英国的中上层阶级使这个概念保存下来，并精心培养和扩展它。</strong></p>
<blockquote>
<p>高跟鞋在最初流行开的秘密，那是中上层阶级免除体力劳役的象征。</p>
</blockquote>
<p>另一方面，卢梭在《爱弥儿》中写道：“植物通过耕耘获得改善，而人类则是通过教育获得进步。”在此，儿童被比作一株野生植物，几乎不能靠书本学习来获得改善。它的生长是有机的和自然的；童年只要不被文明造就的、有疾患的倾泻物所窒息已是万幸。<strong>对于卢梭，教育主要是个减少的过程；而对于洛克，这是个增加的过程。</strong>但不论这两个比喻有多少区别，它们共同关心的一点都是未来。洛克寄希望于教育带来一本丰富、多样和翔实的书；卢梭则希望教育带来一朵健康的花朵。记住这一点很重要，因为在当今有关儿童的比喻中，对未来的关心越来越少了。洛克和卢梭都毫不怀疑没有成人面向未来的指导，童年依然可以存在。</p>
<p>弗洛伊德声称，首先，儿童的头脑里有一个无可否认的结构和特殊的内容，例如，儿童具有性能力，富有各种情结和本能的心理冲动。他还声称，在努力达到成熟的成年的同时，儿童必须战胜、抛弃和升华他们本能的热情。因此，弗洛伊德驳斥洛克的论调，赞同卢梭的观点：头脑不是一张空白的书写板；儿童的头脑的确最接近“自然状态”；天性的要求必须考虑在内，否则就会造成永久的人格错乱。与此同时，弗洛伊德又驳斥了卢梭的观点，赞同洛克的说法：儿童和家长之间早期的相互影响，对于决定儿童将来成为何种成人起着决定性的作用；通过理性教育，头脑的热情可以得到控制；没有压抑和升华，文明是不可能实现的。</p>
<h2 id="第二部分_童年的消逝">第二部分 童年的消逝</h2><p>但是，到了世纪末，童年进而被看作每个人与生俱来的权利，成为一个超越社会和经济阶级的理想。不可避免地，童年开始被定义为生物学的范畴，而不是文化的产物。因此，这是个极为有趣的讽刺，因为在同一时期，使童年概念诞生的符号环境却缓慢地、不易察觉地开始瓦解。</p>
<p>而是证实了克里斯汀·尼斯纯（ Christine Nystrom）所说的技术的“无形的形而上学”。达尔文和莫尔斯之间有一个区别：<strong>达尔文为我们提供了体现在语言上的思想。他的思想明晰、可论证、可驳斥。</strong>的确，自 1860年以来，达尔文的思想在演讲厅、课堂上甚至法庭上已经被公开地辩论过了。但是，莫尔斯为我们提供的是体现在<strong>技术上的思想，也就是说，它们是隐藏的、看不见的，因此从未被论证过。从某种意义上说，莫尔斯的思想是不可辩驳的，因为没人知道电子传播隐含着什么样的思想。</strong>就像所有的传播技术一样，人们假定电报是个中性的传播工具，它没有自己的世界观，因此不存在偏袒哪一方的问题。<strong>人们会向莫尔斯提出的唯一问题是：这台机器究竟能不能用，电报能传多远，开发这项技术，花费究竟是多少。</strong></p>
<p>梭罗是把人们的注意力转向电报所带来的心理的和社会的意义，尤其是它改变信息本质的能力，即从个人的和地区性的到非个人的和全球性的。 120年之后，马歇尔·麦克卢汉试图解决梭罗提出的问题：</p>
<p>电报把信息从个人拥有转变为一个在世界范围内有价值的商品，从而创造了“新闻事业”。</p>
<p>当美国为了寻求电子的快速而普遍使用电报时，无可避免的是，<strong>信息变得比信息来源更重要。</strong>在此我们要记住一个比喻：在古代，传送坏消息的信使常常会遭到砍头的厄运。这也就是要让说话者对所说的话负责任，这是对人的个性的最崇高的赞美。有了电报，新闻就变得具体化了，常常使用“它”或“它们”，就像是“据新闻说……”或者“据它们说……”。有了电报之后，没有具体的个人需要对新闻承担责任。如同报纸一样，电报面向的是全世界，而不是某个个人。但不同于报纸，它的信息没有可以辨认的来源。</p>
<p>在电报发明之前，由于跨越空间传播信息在技术上有困难，新闻往往是有选择的，跟人们的生活密切相关，这足以说明梭罗为什么会提那个问题。有了电报之后，新闻变得没有选择、不可用，至少以梭罗这样的人的观点来看是如此。确实，只要我们稍加引申，就可以说电报有助于创造一个新的智力的定义，因为随着整个世界信息泛滥，一个人知道多少的问题要比一个人知道如何运用已知信息的问题重要得多。</p>
<p>童年，如我努力揭示的，是一种环境的结果。在这个环境中，一些专为成人控制的、特定形式的信息，通过分阶段用儿童心理能吸收的方式提供给儿童。如何维护童年的概念，则有赖于信息管理的原则和有序的学习过程。但是，电报开始争夺原来属于家庭和学校的信息控制权。电报改变了儿童所能享用的信息的种类、信息的质量和数量、信息的先后顺序以及体验信息的环境。</p>
<p>我把轮转印刷机和照相机包括在内，是想指出，电子媒介并不是导致一个新的符号世界产生的唯一因素。与电子媒介的发展相对应，丹尼尔·布尔斯廷所说的“图像革命”也在展开，一个以图画、漫画、招贴和广告构成的符号世界正在兴起。电子革命和图像革命二者结合起来，代表了一个互不协调，却对语言和识字有着很强的攻击力，把原来的理念世界改造成为光速一样快的画像和影像的世界。</p>
<p><strong>语言是经验的抽象表述，而图像则是经验的具体再现。</strong></p>
<p><strong>语言和图画是两个不同的话语世界，因为一句话总是，也首先是一个想法，也就是说是想象中的一件事。</strong></p>
<p>因此，从这个意义上说，<strong>图画和其他图像可被看作“认识上的一个倒退”［用雷金纳德·戴姆拉尔（ Reginald Damerall）的话说］，至少跟印刷文字对比是如此。印刷文字要求读者对它的“真实内容”有积极的反应。人们也许不一定总能做出评价，但是，从理论上说，只要人们有足够的知识或经历，评价是能够做到的。但是，图画要求观画者有审美的反应。图画要求我们诉诸感情，而不是理智。它们要求我们去感觉，而不是思考。</strong>这就是为什么鲁道夫·阿恩海姆在反思图像革命和预期它在电视上的大量表现时曾经警告说，它很可能对我们的头脑有催眠作用。</p>
<p>图像广告始终是削弱文字世界各种前提条件的最具摧毁性的力量。如同罗兰·巴特（ Roland Barthes）一样，他的话是暗示大批量生产的图像会向政治界和商业界引入一个长久和普遍的非理性因素。<strong>从照片到电影，最后到电视，一个候选人的“形象”变得比他的政纲更重要，一个产品的“外形”变得比它的实际用途更重要。</strong>阿恩海姆、海尔布隆纳和巴特在做出这些结论时含蓄地指出，图像革命对童年的地位起了多么巨大的作用。因为他们探讨的是，这个新兴的符号世界其实并不能支持保证童年概念存在所需要的社会和知识的等级制度。</p>
<p>那些的确学完所有符号的人需要将其毕生精力投入到这个事业。不过，这是一件值得做的事。拥有这些独特技能的结果，使他们能够积累巨大的政治和宗教的权力。当一群人拥有一般大众所不能获得的秘密时，出现这种情况一点儿也不足为奇。</p>
<p>尤其是，电视并不是演讲堂。它是一个影像展示，是象形媒介，而不是语言媒介。正因为如此，所以像《人之上升》（ The Ascent of Man）和《宇宙》（ Cosmos）这样“阳春白雪”的节目，无论他们如何努力做成好电视节目，也必须把关注的焦点放在不断变化的视觉图像上。</p>
<p>电视节目的一个镜头，其平均长度是 3到 4秒；一个商业广告镜头，其平均长度是 2到 3秒。这意味着，看电视要求观众必须在瞬间理解画面的意义，而不是延后分析解码。<strong>它要求观众去感觉，而不是去想象。</strong></p>
<p>表现在三个方面，而它们都跟电视无法区分信息使用权密切相关：</p>
<p>鉴于我所描述的这种情况，电子媒介完全不可能保留任何秘密。如果没有秘密，童年这样的东西当然也不存在了。</p>
<p>有一个问题必须优先回答：为什么电视要强行把整个文化从壁橱里全部搬出来示众？为什么人们本应在心理学家的沙发上和忏悔室里交流的话题，要恬不知耻、堂而皇之地成为公开讨论的话题？</p>
<p><strong>电视基本上是 24小时不停地播映，它的外在形式和符号形式都使它没有必要，其实也不可能将观众加以区分。它要求不断有新鲜而有趣的信息来吸引观众。因此，电视必须发掘利用文化中每一个现存的禁忌。</strong>无论这个禁忌是在谈话节目中被揭示出来的或作为肥皂剧和情景喜剧的主题，还是在商业广告中曝光的，这些都无关紧要。电视需要素材。电视需要素材的方式不同于其他媒介。电视不单是图画的媒介，它是以当下为中心的、传播速度像光速一样快的媒介。电视的偏见，因此也包括电视的职责，是传动信息，而不是收集信息。</p>
<p>如果说电视能为这些主题做些什么的话，它只能做一次，随后转向其他话题。正因如此，电视成为丹尼尔·布尔斯廷所称的“伪事件”的主要制造者。他所说的“伪事件”，是指为了公众消费而筹划的事件。</p>
<p>这种状况最明显的结果是，它排除了世俗知识的排他性，因此，也排除了儿童和成人之间一个根本的不同。从社会结构的基本原则来看，这样的结果也会发生：一个群体主要是依据其成员所拥有的特定信息来决定的。假如人人都懂得律师所了解的一切，律师就无须存在了。假如学生知道老师所知道的一切，也就无所谓老师和学生之间的差别了。的确，假如五年级的学生知道八年级的学生所了解的知识，划分年级就完全没有意义了。<strong>萧伯纳曾经说过，一切职业都是针对外行的阴谋。我们可以扩展这个说法，说任何一个群体都是针对不在这个群体里的人的“阴谋”，因为“局外人”由于这样或那样的原因，无法获得“局内人”所拥有的信息。</strong></p>
<p>当然，并不是所有的角色差别或群体认同都依赖于信息的获取。</p>
<p>中世纪时没有童年，因为让成人单独知道某些信息的手段并不存在。在古登堡的时代，这种手段被开发出来了。在电视时代，它又消失了。</p>
<p>我们经常处在被原始的冲动所控制的危险中，包括暴力、兽欲、本能和自我。羞耻是野蛮行为得以控制的机制，如切斯特顿所认为，它的主要力量来自于围绕着各种行为的神秘感和敬畏感。这些行为包括思想和语言，由于常常被隐蔽在公众视线之外，它们变得非常神秘和令人畏惧。由于隐蔽，它们变得神秘；<strong>由于神秘，我们可以管理它们。</strong></p>
<p>然而，我要宣称，在一个不能保存秘密的社会里，羞耻不能作为社会控制和角色分辨的手段，因而不会产生任何影响。</p>
<p>如果我们把保密的手段剥夺了，那么我们也被剥夺了秘密。类似地，当维护乱伦、暴力、同性恋和精神病这些秘密的手段消失了，当这些秘密的细节变成公共话语的内容，可供在公共领域里的每一个人检查，那么对这些问题的羞耻感也会随之消失。<strong>曾经是可耻的事情现在变成了一个“社会问题”“政治问题”或“心理现象”。但在这个过程中，它一定会失去其阴暗和难以捉摸的性质，同时也会失去一些道德力量。</strong></p>
<p>不同的文化有不同的禁忌，在一种文化中被认为可耻的，在另一种文化中则不以为然。我们完全有理由希望，可耻的行为通过媒体公开揭露，然后使之合理化，从而转化为“社会问题”或者“另一种生活方式”。</p>
<p>人们必须勇敢地面对这样的现实。因为，如果成人没有阴暗和捉摸不定的谜需要瞒住儿童，然后以他们认为必需的、安全的和合适的方式向他们揭示，那么成人和儿童之间的界限一定会淡薄至危险的地步。换句话说，这是浮士德把灵魂出卖给恶魔式的交易。</p>
<p>在如今的政体中，唯一抓住了这个要害的、较有影响的群体是以“道德多数派”著称的无知的运动。正是通过他们的呼吁，这样一个问题被提了出来：<strong>坦率和真诚的代价究竟是什么？</strong></p>
<p>从定义上看，成年意味着谜解开了，秘密揭示出来了。如果从一开始儿童就了解各种各样的谜和秘密，我们又如何把他们跟成人区分开来呢？</p>
<p>这主要是因为识字文化既要求，也促进了高层次的自我控制和延迟的满足感。</p>
<p>社会礼仪要求在成人和儿童的符号世界之间保持公开的区别，这样的习俗在中世纪是闻所未闻的，但它所代表的是一个令人非常愉快的社会想象。从成人方面来看，对语言的约束反映了一个社会理想，即试图保护儿童不受粗俗、肮脏或愤世嫉俗态度的影响，因为这些态度往往隐含在污秽和残酷的语言里。从儿童方面来看，这种约束反映了他们理解自己在社会等级中的位置，尤其是理解他们还没有权利公开表达那些态度。</p>
<p>但好奇大半发生在儿童世界，和成人世界是分离的，儿童必须通过提问寻求进入成人的世界。由于媒介将两个世界合二为一，保持秘密所产生的张力在谜底被揭开时势必减弱，所以好奇的演算方法也随之发生了变化。好奇被愤世嫉俗——或者更糟——被狂妄自大所取代。于是，我们的孩子不能依靠有权威的成人，而是依赖不知从哪里来的新闻来获取知识。我们的孩子还没有提问，就被给予一大堆的答案。简言之，我们身边没有儿童了。</p>
<p>虽然电视有时候会警告家长“下面的节目包含成人内容……”，但这样做只会保证更多的而不是更少的儿童会观看。</p>
<p>我清楚地知道，“虚伪”这个词有时被用来形容公共知识和隐秘知识受到严格区分的情形。但是，从善意的一面来看，虚伪毕竟代表着某种社会理想主义。比如，拿儿童来说，保密是为了保证儿童健康有序地成长。童年的概念，理想化地来想，如果没有某种程度的虚伪是不可能存在的。我们拿暴力来说吧。</p>
<p>在《童话的用处》中所展示的，童话的重要意义在于，童话故事能够以儿童容易接受的方式揭露现实生活中存在的邪恶，并且融会贯通，使儿童不受创伤。</p>
<p>孩子知道别人所知道的一切，好的、坏的，兼收并蓄。没有什么是神秘的，没有什么是令人敬畏的，没有什么是不能在大庭广众之下展示的。</p>
<p>电视新闻节目的兴奋主要是靠速度的作用，而不是实质的内容。它是以信息流通来制造兴奋，而不是新闻本身的意义。</p>
<p>这些人只是根据他们的发现而使用电视这个资源而已，他们的动机不存在比观看者更好或更坏的问题。<strong>诚然，他们剥削电视的资源，可那是这种媒介本身的特点造就了成人化的儿童，而不是媒介使用者的特点所决定的。</strong>这是一个需要弄明白的重要问题。否则我们就可能盲目相信通过“改进”电视节目，成年有可能被保存下来。</p>
<p>表示在不久的将来， 12岁的选手会成为网球比赛的中心人物。不过，就这方面而言，网球落后于其他运动。具有世界级能力的 12岁的游泳选手、滑冰选手和体操选手不足为奇。为什么会出现这种情况？最显而易见的答案是，较好的教练和训练技巧使儿童能够达到成人水平的能力。可是，问题依然存在：成人为什么要鼓励这种做法？为什么成人要剥夺儿童自由自在、不拘礼节以及自发游戏的欢乐？为什么要儿童经受职业训练、集训、紧张和媒体大肆宣传所带来的种种辛苦？答案跟前面一模一样：<strong>传统上有关儿童的独特性的假定正在迅速消亡。我们现在有的是新兴的思想：比赛并不是为了比赛而比赛，而是为了一些外在的目的，比如名望、金钱、身体训练、社会地位的提升，以及国家的荣誉。对于成年人，比赛是件很严肃的事情。伴随着童年的消逝，儿童眼里的游戏也随之消逝。</strong></p>
<p>许多教育者情愿接受连马克思也会坚决摒弃的观点：教育是为了进入市场而做准备。假如情况的确如此，那么，成人受过教育的标志，比如历史、文学和艺术知识等，它们的重要性就大大降低了。此外，所谓学校教育对一个人未来的收入有着重要的意义，这个说法并不像许多人想象的那么站得住脚。因此，我们整个教育结构的大厦布满了危险的裂缝，而且那些干脆想拆毁这个结构的人也完全不是接受了错误的消息。其实，他们的提议有些多余。由于童年消逝了，学校也一定会消逝。</p>
<p>“第三次伟大实验”始于 20世纪初，提出了这样一个问题：一个文化如果允许现代科技全面主宰它的命运，那么它能保留原有的人道价值，同时创造新的价值吗？奥尔德斯·赫胥黎[ 2]和乔治·奥威尔[ 3]已经给出了他们的答案，那就是：“不能。”</p>
<p>说一句与宗教极端主义立场不谋而合的话，会使你遭到谴责，说你放弃了自由主义的传统。</p>
<p>唯一具备这种能力的技术是电脑。为了设计电脑编程，人们基本上必须学习一种语言。这意味着人们必须掌握复杂的分析技能，类似于一个完全有文化的人需要具备的技能。这就要求进行特殊的训练。如果人人都需要了解电脑如何运作，如何将它们的世界观强加于我们，如何改变我们对判断的定义，也就是说，如果一个全球性的电脑文化被视为必需，那么，可以想见，年轻人的教育会变得非常重要，年轻人的文化必须与成人文化不同的想法也会被保存下来。</p>
<blockquote>
<p>某种意义上我们需要一个学习成本高的媒介。可是技术的发展意味着成本只会越来越低。</p>
</blockquote>
<p>不消说，到了一定的时候，当所有的教师和行政人员自己都成了电视时代的产物时，无论抵制曾是多么有力，这时候抵制不仅会失去它的力量，而且抵制的意义将会被遗忘。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[科技的盲点 -《童年的消逝》读后感]]></title>
      <url>http://chocoluffy.com/2018/04/15/%E7%A7%91%E6%8A%80%E7%9A%84%E7%9B%B2%E7%82%B9-%E3%80%8A%E7%AB%A5%E5%B9%B4%E7%9A%84%E6%B6%88%E9%80%9D%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>童年是一个被精心呵护着的秘密，童年也是用于区分信息阶级的社会概念。信息传播的媒介会深刻而隐秘地影响着使用者的思维，从口耳相传，到印刷，再到电视的图像革命，愈加扁平的结构也意味着信息使用权的难以区分。没有了羞耻感，也就没有了秘密。很多时候维护这种秘密会被称为虚伪。但从善意的角度来看，虚伪也代表着某种理想主义。</p>
<p>受影响的儿童是不知觉的，他们过早地失去了游戏而被卷入了成人严肃的比赛里。他们觉得他们是舞台上最闪耀的一颗，却说不清他们为什么必须站在万千宠爱的镁光灯里，又为什么只能笑。</p>
<a id="more"></a>
<p>看尼尔波兹曼也是部分因为来自<a href="https://blog.yitianshijie.net/2016/11/13/shiver-in-front-of-neil-postman/" target="_blank" rel="noopener">一天世界</a>的启发。我一直深信着新科技技术改变世界的力量，包括从很小的时候的个性签名都会提到“技术就是信仰”。但慢慢地我意识到新事物出现所带来的盲点，人们在大多数时候对新技术是无法选择的。资本从来不会拒绝创造出新财富的便捷方式，而能够创造价值仅此一点，掩盖了太多基于其成本和弊端的讨论空间。</p>
<p>我很欣赏谷歌一直坚持的理念：不作恶（Don’t be evil）。也看得见很多企业开始仿照着创建出自己的信条戒律，这个可以做一点那个不能做。但无论如何，在具体讨论该怎么做之前，我想先仔细思考下什么是恶（evil），哪些是被没有说全的话（the inconvenient truth）。</p>
<p>当除去人为主导的可预测的劣行，我们很少去批判一个媒介工具本身的发明。而科技不是语言，没有可供驳斥的表述与逻辑。“恶”其实也可以是一种倾向，是工具本身隐含着的影响着使用者的倾向。在这里讨论技术的中立性是一个复杂的选题，我借着阅读这本书，也想了解下分析科技发明的社会影响的思路。</p>
<p>互联网，在某种意义上成为了现代人的电视。我们发明新型的硬件，大数据技术来电子化纪录人类行为数据，也相似着曾经带给中世纪人们永恒机会的印刷术。这一切还保留着相似的语境。</p>
<h2 id="第一章_童年的发明">第一章 童年的发明</h2><p>• 童年是一个社会概念。文明的愈加复杂，近几百年才出现，对儿童的早期时间有所保留的需求。成人世界的纷争和利益，以及某些秘密暴露给儿童是被认为不合礼仪的，甚至是不道德的。</p>
<p>如果把道德上成人对儿童的保护需求当做动机，那么现在是什么现象会导致这种需求逐渐消失呢。某种程度上，礼仪（道德）的精致程度是和文明的复杂程度相关的，而文明的初级阶段当对生命的基本物质保障都不存在的时候，是很难承担礼仪（道德）的。那为什么在文明进一步发展的今天，作为一项礼仪（道德）概念之一的童年，会消逝？是其重要性的消逝，还是其作为一个现象的消逝呢？</p>
<p>• 印刷的普及间接促成了童年的分界，成人是拥有阅读能力的人，而儿童是不具备阅读能力的人。<br>因为技术工具元素导致的一个社会概念的产生。如果印刷术代表着文字阶级的在人数上的流行，为什么在当前资讯也就是文字愈加丰富的今天，会导致同样一个社会概念的消逝。</p>
<p>• 尝试模仿分析印刷的这个角度来分析互联网。印刷带来了得以永恒的机会，激发了个人主义。个人主义早已存在。印刷实际上是一种媒介的转变，从口耳相传的暂时性的表达传递，到能够独自体察的实体媒介。这种媒介的特质之一就是允许使用者独自面对。并不是说印刷创造了个人主义，而是印刷使得个人主义成为一种正常的，可以接受的心理条件。</p>
<p>• 童年是一种区分的手段。来区别识字和不识字的人。</p>
<p>• 童年也是中上层阶级想要努力维护的一个概念，以保证不受劳役之苦，这让我想到了高跟鞋流行的原因。</p>
<h2 id="第二章_童年的消逝">第二章 童年的消逝</h2><p>• 与其说是在讨论童年的消逝，其实是在讨论媒介传播对使用者的影响。</p>
<p>• 处处是对互联网的隐喻。当跨越空间传播信息在技术上又困难的时候，新闻往往是有选择的，跟人们的生活密切相关。有了互联网之后，新闻变得没有选择，不可用。</p>
<p>-&gt; 因为童年是一个精心维持的文化过渡环境，这个过程有赖于信息的有序筛选和输入。这一个论证方式可以用在其他的文化环境上，比如学校教育。</p>
<p>• 图像革命。语言是经验的抽象表述，而图像则是经验的具体再现，而且这种表现是不可反驳的 。这是两个不同的话语世界。</p>
<p>• 审美。说到底是一种感情而不是理智。图画要求观画者有审美的反应。而感情，是难以分逻辑和缜密阶级的。童年是因为缜密逻辑的分层所需要做出的区别，而图像世界并不能支持保证童年概念存在所需要的社会和知识的等级制度。［审美是不硬性要求逻辑的］举个例子，法律、宪法是纸张上的法律，不会出现根据一幅图画来判罚。</p>
<p>• 电视会侵犯童年，是因为它无法区分信息使用权。</p>
<p>-&gt; the world is flat的弊端。不存在阶级，去中心化有什么坏处呢？有没有发现在竞争的环境下，终点是成就一个庞大的能够抵达任何终端的垄断组织。在把信息使用权让渡给人的时候，而人还没有能力和意识能够承担起这份礼物的时候，混乱就出现了。在人还不懂得克制与好奇之前就拥有了的自由，只会受成为情欲和审美冲动支配。<br>而本身教育的存在就是一个信息过滤和中心化的媒介。你拥有导师根据他们的经验和社会的俗成见解过滤和形成抵达学生的文化环境。而现在互联网、终端设备的普及将极大地打破很多精心营造的社会环境。<br>-&gt; 信息的不加选择和不分层级却必须保证面向所有观众的一个直接后果是，信息的调性由市场的底部水平所确定。<br>…<br>-&gt; 而我们最终会拒绝分级却更有效率的社交网络的原因，或许是尊严。</p>
<p>［由于电视在同一时间向所有观看的人传递的是同样的信息，因此完全不可能保留任何秘密，童年因此不复存在］</p>
<p>• 社交媒体的偏见，也是其职责之一，是传动信息，而不是收集信息。它要求能够吸引注意力的素材，因此突破刮搜各类生活中的禁忌和盲点，放大情绪和窥视自然成为了最好的随从。</p>
<p>• 羞耻感和秘密，隐秘是相关联的。</p>
<p>我们很多时候能够克制住自己的欲望，暴力，部分是因为羞耻感。因为我们所羞耻的对象是隐秘的，在处在黑暗之下的。而当这种对象被要求维持在白天的常态的时候，随之的羞耻感也会消失。譬如丛林里的文化从来不觉得裸体是任何的失态。而从前的电视，现在的互联网，所主导的正是将一切容易挑逗的，怂恿的，曾经被我们束之高阁，揶揄着不敢公开讨论的内容大白于天下。审美，情感主导的行为容易导致个人主义的泛滥，容易使人狭隘，因为个人的情感不接受反驳而显得足够支撑起行为的逻辑。而个人主义泛滥的地方，羞耻感很难存在，因为一切的从前令人揶揄的理由现在都被当做了个人主义口中的保守和传统。<br>-&gt; 曾经我们仔细押守的暴力，色情，乱伦，以各种形态出现在公共场合的每一个人的语境里，而这些人对这些问题的羞耻感也会随之消失。会不会有利益相关着在黑暗的边缘刺绣？当这些可耻的问题失去了其阴暗的特质，会不会有口齿伶俐的人为了注意力而颠倒黑白，口若悬河？最可怕的是，那些仍旧坚持打击黑暗的勇士，被认为失去了一些道德的力量。</p>
<p>• 未来分阶级的主要原因或许不再是垄断抑或同谋，而是因为存在于扁平化结构里的事实：不是所有人都有能力，能够理解他们所处在的位置和他们手中的权力。但同时引导他们的方式不应当是强制拒绝给予他们改变的机会和手段，能够动态地因材施教将会成为一致的道德诉求。而成就所谓“动态”的背后一个前提则是”接近全面的了解“，如果这种结构需要持续存在，则必然存在着足以敌对人性弱点的绝对智慧的存在，同时也要求人们的绝对顺从。流动性高的阶级结构或许是充满活力的一种方案。</p>
<p>-&gt; 而这也暗示着某种专制控制。无论在专制的世界里我们被给予了多少的“公平”与“自由”，我们最终会拒绝的原因，或许也是尊严。（类似上文的分阶级的社交网络）</p>
<p>• 维护这种秘密在很多时候被称为虚伪。但从善意的角度来看，虚伪也代表着某种理想主义。</p>
<p>• 尼尔波兹曼相信，是电视这种媒介而不是电视里播放的内容，使得童年消逝。电视这种媒介推崇着故事化，戏剧化，而不是观看者的需求。这一点也是很有意思的，科技工具的发明，人们往往提问着怎么样用的一系列问题，我怎样搜素到一些东西，我怎样下载下来。而很少考虑我用这个工具会失去什么？</p>
<p>• 童年消逝的另一个证据是，会有越来越多的儿童经受专业训练出现在成人的职业竞赛里。包括儿童明星，运动员，模特等等。比较好理解的是，因为存在着一套完善的培育体系和教练监督，但是依然存在的问题是：为什么这种做法会渐渐普遍，为什么这样的形象甚至值得鼓励。</p>
<p>-&gt; 传统上有关儿童的独特性的假设正在迅速消亡。除去比赛的乐趣之外混杂了太多无相关却极其压迫的情感，比如名望，金钱，阶级的提升，攀比。于是儿童眼里的游戏也变得成人般的严肃而非赢不可。 他们觉得他们是舞台上最闪耀的一颗，却说不清他们为什么在镜头下除了摆笑和热泪就做不了什么，却说不清为什么必须站在万千宠爱的镁光灯里，又为什么只能笑。</p>
<p>• 童年消逝了，学校也一定会消逝。它们都是精心创造出来，用于过渡到成人世界的概念。证据：越来越多的教育者开始相信，教育是给进入市场做准备的。这意味着诸如历史、文学和艺术的重要性会被不断降低。教育本身的教化和领悟的过程会不断妥协。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Mar.]]></title>
      <url>http://chocoluffy.com/2018/03/28/%E7%A2%8E%E8%AF%AD-2018-Mar/</url>
      <content type="html"><![CDATA[<h2 id="18-3-21">18.3.21</h2><p>张小龙说过 内向的人却一直在做通讯工具，掌握着交流的潜力</p>
<p>很好奇一个政治稳定的社会 像fb这种定点广告会被怎样的滥用</p>
<h2 id="18-3-20">18.3.20</h2><p>现代人流行惦记先人的方式，让我觉得仿佛只有当一个人死了，他才活着。</p>
<h2 id="18-3-18">18.3.18</h2><p>昆德拉很擅长揣摩人们的动机和行为背后的原因。同一个生活场景，不断切换视角。</p>
<blockquote>
<p><strong>原来这就是他笔下的轮回。同一段生活，在不同的生命里。</strong></p>
</blockquote>
<p>托马斯，医生。碾转在情人之间。</p>
<p>特丽莎，摄影师。腋下的书，向上的潜力。逃离母亲的世界，成为独一无二的躯体。一个无可替代的巧合。</p>
<p>离去和回来，谁对谁负责的选择。</p>
<p>弗兰茨，知识分子。卡夫卡：生活在真实之中。隐私生活和现实生活要透明。分开的世界是说不尽的谎言。</p>
<p>萨宾娜，画家。背叛型的人生经历。需要隐私才是自由。</p>
<p><strong>谎言和真实的身份转换。一个人的沉重是另一个人的轻松。</strong></p>
<p>人们在公共式悲剧里收获唯一的成长。</p>
<p>年轻。我们在互相交换动机像交换礼帽。等年纪大了，生命里的每一个动机，每一件物体，每一句话，仿佛都互相不一样了。</p>
<p>重与轻。背叛的自由是轻松，但那是生命不可承受之轻。</p>
<ul>
<li>世界是堆叠在积木上的。后代人继续建造的方式是，越过了深不见底的基层，而在口耳相传里坐着升降机来到了他们现在的位置。或许前人纠结一生的沉重在他们那些观光者看来无非是顺其自然的轻松。</li>
</ul>
<p>他们将以他们的姿态种下往下生长的根。去揣测那些看不见的浩瀚暗格，螺旋的琉璃夹层……</p>
<p>而有谁愿意继承记忆的遗产呢。来抵御生命不可承受之轻。</p>
<p>欲戴皇冠，必承其重。</p>
<h2 id="18-3-16_善意满溢">18.3.16 善意满溢</h2><ul>
<li><p>一阵风把广告牌吹倒了 我摆了回去。</p>
</li>
<li><p>公交车上老奶奶被阳光晃眼睛 我走过去挡着。没被她发现。</p>
</li>
<li><p>在咖啡馆看书最讨厌的事就是遇到熟人了。温柔是亲近而不打扰。</p>
</li>
</ul>
<h2 id="18-3-11">18.3.11</h2><ul>
<li><p>好多畅销书的封面，都印刷着一样的词语，我在讲“孤独，生命…”，我生怕你错过我讲的孤独和生命。如果以后自己会写，封面上一定要干干净净，不要喧嚣。</p>
</li>
<li><p>生命里很多事情你会看得越来越淡。而又有哪些，你会看得越来越浓。</p>
</li>
<li><p>特别是读诗，哪里是在读诗，是在读诗在心中引起的波澜。是在读自己的想象和回忆。想起来之前好像是毛姆写的一句话，就像一种光学仪器，你只能读到依然存在在你心中的东西。</p>
</li>
<li><p>偏爱美的人，哪有什么抵抗，不过是游走在另一番景色中。</p>
</li>
</ul>
<h2 id="18-3-10">18.3.10</h2><p>光栖息在水上，像水的萤火。</p>
<p>少数族群的压力 而非政府的指令</p>
<p>直接抵达的结论是没有意义的</p>
<h2 id="18-3-8_新入的书">18.3.8  新入的书</h2><p>☑️ 华氏451度<br>美丽新世界<br>玻璃球游戏<br>火星编年史<br>忧郁的热带</p>
<h2 id="18-3-7_《华氏451》笔记">18.3.7 《华氏451》笔记</h2><p>轰炸机有什么象征意义吗。很多次，在危险的想法出现的时候，有提及关于轰炸机的描写，让人颤抖和震颤之类的。或者说战争爆发的象征意义。</p>
<p><strong>一个很讽刺的点，队长是读过书的，是拥有对历史的思考能力的，也扮演着想读者提供历史空白的叙述者。他为何成为了他能力的反面。</strong></p>
<p>费伯。胆小的无辜者。历史学家。很精彩的一点是在主角在那天下午坐在家里看书时偶然翻到的一句话“友谊一点点溢满，还有善意”，其实是预示了后面和费伯老先生的情谊。</p>
<p>小女孩。抬头饮雨。蒲公英沾染下巴。</p>
<p>主角消防员。黑暗里踢到黑色安眠药瓶子的那一刻。公交车上大声朗读圣经的那一刻。</p>
<p>半吊子的挣扎。火可以烧毁一切问题。 </p>
<p>懂得蒲公英揉搓下巴的涵义的女孩。</p>
<p>那个瞬间好美：主角在铁道上走着，他愕然发现自己突然间如此肯定一件他无法证明的事实。曾经，许久之前，克拉莉丝曾经走过这儿。此刻他正走过的地方。</p>
<h2 id="18-3-6">18.3.6</h2><p>路飞，理解和体谅另一个个体。对对手展现一种超越对手的尊重。承認失敗 , 把希望寄於贏家 , 是日本武士的文化之一。</p>
<h2 id="18-3-3">18.3.3</h2><p><strong>读书是扫雪。</strong><br>华氏451。书的隐喻。共情。人彼此之间的联系。<br>美丽新世界<br>阶级固化，是由革命推动的。在冷兵器时代。<br>思想和美学。限于自己的想象还是审美。</p>
<p>“无法估量的繁盛”</p>
<p>喜欢散文多于小说 因为没有的情节可以怎么和自己对话。</p>
<p>像不安之书一样更新自己的日记！数字作序！</p>
<p>喜欢迎着光走，虽然刺眼到睁不开眼，却知道身边一遍金黄</p>
<ul>
<li><p>当代精神面临的最大的问题：人云亦云。你越来越难知道你自己真正需要什么。一个很好的训练：在学习一个东西的时候，列一个list记录下你所有的疑问，比如：区块链必然要和代币结合在一起吗？之类的问题然后集中搜索解答这些问题。</p>
</li>
<li><p>下一座城市，应该会在里面选吧。</p>
</li>
<li><p>一年之后的你，会在哪里，又见证了哪些盛大而无常的仪式。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[轻与重]]></title>
      <url>http://chocoluffy.com/2018/03/19/%E8%BD%BB%E4%B8%8E%E9%87%8D/</url>
      <content type="html"><![CDATA[<p>世界是堆叠在积木上的。</p>
<a id="more"></a>
<p>后代人继续建造的方式是，越过了深不见底的基层，而在口耳相传里坐着升降机来到了他们现在的位置。或许前人纠结一生的沉重在他们那些观光者看来无非是顺其自然的轻松。</p>
<p>他们将以他们的姿态种下往下生长的根。去揣测那些看不见的浩瀚暗格，螺旋的琉璃夹层……</p>
<p>而有谁愿意继承记忆的遗产呢。来抵御生命不可承受之轻。</p>
<p>欲戴皇冠，必承其重。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《华氏451》文摘]]></title>
      <url>http://chocoluffy.com/2018/03/16/%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E6%96%87%E6%91%98/</url>
      <content type="html"><![CDATA[<p>书名很有意思，华氏451，是纸张燃烧的温度。小说主题和乌托邦三部曲有相似之处，当人们逐渐失去了感触真实生活的敏感，失去了闲暇思考的时间，消防员的职责变为燃尽书籍来减轻人们的忧郁和恐惧。书的隐喻是什么，焚书的意义和我们熟识的历史情景有什么不同，而仅仅是消费主义最终又将带领我们走向怎样的结局……</p>
<a id="more"></a>
<p>始终觉得，科幻的作品里有着不可剥离的现实，天马行空的想象只是构建冲突，放大冲突的一种实现手段。文字里身着火蜥蜴消防服喷溅出炽热火舌的人，在真实世界里或许乔装栖身在另一个人群，手里拿着火柴在黑暗里摩拳擦掌。也总会有那么一群人，无谓时代，在消费主义窒息的麻木感中恍然醒来，想起雨的冰凉，蒲公英轻拭下巴的涵义，会想要记住所有目力所及的美好哪怕回忆如沙漏。</p>
<p>这或许就是布拉德伯里想写的故事。不同于《1984》里穿插大片政治论述的严谨有力，不同于许多乌托邦构想里阴郁森冷的气氛，作者用散文诗化的文字，记录一个人挣扎醒悟的温暖。每个人都有着悲剧轮回的身世，但总有那么几个偶然的时刻，我们得以回望身后火热的地狱。而希望是，就像当我终于赤脚走在冰冷的通往光明的铁轨上，我突然那么的相信，你也走过一样的路。</p>
<p>想起莎拉贝克韦尔在《存在主义咖啡馆》里最后一章的描述，那是“无法估量的繁盛”。</p>
<p>阅读过程一些有趣的细节：</p>
<ul>
<li><p>轰炸机有什么象征意义吗。很多次，在危险的想法出现的时候，有提及关于轰炸机的描写，让人颤抖和震颤之类的。或者说战争爆发的象征意义。</p>
</li>
<li><p>一个很讽刺的点，队长是读过书的，是拥有对历史的思考能力的，也扮演着想读者提供历史空白的叙述者。他为何成为了他能力的反面。</p>
</li>
<li><p>费伯。胆小的无辜者。历史学家。很精彩的一点是在主角在那天下午坐在家里看书时偶然翻到的一句话“友谊一点点溢满，还有善意”，其实是预示了后面和费伯老先生的情谊。</p>
</li>
<li><p>小女孩。抬头饮雨。蒲公英沾染下巴。</p>
</li>
<li><p>主角消防员。黑暗里踢到黑色安眠药瓶子的那一刻。公交车上大声朗读圣经的那一刻。</p>
</li>
<li><p>半吊子的挣扎。火可以烧毁一切问题。 </p>
</li>
<li><p>懂得蒲公英揉搓下巴的涵义的女孩。</p>
</li>
<li><p>那个瞬间好美：主角在铁道上走着，他愕然发现自己突然间如此肯定一件他无法证明的事实。曾经，许久之前，克拉莉丝曾经走过这儿。此刻他正走过的地方。</p>
</li>
</ul>
<p>读后感全文链接：『 <a href="http://chocoluffy.com/2018/03/16/%E6%97%A0%E6%B3%95%E4%BC%B0%E9%87%8F%E7%9A%84%E7%B9%81%E7%9B%9B-%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/">无法估量的繁盛</a> 』，以下为阅读文摘。</p>
<hr>
<p>如果他们给了你画好线的纸，不要按着线写。 ——胡安·拉蒙·希门尼斯</p>
<h2 id="第一章_炉灶与火蜥蜴">第一章 炉灶与火蜥蜴</h2><p>焚烧是一种快感。看着东西被吞噬、烧焦、变样，是一种特殊的快感。</p>
<p>“有时候我觉得，开车的人不知道什么是草、什么是花，因为他们从来没有慢慢地瞧过它们，”她说。“如果你让驾驶人看一团模糊的绿色东西，他会说，哦，对，那是草！给他看一团粉红色的模糊东西，那是玫瑰花园！白色的模糊东西是房子。褐色的是牛。有次我舅舅在公路上慢慢开车，时速四十英里，结果他们把他关了两天。这岂不好笑又可悲吗？”</p>
<p>他不快乐。他跟自己说。他承认这是实情。他拿快乐当作面具戴着，而那女孩却夺下面具奔过草坪跑开了，而且自己没法子敲她家的门，索回面具。</p>
<p>他感到群星正被黑色喷射机的巨响震得粉碎，明早大地将覆盖着星星的陨尘，就像一种奇异的雪。这就是他这么站在黑暗中发着抖，任双唇不停地蠕动、蠕动之际，脑中的白痴念头。</p>
<p>而其他房舍俱孤僻地隐藏在黑暗中，蒙塔格听到人声聊着、聊着、聊着，给予、编织、再编织着他们令人迷醉的网。</p>
<p>“有的时候两遍。”她望着她手中的一样东西。“你手里拿着什么？”他说。“我想大概是今年的最后一朵蒲公英。没想到这个时节还会在草坪上找到一朵。你有没有听说过拿它揉搓下巴的传说？瞧。”她笑着拿那朵花揉搓自己的下巴。“怎么说？” <strong>“如果它的颜色搓掉了，那就表示我在恋爱。有没有？”</strong></p>
<p>“他们想知道我怎么打发时间。我告诉他们，有时候我就那么坐着思考。可是我不告诉他们思考些什么，我让他们瞎猜。有时候，我告诉他们，我喜欢仰起头，就像这样，让雨水落在嘴里。它的味道就像酒。你有没有试过？”</p>
<p>一半挺立，两半彼此倾轧。“你还是赶紧去就诊吧。”他说。她跑开了，留下他站在雨中。过了许久，他才移动。 <strong>而后，走在雨中，他慢吞吞仰起头，有那么一下子，张开他的嘴……</strong></p>
<p>“哦，学校并不想念我，”她说，“他们说我是反社会者。我不合群。真奇怪。我其实很喜欢与人交往。这要看各人对交往两个字所下的定义了，是不？我觉得交往的意思就是跟你聊这些事。”她摇晃着一些从前院树上掉落的栗子，嘎嘎作响。“或是谈谈这世界有多奇怪。群处是很好，但是我不认为把一群人找到一块儿却不让他们交谈就是交往，你觉得呢？一小时电视课，一小时篮球或棒球或跑步，再一个小时抄写历史或是绘画，然后又上体育课，可是你知道吗，我们从来不发问，起码多数学生不发问；他们干脆把答案放映给你看，我们就坐在那儿再听上四个小时电影老师的讲课。我觉得这根本不是交往。这是一大堆漏勺，然后把大量的水从勺口倒入，从底部流出，而他们告诉我们这是酒，可它明明不是酒。一天下来，他们把我们弄得精疲力竭，只能上床睡觉，或是去游乐园欺负别人，拿着大网球到砸窗区砸碎玻璃，到砸车区砸烂汽车；或者开车上街狂飙，试试看能够开得多贴近灯柱，逞强好勇。我想我就跟他们说的一样，没错。我没有一个朋友。这应该证明我是不正常的。可是我认识的人个个不是狂嘶乱舞，就是互殴。你有没有注意到人们如今是怎么彼此相残的？”</p>
<p>有时候我在地铁上偷听别人谈话，或是在冷饮店偷听，结果你知道什么吗？”“什么？”“人们什么也不谈。”“哦，一定会谈吧！” <strong>“不，什么也不谈。他们多半举出许多汽车、衣服或游泳池的名字，然后说真棒！但是他们说的话全都一模一样，众口一致。还有在室内，他们多半时间打开笑话机，那些笑话多数一模一样，或者扭亮音乐墙，五彩缤纷的图案上下变幻，但它只是些颜色，而且全是抽象的。还有在博物馆，你有没有去过？全是抽象的展示品。如今只有这些东西了。我舅舅说以前不是这样。古早以前，绘画有时候会说故事，或甚至画人。”</strong></p>
<p>我的意思是，”他说，“从前，房屋还不是完全防火之前……”突然间，似乎有一个比他年轻许多的声音在替他说话。他张开嘴，但说话的却是克拉莉丝·麦克莱伦：“消防员救火，而不是放火的，不是吗？”</p>
<p>书籍轰击他的肩膀、胳膊、他上仰的脸孔。一本书，几乎是驯从地，像一只白鸽扑着双翼，停栖在他手中。摇曳的幽暗光线中，一张书页摊开，就像雪白的羽毛，字句精细地印在上面。匆忙和狂热中，蒙塔格只有瞬间空当看了一行字，但是那句话却在他脑中灼烧了一分钟，就仿佛被火烫的钢烙印在他的脑海里。“时间在午后的阳光下睡着了。”他扔下那本书。立刻，另一本书掉入他怀中。</p>
<p>“今天，蒙上帝的恩宠，我们将在英格兰点燃这样一支蜡烛，一支我相信永不会被吹熄的蜡烛。”比提说。斯通曼望向队长，蒙塔格亦然，骇愕。比提揉搓他的下巴。“这段话是一个姓拉提摩的人对一个名叫尼古拉斯·里德利的人说的。那是在一五五五年十月十六日，他们因异端邪说的罪名，在牛津即将被活活烧死。”[ 4]</p>
<p>他还记得当时自己心想，要是她死了，他肯定不会哭。因为死的是一个不认识的陌生人，一个报纸上的人物， <strong>然而他居然哭了起来，这一点突然显得那么的荒谬，他不是为死而哭，而是因为想到自己面对死亡居然不会哭</strong> ，一个愚昧空虚的男人陪着一个愚昧空虚的女人，而那条饥渴的蛇正使她更加空虚。</p>
<p>比提细瞧他吐出的烟雾图像。“想象一下。十九世纪的人，骑马，遛狗，驾马车，一切是慢动作。接着，到了二十世纪，摄影机的速度加快。书的内容缩水了，浓缩本，简明版。文少图多的小报。所有东西都缩简得只剩下插科打诨，仓促结局。”“仓促结局。”米尔德里德点头应道。“经典作品删简，好配合十五分钟的收音机节目，然后再删简，好填塞两分钟的书评节目，到最后只剩下十来行的词典式摘要。当然，我言过其实了。词典是参考用的。但是许多人对《哈姆雷特》的认识——你必定知道这个书名，蒙塔格；你大概只是略有耳闻，蒙塔格太太——如我所说，他们对《哈姆雷特》的认识只是某一本书中的一页简介，这本书上称：这下子你终于可以读到所有经典作品；赶上你的邻居了。你明白吧？从幼儿园进步到大学程度，然后又回到幼儿园；这就是过去这起码五世纪以来的知识模式。”</p>
<p>“ <strong>拉链取代了纽扣</strong> ，人们清早更衣的时候，就缺少那么一点儿思考的时间，一段哲思的时刻，然而也是忧郁的时刻。”米尔德里德说，“起来一下。”“走开。”蒙塔格说。“ <strong>生命成了一场洋相</strong> ，蒙塔格；一切都是砰，哈，噢！”</p>
<p>市场越大，蒙塔格，要处理的争议就越少，记住这一点！所有少数的少数的少数族群各有各的问题要解决。满脑子邪恶思想的作家们，关上打字机！他们真的这么做了。杂志成了一碗香草杂烩，书成了洗碗机——这是那些自以为是的书评家们说的。难怪书卖不出去了，书评家们说。但是大众知道自己要的是什么，他们欣然随波逐流，让漫画书存活下去。当然还有立体色情杂志。就是这么回事，蒙塔格。 <strong>这并不是政府规定的。没有所谓的正式公告、宣布，也没什么检查制度，没有！科技，大量剥削，还有少数族群的压力，才是始作俑者。</strong> 如今，多亏这些东西，人可以时时刻刻保持快快乐乐，可以看漫画书，也可以看商业期刊。”</p>
<p>“啊，”烟斗的轻烟中，贝蒂倾身向前。“还有什么比这更容易解释又必然的事？ <strong>学校教出越来越多的赛跑选手、跳高选手、飙车手、补锅匠、投机取巧者和游泳选手，而不是检察官、评论家、万事通和创造者，那么，‘知识分子’这个名词当然就必然成了骂人的字眼。人总是害怕不熟悉的事物。你想必还记得当年你们班上特别‘聪明’的同学，背书、答问题多半由他包办，其他同学就像一尊尊笨神像似的呆坐着，暗恨他。下了课，你们不是专找这个聪明同学碴儿，揍他，折磨他吗？当然是，大家都得一模一样才行。人人并不是生而自由平等，并不像宪法上说的那样，人人是被造成平等的。人人都是彼此的镜子；这样才会皆大欢喜，因为这样一来就没有见高山而渺小的感觉，无从怯懦、无从评断自我了。所以！隔壁人家有书，就等于有一把装满子弹的枪。烧了它。拿走弹药，瓦解人的智慧。天知道谁会是满腹经纶之人的目标？我？我一刻也不会容忍这种人。所以，等到房屋终于全部防火之后（你昨晚的推测是对的），全世界都不再需要消防员做他们原先做的工作了。他们换了新的任务，保护我们的心灵平静，免除我们对于身为劣等人的可理解而合理的恐惧。他们成了官方检察员、法官和执行者。这就是你，蒙塔格，也就是我。</strong> ”</p>
<p>“有色人种不喜欢《小黑桑波的故事》[ 7]，烧了它。白人对《汤姆叔叔的小屋》没好感，有人写了一本有关香烟与肺癌的书，吸烟的人哭了，烧了它。安宁，蒙塔格。平和，蒙塔格。到外头去争斗，最好在焚化炉里头争斗。葬礼是不快乐的，异端的仪式？除掉它。人死了才五分钟，就给送往‘大烟囱’焚化场，全国的直升机都做这项服务。人死后十分钟就成了一堆焦灰。我们别絮叨个人的成就，别理会它，烧掉一切。火是光明的，火是洁净的。”</p>
<p>“幸好，像她这样的异类并不常见。我们懂得如何在他们萌芽之初就钳掉它。盖房子不能没有钉子和木板。要是你不希望房子盖起来，那就藏起钉子和木板。要是你不希望某个人在政治上有所不满，那就别让他看见问题的两面，穷操心；只让他看见单面。最好是一面也别给他瞧见，让他忘记有战争这玩意。就算政府没效率，机构臃肿，疯狂课税，但宁可如此也别让人们为它操心。安心点，蒙塔格。 <strong>让人们比赛谁记得最多流行歌曲的歌词，或是州首府的名字，或是衣阿华州去年出产了多少玉米。给他们填满不易燃的信息，拿‘事实’喂饱他们，让他们觉得胃胀，但绝对是信息专家。这么一来，他们就会觉得自己在思考，明明停滞着却有一种动感，他们就会快乐，因为这类事实不会变化。别给他们哲学、社会学这类狡猾易变的玩意，往那方面思考就会忧郁。</strong></p>
<p>这年头，能把电视墙拆了又装合的人——多数人都有这本事——要比那些试图分析、探讨、抗衡宇宙的人快乐，想要探讨、抗衡宇宙，必会让人自觉兽性而寂寞。我知道，我试过；去它的。所以啊，尽管上夜总会，参加派对，看杂耍变魔术，鼓起你的莽勇，玩喷射汽车、直升机，纵情性欲和海洛因，只要能激发直觉反射的东西都行。要是戏不好看，电影空洞无物，那就用电子琴大声刺激我。就算它其实只是对振动的一种触觉反应，我也会认为自己是对那出戏有所反应。我不在乎。我就喜欢具体的娱乐。”</p>
<p>对街不远处，矗立着别的屋子和它们平扁单调的正立面。克拉莉丝有天下午是怎么说的来着？“没有前廊。我舅舅说，以前住屋都有前廊。到了晚上，人们有时候坐在廊台上，想聊天就聊天，摇着摇椅，不想说话就不说。有时候他们就这么坐在前廊上，想事情，思索问题。我舅舅说，建筑师说拆掉前廊是因为前廊不美观。但是我舅舅说，这种解说只是为自圆其说；真正潜藏的原因，可能是他们不希望人们那样坐在廊上，什么也不做，只摇着椅子，聊天；这是不正确的社交生活。人们话说得太多，而且有闲暇思考，所以他们就拆掉前廊，还有花园。如今没有几座花园可以闲坐了。还有，看看现在的家具，也没有摇椅了，摇椅太舒适。让人们打起劲儿来穷忙。我舅舅说……我舅舅……还有……我舅舅……”她的声音渐渐消失。</p>
<h2 id="第二章_筛子与沙子">第二章 筛子与沙子</h2><p>他们看了一下午的书，外头，十一月的寒雨自天际绵绵落在寂静的屋顶上。他俩坐在玄关内，因为电视间里少了墙上橘红艳黄的彩纸和烟火，没有穿着金色丝网的女人和一身黑绒西装的男人从银色高帽里掏出一百磅重的兔子，显得空荡而灰暗。</p>
<p><strong>“我们无法确切指出友谊形成的时间。正如注水入瓶，一滴一滴注入，最后必有一滴会使它满溢；同样的，一连串的善意，最后总有那么一次会使心灵满溢。”</strong></p>
<p>他双手停在膝盖上，麻木无用。“我不谈事情，先生，”费伯说，“我谈事情的意义。我坐在这儿，知道自己活着。”</p>
<p>他可以听到比提的声音。“坐下，蒙塔格。看着。它纤弱得就像花瓣似的，点燃第一页，点燃第二页。每一页都变成一只黑蝴蝶。美吧，嗯？从第二页再点燃第三页，一页一页，一章一章，把那些字句的所有无聊的意涵，所有虚假的希望，所有二手观念和老掉牙的哲学，烧成一连串的灰烟。”比提就那么坐着，微微冒着汗，地板上散落着一堆堆死于一场风暴中的焦黑飞蛾。</p>
<p>他在地铁上。我没有知觉，他心想。我脸上，我体内的麻木究竟是几时开始的？打从我在黑暗中踢到药瓶子，就像踢中一块深埋的矿脉似的，那个晚上。</p>
<p>笔记 - 位置 870<br>就像一切故事的开始总有一个声音，那是踢到黑色瓶子的那个。</p>
<p>童年时期，一个亮蓝炙热的夏日里，他曾经坐在海边一座灰黄的沙丘上，拼命想把一个筛子装满沙子，因为有个刻薄的表哥说：“把这筛子装满，你就可以得到一毛钱！”结果他装得越快，沙子也热烫烫的唰唰漏得越快。他的手累了，而沙子烫人，筛子是空的。坐在七月中的骄阳下，他感到泪水无声淌落他的面颊。此刻，真空地铁载着他穿越城市死寂的地窖，颠簸着，他忆起了那只筛子传达的可怕逻辑，他往下望，看见自己公然拿着那本《圣经》。地铁火车上坐着一些人，他突然兴起一个愚蠢的念头，要是快速读完整本的《圣经》，或许有部分沙子会留存在筛子里。但是他读着，字句却漏过筛孔，他心想，再过几个钟头就得面对比提，我得把书交给他，所以我绝不能遗漏任何一个词句，必须牢记每一行字。要凭意志力做到。</p>
<p>费伯审视蒙塔格下巴冒着青髭的瘦长脸孔。“你怎么会清醒过来的？是什么原因让你扔下手里的火炬？”“我也不知道。我们拥有使我们快乐的一切，可我们并不快乐。少了什么东西。我环目四顾，而唯一确知少了的东西，是这十来年间我所烧掉的书。所以我想书或许有助于解决问题。”“你是个无可救药的浪漫主义者，”费伯说，“要不是事情严肃，否则你的想法真令人发噱。你需要的并不是书，而是书上曾经写过的一些东西。也是如今的‘电视家人’原本可以传达的东西。那些细枝末节和知觉意识原本可以透过收音机和电视表现出来，但是却没有。不，不， <strong>你要找的东西并不是书！你要找的东西在旧唱片、旧电影、老朋友身上才找得到；要在大自然和自己内心寻找它。</strong> <strong>书只是储存许多我们生怕自己会忘却的东西的一种容器。</strong> 书本身毫不神奇，神奇的是书上说的东西，是它们如何将宇宙的一鳞半爪缝缀成一件衣裳。当然你不可能知道这些，我说这些你当然还无法理解。你的直觉是对的，这一点才重要。我们缺少了三样东西。</p>
<p>总之，这是我的定义。 <strong>清晰的细节。崭新的细节。上等的作家经常触探生命，中等资质的作家轻描淡写它，等而下之的则是强暴它之后，任它招蚊惹蝇。</strong></p>
<p>“现在你明白为什么书遭人憎恨畏惧了吧？它们呈现出生命真相的毛孔。耽逸恶劳的人只要看蜡制的圆脸，没有毛孔，没有毛发，没有表情。我们生存的这个时代是花朵赖花朵维生，而不是靠丰沛的雨水和黑色的沃土生长。就算是烟火，尽管美丽，也来自土壤中的化学物。然而，不知怎的，我们却以为自己可以靠花朵和烟火来成长，无需完成真实的轮回。你知道赫拉克勒斯和安泰俄斯的神话吗？就是那个巨大的摔跤手安泰俄斯，只要他的脚牢牢踩在地上，他就力大无穷。可是等他被赫拉克勒斯举到半空中，双脚离地，他就轻而易举被消灭了。如果这个神话对于今天，这个城市，这个时代的我们不具任何启示，那么我真要疯了。喔，这就是我所说我们需要的第一样东西。质，信息的肌理。”</p>
<p>“那第二样呢？”“闲暇。”“哦，可我们有的是空暇。”“空暇，没错。可是思考的时间呢？你要不是以时速一百英里飙车，快得让人只想得到危险，无法思索其他，就是在玩什么游戏或是坐在房间里，无法跟四面电视墙争论。为什么？因为电视是‘真实的’。它是眼前的，它有维度。它告诉你要想些什么，而且强行灌输。它一定是对的。它看起来对极了。 <strong>它催迫你朝它的结论去思考，你的脑子根本无暇反驳：‘胡扯八道！’”</strong></p>
<p>第三样： <strong>依照前两样的互动所获得的知识来行为的权利。</strong></p>
<p>蒙塔格，回家去吧。睡觉。何苦浪费你残余的时光在笼子里奔窜，否认自己是只松鼠？”</p>
<p>你明白吧？那情形多么像一座美丽的冰雕，在阳光下融化。</p>
<p>老头儿点头。“ <strong>不事建设的人必定破坏</strong> 。这就跟历史和少年犯一样，自古皆然。”</p>
<p>“这是，”隔着城市，自远远的另一端传来细微的翻页声。“《约伯记》。”</p>
<p>蒙塔格一声不吭，就那么兀立望着这几个女人的脸孔，就像童年有次他走进一座陌生的教堂，望着教堂内圣徒们的面孔。那些个搪瓷雕像的脸孔对他而言毫无意义，不过他跟他们说话， <strong>而且在那间教堂里站了好久，想要信仰那个宗教，想知道那是什么宗教，想尽量把教堂内呛鼻的香烛和特殊的尘灰吸入肺部，进入他的血液，好让自己觉得被那些有着瓷眼珠、血红色嘴唇的各色各样男男女女所代表的涵意感动。但是没有，什么感觉也没有；那就像是闲逛一家商店，而他的钱币在那儿是陌生的，派不上用场，他的热情是冷漠的，即使他触摸那木材、灰泥和黏土时也一样。</strong></p>
<p>信心之海曾经，也是盈满的，环绕大地之岸像一条亮丽腰带的皱褶，卷起。而如今只听得它忧郁、悠长、退却的涛声，随着夜风的气息，退向无垠的苍凉边际，和世界赤裸的屋宇。椅子在三个女人的身体下吱呀作响。蒙塔格把诗念完。啊，爱，让我们真诚相待！因为这世界，看似一块梦土，横陈眼前，这般多样，这般美丽，这般新奇，而其实，既无喜悦，亦无爱或光明，没有确信，祥和或救助，可治疗痛苦；我们俨如置身一片黑暗平原，处处挣扎和奔逃的凄惶惊恐，而无知的军队夤夜遭遇。</p>
<p>房门砰的甩上，屋子里空荡无人。蒙塔格独个儿兀立在冬寒中，只有颜色如脏污的雪的电视墙陪着他。</p>
<p>进城的路上，他因为犯下了严重错误感到孤单无靠，觉得需要那夜里熟悉而温文的说话声所带来的陌生的温暖和善意。</p>
<p>“蒙塔格，我们这些窝在家里，害怕、照料一身弱不禁风的老骨头的老头子，无权批评，然而你差点儿一开始就搞砸了事情。要小心！我在你身边，记住这一点。我了解那是怎么发生的。我必须承认你盲目的发怒鼓舞了我。噢，我觉得自己好年轻！不过，现在——我要你觉得自己苍老，我希望我的怯懦今晚能感染你一些。往后这几个钟头，等你见到比提队长之后，我要你对他小心翼翼，让我替你听他说什么，让我来感觉状况。生存是我们的饭票，别去想那些个可怜愚昧的女人……”</p>
<p>要是你掩饰自己的无知，没有人会修理你，你永远学不到教训。</p>
<p><strong>魔鬼也能引《圣经》为己用。</strong></p>
<p>“哦，你在梦里吓傻啦！”比提说，“因为我是运用你依仗的那些书来反驳你，每一招，每一句！书才真是叛徒！你以为它在支持你，结果它却背叛你。旁人也能引用它，而你呢，迷失在旷野中，迷失在名词、动词和形容词的纠结中。梦境结束时，我坐着‘火蜥蜴’抵达，说：‘跟我走吧？’你坐上车，我们在愉快的沉默中返回消防队，一切归于平静。”比提放开蒙塔格的手腕，任那只手颓然无力落在桌面上。“最后一切圆满无恙。”</p>
<h2 id="第三章_烈焰炽亮">第三章 烈焰炽亮</h2><p>科学家给我们一堆官样名词，什么摩擦，什么分子。可他们其实并不知道，它之所以美丽，是因为它销毁责任和后果。问题太累赘，那就扔进火炉。如今，蒙塔格，你成了累赘。火会把你从我的肩头卸下，干净利落，又稳靠；不会留下任何烂疮。它是抗生素，是美学的，是实际的。”</p>
<p>而照旧，焚烧的感觉是痛快的，他感到自己进入火中，随着火焰掠夺，撕扯，裂成两半，摆脱那愚蠢的问题。假如根本没有解答，那，这下子也没有问题了。</p>
<p>叫嚷。他走到后院和巷弄中。比提，他心想，这下子你不是问题了。你总是说，别面对问题，烧了它。唔，此刻我两样都做到了。别了，队长。</p>
<p>他想把一切拼回原样，恢复数天前的正常生活模式，回到筛子和沙子、丹汉牙膏、飞蛾呢喃、火星、警报和任务之前的生活，短短数日之间发生了太多事件，就算以一辈子而言，也太多了。</p>
<p>大马路干干净净，就像在无名的受害者和无名的杀人者出场之前两分钟的竞技场。辽阔的混凝土河道上方的空气因蒙塔格一个人的体热而颤悸；</p>
<p>蒙塔格在黑暗中移动。前方，他可以瞧见直升机飘落、飘落，就像即将来临的漫漫寒冬的一片片初雪……</p>
<p>只有冰冷的河水和蒙塔格在漂流，漂离城市、光亮和追捕，漂离一切。</p>
<p>上方是一座古老的风车，霍霍转动有如逝水年华的声音。</p>
<p>但她的脸蛋就像如今已属于久远、久远的过去的那个女孩，那个了解四季变换而且从未被萤火虫灼烧过的女孩，那个懂得蒲公英揉搓下巴的涵意的女孩。</p>
<p>粉红色的晨曦中，他小心翼翼跨下楼梯，全神留意着他所害怕的世界，然后站在那小小的奇迹前，久久终于弯腰触碰它。</p>
<p>此刻他想要的只有这个。某些征兆，显示出这无限的世界肯接纳他，肯给予他所需要的长时间去思索一切必须思考的事物。</p>
<p><strong>他走在铁道上。走着，走着，他愕然发现自己突然间如此肯定一件他无法证明的事实。曾经，许久以前，克拉莉丝曾经走过这儿，此刻他正走过的地方。</strong></p>
<p>一种静谧凝聚在火的周围，静谧写在那些人的脸上，还有时间，充裕的时间可坐在这生锈的铁道旁，林木下，用眼睛观望，思索这世界， <strong>仿佛世界就系在篝火的中央，是这些人正在铸造的一块钢铁。</strong> 迥异的不仅是那团火，还有那静谧。蒙塔格挨向这关注全世界的特殊的静谧。</p>
<p>人声无所不谈，无所不能谈，他知道，从人声里的抑扬顿挫，它的动静，还有不断颤动的好奇和惊叹，他知道。</p>
<p>“他们在装模作样。你在河边就甩脱了他们，他们不能承认。他们知道能留住观众的时间只有那么长，节目必须有个干脆利落的收场，要快！要是他们着手搜索整条河，也许得花上一整夜的工夫。所以他们正在找个替罪羔羊，让事情有个精彩的结局。注意看，他们会在五分钟内捕获蒙塔格。”</p>
<p>“今晚就有几千人在流浪，露宿废弃的铁道旁， <strong>外表是流浪汉，内在是图书馆。</strong> 起初这并不是有计划的。每个人都有一本他想记住的书，他就记住了。而后，在二十年左右的流浪生涯中，我们彼此相遇，才渐渐建立了一个松散的网络，设定了一项计划。我们必须灌输给自己最重要的一点就是，我们并不重要，千万不能做个腐儒；我们不可以自觉优于世上任何人。我们只不过是蒙尘的书本封套，除此而外没什么了不起。</p>
<p>人类绝不会消沉厌弃到放弃从头来过的地步，因为他非常明白这样做是重要的，值得的。”</p>
<p>蒙塔格极力想看清楚这些人的脸孔，他记忆中火光下的一张张布满皱纹、疲惫的脸庞。他是在寻找一线光明、一股决心、一种战胜那似乎并不存在的明天的得意。或许他原本预期他们的脸孔灼灼闪烁着他们所携带的知识，散发出如灯笼般的内在光辉。但是所有的光辉均来自营火，而这些人似乎跟普通人没有两样，就像是跑完了一段长跑，经过漫长的寻觅，见过美好的事物被毁，到如今垂垂老矣，聚在一起等待曲终人散，灯枯油尽。 <strong>他们并不肯定自己脑中携带的东西会使未来每一个日出散发出较纯净的光辉，他们毫无把握，除了确知那些书贮存在他们平静的眼眸内，那些书完好无缺地等待着，等待来年可能会出现的那些指头或干净或脏污的顾客。</strong></p>
<p>“听我说，”格兰杰说，拉着他的胳膊与他并肩而行，一面拨开树丛让他过去。“小时候我爷爷就去世了，他是个雕刻师傅。他非常仁厚，非常博爱，他帮忙清扫我们镇上的贫民窟，还做玩具给我们，他一辈子做了数不清的事，他的手从没停歇过。 <strong>他去世后，我突然明白自己根本不是为他而哭，而是为他做过的那一切而哭。</strong> 我哭，因为他再也不会做那些事了，他再也不会雕刻木头，再不会帮我们在后院养鸽子，或是像他原来那样拉小提琴、说笑话给我们听了。他是我们的一部分，他死了，一切动作也死了，而没有人像他那样做那些动作。他是个个体，是个重要的人，我始终忘不了他的死。 <strong>我常想，因为他死了，多少美妙的雕刻永远不会诞生了。这世界少了多少笑话，多少自家养的鸽子不再被他的手抚摸。他塑造了世界，他贡献了世界。他去世的那一夜，世界损失了千万个仁善的动作。”</strong></p>
<h2 id="后记">后记</h2><p>你的手触碰过某样东西，那么死后你的灵魂就有地方可去，人们看见你栽种的那棵树或那盆花，而你就在那儿。做什么事并不重要， <strong>他说，只要在你的手拿开之后，你触碰过的东西从原样变成了一件像你的东西。</strong> 一个剪草工和一个真正的园丁之间的差异就在于触碰，他说，剪草工可以说根本不存在；园丁却会留存一辈子。”</p>
<p>她紧挨着电视墙，好似这样渴切地盯着就会找出她无眠不安的秘密。米尔德里德急切、紧张地凑近，仿佛要投入、坠落那无垠的色彩中，沉溺在它鲜丽的快乐里。</p>
<p>将来有一天，等它在我们心中尘封一段长时间之后，它会从我们的手，我们的口中传递出去。其中有许多会是错的，但也会有刚好足够的部分是对的。我们今天就开始上路，观看这世界和它的言谈举止，观看它的真面貌。 <strong>如今我要饱览一切。而尽管它进入我脑中时无一属于我，但过一阵子它会在我脑中凑拢，就会成为我。</strong> 看看外面的世界，我的天，我的天，看看外面，我的外面，我的脸孔外面的世界，而唯一能真正触摸它的法子，就是把它搁在它最后会成为我的地方，在血脉中，在它每天悸动千万次的地方。我抓住它，它就永远不会溜走。总有一天我会紧紧抓住世界。此刻我已有一根指头勾住它；这是个起头。</p>
<p>“在基督诞生之前，有一种笨鸟名叫凤凰，每隔几百年它就筑起一堆柴火自焚。它一定是人类的一等表亲。但是每回它自焚之后，又会从灰烬中跳出来，让自己重生。看来我们也在做同样的事，一遍又一遍，但是我们有一样要命的本事，是凤凰所没有的。我们知道自己做过的蠢事。 <strong>我们知道自己千年来做过的所有蠢事，而只要我们知道这一点，并且随时把它搁在我们看得见的地方，总有一天我们会停止堆筑柴薪，停止跳入火中。我们会偶然找到几个记得每一个世代的人。</strong> ”</p>
<p><strong>还有，牢记一个念头：你并不重要。你什么也不是。将来有一天，我们荷载的东西也许能帮助某个人。但即使是许久之前，我们手头有书的时候，也并没有运用书中得来的知识。</strong> 我们一味侮蔑先人，一味唾骂所有可怜的故哲。往后这一星期、一个月、一年，我们会遇见许多孑然孤零的人。等他们问我们在做什么，你们可以说：我们在记忆。这样我们才会终究获胜。将来有一天，我们会记住太多东西，因此制造出有史以来最大的铲子，挖出旷古绝今的大坟墓，把战争铲入墓中，封起墓穴。走吧，我们先去建造一间镜子工厂，往后一年只生产镜子，对镜好好审视自己。”</p>
<p><strong>但眼前有一段漫长的路，要从清晨直走到中午，而若说这一行人沉默无言，那是因为有太多的东西要思索，太多东西要记住。或许稍晚，待日上三竿，温暖了他们之后，他们会交谈，或只说些他们记得的东西，好确定它们存在，确定那些东西安然存放在他们心中</strong> 。蒙塔格感觉到字句缓缓颤动，徐徐酝酿。一旦轮到他开口时，他能说什么？在这样的一个日子里，他能贡献什么使此行轻松些？凡事都有定期，天下万务都有定时。对了。拆毁有时，建造有时。对了。静默有时，言语有时。对了，就这些。但还有什么。还有什么？有什么，什么……</p>
<p>蒙塔格怂恿道：“而后怎样？”“啊，我体会了人生。”消防队长闭目回忆，“人生，寻常的人生，就那么回事。不怎么完美的爱情，破灭的梦想，堕落的性生活，不该死的朋友猝死，有人被杀，亲近的人神经失常，某个母亲缠绵病榻，某个父亲突然自杀——象群惊逃，疾病蔓延。可无论是暗譬或明喻，怎么也找不到一本适合的书可以适时塞住崩闸的倾壁，挡住泛滥的洪水。等到年过三十，逼近三十一岁之际，我振作自己，并拢每一根断裂的骨头，每一公分擦伤、瘀伤、留下疤痕的肌肤。我揽镜自望，却发现一个老头儿躲藏在一个年轻人的惊恐脸庞后头，看见一股对万事万物的憎恨，于是我打开我那一整间图书室里的书，结果发现什么，什么，什么？” <strong>蒙塔格猜测：“书页是空白的？”“没错！空白的！哦，书页上是有文字，没错，但那些字就像热油洒过我的眼睛。毫无意义。没给我任何帮助、慰藉、安宁、庇护，没有真爱，没有休息，没有光明！”</strong></p>
<p><strong>可就在前不久，我浏览这本小说，才发觉蒙塔格的名字是随一家纸业公司取的。而费伯，当然，是一家铅笔制造商！我的潜意识可真狡猾，居然给他们取了这样的名字。而且不告诉我！</strong></p>
<p>在我的故事中，我曾描述一座灯塔，它深夜投射出的光亮是一种“神光”。以任何一种海洋生物的观点仰望它，会觉得是“显灵”。编辑们删去了“神光”和“显灵”。约莫五年前，编纂另一本学校读物的编辑们将四百篇（且数数看）短篇小说搜罗在一本文选中。你怎么把四百篇马克·吐温、欧文、爱伦·坡、莫泊桑和比尔斯的短篇小说，挤在同一本集子里？简化嘛。剥皮，去骨，剔髓，融解，沥脂和销毁。每一个重要的形容词，每一个会动的动词，每一个重于蚊子的暗譬——删掉！每一个会扯动低能儿嘴角的明喻——拿掉！任何解释一位一流作家那么一点儿哲思的旁白——扔掉！</p>
<p>道理很明显。 <strong>焚书的方法不止一种。而这世界充斥着手拿火柴的人。每一个少数族群，随他是浸信教徒或一神论者，爱尔兰人或意大利人或八十岁耄耋或佛教徒，犹太复国主义者或耶稣再临论者，妇女解放运动者或共和党人，还是四方福音教徒，都觉得他有意愿、权利、义务去泼洒煤油，点燃引信。凡是自认是所有苍白如乳冻的、平凡如麦片粥的、不发酵的文学的祖师爷的弱智编辑，个个舔他的断头斧，盯着任何敢稍微哼一声，或是写些超出童谣程度文章的作家的脖子。在我的小说《华氏451》中，消防队长比提描述了书本最初是怎么被少数族群焚烧的，他们各自撕下这本书里的一页或是一段文字，接着撕扯另一本书，最后终于有一天书本成了空白的，心智是封闭的，而图书馆永久关门。</strong></p>
<p>这儿记述一段对约伯二世的最后考验：一个月之前，我寄了一份舞台剧剧本，《巨大海兽九九》，给一所大学剧场。我的剧本是以《白鲸》为蓝本，献给梅尔维尔，内容是谈一组火箭成员和一名瞽目太空队长，他们出发探险，遭遇一艘“巨大白色彗星”，结果毁灭了毁灭者。这出戏今年秋天将在巴黎以歌剧方式重演。但眼前，那所大学回函称他们实在不敢演出我的戏——戏里头没有女性！要是戏剧系胆敢一试，校园里“紧急救援小组”的小姐们会拿着球棒上门！我把虎牙咬成粉末，心想，这大概意味着今后再也不会制作“乐队男孩”（没有女性），或是“女人”（没有男性）。或者，要是数数人头，算算男性女性的人数，莎士比亚的戏剧有不少将再也见不着了，尤其如果数数对白，发现所有精彩句子全给了男性！我回函表示或许他们该演出我的戏一个星期，下个星期再演出“女人”。他们大概以为我在开玩笑，我自个儿也没把握说我不是开玩笑。因为这是个疯狂的世界，要是我们任凭少数族群干预美学，随他们是侏儒还是巨人，是婆罗州巨猿还是海豚，是核子弹头派还是漫谈派，是前计算机学家还是新反机器主义者，是呆子还是贤哲，这世界都会更加疯狂。 <strong>真实的世界是每一个群体的游乐场，任由他们立法或废法。可是我的书、故事或诗的尖端，却正是他们权利终止之处，也是我的疆域诫令颁布、执行、治理之处。假如摩门教徒不喜欢我的戏剧，让他们自己去写自己的。假如爱尔兰人不喜欢我的都柏林小说，让他们去租打字机。</strong> 假如教员和初级编辑认为我这种正中下巴式的文句害得他们奶昔似的牙齿打哆嗦，那就让他们拿自个儿做的陈年蛋糕浸在稀淡的茶里果腹。假如墨西哥裔知识分子想把我的《奇妙冰淇淋装》重新剪裁成新潮的“阻特装”[1]，那么但愿皮带松脱，裤子滑落。</p>
<p><strong>你们这些裁判，回到看台上。主审，去淋浴。这是我的独角戏。我投球，我打击，我接球，我跑垒。到了日落，我赢球或输球。次日天亮，我再度上阵，再玩它一场。而没有人能助我一臂。连你也一样。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[无法估量的繁盛 - 《华氏451》读后感]]></title>
      <url>http://chocoluffy.com/2018/03/16/%E6%97%A0%E6%B3%95%E4%BC%B0%E9%87%8F%E7%9A%84%E7%B9%81%E7%9B%9B-%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>这一次想记录下来的书是雷·布拉德伯里的《华氏451》。</p>
<a id="more"></a>
<p>书名很有意思，华氏451，是纸张燃烧的温度。小说主题和乌托邦三部曲有相似之处，当人们逐渐失去了感触真实生活的敏感，失去了闲暇思考的时间，消防员的职责变为燃尽书籍来减轻人们的忧郁和恐惧。书的隐喻是什么，焚书的意义和我们熟识的历史情景有什么不同，而仅仅是消费主义最终又将带领我们走向怎样的结局……</p>
<p>始终觉得，科幻的作品里有着不可剥离的现实，天马行空的想象只是构建冲突，放大冲突的一种实现手段。文字里身着火蜥蜴消防服喷溅出炽热火舌的人，在真实世界里或许乔装栖身在另一个人群，手里拿着火柴在黑暗里摩拳擦掌。也总会有那么一群人，无谓时代，在消费主义窒息的麻木感中恍然醒来，想起雨的冰凉，蒲公英轻拭下巴的涵义，会想要记住所有目力所及的美好哪怕回忆如沙漏。</p>
<p>这或许就是布拉德伯里想写的故事。不同于《1984》里穿插大片政治论述的严谨有力，不同于许多乌托邦构想里阴郁森冷的气氛，作者用散文诗化的文字，记录一个人挣扎醒悟的温暖。每个人都有着悲剧轮回的身世，但总有那么几个偶然的时刻，我们得以回望身后火热的地狱。而希望是，就像当我终于赤脚走在冰冷的通往光明的铁轨上，我突然那么的相信，你也走过一样的路。</p>
<h2 id="当拉链取代了纽扣">当拉链取代了纽扣</h2><p>第一章。</p>
<p>华氏451，预示着的，是相比专制离我们更加接近的未来。“上学的时间缩短了，纪律松弛了，哲学、历史、语言课程删掉了，英文和拼字也渐渐、渐渐被忽略了，最后几乎完全弃置。生命就是眼前，工作才重要，下了班处处是享乐。除了按按钮、拉开关，装螺丝，何苦去学什么“。很典型的消费主义乌托邦场景。但相比《娱乐至死》等文着重于在过量娱乐中丧失思考的能力和主动，《华氏451》还突出了一个很有现实意义的点，关于来自社会上少数族群的压力。</p>
<p>在小说的后记里，布拉德伯里写道，“焚书的方法不止一种。而这世界充斥着手拿火柴的人。每一个少数族群，随他是浸信教徒或一神论者，爱尔兰人或意大利人或八十岁耄耋或佛教徒，犹太复国主义者或耶稣再临论者，妇女解放运动者或共和党人，还是四方福音教徒，都觉得他有意愿、权利、义务去泼洒煤油，点燃引信。凡是自认是所有苍白如乳冻的、平凡如麦片粥的、不发酵的文学的祖师爷的弱智编辑，个个舔他的断头斧，盯着任何敢稍微哼一声，或是写些超出童谣程度文章的作家的脖子。在我的小说《华氏451》中，消防队长比提描述了书本最初是怎么被少数族群焚烧的，他们各自撕下这本书里的一页或是一段文字，接着撕扯另一本书，最后终于有一天书本成了空白的，心智是封闭的，而图书馆永久关门。”</p>
<p>想起近几年以各种形式出现的平权运动。与占据道德优势的对象对话是不平等的，而仪式越依赖社会认可，姿态就屈从得越低。随着批判的手段愈加精致，出版自由乃至言论自由会不会终将趋向沉默。社交媒体渐渐有能力承载人们记忆的作用，而这种趋于永恒的记忆不会随时光散去，而是永远刻上始作者的名字。黑暗擅长在历史的暗礁里寻找黑暗，于是每一个留下的文字都成为了审判罪证的自白。尼采笔下的永劫轮回，怕会是所有创作者心里最沉重的负担。</p>
<p>于是消防员换了新的任务，用一把火烧去心灵的所有沉重。</p>
<p>“全世界都不再需要消防员做他们原先做的工作了。他们换了新的任务，保护我们的心灵平静，免除我们对于身为劣等人的可理解而合理的恐惧。他们成了官方检察员、法官和执行者。这就是你，蒙塔格，也就是我。”</p>
<p>《华氏451》有些接近《娱乐至死》的后续，当来自少数族群的压力可以代替现有的审查制度的时候，或许根本不需要政府的任何规定，来自人群的默许就将创造消防员这个职位。</p>
<p>直到第一章的末尾，《华氏451》可以说在阐述着类似消费主义乌托邦所讨论的问题，人群的冷漠暴力，生命的洋相。而让我感觉到真正精彩的，是从第二章开始作者慢慢跳开了对普遍现象的描述，开始给小说里被烧掉的“书”带来了更丰富的隐喻。</p>
<h2 id="颠簸的沙漏">颠簸的沙漏</h2><p>如果沙漏里最后能留下沙子。</p>
<p>布拉德伯里用沙漏比喻看书的过程。”结果他装得越快，沙子也热烫烫的唰唰漏得越快。他的手累了，而沙子烫人，筛子是空的。坐在七月中的骄阳下，他感到泪水无声淌落他的面颊……他突然兴起一个愚蠢的念头，要是快速读完整本的《圣经》，或许有部分沙子会留存在筛子里。”</p>
<p>这其实是一个关于记忆与遗忘很有意思的话题。</p>
<p>当一件事不需要被记住的时候，它就不值得被记住了吗。</p>
<p>小说的世界里，人们“不需要”记住他们生活的细节而只顾沉浸在更直接的娱乐刺激里，房屋甚至都没有前廊，因为人们不必有闲暇的时间聊天与思考。人们烧毁了忧郁的书，却拥有了纵情的快乐，也没有看得出的阶级统治，人人都宛如自己的镜子，世代可以就这样繁衍下去。</p>
<p>现实的世界里，人们也不那么需要记住许多东西。科技是直达结论的，也在驯服着除创造者以外人群的惰性。如果取两个极限，貌似是永恒和心如死水的并存。有趣的是，尽管我们还处在各种科幻故事里天马行空想象力的起点，但总有一小部分的未来是可以预见的，尤其是对永恒的需求。今年硅谷的投资热门是，区块链应用和生物医药。它们对应的电子信息的永恒存储，化学物质的永恒控制，谁也不敢说以上的总和会不会成为一个永恒的我和你。或许我们终将迎来我们梦寐以求的永恒，无论以什么形式，只是现在的我们还配不上。</p>
<p>本期待布拉德伯里做更多的讨论，可惜的是，作者最终也都避开了讨论记忆的问题。小说里讨巧地创造了一种技艺能够过目不忘地记住所看过的文字，让逃去森林的学者们成为一个个“行走的图书馆”，这给世界的真实留下了延续的可能。书里写得很美，这些学者们”似乎跟普通人没有两样，就像是跑完了一段长跑，经过漫长的寻觅，见过美好的事物被毁，到如今垂垂老矣，聚在一起等待曲终人散，灯枯油尽。 他们并不肯定自己脑中携带的东西会使未来每一个日出散发出较纯净的光辉，他们毫无把握，除了确知那些书贮存在他们平静的眼眸内，那些书完好无缺地等待着，等待来年可能会出现的那些指头或干净或脏污的顾客。“</p>
<p>我想或许只要还有人愿意捧起沙子就好，他们筛起炽热如火的流沙像金色的蔷薇粉末。</p>
<p>也像在抛下不为这个世界所动的锚。</p>
<h2 id="无法估量的繁盛">无法估量的繁盛</h2><p>蒲公英轻拭下巴的涵义。如果它的颜色掉了，那就表示我有了喜欢的人。</p>
<p>当小说里的费伯教授第一次提到，“书”是这个世界“清晰的，崭新的细节”的时候，我心里的第一下反应就是加缪的存在主义。他很关心这个世界呈现的样子，他在热忱而自由地成为着他想成为的人。</p>
<p>这是我喜欢的风度。</p>
<p>当初为加缪的文字所着迷，或许并不是因为他的任何教诲，而是他文字里鲜活的美学生命力。总是会惊讶于他对生命细节的敏感笔触。那些宛若透过水族箱的光线，那个广袤而忧郁的黄昏，阿尔及利亚的冬天那场沾湿了每一片花瓣的雨……原谅我这么幼稚地进入你的世界。</p>
<p>这些是小说里却被烧烬的美。终于，人类在道德和生活的对抗里，选择了生活。</p>
<p>而如果说审美的存在有任何私心，那或许是稍许的不甘心，不甘于生活。</p>
<p>这是被一直低估着的力量。</p>
<p>很喜欢莎拉贝克韦尔在《存在主义咖啡馆》里最后一章的描述，她觉得科技终究无法模拟真实的细节。她固然短视了科技发展的野心，但她也是对的，那些眼里饱含的滚烫冲动，人们的粉色邂逅与回眸，那些生命的细节，是人类的秘密，是“无法估量的繁盛”。</p>
<p>好像终于懂了，让小说第一章里那个粗粝而麻木的世界崩塌，或许只需要一个对的温度。当身经百炼而面色赤红的蒙塔格看着克拉莉丝的背影在雨夜里远去，他仿佛想到了什么，柔软的像一个新世界的起点。</p>
<p>“过了许久，他才移动。而后，走在雨幕下，他慢吞吞地仰起头，有那么一下子，张开他的嘴……”</p>
<p>对蓝色冰冷的雨，有了第一次的想象。</p>
<h2 id="后记">后记</h2><p>一些有趣的伏笔，仅供文学参考啦。</p>
<p>1.很多次在危险的想法出现的时候，都有提及关于轰炸机的描写，让人颤抖的战斗机的引擎声。一直以为是政府的巡逻机之类的，主要作烘托情景之用。到最后发现是一个伏笔，作者引入战争的发生来毁灭这个古老的争议的世界。</p>
<p>2.一个很讽刺的点。比提队长是读过书的，是拥有对历史的思考能力的，也扮演着为读者提供历史空白回忆的叙述者。他为何成为了他能力的反面。</p>
<p>3.蒙塔格那天下午在家翻书的时候，偶然翻到的第二本书里的话，“我们无法确切指出友谊形成的时间。正如注水入瓶，一滴一滴注入，最后必有一滴会使它满溢；同样的，一连串的善意，最后总有那么一次会使心灵满溢”，伏笔，以后文与费伯的友谊及森林里学者的善意来呼应。</p>
<p>4.第三章。关于凤凰浴火的寓意。从火里来，回到火里。“我们知道自己千年来做过的所有蠢事，而只要我们知道这一点，并且随时把它搁在我们看得见的地方，总有一天我们会停止堆筑柴薪，停止跳入火中。我们会偶然找到几个记得每一个世代的人 ”，也是对比蒙塔格，身为消防员从火中来回到火里，只到一天醒悟，停止跳入火中。</p>
<p>5.摘自后记的一小节。“可就在前不久，我浏览这本小说，才发觉蒙塔格的名字是随一家纸业公司取的。而费伯，当然，是一家铅笔制造商！我的潜意识可真狡猾，居然给他们取了这样的名字。而且不告诉我！”，哈哈好可爱。</p>
<p>文摘链接：『 <a href="http://chocoluffy.com/2018/03/16/%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E6%96%87%E6%91%98/">《华氏451》文摘</a> 』</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Feb.]]></title>
      <url>http://chocoluffy.com/2018/02/20/%E7%A2%8E%E8%AF%AD-2018-Feb/</url>
      <content type="html"><![CDATA[<h2 id="18-2-19_《存在主义咖啡馆》">18.2.19 《存在主义咖啡馆》</h2><p>我表达存在主义，仅仅因为我熟悉这种想法。这是有偏见的，仅仅体现了我个人的审美。</p>
<p>革命取得了它想要的成果的那一刻，它本身似乎失去了存在的意义。</p>
<p>存在主义：人可以选择让自己成为的样子。<br>-&gt; 对自己所做的每一件事负有责任。<br>-&gt; 自由的眩晕，导致一种焦虑。<br>-&gt; 人只有在境遇中才是自由的。这个环境包括了自己的生理和心理因素，还有各种物质，历史和社会变量。<br>-&gt; 只有通过描述人的境遇，环境，才能更好地了解他的存在。</p>
<h2 id="18-2-18_加缪散文集回顾">18.2.18 加缪散文集回顾</h2><p> 她懂得，如何去迎合他心里深处如焰火般炽热的骄傲。</p>
<p>思考荒谬的一个很好的角度：如果认可这一切，总和又等于什么呢。</p>
<p>希望本身就是一种逃离是吗。</p>
<p>关于自己的[[想象力训练]]，感觉是可以刻意的吗。我在收集着美，允许有独立而自圆其说的美吗。</p>
<p><strong>人们总是习惯性的想要逃离“工作”，却总是能再找到一件事防止自己变得孤独。</strong></p>
<blockquote>
<p>生活对一切天赋都是敏感的，怎样才能描述我们可能品尝到的各种醉意。<br>我的诠释： <strong>生活对一切敏锐感受生活的能力都是敏感的，它会在任何时候，任何地方让想看见的人看见象征着的形象和情愫。</strong></p>
</blockquote>
<p>我喜欢与人同行，做一个追随者，把填充岁月的权利留给别人。</p>
<p>永恒对我没有意义。人们可以待在那里，睡上一天，听见人家说：“您真强壮，我必须诚恳地对待您：我可以奉告，您将会死去。”待在那里，双手捧着生活，心中惴惴不安，目光迟钝呆滞。其他一切又有何意义。</p>
<blockquote>
<p>关于永生的辩题，其实是在讨论这样的一件事。“失去了紧迫感的生活，值得一过吗”。我不知道怎么去辩护，我只知道我不希望在未来的无论哪一刻，看见一个早晨在床边醒来目光呆滞，无动于衷的自己。</p>
</blockquote>
<p>为什么哲学不应该成为一种职业。 <strong>因为哲学之所以存在，更像是一种习惯或者训练，本身因为它被人们所深刻地需要着，去准备抵御那些生命里的愤怒，焦虑和忧郁。</strong> 而当哲学成为一种职业的时候，便不再是被需要着的了，而是哲学需要着这一些人们去延续下去，那些贩卖的，那些合乎利益的，很可能不再被人们所需要。<br>反驳：我们需要训练有素的传道者。</p>
<p>关于“他人即地狱”的原意。并不是说“他人无法理解你，所以他人即地狱”，而是说，在你死之后，你是存在在他人的记忆和印象里的，而对此你无法改变任何，并因此遭受评论和鞭笞。</p>
<h2 id="18-2-17">18.2.17</h2><p>很多的欧洲文学都是在壁炉旁边展开的，为了驱走雪还有生命的寒冷倦意。要有轻微咯吱响的摇椅，一瓶温热的朗姆酒，披上毛毯便可以伴着壁炉里的柴火声慢慢睡去。</p>
<h2 id="18-2-16">18.2.16</h2><ul>
<li>真正颠覆的是区块链，而投机的人一直在关注比特币。</li>
<li>即便最终拥有一个全世界共用的虚拟电子货币，真正困难的地方还在于哪一种纸币会成为最终的主要兑换货币。就像布雷顿森林体系奠定的美元拥有直接和黄金挂钩的地位。</li>
</ul>
<h2 id="18-2-15">18.2.15</h2><p>而这里的人们，一直被这份热闹守护着。</p>
<p>其实季节承接的是记忆。一场雨来模糊一段目光</p>
<p>明媚的像冬天的恩赐。</p>
<h2 id="18-2-13">18.2.13</h2><p>当人的欲念得不到满足的时候，他就会弄清自己有多少珍藏。</p>
<h2 id="18-2-9_《存在主义咖啡馆》">18.2.9 《存在主义咖啡馆》</h2><p>每一个人的生活都根植在复杂的黑夜。在被需要的时候，点亮了一束花。</p>
<p>与其说，存在主义是一门严格定义的哲学，不如说，它其实是一种倔强的情绪，人们在不断失去对自由和存在诠释的话语权时候的尊严。它被深深地需要着。</p>
<p>在我真真正正参与到技术跃进，改造世界这一浪潮之前，我想好好看看，这个世界在最初光照下的生活。</p>
<p>“技术的本质和技术其实没什么关系。”离别的</p>
<p>当初被加缪的文字所着迷，其实并不是因为他的理念，亦或什么存在主义。完全是被他文字的生命里所吸引。</p>
<blockquote>
<p>映照在墙上宛如透明水箱的光线。冬天里沾湿了每一片花瓣的雨。<br>原谅我这么幼稚地进入你的世界。<br>当初一直以为是因为加缪年幼得的重病让他拥有了极其敏感的生活感受力。现在才发现，原来这就是他一直坚持的存在主义啊。那是无法估量的繁盛。</p>
</blockquote>
<h2 id="18-2-7_一夜又一夜的雪">18.2.7 一夜又一夜的雪</h2><p>以花燃雪。</p>
<p>在苍白的雪天用一朵花点燃一落烟火，我在反抗这个世界吗，或许是，我也在欣赏花醉人的美。</p>
<blockquote>
<p>什么是存在主义。</p>
<p>写一个下雪的专辑吧。</p>
</blockquote>
<p>“美和丑之间，留着巨大的忧郁。”</p>
<p>总感觉自己的文字里提到了好多次雪。原来一座城市是这么影响着在里面栖居的人。就像李娟和她的阿泰勒。“即便是最平凡的生活也深如大海。”</p>
<p>以前总觉得自己的气质像冰，随时随地可以融化在温暖的地方。原来有一个气质可以像雪。静静地下着。</p>
<p>去年圣诞节晚上从朋友家出来，一个人走在大雪里。雪静静地落在肩上，有劈劈啪啪的声音，像刚点燃的柴火。</p>
<p>世界像一颗放大的水晶球。</p>
<p>从洒满橙黄灯光的星巴克走进苍白大雪里。好勇敢。</p>
<p>下大雪的时候天一定是白的，原来人间的苍白，天上也有。</p>
<p><strong>正义最令人警惕的地方是它潜在标准的绝对性。</strong></p>
<p>一个罪犯自杀前反悔了…</p>
<p>在一些白里 染出另一些白</p>
<blockquote>
<p>[18.12.29] 雪落在地上。</p>
</blockquote>
<p>只是恰好路飞每一次的选择都站在了正义的一边。最好的证明就是，当女帝问路飞，是要一艘船还是要她们的生命，是要自己的自由还是正义。他选择了正义。</p>
<h2 id="18-2-3">18.2.3</h2><p>我只希望，在我离开的那天，多伦多那飘忽无常的天能为我下一场任性的雪。</p>
<blockquote>
<p>终于被加缪说出了心声，是的，我不允许生活里没有美。</p>
</blockquote>
<p>这都要归罪于黄昏的温柔。</p>
<blockquote>
<p>我亲了你，这都要归罪于黄昏的温柔。</p>
</blockquote>
<p>任何隐喻都逃离不开的，是喻体所在语境带来的干扰。譬如加缪笔下法西斯主义的窒息感比作鼠疫。自然灾害下的心理状态还是有区别的。</p>
<blockquote>
<p>总有人在某处，正在为你的幸福而祈祷。海贼王。<br>万国：家庭。三个家庭的对比，大妈，文斯莫克，贝基黑帮。尾田还是很不错的。很多人物的出场都有自己的独特意义。</p>
</blockquote>
<p>目前为止，影响比特币股价最大的还是政策。各国严厉管制的法案出台。</p>
<h2 id="18-2-2">18.2.2</h2><p>存在真正的孤独吗，很多东西存在着就是陪伴。</p>
<p>谈判就是这样，用对方熟悉的语言。</p>
<p>添加 半山文集 reeder</p>
<p>写下那个感觉 挺团队和大佬说话 做那个值得依赖的人。那天谈判的逻辑还是很不错的。problem set1是一个很conservative保守的逻辑。其实这个并没有真正解决那个非法使用的问题。我希望做一个能够在逆境里替团队承担责任的人。</p>
<p>阳光和白雪 好奇妙的组合。</p>
<blockquote>
<p>明媚阳光下的雪，多么倔强的存在。</p>
</blockquote>
<p>One is to reduce illegal usage, but we want to stop illegal usage from the root. When people want to use a music, for its YouTube channel,<br>Design a mechanism for people to use best and fitting legal music for them, if it’a truly best, then customers will buy it. </p>
<p>Why people will illegally use music? One is they cannot find a better legal option, they bother to find,  or even they could find it, they cannot afford it.</p>
<p>技术是我的信仰，而文字，是我的生活。</p>
<p>关于区块链。理解一个事物本身的价格和股价之间的联系。股价本身反应的是人们的期望。但也仅仅只有一开始的一小撮人是在做价值投资，之后的跟随者的目的只是在套利。</p>
<ul>
<li>很多区块链项目在宣传时候的一个特点就是提及，所有的记录都无法消除，永久保存。为什么这个很重要。</li>
<li>现在很多区块链的项目，和区块链之间的关系究竟是什么。狗币。养猫。等等等等。</li>
</ul>
<blockquote>
<p>这个社会最大的毛病 紧迫感是他人给的 而自己在不断给自己找安全感以平衡。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Jan.]]></title>
      <url>http://chocoluffy.com/2018/01/30/%E7%A2%8E%E8%AF%AD-2018-Jan/</url>
      <content type="html"><![CDATA[<h2 id="18-1-27">18.1.27</h2><p>【剧本】写一个勇士和恶龙的故事。而为什么他们在故事一开始，就背负着他们无法挣脱的荣耀和罪名。</p>
<blockquote>
<p>去讨伐恶龙的勇士最终都没有回来。在杀掉恶龙看见财宝的那一刹那，他身上长出了羽毛。</p>
</blockquote>
<p>生活对一切天赋都是敏感的，而我又应该怎么表达我的醉意。</p>
<h2 id="18-1-26">18.1.26</h2><p>过于疯狂的享受会创造一种认为世界无意义的哲学。而克制，却能给世界一个意义。</p>
<p>自由，究竟是目的，还是过程。我们希望自由是因为我们能借此获得幸福和平的生活。如果我们可以直接到达目的的？[[new censorship]]</p>
<p>看书，发微博，明明就是放松的事情，为什么要那么刻意呢! 不需要去迎合别人的期待而成为一个陌生的自己。</p>
<p>安全感，是买一床大一倍的被子，晚上可以像夹荷包蛋一样睡过去。</p>
<p>有没有一些职业。捕风人。造梦者。</p>
<p>你没有如期归来  /  而这正是离别的意义—— 北岛《白日梦》 ​​​​</p>
<p>喜欢迎着光走。像在硕大的舞台幕后注视着开幕的那一刻。</p>
<h2 id="18-1-23">18.1.23</h2><p>新闻内容业会减少 因为你的朋友圈你的社交网络里的每个人都在承担传统信息分发的工作。</p>
<p>轻芒的杂志概念很好。但是做出来更像是一个专辑而不是杂志！我们想要的是小报</p>
<p>how could you be mad at smiles?</p>
<blockquote>
<p>很有意思的事。晚上在vic吃自助，在夹巧克力饼干的时候旁边两个白人小哥哥走过，他们应该是在聊些什么，我只听清楚了一句，“…how could you be mad at smiles…”， 但无论怎样，他们的生活中一定出现了。感觉触碰到了很柔软的东西。</p>
</blockquote>
<p>刚刚和导师见面说我这学期可能没法继续做research了 心里蛮难受的 尤其是当paper刚投出去 感觉以前讨论的所有后续有趣的想法都戛然而止了…  </p>
<p>这学期在lead两个不同的团队的创业项目 说实话感觉每天都在打鸡血   两个项目都里资本越来越近了 </p>
<p>今天早晨随手拍的照片，蛮有意思的，仿佛每个人都走在自己的钢线上</p>
<h2 id="18-1-16">18.1.16</h2><p>仔细观察一下陌陌。LBS是微信不会着力发力的领域，也是想象力很大的领域。</p>
<h2 id="18-1-13">18.1.13</h2><p>我和你，距离一个秋天的影子。</p>
<p>越来越发现一个规律：其实到最后所有的商业模式都是在争取用户的时间，然后就有广告收入。所欲这是一个越来越多爆款的。（呃。。如果不知道“问答app”的背景，这不就是废话嘛）</p>
<p>itext其实可以和kibdle搭配l</p>
<p>这就是冬天孤独的样子吧。</p>
<h2 id="18-1-11">18.1.11</h2><p>和一段冬天的回忆告别 或许就是任由它融化 湿润 起雾吧</p>
<p>告别就是，先离开的人，影子拖在地上，很长很长。</p>
<h2 id="18-1-9">18.1.9</h2><p>有时候竟然会喜欢上很忙碌很忙碌的生活，然后渐渐忘却了一些无处安放的敏感和多愁善感。这究竟是我的勇敢，还是我的懦弱。</p>
<h2 id="18-1-3">18.1.3</h2><p>让我们在相互伤害之前，辛苦地去了解，就像决斗之前，深情地望彼此一眼。</p>
<blockquote>
<p>我一直在寻找的镜头，离别前深情回望的一刻，保护着心爱的东西而生气的眼神。</p>
</blockquote>
<p>每个人都很像，都没有被记住的权利。</p>
<p>我的心事，像夜晚里抬头一扇窗口外亮起的灯。</p>
<p>冬季乘火车，会有一种强烈的旅人感。</p>
<p>霍金所说，最令人感动的，是遥远的相似性。</p>
<p>人生就像一架黑白相同的钢琴，白键代表幸福，黑键代表痛苦，在你行走于人生旅途之中时，一定不要忘记，黑键也是音乐。</p>
<p>app store发布的视频 直接就用app的使用视频就好！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《风沙星辰 & 夜间飞行》文摘]]></title>
      <url>http://chocoluffy.com/2018/01/22/%E3%80%8A%E9%A3%8E%E6%B2%99%E6%98%9F%E8%BE%B0-%E5%A4%9C%E9%97%B4%E9%A3%9E%E8%A1%8C%E3%80%8B%E6%96%87%E6%91%98/</url>
      <content type="html"><![CDATA[<p>《夜间飞行》不如《风沙星辰》惊艳，但依旧较完整地呈现了“自由”与“责任”的矛盾。“这些也许哪一天会失去生命的人，他们本可以幸福地生活着。”，而里维埃，又有什么权力去阻止一个人追求幸福生活，而人又为什么渴望永恒。仅仅表现法比安的妻子和里维埃的冲突，矛盾的张力还不够激烈，角色的观念以一致的坚定为主。这是一个很深刻的主题，和加缪的《鼠疫》对比阅读。</p>
<a id="more"></a>
<p>以下为阅读文摘。</p>
<hr>
<h1 id="风沙星辰_Terre_Des_Hommes">风沙星辰 Terre Des Hommes</h1><p>农民在耕作中，总能借助着他手里的工具，一点一点地挖掘到那属于自然的各种秘密。</p>
<p>昏暗的夜晚，平原上微弱的光线，好像 <strong>空中零落的星光</strong> 。</p>
<p>那一刻，也许有的人正在阅读思考，互相倾诉着各自的心声；也许有的人正全神贯注地探索着宇宙的奥秘，计算着仙女座离我们究竟有多远；还有的人，在某一个角落，相爱着。远处乡间闪动的火焰，是人们在等待食物的信号。这些人里面，有诗人，老师和木匠。然而这片闪烁的星空下，又有多少关闭的窗户，暗去的星光，与沉睡着的人们……</p>
<p><strong>我们要试着走近这一切。和乡间那灯火阑珊处，轻轻地聊上几句。</strong></p>
<blockquote>
<p>夜很美，却敌不过我的意兴阑珊。</p>
</blockquote>
<p>月亮在一层苍白如雪的雾气中，像一堆木炭似的逐渐熄灭了。</p>
<p>那是一个充满了陷阱与圈套，四处皆是悬崖的世界。这个世界里，黑色的长龙守卫着山谷的入口，千万束的闪电好像花环一般覆盖着山顶。老飞行员们以某种近乎科学的方法，令我们维持着对他们的尊敬。然而迟早会有那么一天，他们当中的某一个，会消失在茫茫高空中，再也无法回到我们中间。</p>
<p>在这个灰色的小餐馆中，在一群群努力驱赶着白天疲惫的普通公务员中，这个肩膀沉重的同事显得如此高贵。在他缺乏细腻的外壳下，我仿佛看到了一个天使如何战胜凶猛的黑龙的场景。</p>
<p>一瞬间，这个静谧、平坦而简单的，当你从云海中浮出的那一刻探索到的世界，对我而言忽然拥有了一种完全陌生的意义。那种温柔变成了一个陷阱。我能够想象得出，在我脚下铺展的这片白色海洋，隐藏着怎样致命的骗局。那里既没有属于人的喧嚣与羁动，也没有城市中的车水马龙。占领它的，只有无边的绝对的寂静。 <strong>对我来说，这个白色的陷阱变成了一条界线。它分隔着现实与幻境，让已知的世界与未知的一切遥遥相望，无从聚首。我猜想，一出戏它本身也许是没有任何意义的。只有当某一种文化，某一种文明，或者某一种职业来诠释它的时候，它才拥有属于它的内涵。就好像那些山里人，他们也一样见过白色的云海，然而他们永远也不会发现，云海下那层无与伦比的窗帘。</strong></p>
<blockquote>
<p>原来我们习以为常的，是他人心里的浪漫，比如伦敦的雨，多伦多的雪。</p>
</blockquote>
<p>灯光下，西班牙在我的地图上，一点一点地变成一个充满童话的国度。我在地图上做了各种信号，哪里充满了陷阱，哪里将会是我的避风港。</p>
<blockquote>
<p>于是我把我所有的不安和流离画了出来，仿佛我还有重新选择的机会。</p>
</blockquote>
<p>我竖起了大衣的领子，带着一种莫名的热情，行走在陌生的人群中。与素不相识的人擦肩而过，令我因装满了秘密的内心而变得无比自豪。他们不认识我。而他们的烦恼、冲动，将在太阳升起的那一刻，一齐被装进邮包，由我来为他们传递。他们的希望与梦想，将会通过我的双手抵达目的地。 <strong>我被厚重的大衣包裹着，在人群中迈着好似保护者一般的脚步。可是，人们却是无法了解我的孤独的。</strong></p>
<blockquote>
<p>走在陌生的人群里，你听不懂我的语言，就好像我听不见你的秘密。又想起来那个上帝创造语言的这个故事。是为了让人们无法齐心协力的合作。</p>
<p>我来悄地保护你了</p>
</blockquote>
<p>我是这个秘密中的独行者。在战斗开始以前，我已经知道了敌人的位置……</p>
<p>飞行员混在人群中，没有人知道他是做什么的……一路上路灯林立，目的地离得越来越近。 <strong>这辆老公车，它不过是你和我，以及所有的人在变成蝴蝶飞翔在天空中以前，不得不栖息在里面的虫茧。</strong></p>
<p>所有的同伴们，都曾经在图鲁兹冬天灰色的天空下，被遗忘在栖息于公车上的人群中。但是也正是在这么一个早晨，一种属于帝王般的力量与勇气在他身上诞生了。五个小时以后，他将把属于北国冬天的雨点和雪花抛在身后。他将减缓引擎动力， <strong>在阿利坎特耀眼的阳光包围下，一路向着夏天降落而去。</strong></p>
<p>老公车早已消失不存在了。然而它的简陋和不舒适，却一直生动地留在我的记忆中。它多少象征着在飞行员的职业中，迎接坏消息到来之前，艰难却又不可或缺的准备与铺垫。</p>
<p>被那沉默寡言的司机引领着，行驶在下着雨的黎明中。</p>
<blockquote>
<p>好有画面感啊！</p>
</blockquote>
<p>坐在我身边的公务员，你从来都没有从这堵墙翻越出去的机会。这不是你的错。你只是用尽全力，搭建着那蒙住了双眼的平和生活。就像飞蛾一样，它们总是往有光亮的地方飞舞过去。你在那布尔乔维亚的、一成不变又令人窒息的外省生活方式中，舒适地将自己就这么安顿下来。 <strong>你筑起这道谦卑的墙壁，用它来抵挡狂风、海浪与星星。</strong> <strong>你不再想为那些严峻的问题而操心担忧了，因为你好不容易才摆脱了昔日沉重的生活负担。</strong> <strong>你不是生活在某一个游荡的星球上的公民，你也不会去提出没有答案的问题：你只是一个生活在图鲁兹的小布尔乔维亚。在曾经还来得及做些什么的过去，从来没有人抓住过你的肩膀，对你说些什么。如今，你自己堆砌成的黏土，早已经风干变硬。你身体里曾经沉睡着那颗音乐家、诗人或者天文学家的心灵，再也没有人能将它唤醒了。</strong></p>
<blockquote>
<p>或许有一天，我们不再想感动星辰。为什么我们追求永恒？因为尊严。</p>
</blockquote>
<p>我不再抱怨天空中飘洒的雨点。这神奇的职业即将向我打开一扇门。两个小时以后，我眼前舞动着的，将是黑色的长龙与笼罩着山顶的蓝色闪电。我一路要阅读的，则是闪烁在天上的星星。</p>
<p><strong>大部分的时候，旅行中并没有什么特别的故事。我们像职业的潜水员一样，平静地潜入深不见底的大海。这个海洋今天已经被人们掌握研究得很是详细。飞行员、机械师、通信员不再将每一次出发当做一次探险，而是走进了一个实验室。他们遵守的，是指针上显示的各种数据，而不是窗外一片接一片的风景。机舱外的山川被黑暗笼罩着。可它们已经不再是简单的山川，而是某种需要精确计算的看不见的力量。</strong></p>
<p>黄金长于虚无中：它在中途停靠站的红绿灯下闪烁着。我们也都经历过，离下一个停靠站只剩下两小时的时候，突如其来的迷航。</p>
<blockquote>
<p>一下子的过渡 精炼</p>
</blockquote>
<p>月亮在一层苍白如雪的雾气中，像一堆木炭似的逐渐熄灭了。头顶上的天空，立即被云层遮盖了起来。我们行走在云层与雾气中，一个全无光影的空洞世界。</p>
<p><strong>我们似乎是在这一个又一个的行星中迷路了。这一片你永远无法踏及的星空中，我们寻找着属于我们的那颗星星。只有它是饱含着我们所熟悉的风景与温柔的。</strong></p>
<blockquote>
<p>飞行员的星星，是停靠站，是希望。所以包含了所熟悉的风景和温柔。</p>
</blockquote>
<p>对一个年老的农妇来说，只要一幅简单的神的画像，或者一串念珠，就能让她与神相会。而我，那第一口炽热的、混合着牛奶与咖啡滋味的芬芳，就足以让我沉浸在活着的喜悦中。也正是当牛奶、咖啡与麦子在口中融合的那一刻，我能感觉到同静谧的田野、异国的植被之间的交流，同脚下的大地神奇的相知相通。 <strong>在所有的星光中，只有那么一颗，能给予我们黎明时分那顿早餐独特的温柔。</strong></p>
<p>此时航线的停靠站，却一个接着一个地醒来。阿加迪尔、卡萨布兰卡、达喀尔站，都纷纷加入到与我们的对话中。所有的无线电通信站都向当地的机场进行了报告，所有机场的负责人都通知了相关的工作人员。他们慢慢地走到我们身边，好像是围绕着一个重病的病人一样。那是一种无用的温情，但它至少是温暖的。那是一种枯萎的建议，但它至少是柔和的。</p>
<p>即使是一程令人愉快的旅途，飞行员也无法以一个观众的身份欣赏一路的风景。天空与大地的颜色，海面上风吹过留下的痕迹，黄昏时金色的云彩，他都不能潜心观赏。他好像一个开垦土地的农民，时时要分析掌握着春天的来临，霜降的危险，下雨又会给他带来些什么。</p>
<p><strong>他明白，人一旦真正地面对挑战，恐惧就消失了。令人恐惧的，恰恰是一切的未知。</strong></p>
<p>从巴黎到圣地亚哥，他们散落在世界的每一个角落，好像被隔开的哨兵。只有旅行中的偶然，才能让这个大家庭中的成员聚集在一起。也许某一个夜晚，大家围坐在一张桌子边，在卡萨布兰卡、达喀尔或者是布宜诺斯艾利斯。 <strong>经历了多年的寂静与无声后，重启不愿终止的对话，以及将我们再次融合在一起的往日的记忆。然后所有的人，将各自再次起航出发。大地是如此的荒芜，可它又同时馥郁丰饶。它小心地隐藏着自己众多的秘密花园，它们是如此难以触及。</strong> 然而，我们的职业终有一天，会引领着我们踏入这花园中。生活将我们分开，让我们少有时间与机会去牵挂自己的同伴们。可是在彼此的寂静中，同伴始终在某一个角落，忠诚于最初的友谊！如果有一天，我们在路上相遇，他们会难掩火焰般的喜悦，摇动着我们的肩膀！所以，我们早已习惯了等待……</p>
<blockquote>
<p>陶立夏，英国病人、翁达杰，安妮儿的鬼魂。一种大家都处于黑暗的静默，却相互守候着。</p>
</blockquote>
<p>生活就是这样。我们一起成长，一起播种，可是那些树木接二连三消失的岁月，终究还是来到了。同伴们一个一个地离我们而去。从今以后，我们的哀悼中还混合了迈向衰老的隐秘的悔恨。</p>
<p>也许，一种职业之所以伟大，就在于它拥有将人凝聚起来的力量。这其中最珍贵的，是那人与人之间的情谊。</p>
<p>夜间的飞行，天空中成千上万的星星，几个小时的平静与骄傲，是金钱买不到的。艰苦飞行后等待着我们的新世界，那些树木、花朵、女人，那些黎明时向我们投来的清新的笑容，还有小小的音乐会，是金钱买不到的。</p>
<p>围坐在属于我们三个人的村庄边，我们等待着。等待着黎明的拯救，也或者是在等待着摩尔人的到来。 <strong>我不知道，是什么给予了这个夜晚如同圣诞夜般的祥和气息。我们讲述着各自的回忆，嬉笑着，歌唱着。我们品尝着节日般轻快的热情与欢乐，可实际上，我们却什么都没有。陪伴我们的，只有风，沙，与星辰。</strong></p>
<p><strong>我们终于再次相遇了。肩并肩地坐着，或者各自沉默着，或者互相诉说着。我们发现，我们都属于同一个世界，自己的存在因为他人的意识而变得更为丰富。我们相视微笑，好像被释放的囚犯，面对大海的广阔而赞叹不已。</strong></p>
<blockquote>
<p>我们相视一笑，在对方的眼里看见永恒。</p>
</blockquote>
<p>他与所有这个世界上伟大的生命一样，愿意用自己的枝叶去覆盖那庞大的水平线。 <strong>人与其他所有生命的区别，在于他的责任感。在于他面对并非缘起于他的苦难时所表现出的羞愧。当同伴取得胜利时，他所体会到的骄傲。当他在脚下摆放下一块石头时，他感觉到这个手势，也许正在为世界开辟一条新的道路。</strong></p>
<p><strong>我常常觉得，那些对技术发展之所以会心存恐惧的人，是因为他们混淆了目的与手段的区别。单纯的物质上的斗争所取得的进步，并不能解决人生存本身要面对的终极问题。机器也好，飞机也好，都只是一种工具，如同农民耕种时使用的犁。</strong></p>
<blockquote>
<p>去了解为什么这个社会存在邪恶和贫穷。又为什么会有那些绝望和冷漠。好多的真相好残忍。</p>
</blockquote>
<p><strong>如果人们以为机器的发展正在损坏着人本身，也许那是因为，在面对如此迅速地改变我们生活方式的技术革新面前，我们丧失了客观审视这一切所必须具备的相对性。</strong></p>
<blockquote>
<p>技术被发明，而人们被迫去使用他。</p>
</blockquote>
<p>这一百年的技术发展，与人类一万年的漫长历史相比较，不过是沧海一粟。我们才刚刚栖身在这片风景中，我们选择要住下来的房子，甚至都还没有完全建造完毕。我们周围的一切都在迅速地改变着，人与人之间的关系，工作的条件，生活的习惯。 <strong>即使是人内心最隐秘的那个角落，也同样在经历着猛烈的冲撞。分别、离散、距离、相聚，所有的这些词汇仍然保留着它们最初的面目，只是它们所包含的意义，却已经不同于往昔了。我们依然固执地使用昔日的词汇与语言，来解释阐述今天的世界。过去似乎总是显得更美好，因为它所讲述的涵盖的一切，都是我们早已熟悉了的语境。</strong> 每一次技术的进步，都将</p>
<blockquote>
<p>我们会很容易怀念过去的日子，但那只是因为更熟悉的语境。过去总是感觉是美好的，无外乎过去比未来让我们更熟悉些。</p>
</blockquote>
<p><strong>我们如同那些蛮族部落，被崭新的玩具吸引着，痴迷着。一程又一程的空中飞行，除了追求一次比一次高，一次比一次快的纪录，再没有其他的意义。我们似乎是忘记了，究竟为了什么让飞机翱翔在天空中。飞行本身这个行动，暂时地取代了它最初的目的。如同出征打仗的将军，他们唯一的目的，就是占领那片土地。士兵们鄙视被他们征服的人民，可是这场侵略的最终目的，不正是建立与统治一个新的国度？在一切的技术进步中，我们用人力搭建铁路，创造工厂，挖掘石油。我们是否有些忘记了，这所有的建设，最初都是为了服务于人？这场战斗中，我们不知不觉地，采用了与士兵们同样的逻辑。只是，在夺取了土地以后，现在到了建立与管理这个国度的时候了。我们要把这座没有身份的房屋，交还给那些活着的人。真理对于某些人来说，矗立在不断地开垦、建造、占领中。而对于另一些人来说，它隐藏在停留与栖息中。</strong></p>
<blockquote>
<p>无论openAI也好，所有的建设，所有的争论，最初都是为了服务于人。曾经我们为了筑造一个温热的国度而诉诸冰冷的战争，我们为了人民的幸福而刺穿了一部分人的躯体。不知不觉，天堂的模样下采用了地狱的逻辑。有人说只有胜者才有和平的权利</p>
</blockquote>
<p>不久以前，人们还习惯于同构造复杂的工厂打交道。而今天，我们几乎已经忘记了某一个引擎此时正在运转着。 <strong>它终于完成了它的使命，就是像心脏一样的跳动。而你我，早已对自己的心脏习以为常，不再关注于它的搏动了。</strong> 当注意力不再集中在工具本身时，它便通过工具，让我们同园丁、航海家和诗人所共有的某种气质相聚相汇。</p>
<blockquote>
<p>之所以有对科技的恐惧，是因为它正在一点点改变着我们习惯着的生活方式。它在改变我们熟悉的语境。当新科技稳定成为了我们生活的一部分，我们接受它然后忽略它就像心脏的跳动，我们早已对心跳习以为常。而问题真正的关键在于，我们是否有权利拒绝接受新科技，它的普及又是来自谁的命令，谁的推动。一个人不应该因为选择不用手机而被拒绝其公民的权利。工具是可有可无的吗？如果拥有这个工具成为了进入这个领域的门槛呢？一个人因为工具的优越性获得的名誉和称赞，是公平的吗？比如社交网络上最热门的观点是掌握社交传播手段最熟的观点</p>
</blockquote>
<p>此时的我，一无所有。我只是一个迷失在风沙与星辰中的凡人，呼吸着天地间的温柔……</p>
<blockquote>
<p>真正温柔的作品，不要通篇写给我十次温柔，去写那些冲动和克制，那些力量和颤抖。</p>
</blockquote>
<p>真面目。 <strong>几千年来，我们一直被道路欺骗着。</strong> 人也好像一个君主，他希望一路探访他的臣民们，看看他们是否真的认同他的统治。可是围绕在君主身边的奉承者们，则欺骗着君王。 <strong>他们在他的旅途中摆上天下大吉的布景，请来歌功颂德的舞者。可怜的君主因此对自己的王国一无所知，他全然料不到那些在广阔的田野中挨饿的老百姓，此时正诅咒着他的命运。</strong></p>
<p>如同宽容的谎言，我们脚下的道路弯曲缠绕着。一路走来，我们以为遍地是馥郁的土地、果园、草地。长久以来，我们美化着自己的监狱，以为这个星球湿润而温存。</p>
<p>我在夜晚的温柔中着陆了。蓬塔阿雷纳斯！背靠着一座喷泉，我看着街上年轻的女孩们。 <strong>离她们优美的身姿如此地近，我越发感觉到人类的神秘。</strong> <strong>这个世界上，生命与生命的融合是如此地容易，花朵即使在风中也能同其他的花朵相聚，连天鹅们都彼此相识，只有人，时时刻刻搭建着属于人类的孤独。</strong></p>
<blockquote>
<p>她们那么美，那么孤独。</p>
</blockquote>
<p>友谊、爱恨、欢愉，这一切人类的游戏都是在一片如何脆弱而单薄的布景下上演！在一片熔岩流依然温热的土地上，明天也许即将受到冰雪与风沙的侵袭，究竟是什么让人类相信，长久与永恒是有可能存在的？人类的文明如同一层脆弱的镀金层，一座火山，一片大海，或者是一场风沙，都能将它从此抹去。</p>
<blockquote>
<p>我唯一担心的问题，是阶级的垄断和固化。贫富差距不再是可靠的指标了，垄断阶级大可以提高社会福利，正如现在许多资本主义国家的趋势，没有教育基础的高福利是一种诅咒。问题真正可怕的地方在于，教育不平等的受害者选择了安守于自己的困境，可以预想到的是那个社会是一个鸡汤普遍，信息分层的社会，垄断阶级会极力提供所有一切的快乐和安逸，唯独切断了他们改变自己命运的途径。机器人未来会成为服务大众，维持社会安稳的工具，而一部分大众的去向，是去服务垄断阶级，或成为垄断阶级商业生意的其中一环。</p>
<p>每个人都仿佛在讨论着一些不合时宜的问题。</p>
</blockquote>
<p>我想，这片白色的纯净，在几千几万年中，只属于那些高高在上的群星。</p>
<p>面对着苹果树铺展开的台布，落入它怀中的只有树上的苹果。面对着星空的沙滩，它所能揽入怀中的，一定是来自天空中星辰的沙粒。还从来没有哪一块陨石，用如此直白的方式向人讲述着它的来历。</p>
<p>我确定自己是被某种力量运载着， <strong>如果此时地下发出器材调整的声音，我一点都不会感到吃惊。老帆船倾斜时发出的响声，长远而苦涩。</strong> 而脚下厚重的土地里，依然是一片寂静。压在我肩头的力量，也正在平和地渐渐消失。</p>
<p>一样。只是，我的老管家，如今的我，不再是从公园深处跑回家了。 <strong>我是从世界的另一端，带着辛辣的孤独的滋味，沙漠中旋转的狂风，和热带耀眼的月光，回到了你的身边。</strong></p>
<p>老管家对于她的世界的信仰，如同一个修女对教廷的信仰一样坚固难以动摇。我感叹着她谦卑的命运，将她引领着走入这条既没有视野又没有声音的路途……</p>
<p>然而这个撒哈拉之夜，躺在风沙与星辰间，却让我明白，我对老管家有失公正。我不知道在自己身上到底发生了什么。当我被那奇怪的力量与大地连接在一起的时刻，另一种力量把我带回最真实的自我。我感觉到自己的重量，将我拉向曾经影响着我的人生的种种。我的梦比沙丘和月亮还要清晰。 <strong>是的，一幢房子的美妙不在于它能给予你温暖，给你一个躲避的屋檐；也不在于它拥有的保护你的墙壁；而在于它在不知不觉中，在点滴岁月中，慢慢地累积、存储在你心中的温柔。因为它的存在，令你心底深处那片黑暗沉重底下，有一天会一点一点地流淌出如同泉水般的，梦……</strong></p>
<blockquote>
<p>或许文字的美妙，不在于让你发泄，让你躲藏。而在于记录这个动作本身，一点点积累着你的感动和失落，见证着你的温柔和成长。</p>
</blockquote>
<p>有时候，距离并不能确切地衡量出事物的远近。花园里的一堵墙锁住的秘密，往往比遥远的中国威严耸立的城墙还要多。一个小女孩藏在寂静与沉默中的灵魂，也许比撒哈拉的绿洲和厚厚的沙漠对它的保护还要严密。</p>
<p>这两个法官能分辨出哪些动物是天真，哪些是假装单纯。她们能从狐狸的脚步里揣测出它今天的心情。她们对它内心的步伐了如指掌。</p>
<p>这个时候，一个傻瓜会走进她们的生命。有生以来第一次，那双聪慧敏锐的眼睛迷失了方向。傻瓜只要向她们吟诵一句诗歌，她们便将他当做诗人。她们以为，他能欣赏布满了洞的地板的魅力，她们以为他也会喜欢那些獾。于是她们像相信那些游走在脚下的蛇一样的，信任这个傻瓜。于是她们把自己如同绽放在野地中的花丛一般纯洁美丽的心灵，交付予他。只是他爱的，却是那精雕细琢的人造公园。从此以后，傻瓜牵着昔日公主的手，把她变成了自己的奴隶。</p>
<p>他记得深夜里每一次枕着沙粒，躺在帐篷中的情景；他记得夜晚围绕着篝火，讲述着关于敌人的一切时，那颗跳动的火热的心。</p>
<p>月光下的沙漠是玫瑰色的。</p>
<p>然而他一定会失望至极地发现，所有他拥有的财富都在这里：沙漠的骄傲，黑夜，寂静，这个风和星辰的祖国。如果有一天博纳富回来，这个消息一定会在第一个夜晚，就悄悄地传到每一个角落。在撒哈拉某处，被两百个摩尔人士兵包围着，他们知道他栖身于何地。于是他们将再次把骆驼牵到井边，储藏起大麦，准备着枪支。被一种恨，或者是一种爱，驱使着，向他走去。</p>
<p>而是人死时，随之消失的一个未知世界。我自问，和他一起离开的是何种画面？哪一种塞内加尔的植被，哪一座摩洛哥白色的小城，将一点一点陷入遗忘中？我不知道，在这一堆黑色躯体里，熄灭的是哪些悲惨的牵挂：泡茶，给牲口喝水……一个奴隶的灵魂，还是有某些记忆将在此时得到重生，令人在高贵中走向消亡。坚硬的头骨好像藏宝箱，我不知道那里面，哪些丝绸的色彩，哪些狂欢的场景，哪些对这片沙漠毫无用处的回忆，能躲过这场沉船的灾难。</p>
<p>可是当他走到街边拐角处，面对一群正在玩耍的小孩，他停了下来。他一声不吭地看着他们，然后走回犹太人的布匹店，买回一大堆东西。阿布达拉责备他：“你个白痴，把钱浪费在这些东西上做什么！”巴克不理睬他。他庄严地向小孩们做着手势，于是孩子们就将自己的小手伸向了那些玩具、手链、金色的尖头布鞋。当他们拿到了珍宝以后，立即像小动物一样，逃得远远的。阿加迪尔其他的孩子们马上就听到了消息，向他跑来：巴克给他们穿上金布鞋。接着是阿加迪尔附近的村落，小孩们叫喊着向着这个黑色的神奔跑过来。于是，巴克用完了自己身上的每一分钱。阿布达拉以为他是被幸福冲昏了头脑。而我却不这么认为，巴克是在用这种方式分享属于他的喜悦。</p>
<p><strong>拥有自由的巴克，也同时获得了被爱的权利。他可以向南走，向北走，到任何一个地方通过自己的劳动赚得属于他的面包。这些钱对他来说，又有什么用处呢？他此刻深深渴求的，是尝试着在自己与这个世界上其他人之间，串起一根绳索。阿加迪尔跳舞的女人们对他无比的温柔，但是她们不需要他。布匹店的伙计，街上过路的行人，所有的人都尊敬他作为一个自由人，与他平等地分享着阳光，但是没有一个人真正需要他</strong> 。 <strong>他无限的自由，让他无法感觉到自己在这块土地上的分量。他缺少的，是人与人之间的关联和负担，牵绊着我们脚步的泪水、分离、责备与幸福。</strong></p>
<p>好像一个天使，因为身体太轻巧而无法停留在人间，总是不经意地就要飞上天空。于是他就自欺欺人地在自己的腰带上挂上沉重的铅块，错误地以为自己从此有了扎根人世的分量。巴克艰难地向前行走着，被孩子们拉扯着，他们唯一渴望的就是他手中金色的布鞋。</p>
<p>那阴暗的公园对我们来说，驻足着各种神灵。这个没有界限的王国对小孩们来说，是永远无法触摸到它的每一个角落，将它完全掌握的。我们在那里建立了一种封闭起来的文明，每一个脚步都有它自己的滋味，每一个细节都有属于它自己的含义。然而终有那么一天，小孩会长成大人，当我们用与童年不同的标准，再次审视着昔日魔幻般冰冷又炙热的公园时，呈现在我们面前的又将是什么？我们有点绝望地停驻在栅栏外，隔着灰色石头砌成的围墙向里面望着，惊讶于它的狭小封闭。 <strong>于是我们猛然间领悟到，那个曾经让人觉得永远无法捉摸透的公园，它的无尽与神秘并不在于公园本身，而来自小孩们赋予这个游戏的色彩与含义。</strong></p>
<p>刚才那让我一下子就辨别出的“扑通”声，也许也和命运一起，将在空中等着我。</p>
<p><strong>但大部分的时间，我把自己关在黑暗里，被行星们微弱的光亮包围着。它们闪烁着神秘的光芒，讲着同一种语言。我像那些天文学家一样，阅读着一本关于天空机械的书籍。我觉得自己纯净而充满书卷气。</strong></p>
<p>引擎温柔的轰鸣中，面对着静谧的星辰，我品尝着属于自己的孤独。</p>
<p>我们正穿越着童话中的大峡谷，任何错误都既没有原谅也没有出路。我们把自己交给了谨慎的神灵。</p>
<p>火苗慢慢地升起。带着一种近乎宗教的情绪，我们看着飞机的信号灯在沙漠中燃烧着。它向黑夜传递着无声却又耀眼的消息。那是一种近乎病态的呼唤，可它又同时充满了爱意。我们在乞求水源，我们又同时在寻找与人的交流。 <strong>我多么希望此时沙漠中有其他的火焰燃起，因为只有人才拥有火，那是一种他们回答我们的方式！</strong></p>
<p>火渐渐地熄灭了。我们把身体倾向烟灰，试图温暖着自己。明亮的消息已经燃烧完毕，它是否正行走在属于它的轨道上，然后抵达它的目的地？其实我知道，这一切都是徒劳的。 <strong>如同一场没有人会听见的祈祷。</strong></p>
<p>我站在那里冥想着。想到它也许要比我晚死三十年，这丝毫不让我觉得难过。三十年，还是三天，一切都只是一个角度的问题……我所需要的，只是忘记生命中的某些画面……我继续向前走，因为极度的疲劳，身体正在发生着某些变化。即使我眼前并没有幻影，我也不停地自己创造着……</p>
<p><strong>我们再一次发现，其实遇难的不是我们。遇难的，是此刻正在等待我们的人们！</strong> 他们已经被某种可怕的错误撕扯得遍体鳞伤。我们不能不向着他们奔去。正如纪尧姆从安第斯山脉返回以后对我说的一样， <strong>他当时是向着他们走过来的！</strong> 这应该是一个普世的真理。 <strong>“如果我是只身一人活在这世界上，我就躺下不再继续前进了。”普雷沃对我说。</strong></p>
<blockquote>
<p>是羁绊，是责任，而不是绝对的自由，带来绝境时的幸福。</p>
</blockquote>
<p>飞机并不是一个终点，而只是一种手段。我们不是为了飞机本身一次又一次地冒着生命的危险。好像农民们不是为了手中的犁才耕作一样。飞机让我们离开了城市，飞到一片未知的陌生土地，探寻着关于世界的真相。</p>
<p><strong>我不怪那些喜欢沉迷于咖啡馆里简陋音乐会的人，他们不知道这世界上还有其他的歌唱与美妙的戏剧。我责怪那些用廉价娱乐来赚钱的人。我不喜欢人用这样或者那样的方式引导，腐蚀着无辜同时又无知的大众。</strong></p>
<p>了。可是那橙子被吞入口中的感觉，又渐渐在我记忆中变得模糊，好像我一点一点地在忘却属于自己的温存。</p>
<p>人究竟该怎么做，才能让自己得到这种最终的释放与平静？所有的人都知道，人是多么矛盾重重的动物。当你给了没有食物的人足够的吃的，让他们去创造属于自己的生活时，他们常常因为吃得太饱而昏睡过去。勇敢善战的人，有时候会在一夜之间变得软弱无能。当慷慨大方的人成为富翁后，吝啬立即成了他们新的特征。所有的政治理念流派，凭什么认为他们能将人从苦难中解放出来，给予他们新的希望？每一个个体所希望的期盼的都是不同的，又有哪一种政治敢说自己代表了全人类的向往？人不是被圈在一起的牲口，吃喝拉撒、生老病死都大同小异。一个穷困潦倒的帕斯卡的诞生，要比好几个不知名的有钱人的出现，有价值得多。</p>
<p><strong>我们当中的每一个人，都在最一无所有的时刻，经历了人生最温暖巨大的喜悦。</strong></p>
<p><strong>真相，常常不是那些显露在表面的一切。如果在这片土地上，而不是另一片土地，橙子树向下生长着结实的根茎，然后挂满了茂盛的果实，那么这片土地就是属于橙子树的真相。如果某种宗教、某种文化、某种价值、某种活动，能帮助人在其中找到属于他的平静与满足，让他在这一切的包围下逐渐变成一个高贵的灵魂，那么这种宗教，这种文化，这种价值与活动，就是属于人的真相。这其中的逻辑是什么？是在这个过程中，让人体会到生命的可贵与美好。</strong></p>
<blockquote>
<p>又或者说 我们又会怎么否定这不是真相</p>
</blockquote>
<p>人的志向也许起着至关重要的作用。有的人将自己关在小店铺里，有的人却向着某个方向，大步地行走着。我们以为在他们童年时的奔跑里，能看见他们人生最终方向的影子。其实儿时的疾跑冲刺，这世上大部分人都拥有过，它们不过是某种表象的错觉。在劫难中或者一场火灾中表现得格外高大的小店铺的主人，你我应该都觉得似曾相识。 <strong>他们在火灾或者灾难中表现出的英勇，让那个夜晚成为他们人生最高大的时刻。然而从此再没有其他的机会，没有造就英雄的土地出现过，于是他们在自己的高大中渐渐沉睡着。是的，高远的志向也许能将人从牢笼中解救出来。只是，大部分的时候，如何将那些志向本身，从埋没它们的沙堆中挖掘出，让它们重见天日？</strong></p>
<blockquote>
<p>加缪，为什么要反抗。人们只会得到他们乞求的东西。这也正是他们的无辜和力量所在。</p>
</blockquote>
<p>这些士兵也许永远也不会再回到这个地方。然而出于谨慎，他们都一言不发。士兵们好像是谷仓里储存着的种子，战争一打响，就有一只手将他们一把抓起，洒入田野间。</p>
<p>队长将带上他的左轮手枪，喝醉的男人也将醉意全无。然后他们会沿着这条走廊的斜坡走到月光下，简单地说几句：“又他妈的要进攻了”，或者是“天气真冷”。然后将自己投入这深沉的夜。</p>
<p>可怕的并不是死亡本身，而是浸润在鲜血的陷阱中的双手，将如何在沉重的呼吸中，一步步抬起； <strong>可怕的并不是死亡，而是这个过程中的种种不适与痛苦。</strong></p>
<p><strong>曾经让你在意的一切，正慢慢地在你眼里显得琐碎无比。你的快乐，烦恼，那些生活中的舒适，好像都变成了另一个世纪的画面。有一天你收到一个同伴死去的消息，他在马拉加附近的海岸被打死。你并没有要为同伴报仇的欲望，至于政治，它也从来没有让你特别地感兴趣过。然而这个消息，还是像一阵海风一样，吹入了你的生命。有一天早上，你的一个同伴对你说：“我们去不去？”“去。”于是，你们就这样上路了。</strong></p>
<p><strong>你无法用言语解释自己为什么会做出这样的决定，而我眼前却有一幅幅清晰的画面，它们解释着关于你这么做的真相。</strong></p>
<p>野鸭在迁徙时，总能在它们占领的土地上，引起其他动物好奇的围观。那些被人圈养的鸭子，被它们三角形的飞行路线吸引，也忍不住笨拙地想尝试着高高地跳跃起来。原始的呼唤在它们身上，不知道唤醒了哪些残留的本能。于是那一分钟里，家鸭们变成了迁移的鸟群。在它们小小的坚硬的脑袋中，那些谦卑的关于池塘、鸡窝和眼前食物的画面，变成了宽广的大陆，无边的海洋和疾风的滋味。它忽视了自己的脑袋有没有足够的地方，能储存下如此多的奇迹。它依然拍动着翅膀，鄙视眼前的吃食，想要成为飞翔在空中的野鸭。</p>
<blockquote>
<p>这也是荒谬 确实人类无辜和力量的所在。</p>
</blockquote>
<p>它们在幼年时被擒获，在人的养育下，不但能活下来，还会乖巧地在你手中吃草。它们任由人抚摸，将潮湿的鼻子伸在你的掌心中。你以为，它们从此变得和那些被养在家里的动物一样。你以为，你让它们躲过了一切未知的忧伤，即使是死亡也会显得温柔无比……可是当它们有一天背朝着围栏，面向着沙漠，顶着它们小小的鹿角，似乎被磁化了的那一刻，它们不知道它们正在逃开你为它们圈起来的世界。你给它们奶水，它们依旧乖乖地喝着。你抚摸它们的时候，它们把自己的鼻子陷得更深。但是当你准备将它们放回大自然时，在几下轻快的跳跃后，它们又重新走回围栏边。如果你不阻拦它们，它们甚至连挣扎都不挣扎，将自己靠在栅栏上，低着脖子，就这样一直到死。什么是爱情？什么是令人喘不上气的飞奔？它们都不曾经历过。当它们被擒获的时候，它的眼睛都还没有睁开。沙漠中的自由它们一无所知，正如那雄性的气味，对它们来说陌生无比。</p>
<blockquote>
<p>这个世界最后的温柔。</p>
</blockquote>
<p>中士，对于那个将你的额头轻轻抬起，为你准备着死亡的人，你有什么可抱怨的？你们互相都为对方冒着相同的危险，不是吗？这一分钟将你们连接在一起的这个世界，令你们不再需要任何的语言。我明白为什么你放弃原有的生活，来到战场。在巴塞罗那，也许你很穷，也许你只身一人，也许你连一个栖身处都没有。而在这里，你觉得自己的生命有了归宿，你的灵魂有了依托。是的，你是被爱接纳着、包围着的。</p>
<p>那些政客真诚与否的口号，是否如同一颗种子一般，在你的心中生根发芽，我对此并不感兴趣。 <strong>如果它们真的在你的心田里长出了幼苗，那是因为这些种子回应着你的需求和等待。</strong> 你是种子们唯一的法官。 <strong>因为种子的优良，只有土地才能辨别。</strong></p>
<blockquote>
<p>你伤害我 是因为我允许你这么做。</p>
</blockquote>
<p>与伙伴兄弟因为共同的目标而将彼此的命运连接在一起，这个过程中所有的经验都告诉我们，爱不是站在这片风景前，各自望着某一个地方，而是所有的人朝着同一个方向一同望去。只有彼此捆绑在一起，朝着顶峰一同攀登而去，当我们抵达目标的那一刻，我们才成了真正的灵魂上的伙伴。 <strong>否则为何在这个物质越来越舒适的时代，当我们在沙漠中分享着彼此最后的食物时，内心体会到的是一种圆满的喜悦？对于我们中间所有经历过在撒哈拉沙漠里，与同伴一起被拯救的那种喜悦与感动的人来说，人生其他各种快乐在它边上，好像都变得如此的琐碎。这也许就是为什么，我们周围今天的世界正在慢慢崩裂。每个人都围绕着承诺给予他这种圆满的宗教，兴奋着，膜拜着。然而所有的这些宗教，又以相互矛盾的言辞，在表达着同样的愿望与希冀。人们在用某种手段达到这种“圆满”前四分五裂，却又分享着同一个目标。</strong></p>
<p>人类的真相，是那些让人与动物得以区分的力量，让人真正称得上“人”的信仰。队长在他与敌人的关系中，表现出的尊严、诚实，对对方生命的尊重，将他提升到一个令人敬佩的高度。而那些平庸而充满蛊惑性，一边拍着阿拉伯人的肩膀赞美他们，一边打从心底侮辱他们、看不起他们的人，对于他们，你一定充满了同情与鄙视。</p>
<p>为了理解他的需求， <strong>为了看清楚他的本质，我们不应该把各种真相对立起来。是的，你们是有道理的，你们所有的人都是有道理的。逻辑证明了这一点。即使是那些将人类所有不幸归罪于驼背的人，也自有他的道理。如果我们现在发起一场对驼背们的战争，所有的人一定立即兴奋不已，报复驼背们曾经犯下的罪孽。是的，也许驼背们也曾经犯过罪。为了看清楚人的本质，必须暂时忘记你我之间的分歧。我们可以把人分成左派和右派，驼背的和不驼背的，法西斯的和民主的，所有这些区分都不容置疑。但是你们知道，真相是那些将世界变得简单明了的东西，而不是制造纷扰混乱的发明创造。</strong></p>
<p>为什么喋喋不休地讨论各种意识形态呢？所有的这些讨论都只有引起人们对人崇高的怀疑和绝望。所有我们周围的人们，其实他们的需要都是一样的。我们希望得到拯救。那挥动铲子的人想知道自己究竟为了什么在挥动铲子。服刑的人挥动的铲子，让服刑的人自己觉得屈辱，它不同于勘探者挥动的铲子，让勘探者变得高大。牢狱不在那铲子挥下去的地方，牢狱在于他一万次地将铲子挥下去，却依然孤独地被关闭在自己的世界中，永远无法与外面的一切相聚相知。而我们，都渴望着从这样的牢狱中逃脱出来。</p>
<p>其他一些人，干着各行各业中打杂的衔接活。那些职业的本身，禁止了你拥有属于先驱者或者博学人士们拥有的快乐。人们以为，为了让他们成长，只需要给他们衣服穿，给他们吃的，满足所有他们的需要。渐渐地，他们变成了库特利那 8笔下的小布尔乔维亚，小城里的政客，或者是工厂里的技术人员，被琐碎的生活关闭了起来。他们虽然受了教育能读书写字，却毫无学养文化。他们平庸地以为，学问无非是自己记忆中的各种公式。专业课程里的蹩脚学生们，对自然科学了解得比笛卡儿还深刻，对法律比帕斯卡还掌握得全面。但是，他们是否拥有笛卡儿与帕斯卡的思考能力？</p>
<p>所有的人，有意识无意识地，都希望自己能存在着。令他们迷失的，是以哪种方式存在，以哪种方式让生命继续。是的，我们可以用军队的制服点燃他们的灵魂，让他们唱着军歌，分享着面包。他们就此能找到自己所寻找的，那种生存在宇宙间的滋味。可是面包一分享完，等待着他们的，却是死亡。</p>
<blockquote>
<p>当烟花冷却。</p>
</blockquote>
<h1 id="夜间飞行_Vol_De_Nuit">夜间飞行 Vol De Nuit</h1><p>我们也可以让古老的传说复活，古罗马帝国的传说，或者泛日耳曼主义的传说。让德国人沉浸在作为贝多芬同胞的骄傲中。可是这样的偶像与崇拜，却是一种食人的陷阱。那些为了科学的进步，拯救他人的生命而牺牲自己的人，当他们的生命消逝的那一刻，他们也同时在为其他生命的到来做着准备。为扩张自己的国土而牺牲生命，或许是一种英勇壮丽的死亡方式。但是今天的这场战争，却与它开始时宣扬的一切主张背道而驰。这场战争到了现在这个阶段，已经远远不是靠流一点血，来激活自己的民族了。一场战争，当它开始动用飞机、芥子气，它就已经不再是一场血腥的外科手术了。每个人驻扎在自己的高墙后面，在毫无出路的情况下，各自用各自的海军纵队向对方投着鱼雷，炸毁对方的作战中心，切断对方的食物供给。谁最后一个腐烂，谁就赢得了胜利。最终，那两方敌人难免同时走向毁灭。</p>
<p>战争欺骗了我们，仇恨在我们向着同一目标的道路上，并不能为我们增添任何的灵感。</p>
<p>难道牧羊人就不期盼着，某一天他沉睡的思想与意识被唤醒？在马德里的前线，我曾经参观过一所建在山坡上，离战壕只有五百米的学校。 <strong>一位下士正在给其他的士兵们上植物学的课程。当他用手一片一片撕下虞美人的花瓣，向这些被战地的泥土与灰尘掩盖着头脸的战士们展示着花朵的构造结构，他引领着他们走向一场朝圣。他们安静地坐在四周皆是炮弹尘土的座位上，手撑着下巴，仔细地倾听着。他们眉头紧皱，咬着牙齿。虽然下士讲的那些东西大部分他们都听不懂，却固执地坚持坐在那里。因为人们曾经这么对他们说：“你们好像那些刚从山洞里走出来的野蛮人，你们得赶快追赶上这个世界上的文明人！”于是他们迈着自己笨重的脚步，向前走着。只有当我们意识到自己所扮演的角色的那一刻，哪怕是最普通渺小的，我们才会感到幸福。只有那一刻的清醒，才能令我们活在平静中，死时归于安宁。因为活着的时候人生有意义，死去时生命才不显得虚无。</strong></p>
<p>我曾经亲眼见证了一场三个农民在床前与他们的母亲告别的场景。那场面无疑是令人痛彻心肺的。那是他们人生中第二次脐带被割断，两代人维系在一起的那个结就此断裂了。从此以后，这三个儿子将独自面对人生的一切，从此以后，全家团聚的那一刻将再没有了母亲的踪影。然而在这生命断裂的那一刻，我却看到了一种延续与重生。三个儿子将成为家庭的领头人，一直到他们离开的时候，再将手中指引全家的力量，交给此时正在院子里玩耍的小孩们。我看着这个年老的农妇的脸，她平静而已经僵硬的面孔慢慢地变成了一张石头的面具。在这张面具上，我看到了三个儿子的影子。老妇人用她的身体、灵魂，打造了这三具男人的躯体。现在她破碎地躺在床上歇息着，轮到她的孩子们来继续播撒这家族的血脉。母亲死了，母亲万岁。母亲走了，将她白发苍苍的脸庞刻在了儿子们的身上。一代一代的传承与消亡充满了痛楚，却也在这种蜕变中，一步一步迈向某种不可知的真相。这就是为什么，那天晚上小镇上为死者鸣起的钟声，在我听来并不充满绝望，而是带着一种隐秘的轻快与温存。它奏响的并不只是死亡的哀悼，它也为重生的喜悦轻唱着。它宣告着由一代人到另一代人的转换与过渡。当我们听到，这老妇人与大地结合在一起的歌声时，内心体味到的，是无限的平静。</p>
<p>她的坏脾气，她发黄的手套和起茧的手，她所有的慈祥和固执。</p>
<p>母亲传递的并不只是生命，她还教授着一种语言，把自己掌握的几个世纪以来的思想的遗产，交到了儿子们的手中。正是这些来自每个家族特有的概念、神话，才造就了牛顿与莎士比亚，让他们不同于一个普通的粗糙的生命而存在着。 <strong>我们内心深处感觉到一种饥饿，是这种饥饿，将西班牙的士兵推向植物课的讲台，将梅尔莫兹带到了大西洋南部。因为这种饥饿的存在，人类“创世纪”的篇章才将继续书写着，它让我们了解自己也认识宇宙。</strong></p>
<p>我对自己说，这些人其实并不对自己的命运感到苦恼。而令我痛苦的，不是这个世界缺少仁慈。这不是一个永远打开的伤口，你只需要小心轻柔地对待它，就能解决一切的问题。那些身上满是伤口的人们，他们甚至都没有感觉到它的存在。受伤的，其实是人类本身。令我痛苦的，是关于园丁的故事。 <strong>令我痛苦的，不是苦难，因为人自己把自己安置在苦难里，就像陷入一种慵懒与习惯中不愿自拔。</strong> 东方的一代又一代人生活在污垢里，他们却乐得其中。 <strong>令我痛苦的，是国家救济的粮食无法解决的。令我痛苦的，既不是驼背们，也不是眼前的丑恶。令我痛苦的，是每一个人身上，被谋杀了的莫扎特。</strong></p>
<p>全文。我非常感谢作者，向我们大家揭示了一个看似矛盾，却又是人类心灵路程中至关重要的一个真理：人生的幸福不在无拘无束的自由中，而是在承担与接受使命的责任中。小说中所有的人物，都将自己的一切献给充满危险的夜间飞行任务。一架又一架的飞机在夜空中平安地起飞与降落，才是他们渴求的幸福的归宿。</p>
<p>里维埃所讲述的，也许正是所有英雄主义的源头。“我们总是将这样那样的价值置于人宝贵的生命之上。这些价值究竟是什么？”“也许，除了个人的幸福，他们可以拯救和创造某种更持久、永恒的东西。里维埃和他的团队，也许，就是为此在日夜工作着、奋斗着。”</p>
<p>时刻冒着生命危险的飞行员，是有权力对普通人脑海中所谓的“勇气”轻轻微笑的。</p>
<p>我也终于明白了，曾经令我非常困惑的一个问题： </p>
<p>人的富有来自他的苦难与艰难，也来自他对简单生活的接纳，比如此时此刻，从这扇窗户静静地眺望着外面的风景。</p>
<p>天空中宁静的云朵少有褶皱，如同那港口平稳安详的水花。</p>
<p>所有那些让普通人的生活显得温存的细节，他们的家，手里的咖啡，散步道上的大树，在他眼前无限地扩大。他像是一个征服者，弯下腰来观察着那个即将被他征服的王国，却在无意中发现这王国中的人们谦逊简单的幸福。他需要放下武器，感觉自己身体的沉重与疼痛。人的富有来自他的苦难与艰难，也来自他对简单生活的接纳，比如此时此刻，从这扇窗户静静地眺望着外面的风景。这个小村庄接纳了他。而他，则因为它偶尔的存在而感到满足与喜爱。</p>
<p>光亮。面对黑夜，每一幢房子都点亮自己的星星，好像是对海洋般深邃的夜晚的一种回答。有人的地方，就有跳动的灯光。法比安喜欢这种进入黑夜的方式，好像慢慢驶入一个港湾，缓慢而美丽。</p>
<p>他们以为他们的台灯点亮的只是自己那张简陋的桌子，却不知远在八十公里外的高空，一个飞行员正被这闪闪灯光的呼唤深深地打动着。</p>
<p>里维埃担心，人群中那些崇拜者热情洋溢的感叹之词，会掩盖这场旅途本身的神圣性。</p>
<p>成形。他并不想企图用自己的严厉和不近人情去征服他的团队们，而是希望他们超越自己。尽管他惩罚所有误点起飞的飞机，尽管他的各种措施里充满了不公正，同时也因为这些惩罚，他令飞行员们在每一次起飞时，都拥有和停靠时一样的意志。这种意志是由他里维埃创造的。他不给他的团队们休息的快乐，而是始终用一根无形的绳索牵引着他们的毅力。</p>
<p>每天工作完毕，他都是一成不变地回到自己的房间。他关上门，从箱子里拿出一沓纸，慢慢写下“小结”的抬头，漫不经心地涂上几笔后，又把纸撕了。他希望自己能将航空公司从某种巨大的危机中解救出来。问题是，公司到目前为止，还没碰到任何严重的问题。</p>
<p>他望着人行道上的人们，寻找着和他一样，因为某种爱或者创造漫步前行的人。他想起点灯人的孤单与寂寞。</p>
<p>他的。用不了多久，当他像一个年轻的希腊神一样地带动着地上的尘土，爬起身，城市中的灯光都将因为他而显得黯淡。她</p>
<p>她躺在床上，忧伤地看着那些花朵、书和空气里的温柔。所有的一切，对他而言，都如同大海般深沉了。</p>
<p>“我把他从恐惧中拉了出来。我要攻克的并不是他本身，而是人在面对未知情况时，那种不由自主的抵制情绪。而正是这种抵制，让行动停止前进。如果我倾听他，同情他，他就真的以为自己是在某个神秘的国度经过了一场历险。而他所恐惧的，正是这种神秘与不可知。人只有在走下了那口阴暗的井，发现里面什么都没有，再重新爬上地面的时候，才能摆脱神秘带给他的恐惧。而这位飞行员，只有在走入最深厚隐秘的夜色以后，才能看清楚那未知中隐藏的一切。”</p>
<p>这个女人所讲述的一切，是属于她那个世界里的真相。夜晚餐桌上点亮的台灯，一个生命对她另一半的呼唤，那个国度里的温柔、希望与记忆。她要拿回属于她的这一切，她也完全有理由这么做。里维埃有属于他的真相，但是他没有办法也没有权力否认她所寻求的。他的真相，在家的台灯下，显得那么难以启齿，那么没有人情味。</p>
<p>“这些也许哪一天会失去生命的人，他们本可以幸福地生活着。”他仿佛看见那些在夜晚的灯火中，朝着金庙望去的人热切的脸庞。“我有什么理由把他们从那里面拉出来？”他有什么权力剥夺他们属于个人的幸福？难道他不应该保护他们享受幸福的权利？而他，却是那个粉碎这一切的人。可他又清楚地知道，个人渺小的幸福，总有一天会如同那金庙前的幻景一样，蒸发消失。衰老和死亡会以一种更残忍的方式摧毁它。也许，除了个人的幸福，他们可以拯救和创造某种更持久、永恒的东西。里维埃和他的团队们，也许就是为此在日夜工作着、奋斗着。</p>
<p>“爱，如果我们只是去爱，那会是一条没有出路的死巷子。”里维埃的内心，隐约地感觉到某种比单纯的爱更崇高的责任。那好像也是一种柔情，只是它更特殊，独一无二。他的脑海里浮现出一个句子：“我们追寻的，是一种永恒……”他是在哪里读到这个句子的？他想起自己曾经见过的那座秘鲁印加帝国时期的太阳神古庙宇，那些堆砌在山顶的巨石。如果没有了这些如同某种悔恨的隐语一般，压在今天人们灵魂上的这些石头，那么这曾经如此伟大的印加文明还剩下些什么？“昔日那些古民族的领袖，是出于一种残忍，还是出于某种深厚的爱，强迫他的人民，在这高山上堆砌这些石头，建造着某种不朽？”里维埃又想起小城里的夜晚，那些围着报亭的音乐起舞的布尔乔维亚。“他们的那种幸福……”也许，令昔日的领袖们深深同情的，不是他的人民遭受的苦难，而是他们终有一天的消亡散落。不是个人的死亡，而是这个民族终有一天将在这片沙海中不见了踪影。于是，他引领着他的人民在高山上堆起千百吨的巨石。因为至少这些石头，永远也不会被沙漠湮灭。</p>
<p>她在此地的出现，向所有人揭示着，幸福在另一个世界是多么神圣的东西。而他们所有的这些人，是如何完全没有意识地，在进行着自己的行动的同时，一手摧毁了这个女人的平静与幸福。</p>
<p>她发现，那属于她的真相，在里维埃他们的世界里，变得难以启齿。所有那些炙热的、近乎原始的爱与奉献，在这里都显得那么自私。她想立即逃离这个地方。“我一定非常打扰您……”“您不打扰我，”里维埃说，“不幸的是，女士，在这种情况下，您和我，除了等待，没有其他能做的。”</p>
<p>里维埃怀着这所有一切创始者的信念，看着他的秘书、机械师和飞行员们。所有这些人都帮助着他，在打造属于他们的作品。他想起古时候那些小村庄的村民，因为听说在某些遥远的地方有很多美丽的小岛，而一起建造出海的船只。那条船载满的是村民们的希望，是它让人们终有那么一天，可以撑开船帆，行驶在大海上。“这行动中会有人因此死去，他们最终也许什么都证明不了。而这些人，只因为那条船，坚持自己所相信的。”里维埃与死亡搏斗着。当生命重新点燃他的作品时，就如同风吹动着航行在海上的帆船一般。</p>
<p>重新开始战斗的里维埃，不愿意错过飞机隆隆的声音。他要听着它的出生、成长和壮大，如同一支行走在星辰中的军队的脚步。</p>
<p>他只要叫停一架飞机的起飞，夜间飞行所有的意义将从此丧失。他选择走在那些弱者前面，尽管也许明天早上，所有的人都将反对他的决定。</p>
<p>胜利，失败，这些字眼是没有意义的。生活超越了所有这些词汇，也早已绘制出后面的画面。一场胜利会让一个民族变得孱弱，一次失败则会唤醒另一个国家。里维埃经历的失败，也许是他赢得最终胜利所必须签署的契约。只有不停地前进，才是唯一的真理。</p>
<p>里维埃慢慢地走回自己的办公室，眼神依然严厉地看着这些工作着的秘书。伟大的里维埃，成功的里维埃。他的肩上背负着的，是胜利的沉重。</p>
<p>20世纪初，因为技术上的大量限制，令飞机的夜间飞行还只是局限在军用飞机的领域。那个年代，驾驶一架飞机和今天相比，复杂性与困难程度都是不可同日而语的。今天民航的电脑自动驾驶在当时是完全不存在的。也就是说，飞行员只能依照事先的路线设计，在空中根据地图以及飞机上各种数据的显示，来判断当前的位置是否和预计的相同。任何未知的天气变化，引擎故障，加上当时雷达技术发展的不完整，令飞行员在每一次起飞时，都面临着生死的威胁。就是在这种条件下，航空业作为运输行业的“起步者”，为了在与铁路和水运的激烈竞争中占据一席之地，拉泰克埃尔公司才投入到夜间航线的开发中。从此，对于飞行员们来说，将要面对的危险，将不仅仅是天气的突变与技术的局限，还有茫茫深不见底的黑夜。里维埃这个人物的高大之处，在于他用尽一切方法鼓动着他的飞行员们，让他们打破人自身的局限。正是这种以牺牲普通人的幸福安逸为代价的，对高远理想，对一切未知世界饥渴的探索与追求，让航空业从最初的举步维艰发展到今天，变成了最常用的交通工具之一。当第一架载着邮件的民航航班在深夜时起飞，一封邮件从欧洲大陆抵达南美洲的时间由几个月被缩短到几天，里维埃和他的团队们开启创造的，不仅仅是时间上的纪录，更是属于人类本身的奇迹。</p>
<p>“我不后悔。我认真地玩了这场游戏，虽然最后我输了……无论结果如何，大海上的清风，我是呼吸过了。”</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[原来这一切都可以讲述 - 2017年度总结]]></title>
      <url>http://chocoluffy.com/2018/01/01/%E5%8E%9F%E6%9D%A5%E8%BF%99%E4%B8%80%E5%88%87%E9%83%BD%E5%8F%AF%E4%BB%A5%E8%AE%B2%E8%BF%B0/</url>
      <content type="html"><![CDATA[<p>嘿！你今年22岁啦，你明年就将从多伦多大学的计算系毕业了。你在今年成为了一名创业者，你想做很多很酷的事，你还记得吗。在时光的边缘回望这一年，有太多的记忆你想留住。你一点一点往回走，想跟上你的影子。</p>
<a id="more"></a>
<h2 id="one" style="text-align:center;">【一】</h2>


<p>这一年，你重读了许多你特别喜欢的作家。比如加缪，比如纪德。他们无不都对这个世界体察入微以及拥有极致的想象。你想，要入世，要反抗。</p>
<p>这一年你最喜欢的还是加缪的《鼠疫》还有毛姆的《刀锋》。你在想，为什么要反抗鼠疫，以及为什么要跨越刀锋。一场灾难想要提醒你什么呢。鼠疫宛如过家家似得，就任性地走了。人们也任性地忘却了，满城烟火地庆祝。作者赐死了看得最清楚的塔鲁。塔鲁一生追求着一个没有死刑的社会，一辈子的信仰，毫不犹豫。作者让帕纳卢神父，一个传授神的旨义的人，去亲眼见证一个孩子的死，去犹豫一些自己曾经奉为圭皋的心意。作者让小说主角，坚持抵抗在第一线的里厄医生坦白自己的迷茫。作者说真正的英雄是格朗，兢兢业业在二线工作的职员，愿望是为异地的恋人创造一篇序语，却在最后一刻去掉了所有的修饰。你在想到底什么是荒谬？</p>
<p>荒谬是命运无常。是把最精美高贵的生活捣碎给你看，看，没想到吧。荒谬也是哪怕一丁点温柔的改变。是最坚硬的钢板眦裂的小缝，是曾经不可动摇的不再不可动摇。荒谬也是倔强。是我不必厘清意义，也执意反抗。</p>
<p>无常，带有微小的改变，也偶尔倔强。你发现原来加缪想写的荒谬，写下的却是我们的生活。</p>
<p>你看见了坚定地守望着地平线的眼眸，也看见了广场上震耳欲聋却空洞飘渺的烟火，他们都是快乐的，而他们的快乐有区别吗？你越来越确信着这一点，每一个人都是一座孤岛。人无法分担他未曾经历过的痛苦，一如他听得见却听不懂远方同类的呼救，哭泣与愤怒。人依旧是这个老样子，想要的正是唯一取决于他们自身的东西。你感到些许惋惜，却也想到，这也正是他们的力量和无辜所在。你说，要入世，要反抗。或许他人即地狱，亦同他人即救赎吧。 ​​​​</p>
<p>你发现，原来这就是刀锋。</p>
<p>你一定会好奇自己的答案。相比绝对的自由，你更偏爱责任与羁绊。这或许解释了为什么这一年你偏爱纪德多于毛姆吧。你想追逐一些比时间更长远一点的东西。你想带来笑容。</p>
<p>你也在寻找加缪的答案，你发现他关注活着的人的命运胜过一切，你也深受影响。你很尊敬他的态度。他写道，“为了改变天生的无动于衷的立场，我曾置身于苦难与阳光之间，苦难使我不相信阳光之下一切都是美好的，而在历史中，阳光则告诉我，历史并非一切。”</p>
<h2 id="two" style="text-align:center;">【二】</h2>

<p>这一年，你创建了自己的公司，迎来了一些新的伙伴。你做出了一些成绩，你在着手准备着更大的挑战。你遇见了很多很优秀的创业前辈，你要开拓眼界。你发现其实很多争议都因为模糊的语境，每个人都在用自己的经历和审美下定义。说服投资人也好，团队伙伴也好，不要想当然。你要有全面的把握，才能有偏执的资本。你其实不止一次在问着自己那些海贼王里没有画出的情节，你会在想路飞如果是你，你会怎么做。你要记得这一年来最享受的时光，是和你的伙伴一起打拼。</p>
<p>这一年，你搬了一次家。你临走前把房间清理地干干净净，就像刚来时那样。这一年里你在这个家里带着团队开发了大大小小的项目，也渐渐成为了公司的雏形，你要记得那些天真的想法，纯粹的热情，那些在屏幕前闪烁的蓝色的夜。这一年你和很要好的朋友一起上班，一起上课，你要记得室友起床晚，早上烧水要轻。搬走前的那天下午你在阳台上吹了很久很凉的风，你回忆并诧异着很多的幸运和巧合，你仔细地把它们藏好，不被吹散。</p>
<p>这一年，你度过了你22岁生日。或许也和生命里的其他日子没有什么不同，你遇见着自己最熟悉的人。你收到了很多卡片和祝福，你回复了更多的卡片和祝福。你其实心里很明白，成长的仪式，更多时候是自己给的。你不会因为许了一个愿望就长大一岁，但你也渐渐发现，你因为一个日子而被挂念着，你觉得很温暖，你喜欢多伦多的冬天多了一个理由。</p>
<p>这一年，你听到了一首很喜欢的钢琴曲，你买了一架电子琴开始从零学起，你想在未来有一天弹给她听。</p>
<p>这一年，你开始相信，这个世界在你心里呈现的样子，远比这个世界本身重要。</p>
<p>这一年，你中了很深的存在主义的毒。</p>
<h2 id="three" style="text-align:center;">【终】</h2>

<p>你把一年来的书稿，日记翻了遍。你有点诧异原来一个人的世界可以被这么短暂地概括，原来回忆如雪，你未曾留意的地方只会是白茫茫的一片。你像是一个在雪地里行走的人，当你现在回望着，你沿着留下的脚印一步一步，你只在你自己的角度遥望着世界。</p>
<p>你要记住，这很片面，却也是你唯一能做到的事。</p>
<p>这一年，你发现自己对这个社会还是充满希望，发现了几个特别崇敬的作家以及他们磅礴的世界，发现自己依旧喜欢着海贼王，憧憬着冒险。</p>
<p>你慢慢感觉到，你的所有回忆，所有留下的文字，不只是给你慰藉，允许你逃离。那些隐秘的不安，那些明亮又失落的沉默，你社会上同胞们的倾诉，他们的苦衷与期盼，这个光怪陆离却时常打动你的世界等等，原来这一切都可以讲述，也值得讲述。似乎是有了一种线索， 于是，波澜也好，平淡也罢，当这些痕迹再次出现在身边的时候，你一眼就认得出来。</p>
<p>分别2017年的最后这一天，恰巧是多伦多今年最冷的一天。这像极了某种远古的仪式，你捧起丰盛的回忆碎片，然后存封进冰里。</p>
<p>不是所有的心事都有出口，于是你挑了几片，紧紧护在了怀里。你期待着和别人交换碎片的那刻，你期待着被理解，像一束光簇拥着另一束光。</p>
<p>或许未来有一天你会无意间翻到这篇日记，或许你会嫌弃现在的幼稚和天真，像嫌弃画里老去的自己。你会有很多的伤口，更多的疤痕。你会摔碎很多曾经无比珍贵的东西，为了守护一些更重要的东西。</p>
<p>但无论如何，希望那时候的你，依旧坚定，依旧温柔。</p>
<p>再见了，2017。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2017 Nov-Dec.]]></title>
      <url>http://chocoluffy.com/2017/12/28/%E7%A2%8E%E8%AF%AD-2017-Nov-Dec/</url>
      <content type="html"><![CDATA[<h2 id="17-12-30">17.12.30</h2><p>怎么认得出善良？</p>
<h2 id="17-12-29">17.12.29</h2><p>kindle导出笔记，看来还是通过mac的kindle同步ipad上的笔记来整理和导出比较方便~</p>
<p>这个世界在我心里呈现的样子，远比这个世界本身重要的多。</p>
<p>感觉中了存在主义的毒。</p>
<p>人们无法分担他们未曾经历过的苦痛。</p>
<p>希望明年的你，依旧坚定，依旧温柔。</p>
<p>【创业笔记】在讨论产品的规划，商业模式等等的时候，其实很容易出现一种状况，就是每个人说得都是对的，“我们需要这个这个…”，“那个功能也很不错…”。一定要分好主次！</p>
<p>【创业笔记】其实所有人说的都是对的，争议点在于不同的人对于不同词语的理解不同。很简单，比如我说”社交就是kill time“。”kill time“这个短语在很多人想法里是很负面的。在争议的时候，去回溯定义。</p>
<p>【创业笔记】知乎和今日头条的纠纷，越看越像是，我造了一个教堂，妒忌你搭了一个集市的人气旺。于是教堂的主人气急败坏地拆墙扩容，大声吆喝。路人还远远瞧得见锃亮的塔尖，走进一看无非装修得精致的又一个摊位罢了。</p>
<h2 id="17-12-23">17.12.23</h2><p>足球、文字和钢琴，是我希望可以陪伴我一生的信仰。</p>
<p>最安静的时间，都是在运动之后。</p>
<p>其实所有的争议，都只在于不同人对不同表达的歧义理解。如果存在一种数学符号的精确定义。人就能免除很多痛苦。而失去的又是什么呢。</p>
<p>“当一个事物流逝掉以后，我们通常就用将其浪漫化的方式取暖，以此来抵挡流逝本身无尽的寒意。”</p>
<h2 id="17-12-15_新书">17.12.15 新书</h2><p>追风筝的人<br>生命不能承受之轻  昆德拉<br>🌶️ 看不见的城市 卡尔维诺 ！！ 就是《孤岛的蔚蓝》的那个卡尔维诺。<br>面纱 毛姆 （爱情小说。。再等等吧）<br>局外人<br>金阁寺 三岛由纪夫<br>🌶️ 如果在冬夜,一个旅人 卡尔维诺</p>
<p>kindle push! 如果amazon.cn没有书可以试试在这里找！有种感觉，卡尔维诺会成为我最喜欢的作家嘛？想见识下天马行空的想象力。</p>
<p>近期的关注点：</p>
<ul>
<li>卡尔维诺</li>
<li>加缪</li>
<li>陶立夏的 安尼儿的鬼魂</li>
</ul>
<h2 id="17-12-11_我欠下的日记">17.12.11 我欠下的日记</h2><ul>
<li>“很深很深的蔚蓝”，鼠疫的读书笔记。</li>
<li>“一个人生命中的雪，你不能全部看见”，海贼王20周年。</li>
</ul>
<h2 id="17-12-09_读书">17.12.09 读书</h2><p>ipad的kindle app比kindle好用好多！！</p>
<p>以及ipad air的kindle貌似不会</p>
<p>发现了嘛。成长和年龄其实完全没有关系的。纪德14岁开始的日记。桑塔格17岁的日记。让一个人成长的是思考。</p>
<p>挺不忍心的，但的确，这和阶级相关。</p>
<h2 id="17-12-07">17.12.07</h2><p>snapchat那个把friends和新闻分开的举动正是证明了微信有多正确。</p>
<p>绝大多数人都知道从1到10怎么走，所以他们成了跟随者；但只有极少数人知道从0到1怎么走，所以他们成了领导者。前者和后者在智商和能力上并不存在本质上的差异，差别只是你是否愿意逼着自己做难事。</p>
<h2 id="17-12-04">17.12.04</h2><p>关于鼠疫。关于英雄主义。</p>
<p>加缪的语言有所保留的抽象，像是一片隐喻而不戳破。其中一个就是关于英雄主义，乃至苦难面前的英雄主义。格朗，这个人物在鼠疫中期带来的一段思考，如何让英雄主义退处于次要地位。不喧哗，不热烈的英雄主义，是因为我想让大家知道，正义，不必喧哗。</p>
<p>也是第一次让我对“史诗般”，“热烈地”的修饰产生抵触。很可能其实无关修饰本身，抵触的是使用者的附和而非描述。头脑是冷的，而心是热的。</p>
<p>世界上本没有善恶，只有无知的程度之分。</p>
<p>任何人都分担不了自己看不到的痛苦。</p>
<h2 id="17-12-01">17.12.01</h2><p>On social media, the most extreme voice becomes the loudest. ​​​​</p>
<h2 id="17-11-26">17.11.26</h2><p>学习到了一个思维方式：做音乐风格分类系统。找到音谱之后用CNN对图像进行训练！截图！！很聪明的一种workaround</p>
<blockquote>
<p>[18.5.27更新]：你最终做出来了你知道吗。</p>
</blockquote>
<h2 id="17-11-21">17.11.21</h2><p>效率和公平。而人工智能，算法最大的作用就是效率最大化！知识付费。未来的世界。</p>
<h2 id="17-11-20_下雪">17.11.20 下雪</h2><p>以前一直很少听泽野的配乐<br>一直觉得泽野是恢弘 是力量 是燃的同义词<br>直到无意间听到他的纯钢配乐<br>好柔和 好惊喜</p>
<p>像是在习惯冬眠的季节<br>突然醒来<br>意外见到了雪</p>
<p>过了这段时间<br>如果我真的下定决心学琴<br>我一定要弹你的曲子</p>
<h2 id="17-11-19_白色和黑色">17.11.19 白色和黑色</h2><p>从vic的饭堂走出来<br>在kelly图书馆对面小花园的草坪上<br>瞅见一只雪白的信鸽和一只灰黑的松鼠<br>相对着 大概只有一块巧克力棒的距离<br>都埋着头 在找东西吃吧<br>突然一瞬间它们都抬起头<br>松鼠先生接着又低下头啃东西了<br>而小鸽子踏了几步 走过了松鼠先生 也在啄东西<br>只有我一动不动地站在那里 开心得像个傻子<br>它们说了些什么嘛 为什么不会害怕<br>草地上那么显眼的白色和黑色<br>在那一刻<br>仿佛一段故事的结局</p>
<p>最近压力好大 最后一周了 也好担心因为自己的迟钝而冷落了什么 生活还是值得期待的吧 就像这个很柔软的时刻</p>
<h2 id="17-11-18">17.11.18</h2><p>早餐：<br>为什么我们会有刻板印象，为什么我们会去顺从某些专家的观点。因为这符合每个人的利益，相比去了解整个事件的原委，去顺从一个观点节省了无疑更多的时间成本。但同样不能本末倒置的是，既然知道自己不了解真相，在接受观点的时候就要克制。</p>
<blockquote>
<p>刻板印象不一定是错的，基于刻板印象的区别对待一定是错的。</p>
</blockquote>
<p>路上：<br>最近在看桑塔格。之前在想的，或许可以粗略把自己喜欢的文学分为两种，一种是像陶立夏那样有纹理有温度的，另一种是像桑塔格和加缪般深刻的。仔细推敲，其实温暖的文字，生活的隐喻也可以很深刻，这个类别用的不很恰当，一路上在想哪一个词更加合适，到了图书馆坐下来，嗯是审判。</p>
<h2 id="17-11-17_惯性">17.11.17 惯性</h2><p>在体会到智力的快感之后，就再也不想堕落。</p>
<h2 id="17-11-15_关于阅读">17.11.15 关于阅读</h2><ul>
<li>乃是帮助我们明白无论发生什么事情，都永远有一些别的事情在继续着。</li>
<li>福楼拜说：“语言是破锣，我们在上面敲打出节奏，引得熊起舞，但我们真正想要做的是感动星辰。”</li>
</ul>
<h2 id="17-11-08_诗">17.11.08 诗</h2><ul>
<li>红砖色的路上 很容易踩伤 很白的梦</li>
<li>岛的四周是 很深的拒绝或很深的厌倦 才能形成的那种蔚蓝</li>
<li>就像一头本应该在冬眠的熊，茫然四顾，意外见到了雪。</li>
</ul>
<h2 id="17-11-04_生日">17.11.04 生日</h2><p>自由？没有独立，就没有自由。现在和过去的媒体环境。仔细想想，</p>
<p>“因为我们在井里，书店上架什么我们读什么，外面的人丢什么就要什么。现在生活好了，有了当当亚马逊，选择多了，但是也只不过是在别人丢的东西里捡了自己喜欢的，然后陶醉的跳舞。音乐也是，电影也是，舆论的导向让我们从来都没有真正的品味过什么。”</p>
<p>过去没有太多的选择，我们都是仔细想好了之后去使劲找，虽然可能最后找不到；但是现在呢，不同的渠道会给你很多的选择，而你的任务渐渐地变成了从中去挑，你去挑你喜欢的书，音乐和电影，你去听你喜欢的观点，关掉那些不合意的网页，被动的筛选，和主动的寻找。是很不一样的。</p>
<p>生日祝福</p>
<p>“愿，栉风沐雨，不失阴凉。”</p>
<p>22岁生日的这天，或许也和生命里的其他日子没有什么不同，你遇见着自己熟悉的人。岁月让每个人背负着一个一起变化的数字，或许更多的是紧迫感。成长的仪式，更多时候是自己给的。我或许不会因为许了一个愿望就长大一岁。</p>
<p>喜欢多伦多的冬天多了一个理由。</p>
<p>我会记得生命里那些下着大雨，没有带伞的日子 ​​​，也正如我会记得所有不期而遇的温暖。</p>
<p>没有什么能够阻止你 无论娱乐，研究，还是学习</p>
<p>boils down to how badly you want one thing to happen.</p>
<p>大多宁静，其实是奔跑来换取。比如一天忙碌后的一段文字，下班后的咖啡。踢一场球以后的啤酒。</p>
<p>在这一点上，复制人比我们更像人，它们永远在问“我是一个什么样的存在”。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2017 Oct.]]></title>
      <url>http://chocoluffy.com/2017/10/28/%E7%A2%8E%E8%AF%AD-2017-Oct/</url>
      <content type="html"><![CDATA[<h2 id="17-10-29_自由">17.10.29 自由</h2><p>突然在想，如果高中那个国旗下讲话，自己能够更认真准备就好了。</p>
<ul>
<li>梦想和创新，是被视野所限制的。给自己5秒钟说出一个你最想去的地方，这个地方一定是你知道的，你了解过的地方。这个世界很美妙的地方在于，或许就在这个时刻，巴塞罗那的街头，伦敦香榭大道上，布拉格的黄昏，都有着些很专注的故事在发生。而你所牵挂的梦想，你的目标，可能是因为这是你了解过的，这是你觉得比较容易达到的。</li>
<li>自由。这个世界是一座座孤岛。种族，语言，阶级，是偏见，是不了解，切断了一群人和另一群人的链接。某一部分人所热衷的集体自豪感，有没有可能是他们拒绝了解的借口呢。创世纪里上帝让不同的人拥有不同的语言，是因为他希望阻止人类的通力合作。<br>什么是自由？很多书上提到“自由意志”，嗯说人话，我理解的自由，是把这些孤岛连起来，能够跨越偏见，跨越狭隘，去理解，去拥抱每一个新事物，这才是最自由的人。“我才不要统治大海呢，这片海域上最自由的人，才是海贼王。”。<br>那究竟自由和“梦想和创新”有什么联系呢。希望去自由地梦想和创新。</li>
<li>刀锋。在一次空军战斗中自己的同胞被敌军击落，最好的朋友在自己的眼前死去，拉里在想，“为什么这个世界上存在邪恶？”</li>
</ul>
<h2 id="17-10-27_日记">17.10.27 日记</h2><p>“把恋爱和猫两个字更换，恋爱摇头晃脑地钻到你怀里，像猫一样温暖。”</p>
<p>“当窗玻璃上开始浮现背后的书架的影子，与窗外的落日、晚霞以及城市剪影融合，你就知道-室内的光开始渐渐战胜室外的光-，突然，你发现自己也出现在了对面，就知道：从此，你再看不到世界了，你看见的全是自己。”</p>
<p>“喜欢的，大多叫不出名字。比如蓝色渐变的天空。”</p>
<p> 门可罗雀的第二天，人走茶凉。 论明星。</p>
<p>风。起风了。像是在呼吸明天的空气。</p>
<p>我遮着光，不被淋湿。</p>
<h2 id="17-10-27_决定优雅">17.10.27 决定优雅</h2><p>“艺术家反思悲惨的经历时并不愤世嫉俗，因此我们才能够从痛苦中得到愉悦，在逆境与灾难中受到启迪。鲁米告诉我们，如果我们决定优雅地凝视可怕的东西，我们便可察觉它的美。一切取决于我们如何看。”</p>
<h2 id="17-10-22_孤独">17.10.22 孤独</h2><p>“我必须承认生命中大部分时光是属于孤独的，努力成长是在孤独里可以进行的最好的游戏。”</p>
<h2 id="17-10-21_等我">17.10.21 等我</h2><p>“加班后疲倦的走进罗森，发现剩了最后一个便当。就仿佛一直在等我一样。”</p>
<h2 id="17-10-18_致最爱的人">17.10.18 致最爱的人</h2><ul>
<li><p>她发了一条”if you believe in love at first sight, then you won’t stop searching.” 当我追到她的时候，我会回复，”i believe, but i stop.”</p>
</li>
<li><p>呀打扰啦 就是那个下周末或者下下周末有时间嘛 我想约你一起去momosan晚餐 这段时间会很忙吧 貌似好多作业和midterm呢 如果希望改时间也没关系啦 sry隔了一周才和你说 我比较害羞</p>
</li>
<li><p>刚刚切到这首歌，原本是战争的背景，但是每次听都想起是下雪时在雪地里走，于是就想到说等多伦多下雪的时候发你，结果一查天气，估计11月都不会下雪</p>
</li>
<li><p>我有一个歌单，致最爱的人，我想一首一首发给你。</p>
</li>
<li><p>我未必那么喜欢过节，但我喜欢多一个理由留在你身边，还可以为你挑选礼物。</p>
</li>
</ul>
<p>你是所有的理由。</p>
<h2 id="17-10-13_勇气">17.10.13 勇气</h2><p>晚安~ 今天能跑出来和你打招呼，是我今天做得最酷的事。</p>
<ul>
<li>股权分配</li>
<li>什么时候应该引入新的创业伙伴。</li>
</ul>
<h2 id="17-10-11_22岁的巡礼">17.10.11 22岁的巡礼</h2><p>突然发现，自己喜欢的作家，无不都对这个世界体察入微以及拥有极致的想象。或许他人即地狱，亦同他人即救赎吧。</p>
<p>我一直希望能去英国交换呢。到底是梦想困住的脚步，还是脚步延塑了梦想。</p>
<p>为什么硅谷精英会支持普遍基础收入。</p>
<p>“即便是日常生活也深如大海。”——李娟</p>
<p>Life isn’t about waiting for the storm to pass. It’s about learning to dance in the rain.</p>
<p>拥有坚固的铠甲，不代表可以肆意踩踏。</p>
<p>我知道我自己究竟适不适合商业，我只知道，为了能够有更大的影响力，我需要更熟练。</p>
<h2 id="17-10-05_世界的趋势">17.10.05 世界的趋势</h2><ul>
<li><strong>未来的职业分布，将会有极大的部分属于为富人服务的集体。而机器人的普及，则成为维护大众的工具。</strong></li>
<li><strong>为什么这个世界的贫富差距越来越大会变得更加极端和不可逆转，因为在最顶尖的人的平均教育水平在逐渐提高。而教育，抑或说认知水平，智力，是最难打破的垄断。未来的社会福利水平一定会越来越高，因为那是维护社会阶级稳定最好的办法。让一个人安静下来的方式，让他含着棒棒糖，让他忙。</strong></li>
<li>专业分化的人群。面对着激烈的竞争压力。业余时间娱乐沉溺。而狭隘。</li>
<li>互联网带来了无与伦比的自由，也造就的极端的狭隘和封闭。集群效应。一个很形象的比喻，每当周围的噪音多起来的时候，我们往往会下意识地去做一些动作，比如双手捂住耳朵。同样的，一个注意力遍布满大街的时代，也是一个没有注意力的时代。很多商家也发现了这一点，陆陆续续推出了自己的编辑精选，头条，热点。这是亡羊补牢的做法，更何况商业头条往往倦怠人性。<strong>越普遍的主流推荐，伤害的未受教化的受众选择的权利和他们的话语权。</strong></li>
<li><strong>我们在可以选择看到更多观点的同时，我们也变得更容易去屏蔽那些刺耳的反对声音。</strong></li>
<li>是由社交媒体在创造我们的记忆。我们貌似有了更多的集体回忆，而你仔细看却看不见一丝阳光，一张笑脸。而去看看那都是哪些回忆。<strong>on social media, the most extreme becomes the loudest.</strong></li>
<li>“现代社会不是去改变那些使人们抑郁的条件，而是给人们抗抑郁药。”</li>
<li><p>人类在还没有学会自制之前，还配不上自由。</p>
</li>
<li><p>machines become more untestable。more blackbox。</p>
</li>
</ul>
<blockquote>
<p>有理的，的确对普及的技术而言，公开透明是最好的监督；但目前区块链更多适用于信息存储（比如交易记录）更像是未来的基础建设，在商业大数据的背景下，AI模型的泛化回归以及预测能力，就商业价值而言依旧是目前最好的选择，很可惜AI本身的方案也是黑箱，即便最理想的情况下开源了AI的技术，人们依旧无法清晰归因任何AI模型做出的决策；本质上来说，人们无法理解人工智能的决策却必须接受其逐渐取代人类作为更高社会生产力的方案，这是不可避免的趋势，但是目前社会过渡的方案以及巨头乃至个人偏向垄断的利益纠纷带来了绝大多数的争议，包括歧视，包括隐私问题。技术只是工具，也如老师所说的放大器，决定人性是天使还是魔鬼的终究还是人性自己的博弈。【这个话题远超出我午饭期间能够阐述记录的范围，很多措辞比较大的解读空间，也请谨慎看待，但总体上评估，我个人是tech liberal的倾向】</p>
<p>对于“政治正确”，我的观点可能有失偏颇，但我还是觉得现阶段“政治正确”被更多用来当作抑制言论自由的理由和保护伞，远非其原始定义。我个人还是持偏负面态度。</p>
</blockquote>
<h2 id="17-10-05_共享经济真的存在吗？">17.10.05 共享经济真的存在吗？</h2><ul>
<li>我们觉得便利的，究竟是科技带来的实时性，还是共享经济本身机制的优越性？使想想，如果同样的uber, airbnb的技术，适用的是在政府管辖范围的挂牌出租车上，是各地遍地的连锁酒店上。这些改变是否对我们的生活同样便利？</li>
<li>共享经济内部存在的趋势或许是，专业玩家排挤掉业余玩家。无论是租车服务，还是租房服务。专业的接单司机，批量操作的房屋主人，。</li>
<li>由此带来的另一个问题， <strong>取得优势的行为是否具有宏观的合理性。</strong> 比如一个普遍诚实真诚的社会，做一个爱占别人便宜的“坏人”是占优势的，而这些“坏人”数量的增加和驱逐良币的行为增多，是否能够解释该社会体制</li>
<li>又或者说， <strong>其实专业玩家排挤业余玩家的现象其实哪里都存在，只不过在一个业余玩家的主场，这种现象会收到更多的关注罢了。</strong></li>
</ul>
<h2 id="17-10-01_海岛">17.10.01 海岛</h2><p>世界上有那么多可住的地方，为什么偏偏是海岛呢？</p>
<p>理由可以有很多。在想象中，它拥有美，代表自由，夹带一点点来自远古的荒凉。</p>
<p>每片斑驳。</p>
<blockquote>
<p>喜欢下雪天，带给人一种远古的荒凉。冰凉的手心，有时候也让自己犹豫，寒冷的是自己，还是周遭这个世界。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2017 Sep.]]></title>
      <url>http://chocoluffy.com/2017/09/28/%E7%A2%8E%E8%AF%AD-2017-Sep/</url>
      <content type="html"><![CDATA[<h2 id="17-9-29_羞耻感">17.9.29 羞耻感</h2><p>“youth has no shame, shame comes with age.”</p>
<h2 id="17-9-27_未来的产权">17.9.27 未来的产权</h2><p>电子化和产权界定。从前的ownership是只要你买了这个商品，你就拥有它。但现在的情况是，你成为了这个产品背后商业模式的一环。你的隐私，你的数据，是这件商品从你这里获取的最宝贵的数据。</p>
<h2 id="17-9-25_反动是相对的">17.9.25 反动是相对的</h2><p>未来的统治阶级，知识越多越反动，因为知识多了就不存在统治阶级了，反动是相对的。贫穷加救济是会产生依赖的。战争及和平。</p>
<h2 id="17-9-22_技术的弊端">17.9.22 技术的弊端</h2><p>新技术改变社会，最后人们会发现，自己将被强制去使用它。</p>
<p>“新技术改变社会，最后人们会发现，自己将被强制去使用它。比如，自从有了汽车，城市的布局发生了很大改变，大多数人的住宅已经不在工作场所、购物区和娱乐区的步行距离之内，他们不得不依赖汽车。<strong>人们不再拥有不使用新技术的自由了。</strong>“</p>
<blockquote>
<p>人们对技术的进步，失去了反对的自由。</p>
</blockquote>
<p>之所以alphago会引起，与其说我们是在害怕人工智能，不如说我们是在害怕我们不如人工智能，因为他们做出来的决策，我们不懂，却能够达到一个更好的结果。</p>
<p>“工业革命极大增加了城市规模和城市人口比例，而人群聚集会增加压力与攻击性。技术变革导致现代社会的变化十分迅速，因此整个社会不存在稳定的框架和价值观。有些人急于拯救自由却不愿牺牲技术带来的所谓好处，他们会提出天真的新式社会构想来调和自由与技术。”</p>
<blockquote>
<p>革命不比改革更难，改革是趋利避害的，而革命是实现理想而持续的。<br>“现代社会不是去改变那些使人们抑郁的条件，而是给人们抗抑郁药。”<br>未来，宗教，在人口多数的统计意义上很可能会灭亡。 不会灭亡的是极端思想者，因为他们寻求的不是归宿和慰藉，而是革命。科技的发展要求着各个社会要发布相同的规范？ </p>
<p>科技的发明，从已然存在的现实世界角度来说，并没有我们想象的自由。我们不过是从依赖旧的事物转移到依赖新的事物上而已。过程中的确新技术会解决一些过往世界的问题，但是同样边界的扩大也无法避免地带来新问题，由此抵消曾经的便利。 <strong>更准确地定义将会是“自由感”而不是“自由”。在掌握新技术，新框架，新工具之后的“自由感”，因为可供选择的选项变多了，会影响人们的直观感受。但同样值得警惕的是，新技术的发明和普及似乎越来越意味着新技术的被迫使用，选项是否仍然存在值得讨论。</strong></p>
<p>技术爱好者们在某种意义上是及其天真的。技术能够解决许多实际的问题，然而技术的商业扩张则是需要极其的克制，才能暂时地避缓规模效应带来的社会问题。<strong>不然只是又一个顺从人性弱点和原罪的放大镜。</strong><br>然而，坏消息是，革命者往往擅长破坏，不擅长重建。</p>
<p>“一个社会的经济与技术结构在决定一般人的生活方式方面远比政治结构更加重要。”<br>更有甚者， <strong>可能政治结构只是一种缓冲焦虑的方式罢了。</strong></p>
<p>互联网的趋势，表面上话语权更分散了，实际上是更集中了。</p>
</blockquote>
<h2 id="17-9-20_荒诞和平凡">17.9.20 荒诞和平凡</h2><p>怎样才算一个好故事。荒诞和平凡。一个荒诞故事背景里的平凡事迹，和一个平凡世界观里的荒诞行为。以及为什么我们偏爱后者。因为代入感。因为我们无法分担自己看不到的痛苦。因为这个世界在我们心中呈现的样子，远大于世界本身。</p>
<blockquote>
<p>意思是，可感可触的思想而容易被接受，而不一定是更真实的思想。</p>
</blockquote>
<ul>
<li>一个全部都是聋哑人的世界。如果世界不存在听觉和声音。</li>
<li>“一切伟大的世界历史事件与人物可以说都出现两次，第一次是作为悲剧出现，第二次是作为笑剧出现。” 小丑和英雄的角色从来没有如此接近过。英雄，还是小丑？</li>
<li>他认为当自己戴着面具时是摘掉了面具。</li>
</ul>
<blockquote>
<p>我在这个世界里做梦，被抛弃的是我，还是这个世界。</p>
</blockquote>
<p>我们在荒诞中连接情感，我们去爱，我们焦躁，我们知道并唯恐它离去。</p>
<blockquote>
<p>只有我知道这是个荒诞的世界，我才敢去爱。</p>
</blockquote>
<h2 id="17-9-19_专注">17.9.19 专注</h2><p>没有专注力的人生，就仿佛大睁着双眼却什么也看不见。 —— 村上春树 ​​​​</p>
<h2 id="17-9-15_我的海贼王故事">17.9.15 我的海贼王故事</h2><p>很多时候，我都好想去那么想象从自己视角出发的，真实世界里的海贼王故事。相似的冒险和伙伴，不同的敌人和岛屿。如果可能，我想把这个故事续写下去。</p>
<p>海贼王没有画出来的，如果伙伴遇上了更好的机会去实现他们的梦想呢？如果船长路飞，并没有那么受幸运眷顾，如果路飞也只是一个普通人呢？</p>
<ul>
<li>关于我自己的，申请研究生还是继续创业的困惑。（我还因为身体不好的原因养成了一些荒废的坏习惯，浪费了2017年中间的几个月时间。我很受自己的心理暗示；还很懒；对目标还没有坚持不懈的努力）</li>
<li>关于kinder和bowen，遇见新的伙伴，很靠谱的伙伴，怎样让他们信服自己的想法，一起冒险。</li>
<li><p>gloria被馋猫挖去当销售。</p>
</li>
<li><p>如果你最好的两个朋友吵架了呢。如果你什么忙都忙不上呢。如果路飞是你，你会怎么做。作为群体的一部分，最重要的特质是体谅。</p>
<ul>
<li>永远不要在安慰人的时候，谈理性。</li>
<li>永远要尽早促成面对面的交流，无论付出什么样的代价。要让双方都知道他们都在为对方着想。</li>
<li>竟然没有想到，原来男生的眼泪这么宝贵。一次挽留了gloria让她过来和ajax见面，一次说服了ajax出门和gloria面谈。什么才是真正重要的？我不知道。我只知道，当gloria提起鲸语团队解散，社团不做了，我没有哭。当gloria提到，如果他们从一开始就没有当对方是朋友呢，我的眼泪一下子就出来了。gloria说她是对所有人都很好的人，ajax也是一个表面上很喜欢开玩笑，很多情感很多细节藏在心里的人。我说不出更多，我只记得起，他们都是那么的善良，那么的宝贵。原来，这就是伙伴。原来，上帝是这么来考察，你有多在意一些人。</li>
</ul>
</li>
</ul>
<h2 id="17-9-14_信息的价值">17.9.14 信息的价值</h2><p>The information value of a message depends on the range of alternatives killed off in its choosing. 信息的价值，也同样取决于它排出了多少的选项。</p>
<h2 id="17-9-13_温暖">17.9.13 温暖</h2><p>我会记住生命中不期而遇的温暖，我也会记得那些大雨磅礴，没有带伞的日子 ​​​​。</p>
<h2 id="17-9-03_关于科技和人性">17.9.03 关于科技和人性</h2><blockquote>
<p>人人都知道，极大的权力，如果没有伴随着极高的自制，会造成多大的灾难。可是当科技开始延伸每个人目力所及，触手可及的范围的时候，。。。</p>
</blockquote>
<p>“不妨做一个假设。有一天，科技解决掉了所有的病痛，人类会变得如何？他们会无所忌惮、为所欲为，他们不再畏惧空气的污染或者混乱的性交，那会是一个地狱。有科学家和商业精英预言，纳米机器人、干细胞、人工智能等新技术可能把癌症、艾滋病等等绝症都治愈，但是他们可能并没有想清楚，也可能不愿意去想清楚，那时的人类又会做些什么。”</p>
<p>我不认为病痛会被科技完全消灭。不可能。我相信本能不会屈服，本能背后的生命法则不会失效。</p>
<blockquote>
<p>有没有想过，如果有一天科技让人不畏惧肺癌和艾滋病，这会是一个空气严重污染以及混乱乱交的世界嘛，那会是一个地狱。 <em>科技不会告诉你你究竟是谁。科技也不会回答拉里那个问题，为什么会产生邪恶。</em></p>
<p>一个越流行的工具，让使用者妥协着更普遍的自由。</p>
<p>科技只是加速器，放大器。人性是怎么样的，经由科技武装的人性只会更变本加厉！</p>
</blockquote>
<h2 id="17-9-03_关于共享">17.9.03 关于共享</h2><p>为什么要买车？租 Uber 就好了；为什么要买软件？订阅就好了；为什么要买猫？妳要的是享受和猫一起的时光。那么租这段时光就好了。</p>
<blockquote>
<p>[18.11.24] 然后就会发现共享这个理论的吊诡之处了，付出情感的前提是所有权。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[鲸语的创业故事 - 聚焦生活服务的搜索引擎]]></title>
      <url>http://chocoluffy.com/2017/09/26/%E9%B2%B8%E8%AF%AD%E7%9A%84%E5%88%9B%E4%B8%9A%E6%95%85%E4%BA%8B-%E8%81%9A%E7%84%A6%E7%94%9F%E6%B4%BB%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</url>
      <content type="html"><![CDATA[<p>“我希望辍学一年全力开发出高质量的新功能”，这是我对鲸语下一阶段的约定。</p>
<a id="more"></a>
<p>鲸语，是一个聚焦生活品类的搜索引擎。聚合了当下媒体平台诸如：微信，微博，今日头条，知乎和Facebook等等的多伦多本地高品质资讯，并利用全自动化的自然语义处理，来推送给用户当下最值得留意的内容和服务。</p>
<p>这是我对鲸语的愿景，也是今年年初我利用圣诞假期前后三个月开发时，不断自我提醒的目标。我希望让用户高效率的获取信息，宛如在浩瀚海洋里倾听见鲸鱼的低语一般，用户不应该错过任何一条有价值的内容，这也是这款应用名字的由来。目前鲸语下载量在苹果商店多伦多搜索排行榜位列第四，多伦多攻略一类名列第一。</p>
<p>这也是我就读多伦多大学的第三年。</p>
<p>直到现在我依旧印象很深的是当初我拖着行李离开机场被同系师兄接上了车，一路上我听着师兄们聊着那些校园周边的新鲜事，那些新开的餐馆和奶茶店，那些社团的纠纷和变故，乃至毕业后职场的迷茫等等。那些陌生的名字和街道，宛如一罐罐精美包装的糖果吸引着我，我听得见我内心的声音，“我希望更快地融入这个城市”。</p>
<p>在一番搜索后，我手机留下了两个App，一个是51黄页，一个是觅迷，这两个应用分别从大而全，精而细的角度提供了很棒的攻略。每当在两个应用间切换的时候，我也在思考，有没有可能提供一种折中的方式，既具备广泛的品类，又能提供精致的视觉呈现和服务呢？我的注意力慢慢转移到了微博和微信上。</p>
<p>如果有应用能够像搜索引擎一样，聚合起来各个平台的内容，以跳回原平台地址的形式保障内容生产者的利益，也提供用户高效的资讯获取方式，会不会很实用？接下来的三个月，我利用课余时间着手实现这个想法。</p>
<p>在iOS的应用上架，Android应用调试的时候，我让我一些社团朋友来试用。也很惊喜地发现，苹果应用刚上架的前两天就积累了近千名用户，曾一度出现在苹果商店新闻推荐的列表里。慢慢地，有不少社团联系上我，表达希望提供校园内活动的意愿，以及一些健身类的机构，家庭厨房和房屋租赁中介愿意达成广告合作。这些商业合作的拟定，也让我确信这是一个机会，我希望把它做得更好。</p>
<p>我之前在社交数据分析公司实习的经历，和目前在实验室和导师研究的项目都让我意识到，高质量可供分析的数据和一套支持数据产生的框架系统是多么重要。也是从第一天开发起，我也将鲸语打造成高度自动化的系统。直到目前鲸语达到近9000名用户的时候，我依然没有在运营、管理应用上有任何花销，维持在当前4人的学生团队，相应地和机构的合作也让鲸语一直处于盈利的阶段。</p>
<p>现阶段的鲸语同时结合了目前人工智能的先进成果。鲸语可以利用用户拍摄的照片，进行智能识别照片内的主体，并推荐相关的攻略，更进一步的应用场景会结合到社交圈子的背景下，更好地连接社交图片的分享和对应服务提供商。</p>
<p>鲸语的下一阶段，是注重接入更多的机构和服务，基于目前搜索引擎的收纳优势，实现更精准地资讯投放和广告服务，为机构提供细分到人群的用户画像和兴趣分布，推出不同价格层级的合作模式，更好地为本地服务提供宣传曝光的机会。</p>
<p>同时鲸语也将涉及更多的品类和平台，积极撮合和本地流行华人杂志的合作，为用户提供更完整的全平台阅读体验。</p>
<p>日前鲸语正在与多伦多校方孵化器取得联系，评估进驻多伦多大学创业园区的机会。同时也在接触业界的投资人，寻求25-40万种子轮投资的机会，进一步扩大团队和支持市场宣传和营销。</p>
<p>作者介绍：余舜哲，现多伦多大学计算机科学大四学生，鲸语的作者，鲸语科技公司的联合创始人。大一参加麻省理工国际遗传工程机器设计竞赛获最佳软件奖和金奖，大二赴加州伯克利交换学习，大三赴多伦多大学并在业界开始为期一年数据科学的实习，现大四结束实习返回学校实验室跟导师继续关于社交网络的研究。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2017 Aug.]]></title>
      <url>http://chocoluffy.com/2017/08/29/%E7%A2%8E%E8%AF%AD-2017-Aug/</url>
      <content type="html"><![CDATA[<h2 id="17-8-30_关于误解">17.8.30 关于误解</h2><p>没必要让所有人知道真实的你，或者是你没有必要不停地向人说其实我是一个什么样的人。因为这是无效的，人们还是只会愿意看到他们希望看到的。我甚至觉得你把真实的自己隐藏在这些误解背后还挺好的。</p>
<blockquote>
<p>到最后还是选择说出来，写下来，夹带着些许的自私，因为如果我不说，我不写，我可能真的会屈服于那个格格不入的世界。</p>
</blockquote>
<h2 id="17-8-28_科技的诅咒">17.8.28 科技的诅咒</h2><p>为什么科技的进步会进一步扩大贫富差距。因为穷人并不知道怎么样去克服自己的欲望。在拥有更长远的视野，决心和自制力之前，所谓的“follow your heart”不过只是追随自己的欲望，所谓的“奶头乐”。</p>
<h2 id="17-8-22_读书">17.8.22 读书</h2><p>加缪的文字真的好好啊！</p>
<blockquote>
<p>在隆冬，我终于知道，我身上有一个不可战胜的夏天。</p>
</blockquote>
<p>有时间的时候，不仅读自己的书单，还有把 [不要温顺地走进那个良宵——西方部分作家群像（一）]里的作家的书都读读！加缪和卡夫卡！</p>
<blockquote>
<p>又想起来那一次公众号后台一个人的回复，“我一直不相信程序员的内心世界可以如此温柔，直到遇见你的文字。”</p>
</blockquote>
<p>其实，要不是科技的发展，要不是互联网，我怎么会接触到这些这么棒的文字啊。这就是部落格真正的意义吧。</p>
<h2 id="17-8-20_小说灵感">17.8.20 小说灵感</h2><ul>
<li>一个全部都是聋哑人的世界。如果世界不存在听觉和声音。</li>
<li>“一切伟大的世界历史事件与人物可以说都出现两次，第一次是作为悲剧出现，第二次是作为笑剧出现。” 小丑和英雄的角色从来没有如此接近过。英雄，还是小丑？</li>
<li>他认为当自己戴着面具时是摘掉了面具。</li>
<li>我举着一把无形透明的伞走在下雨天。</li>
<li>低语。我不再是我生命中最重要的人了。</li>
</ul>
<h2 id="17-8-17_反思">17.8.17 反思</h2><ul>
<li>要记录每天的学习时间啊。</li>
<li>为什么会不敢multi tasking而把时间花在娱乐上呢。</li>
<li>高三那段时期为什么最后泄气了。要仔细反思。</li>
</ul>
<h2 id="17-8-16_触动">17.8.16 触动</h2><p>摘抄：</p>
<ul>
<li>某天，你无端想起一个人，她曾让你对明天有所期许，但是却没有出现在你的明天里。</li>
<li>几年前踏上火车的那一刻都还没有意识到，从此故乡只有冬夏，再无春秋。</li>
<li>后来我终于知道，它并不是我的花，我只是恰好途径了它的盛放。</li>
<li>你不能做我的诗，正如我不能做你的梦。</li>
<li>和世界交手的这许多年，你是否光彩依旧，兴致盎然。</li>
<li>这是一个流行离开的世界，但是我们都不擅长告别。</li>
<li>躲了一辈子的雨，雨会不会很难过。</li>
<li>想过电影里的日子，下一个镜头就是一行字幕：多年以后。</li>
</ul>
<h2 id="17-8-09_产品的细节">17.8.09 产品的细节</h2><h3 id="微信的细节">微信的细节</h3><p>每一个产品细节都展现了背后对人性的思考。技术都能实现的情况下，为什么我要这么做？</p>
<ul>
<li>无法修改编辑发过的朋友圈。</li>
<li>朋友圈的点赞只显示你和ta共同认识的人。</li>
<li>只有通过微信号，或者扫码这么高成本的操作才可以添加另一个人为好友。</li>
<li>微信公众号文章为搜索引擎不可见。</li>
</ul>
<h3 id="跑跑卡丁车">跑跑卡丁车</h3><ul>
<li>无限制的车</li>
</ul>
<h2 id="17-8-05_勇气">17.8.05 勇气</h2><blockquote>
<p>又一个人，她和你说，“我一直觉得你会辍学创业，然后毕业的时候拉投资呢”。</p>
</blockquote>
<p>我还是不够勇敢嘛。</p>
<p>今年生日，或者申请结束的时候，希望你可以给自己写一段这样的话：<a href="https://www.douban.com/note/620072808/" target="_blank" rel="noopener">回信：写给二十五岁的我</a></p>
<pre><code>-<span class="ruby"> 我好像并没有我想象的那么勇敢。
</span>-<span class="ruby"> 村上春树写得好，“诗人二十一岁死，革命家和摇滚乐手二十四岁死。只要过得此关，暂时便无大碍。”。最遗憾的是，我好像刚赶上音乐会的热闹，就散场了。
</span>-<span class="ruby"> 写给几年之前的自己。那些风起云涌的人生抉择发生在云淡风轻的那些天。
</span>-<span class="ruby"> 你这样尽兴地挥霍掉了我的青春，我很感谢你。但我不再是你了，毫无疑问。
</span>-<span class="ruby"> “人在通往梦想的道路上，是威风凛凛的，并且，几乎是不老的。”</span>
</code></pre><p>准备二十二岁了。</p>
<pre><code>-<span class="ruby">     二十二岁这年，你知道了“专注”和“安静”是多么的珍贵。
</span>-<span class="ruby"> 几年后的你，是否坚定，是否温柔？“而你可以从旧相册中目睹我的面貌，你将会看到我有多年轻就有多苍老。我想告诉你，三十五岁的妇人，十年前你曾热烈过，但终于，也无所谓热烈。”</span>
</code></pre><h2 id="17-8-04_对AI的警惕">17.8.04 对AI的警惕</h2><p>还有很多人说，AI省下了大量的人力，那人类有时间去做自己喜欢的更有价值的事了。还没说完的半句话是， <strong>只是贪婪的人类在还不会自制之前，还配不上自由。</strong></p>
<ul>
<li>给你一个人无法匹配其主观思想的客观条件会发生什么？过早的财富为什么会毁了一个人？那些中彩票一夜暴富的人大多数的下场是什么？</li>
<li><strong>“认为AI无害的原因之一是它不会产生意识，不会对人类有敌意。但这还不是要点。霍金说，真正的风险不在于敌意，而在于能力。多数时候你踩死蚂蚁并非出于对蚂蚁的主观恶意。”</strong></li>
<li>“AI还远远不会比人更聪明，它只在某一具体问题比如下围棋上超过人类，它只在人类划定的范围内做具体的工作。这也还不是要点。 <strong>马斯克所说的AI的一种危险，不在于它如人一样聪明，而是它在某一方面足够强大但在另一方面又足够的笨，就像一只猎犬，一枚核弹。</strong><br>比如，它发现消灭垃圾邮件的最彻底的方式是消灭人类。当然，这个问题本身很好解决，给AI下一道不能杀人的指令就好了。但是，会有无数的类似的问题，防不胜防。这种事情别说是在程序化的计算机的世界，在灵活的人类世界也非常的常见。 医生为了让病人早点消除症状，给他吃后患无穷的抗生素。说到底，恐怖的不是我们是否怀疑抗生素的强大，而是未知。 列宁下令说不要让苏联红军去嫖娼，然后下面的人就把妓女都杀光了。你养了一头威猛的藏獒看家护院，但他可能咬伤你的客人。”<blockquote>
<p>比如你希望训练两只机器人的对话能力让他们相互对话，结果他们发现英文效率特别低就抛弃了来使用一些我们无法理解却他们认为高效的语法。</p>
</blockquote>
</li>
<li><strong>“AI的风险不止是自身的风险，是人类的弱点无法掌控好如此强大的工具。</strong> 如果核武器扩散到200个国家或者机构，那一次擦枪走火就会把地球炸个稀巴烂。盖茨说，AI的能量远大于核武器。而AI是天然掌握在不同国家的很多公司手里的。它正在进入失控的跑道。这可能就是马斯克所说的前所未有的风险。可能也是提醒政府介入监管的原因。”<blockquote>
<p>对于核能我们唯一值得庆幸的是，它没有普及到每一个人。</p>
</blockquote>
</li>
<li>推导到可见的未来，大多数人类的工作，无论脑力还是体力，既包括流水线工人、司机、也包括华尔街的交易员，都会被替代掉。汪华说，未来可能是20%的人类精英操纵着AI对剩下80%人类的圈养，他们每天在虚拟世界里醉生梦死，发泄精力。汪华说，他作为投资人在促成这件事的发生，但不意味着他乐见其成。在这一点上，盖茨跟马斯克和霍金的观点一致，“当少部分人控制拥有超级智力的平台后，就会造成权力的危险因素，最终控制世界。”<blockquote>
<p>无知的人，是否应当被奴役？</p>
</blockquote>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2017 Jul.]]></title>
      <url>http://chocoluffy.com/2017/07/28/%E7%A2%8E%E8%AF%AD-2017-Jul/</url>
      <content type="html"><![CDATA[<h1 id="17-7-31_高跟鞋的流行">17.7.31 高跟鞋的流行</h1><p>很印象深刻的一个点： 高跟鞋最早流行开来，是因为女性穿上它们是一种象征，意味着我不再需要进行劳力运动。</p>
<h2 id="17-7-25_海贼王20年">17.7.25 海贼王20年</h2><p>世上的人不会永远都孤独，总有那么一些人在远方等着与你一起开始生命的旅程。 </p>
<p>自由，梦想，这些词都好庞大，好沉重。突然想起刘亮程的《一个人的村庄》里的一句话，“一个人生命中的雪，你不能全部看见”。</p>
<p>我们会期待一部漫画带给我们什么呢。</p>
<h2 id="17-7-20_团队新加入两个人">17.7.20 团队新加入两个人</h2><p>很佩服kinder，有些人的勇敢是只修饰在字面上的，有些人的勇敢是我真的会决定这么去做。</p>
<p>今天brainstorm了很多东西，对于产品的定位是很重要的。针对订阅个人的服务，以及围绕地理位置接受周围的人提供的服务，这个是项目venus的一个出发点。如何通过smart timetable继续延伸来完成更加有持续实用需求的产品是需要特别思考的问题。有几点蛮有价值的</p>
<ul>
<li>创建一个统一的用户账户管理系统。记录你所有的使用痕迹的记录，来猜测你的用户画像，比如你选的课，你浏览的文章。</li>
<li>通过竞价的方式，抑或动态定价的方式来解决市场需求。但最大的弊端是一定要考虑公平性，竞价是最符合市场逻辑和效率的，但一定不是最公平或是能够提供公平感的方式。</li>
</ul>
<p>帮助学生去抢座位，最终落脚点还是回到人，吗？</p>
<ul>
<li>有个特别有趣而且实用的做法。对于所有的长问题，利用tf-idf来针对全文匹配。然后让用户来选择，是否接受这个答案，如果不接受，也可以自己来发布。“多大百科”，一个针对长问题和智能推荐答案的搜索引擎。</li>
</ul>
<h2 id="17-7-13_和馋猫CEO见面谈话">17.7.13 和馋猫CEO见面谈话</h2><p>20个人的团队，10人技术，10人非技术，自负盈亏，没有引入投资，同时在推进多项业务，包括馋猫App外卖来贡献利润，同时经营一日物流，和阿里云合作的云计算加拿大推广。欢迎合作的态度。</p>
<p>什么才是真正的大数据？他们认为我们应该背靠平台，而我们现在是自生数据。对鲸语的统一用户体验是，我不知道我应该看什么，就随便浏览一下就没了。</p>
<p>在musical.ly诞生之前，创始人是测试了市面上近200多种的App才确定的方向。</p>
<p>对刻画用户画像来说越准确的数据来自于门槛越高的操作。比如以下的重要性依次递增，用户浏览的文章 -&gt; 用户点击订阅的话题 -&gt; 用户购买的品类 -&gt; 用户定制的金融服务和理财产品。</p>
<p>每个创始人都有着一段拼了命为产品的时光。无一例外。</p>
<h2 id="17-7-09_回忆">17.7.09 回忆</h2><p>一个·问题 如果没有轰轰烈烈的回忆，恋爱的时光是有意义的吗？</p>
<p>比较好回答的一个问题是：如果没有快乐的回忆，回忆还有意义吗？</p>
<p>[17.12.11] 鼠疫里想要回答的问题是：如果与生活的博弈里，我们赢得的只有经历和记忆，生活还有意义吗？</p>
<p>不要让别人来提醒你那些回忆。就算没有轰轰烈烈的背景音乐，没有炽热的旁白。</p>
<blockquote>
<p>很多时候我们之所以心生自己是不是虚度了时光的疑惑，往往是因为我们犯了“拿戏剧眼光打量生活”的错误。其实没有一段时光会被辜负浪费，最好的时光大多披着日常的外衣，悄悄盘根错节地串联起你的人生。</p>
<p>[17.10.05] 比如，那些晚上，我在图书馆学到了深夜。</p>
</blockquote>
<h2 id="17-7-06_逃离_-_微博">17.7.06 逃离 - 微博</h2><p>[16.11.10]亚马逊的购物车里放了好几本特别想看的书， 圣诞回去一定要买回来!  朱天文! 朱天文! 好喜欢看散文， 没有长篇小说的负担， 轻轻松松地， 就像旁听一段对话或者独白。 <em>温柔的力量， 曾经看到新世相里描绘的， 是轻轻拂过不用力的打扰。</em></p>
<p>也不知道为什么那么钟爱散文， 就是那种如果几周不看些令自己满意的文字就会不舒服的毛病吧， 也生怕自己再也写不出平静而诚挚的感觉了。 总是觉得， 文学的这类朦胧和理学的逻辑思辨是有冲突的， 就好像是距离带来的美感， 是不审视带来的真实感一样， 太多的想象力， 轻轻一戳， 就是荒谬。可尽管如此， 我还是习惯性地想要体会言语间的柔软， 像是一场逃离， 想要能够轻轻对生活卖个萌的浪漫。</p>
<p>“你想起年少时，固执地夺取单一的绚烂与欢乐，抗拒枯萎与悲苦，不禁感到羞赧——真像浅塘在暴风雨面前痛哭。人生应如秋林所呈现的，不管各自在岁月中承受何等大荣大枯，一切都在平静中互相呼应，成全，共同完成深邃的优美。树的枯叶装点了磐石，苔痕衬托浮光，因容纳成就丽景。当心胸无限空旷，悲与欢，荣或枯的情事，都将像顽皮的松树偶然抛来的小果粒，你咽下后，微笑如一老僧。”  -简媜《温暖的空旷》</p>
<p><strong>“现在无法触碰的难过，终将可以当作笑话去讲，时间不能改变你的故事内容，却可以改变你的叙述方式。” —几米 ​​​​</strong></p>
<p><strong>目的虽有，却无路可循；我们称之为路的，无非是踌躇。——卡夫卡 《误入世界》</strong> ​</p>
<p>又是一首， 不小心弄丢的歌。 </p>
<p>权利， 和权利所保护的善， 一直是自由意志的困境。 记当我谈论言论自由， 宗教信仰， 我在谈论什么系列。</p>
<blockquote>
<p>在我们划出保护的线的时候，我们也划出了被肆意踩踏的线。</p>
</blockquote>
<ul>
<li>自己突破不了的东西才会被认为是命运。</li>
</ul>
<p>一个人可以随便谈论自由、责任之类的东西，但是这些概念似乎过于裸露，而我们的内心却荆棘丛生。——安德鲁·林赛《面包匠的狂欢节》 ​​​​</p>
<blockquote>
<p>少用这些特别大的词语，它们承载了太多你来不及表达的含义。</p>
</blockquote>
<p>既然是孤独的，就不必取悦所有人。 ​​​​</p>
<h2 id="17-7-02_自我反省">17.7.02 自我反省</h2><p>[17.7.06] 关于主流。未来的世界，大家都分享着同一个主流观点，只有一种主流文化的时代，有什么弊端？</p>
<blockquote>
<p>我们正在失去对他人更全面的好奇心。我们也正在失去全面了解一个人的机会：我们因为“热点”、甚至因为朋友圈的标题来了解世界，在这个基础上参与讨论。问题不仅仅在于我们看不见他人的生活，更严重的是，我们不再想去看见。 </p>
<p>更严重的是，我们不给他人生活解读的第二次机会。也不想给。</p>
</blockquote>
<p>“今天中午和gloria聊到的很多点子都很有趣。是平台，还是自营。” 还记得当时说过的这句话嘛，真的是一个人的审美和判断力是由经历和眼界决定的。京东现在的自营只占40%了，整体架构越来越像淘宝。</p>
<p>“渐渐学会一种力度，去回头轻轻梳理自己的生活。” </p>
<p>对于《刀锋》还是有蛮多可以探索的主题的：</p>
<ul>
<li>舅舅艾略特至死都崇望着上流社会的认可，他是穿着爵位的华服去世的。每个人都获得了幸福的结局，不同的人生，不同的快乐有区别吗？为什么是刀锋？为什么我要跨过去？</li>
<li>命运的风起云涌。很值得玩味的是，所有出场的人物，伊莎贝尔，拉里，格雷，苏菲，他们在他们最开始的时候，竟是特别的相似的一群人。拉里，不过也是生活着大部分年轻人一样的生活，甚至他自己也意味他和伊莎贝尔的婚约会成真。但自从拉里经历了战争，失去了他最亲密的一个战友时，宛若一条溪流被河堤劈开两半，那份渺小感，那份茫然感注定让拉里走上了不同的方向，不能回头。</li>
<li>“上帝为什么要创造邪恶呢？”拉里一生困惑的问题。这个问题重要吗？</li>
<li>关于毛姆作家的。艺术充满力量，那通俗呢？那真实的？通俗有什么力量。“如果你志在追求艺术追求文学，那么去读一读希腊人写的东西好了。 <em>因为要诞生真正艺术，奴隶制度是必不可少的。</em> 而古希腊人便是这样：奴隶们耕种、烧饭、划船，而市民们则在地中海的阳光下陶醉于吟诗作赋，埋头于数学解析。所谓艺术便是这么一种玩艺。至于半夜三点在悄无声息的厨房里检查电冰箱的人，只能写出这等模样的文章而那就是我。” 来自村上的一段话。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[鲸语 - 一名多大校园开发者的独白]]></title>
      <url>http://chocoluffy.com/2017/07/05/%E5%86%99%E5%9C%A81-0%E5%8F%91%E5%B8%83%E5%90%8E%E7%AC%AC50%E5%A4%A9-%E9%B2%B8%E8%AF%AD%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E7%8B%AC%E7%99%BD/</url>
      <content type="html"><![CDATA[<p>编者按：三人的学生团队，历时四个月，从零开始开发应用，冲进了App Store新闻资讯类榜单全球前30，并登顶“多伦多”相关应用的搜索结果。这篇长信，来自鲸语的开发作者，关于校园开发者的经历，关于鲸语诞生的初衷，以及他和伙伴之间的故事。附<a href="https://appsto.re/ca/klNuhb.i" target="_blank" rel="noopener">App Store下载链接</a>。</p>
<a id="more"></a>
<p>“按下确认，鲸语就算正式发布咯”，小G把手机递给我。</p>
<p>“……”</p>
<p>我侧过头，熄灭的屏幕里映出我们三个人的剪影。思绪暗涌，或许半年前的我不会预想到这一刻。从一无所有开始，这是对我们，对鲸语，很意外而深刻的一段时光……</p>
<h2 id="一个人到一群人_-_鲸语的前生AirLoft">一个人到一群人 - 鲸语的前生AirLoft</h2><p>鲸语的源头，如果硬是要追溯回去，那是在2016年4月1号上线的一个粗糙网站项目AirLoft。 </p>
<p>那是我刚接触计算机学习一年以来第一个独立完成的作品，印象蛮深刻的，因为那是学院CSC309课程的一个团队项目，可能是当时对网站技术的痴迷，一个人完成了所有的开发。想法挺简单的，每个人都可以发布自己能提供的服务，然后你可以基于地理位置的远近看到别人所能提供的服务，以促成交易。当时就连项目名字起得也是特别粗糙，loft，阁楼嘛，通常大家和朋友分享私密事的地方，前面加个Air，也是傻乎乎地致敬当时最火的平台Airbnb。</p>
<p>AirLoft或许也可以被粗译成，空中楼阁，这或许也是我所有空中楼阁想法的起点。</p>
<p>“我希望能够基于地理位置连接你和周围优质的服务”，还记得当时我在一个项目分享会上这么讲。那是华人技术社团UTADA每年都会举办的项目展示大会，不大的房间里塞满了人，宛若一场小型发布会，每一个项目的发起者依次阐释着自己的想法和进度，来吸引在场的人组建最初的团队。有希望开发桌面宠物的，有希望打造异地情侣合照App的，还有一系列从外卖到选课承包了几乎所有校园生活的想法……场下出奇的安静，我脑海里飞速地闪过想法实现的技术框架，身子却一动也不敢动生怕椅子咯吱作响。现在回想起来，那或许也是那段时间里除学习之外少有的几个笨拙而严肃的时刻。</p>
<p>从讲台上下来，逆着投影的光，台下稀稀拉拉的掌声，总给人一种谢幕的错觉。可值得庆幸的是，AirLoft成了当场分享会最受欢迎的项目，几近半屋子的人在结束后找我询问项目的开发和发展表示希望加入团队。想起这一两年来被其他厉害的师兄带领的经历，这一次我义无反顾地承担起领队的责任，欢迎着每一个人的加入。来自于社团里的20余人，这应该是AirLoft最初的开发团队构成。还记得当时，我觉得我是最幸运的领队。</p>
<p>只是……</p>
<h2 id="回到一个人的战斗_-_鲸语的出现">回到一个人的战斗 - 鲸语的出现</h2><p>学生开发者本身其实是一个蛮尴尬的身份，一方面作为紧密的学生群体的一员，我捣鼓开发的东西可以很快被很多人了解，使用甚至因此让我获得赞誉，而另一方面我也很清楚地知道自己不过也只是业余选手，无论在能力还是经验上。</p>
<p>可即便很业余，这却是我向往的生活的一部分，一种能够真正把想法实现出来的自由感。</p>
<p>那是我正式接触计算机专业学习的第一年，我用平时的空闲时间揽下了特别多的开发任务，各种博客，网站，游戏还有VR，也慢慢认识了很多同样喜欢开发的同学，很幸运地成为项目领队，之后再成为社团技术部的负责人。可是……也渐渐地，开发涉及的领域越来越多，支持想法的技术难度越来越大，作为学生，我也越来越难去说服别人去牺牲业余时间和你一起挑战一个工程难题，去完整一个商业想法。</p>
<p>没有什么能够承诺的余地，或许正是学生开发者乃至校园创业者相似的现实。它无法承诺你的GPA抑或者履历，更多的也只是在打点好自己学习和生活之后的兴趣而已。而路越窄，越人迹罕至。志同道合绝对值得感恩，而更大多数的时候，这是一个人选择的战斗……</p>
<p>还记得那个时候在AirLoft的开发阶段，我正在研究怎么处理文本之间的相似度，为的是可以帮助用户找到更贴切相关的服务。我记得特别清楚，那天晚上在家，我正拿UT助手历史上两百多篇文章来测试算法准确度，当屏幕上突然亮出结果的时候，我心里也突然亮出一个念头—</p>
<p>“说不定我可以把整个多伦多范围的资讯和服务都串联起来而不仅仅只是校园范围的……”</p>
<p>“……”</p>
<p>我静默下去。和往常那些浴室里的胡思乱想不同，我感觉到这一次的想法远非不可实现，回想起当初自己刚来多伦多的时候大到租房，退税，小到选课，买零食却需要翻遍各个网站、论坛、公众号和微博查攻略的繁琐，如果能有一个应用把这些攻略像归档一样整理好，每一个话题都能收纳到所有相类似的实用文章，再告诉你离你远近哪里可以找到……感觉会挺实用的不是嘛。我打赌当时的我绝对不会想象到几个月后一个手机应用的上架乃至进入排行榜，更别说现在加入的人工智能，场景识别和视频一系列更复杂的技术等等。当时就是那么一霎那，我觉得这应该是AirLoft真正去实现的方向，这能够真正帮到大家，而我，可能可以把它做出来，那么我来试试吧。</p>
<p>没什么恢弘的铺陈和情节，创造鲸语的想法就那样突如其来地出现了。</p>
<p>现在回想起来，还真有点像村上在书里谈论他做出决定写小说的那个瞬间—坐在神宫球场外听见清脆的击球声，“哦对了或许我也可以写小说……”。</p>
<p>余下的那晚，和接下来那几天我或许并没有什么特别，上班，请假上课，写作业和准备考试依旧占据了我生活绝大多数的时间。只是在每天那剩下来的一小会儿时间里，我脑海持续地被这个想法占据，碰巧半年前在图书馆里看完了整场Facebook开发者直播，也了解到了最新React Native跨平台开发App的方案。拥有接近半年React开发网站经验的我决定来啃啃螃蟹，谁知道呢，反正也没什么人试过，但是这真的很酷啊。</p>
<p>当时只是觉得自己不过是做了一个很小的决定，小到就有点像是在选择晚餐是配苹果还是橙汁这样无关紧要的选择，可现在想起来，当时的那个决定或许是基于我一个从未开发过iOS应用的初学者最好的决定。熟悉的技术理念和开发语言，也让我两个月用周末业余时间把鲸语的雏形开发出来成为可能。这期间经历的困境，并不像纸面上“两个月的业余时间”这么潇洒的概括，那些因为框架方案太新导致没人处理的漏洞我不得不写出奇奇怪怪的解决方案，那些直接和陌生开发者讨论实现方案长篇累牍的邮件，还有每几周迎来的新的开发观念的消化带来的一系列项目的变动……这一切都历历在目。</p>
<p>我无法评论我未曾选择的路，但我所经历过的那些尝试起伏，那些明亮的失落的瞬间，都作为一部分成就了鲸语最初的样子。</p>
<p>当初写在鲸语1.0发布文章里的那句话依然能诚恳地回望我这一段鲸语初期的开发—</p>
<p>“谁没有些从陌生到渐渐开窍的故事呢，或许没有那么多理所当然和信手拈来，不过举重若轻罢了。”</p>
<h2 id="伙伴_-_记在鲸语1-0发布之后">伙伴 - 记在鲸语1.0发布之后</h2><p>无论问我多少次，对鲸语来说最重要的部分是什么，最重要的经历是哪些，我都会毫不迟疑地回答，是伙伴，是鲸语团队里的伙伴们，是一路走来志同道合的伙伴们。</p>
<p>我特别喜欢的海贼王漫画，讲着一群人为了各自的梦想相互守候一起冒险的故事。很幸运地，在鲸语成长的路上，我也渐渐找到了值得依赖的伙伴。</p>
<p>认识小G，是在羽球场上两个左撇子相遇的意外。谁也没有想到，接下来的一年，小G以新任社长的身份带领UTADA在各个对外活动上接入正轨，为鲸语项目的产品化，商业化出谋划策。在每次鲸语的重要决策之前，我脑海里都会浮现小G的一句话，“即便是最糟糕的结果，也不过只是维持现状罢了……”。很平淡的字，却每一次给我决意的勇气。小A，很有灵性的设计师和开发者，鲸语的logo和许多样式均出自小A之手，印象特别深刻教会小A项目技术背景的那晚，他凌晨三四点发来App改进的界面图，我只能用完美来评价……他们的加入，像是静寂了很久的路上慢慢传来的烟火声，我渐渐学会把所有心事都拿出来说，好话，废话，美好的愿景，耍过的机灵都抖落出来。我曾深知孤独的必然，而所有交错的经历，共同的承担，都成为恩赐而值得深深铭记。</p>
<p>是被“驯服”过的，于是玫瑰的名字，不再重要。</p>
<p>距离鲸语1.0的发布刚走过不多不少的50天，盛大，冷却，到再出发，无意却像极了过往的这一年。我一字一句地斟酌，写不出的青涩和匆忙像留不住的沙漏，笨拙却无比真实。</p>
<p>静静地在图书馆敲下这些字的时候，也是多伦多一段绵长的雨季正式结束的时候，终于迎来的夏天，像终于等来的恋人，空气里弥漫着绵软如絮的热烈。</p>
<p>我坐在E.J.图书馆最靠窗的位置，能瞧见整个Queens Park的慵懒和喧闹。屏幕一角那三人剪影的位置，依附着午后阳光的一块。阳光很暖，温顺一如眼眸。</p>
<h2 id="写在后面的话">写在后面的话</h2><p>留下上面每一字的时候，是鲸语1.0刚发布的第50天。很幸运，在它的第100天，2.0如期而至。变化的是几近所有的功能和样式，这期间我们去拜访了很多业界的前辈，去展示，去交换，去见见外面的世界，也默默低下头去记下了每一处鲸语的伤。更庆幸那些没有变化的，那些依旧会紧张的，却也依旧高涨的情绪， 那些如同记录自己成长般记录鲸语成长的坚持……</p>
<p>很感激这期间相遇的每一个帮助过鲸语的人，尤其是校园里反馈尤其积极的同学们。我们为下一步画下了更难的挑战，要更踏实地去实现呢。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2017 Jan-Jun.]]></title>
      <url>http://chocoluffy.com/2017/06/29/%E7%A2%8E%E8%AF%AD-2017-Jan-Jun/</url>
      <content type="html"><![CDATA[<h2 id="17-6-24_博客">17.6.24 博客</h2><p>坚持写博客啊，好好整理，还是挺多挺有意思的想法不是么。</p>
<p>把相关文章；豆瓣读书都加上去。</p>
<blockquote>
<p>突然发现一个读书的好习惯，就是在每次读完一个章节的时候，都尝试用自己的话来总结这个章节，写在标题旁边。我还蛮喜欢这种天马行空的感觉的呢。<br>学会经常给自己一个思维训练，一件你以前非常不认同的事，我现在怎么去解释它？</p>
<p>比如，一个对粉丝这个群体的看法都是偏向负面的，我怎么为积极的一面申诉？</p>
</blockquote>
<h2 id="17-6-22_我的书房_-_序言">17.6.22 我的书房 - 序言</h2><p>“这是一个像深井一样冰冷的人啊”哈哈哈哈</p>
<p>“阳光照进枯井里，就知道了黑暗的温柔。”</p>
<p>我是始终相信，那些你阅读过感受过的东西，是会成为你灵魂的底色的。</p>
<p>相比这个阶段的村上和毛姆，黑塞，加缪，卡夫卡和陀思妥耶夫斯基，会是我下一阶段的重点阅读对象呢。愈深愈沉，像极了年轮。</p>
<p>从小就喜欢看散文，不是太感兴趣小说，除了基本丹布朗的（也算半悬疑的）之外。不太感兴趣的原因是自己忍受不住小说情节的琐碎。夸张一点，那种如同鸡毛掸灰尘般一点一点，一撮一撮地给你介绍生活。</p>
<p>我忍不住，那种缓慢展开的另一种生活。</p>
<p>我从小倒是蛮喜欢读散文的。记得一次和稍年长一点的前辈朋友聊，他们的启蒙是余秋雨老师。而我，坦白来讲，我有点晚熟了，对我来说虽然开始写随笔的习惯开始的很早，大概在小学初中和读者、意林一起度过的，但直到高中的那本《看见》，才是我真正意义上开始喜欢上文字。</p>
<p>追求的是以小见大的能力，追求的是营养和效率。</p>
<p>即使叙事能力强如毛姆，在一些关键感受的登场时仍稍显僵硬。说得具体一点，就是可能你并不会再这个情景里这么说话。</p>
<p>这个阶段的我，也仅仅只是消化到中短篇小说呢。长如《百年孤独》的篇幅，长如好几个人生。而越久酿的身世，越不可逾越的震撼。从一种生活跨进另一种生活，恍若隔世。无论魏晋。</p>
<h2 id="17-6-19_随笔-关于赞美">17.6.19 随笔-关于赞美</h2><p>是错误的赞美，在逼迫着你成为着那个你并不熟悉的人。</p>
<p>不要去给快乐乃至痛苦分级。这会给我们一个错觉，觉得某些快乐是可以忽略的，某些却是至高无上的。而分级的规则又来自哪里。你听谁的。</p>
<blockquote>
<p>哪怕那会是更有效率的一种方式。</p>
</blockquote>
<h2 id="17-6-18_IT公论-关于media与tech">17.6.18 IT公论-关于media与tech</h2><blockquote>
<p>一个很有想法的播客。续集是“一天世界”。</p>
</blockquote>
<p>这天听的主题是关于“新媒体写作”，new york times在新媒体的尝试上是一个先锋。媒体呈现的形式，是越来越有模拟现实的沉浸感。如果科技允许，我（媒体人）恨不得让整个故事在你面前再发生一次。</p>
<p>[07.01] 听了一期和rio的谈话，提到说其实现在ios的app排序应该更加智能，利用频率和模式来决定app的位置。-&gt; 用户的自由还是控制的智能。</p>
<blockquote>
<p>black mirror里面很多的例子，对GRE写作会有很大的帮助。Internet promotes the greatest obsolete ideas, while harboring the evilest either.</p>
</blockquote>
<h2 id="17-6-17_刀锋">17.6.17 刀锋</h2><p>3.5/5</p>
<p>小说的细节描写。那个灯塔扫入医院的光，那个第二天凌晨腿的颤抖。</p>
<p>作者本人的视角。在与友人的对话中填补过去发生的事。一层层迷雾，也渐渐揭开。这个应该是悬疑小说最适合的套路吧，每找到一个新的人，对真相就颠覆一次。</p>
<p>拉里。真实感。</p>
<p>作者在结尾写道，这无意成为了一个成功的结局，大家各得其所。艾略特舅舅在上流社会得到认可，伊莎贝尔得到了财富和悠哉的生活，拉里也找到了他的幸福。作者整篇的语风，是非常坦率地喜欢着他们每一个人。</p>
<p><strong>每个人，都深深地陷在自己的世界里。</strong> 所谓的生活不分高低贵贱，是既然每个人的出发点，每个人的方向都不同，那结果就不具有可比性。舅舅至死也没有对上流阶层的认可退让一小步。能说他们过得更可怜吗？</p>
<p>同样很值得玩味的是，所有出场的人物，伊莎贝尔，拉里，格雷，苏菲，他们在他们最开始的时候，竟是特别的相似的一群人。拉里，不过也是生活着大部分年轻人一样的生活，甚至他自己也意味他和伊莎贝尔的婚约会成真。但自从拉里经历了战争，失去了他最亲密的一个战友时，宛若一条溪流被河堤劈开两半，那份渺小感，那份茫然感注定让拉里走上了不同的方向，不能回头。</p>
<p>也突然想起来初中我们被要求背下的几句诗，来自弗罗斯特的未选择的路。</p>
<p>一片树林里分出两条路，<br>而我选了人迹更少的一条，<br>从此决定了我一生的道路。</p>
<p>拉里出身卑微，双亲早逝，从小被一位医生收养，得以跻身上流社会。不过，他不愿追求崇尚名利的美国梦，战时经历让他省思生命的意义： <strong>“我想确定究竟有没有上帝，想弄清楚为什么有邪恶存在，也想知道我的灵魂是不是不死。”</strong> 此大哉问与他的飞行经历有关：他在浩瀚无垠的天空中高飞，想要“远远超越世俗的权力和荣誉”。可是，战友之死让他惊觉生命之无奈与不可超越：“上帝为什么要创造邪恶呢？”他于是抛下亲友，到欧洲游历，一路自我充实，最后却对西方宗教哲理感到彻底失望。后来，他远赴印度，在一位象神大师的静修院受到启发，顿悟了生命的真义。</p>
<p>一九三八年，毛姆为亲身了解印度教的内涵，特地远赴印度搜集资料，并前往金奈附近一处静修院，拜见圣哲拉马纳·马哈希。等待期间，毛姆突感身体不适，当场昏倒。马哈希得知这个消息，前去探望，不发一语与毛姆对望半小时。圣哲最后说：“沉默也是一种对话。”</p>
<blockquote>
<p>有时候看书的序言，那种介绍作者生平和写作意图的文字，总感觉开启了上帝的模式，好像的确这就解释的通了。“为什么上帝要创造邪恶？”。毛姆也曾经对这个问题感兴趣然后去印度探索。</p>
</blockquote>
<p>这个书单不错！<a href="http://www.kindlepush.com/booklist/98" target="_blank" rel="noopener">kindle推-书单|books aheng will read</a></p>
<h2 id="17-6-16_认真你就输了吗">17.6.16 认真你就输了吗</h2><p>生活到底需不需要讽刺和自嘲？</p>
<p>其实辩论和头脑风暴很像，打开新的思路，横向的扩展比纵向的伸展总是更讨喜，情感力度强的总比思辨的更讨喜。你的收获在很大程度上是你收获了一个脑洞，一个在你能够接受的范围内出其不意的点。</p>
<p>能够成功地利用概念的偷换，利用措辞的细节来达到自圆其说固然是一种能力。可在严肃的商业逻辑面前，一定要分清主次和重轻。太容易说服自己，并不一直都是优势。</p>
<p>不过倒是奇葩说也让我确信了一点，只有一种价值观就一定是错的。被最热烈宣扬的正义背后也有着最大的不正义。被误解，是表达者的宿命。</p>
<h2 id="17-6-15_真正的面对投资人会谈">17.6.15 真正的面对投资人会谈</h2><h3 id="我们的不足：">我们的不足：</h3><ul>
<li>盈利的不确定性</li>
</ul>
<p>很老道的投资人，投资人只关心一个问题，他们投的钱怎样可以赚回来。放在我们的商业模型上就是：</p>
<p>怎样可以保证从中小企业收到那个月费？目前我们会个性化定制不同的方案，平均的方案是$120一个月。</p>
<p>算$150，假设接触1000个商家，假设100%合作成功率，一年收到180w收入，作为投资方10%占股有18w，除去收入税40%，剩下10.8w，投资回报率36%，作为最乐观估计的结果，如果10%的成功率，这一年的收入在1.08w，投资回报率3.6%。</p>
<p>说到了一个很切实的问题，一次性的服务，他们有他们自己的会员积分卡，用户只要通过我们的app第一次接触到这些餐饮商家，如果真正是好的服务，之后就会绕过我们，直接使用他们的积分制度，成为他们的忠实客户，而我们作为中介，会被绕开。（如何说服用户继续通过我们这个平台和商户保持联系？）</p>
<ul>
<li>中小型商家发布的意愿</li>
</ul>
<p>80%的可能性是，中小型商家在我们后台的操作频率会特别的低，也就是说，我们要在我们这边把整个发布流程全部自动化，最好是我们根据商户的情况和菜单直接定制，然后直接提供发布的方案，用商户每次登录我们的后台直接选择，而不再是填写发布内容。而这个根据商户定制的过程需要大的人力成本。</p>
<p>但是如果商家是以选择的方式来发布消息，我们的圈子就会变得特别的重复和单调，因为我们对消息的可预知性就增强了。</p>
<ul>
<li>技术上，引入app内支付的难度</li>
</ul>
<h3 id="我们的优势：">我们的优势：</h3><ul>
<li>移动端的，基于社会身份，贴近社交的优势</li>
</ul>
<p>和社交平台打通，利用社会化分享所带来的网络效应是不可忽略的，尤其是，在餐饮这个层面，我们会特别重视来自朋友的口碑推荐。我们如果能够搭建起圈子，以及用户的身份登录和认证，我们就拥有了他的社交身份，必须充分利用好这个资源，以及社交圈的优势。</p>
<p>我们的圈子，除了关注的商家的优惠活动，还有什么可以挖掘？</p>
<ul>
<li>提供给中小型商家的数据反馈的能力</li>
</ul>
<p>目前市面上还没有这样的产品，至少不被我们所认知，我们收集用户的浏览记录，以及习惯，分析每个用户的消费喜好，地区，社交属性之后，将这个数据统计给商家，我们的盈利点还是在向商家卖服务，我们可以给指定人群发布消息，给指定关注某个商铺的人发送相关的推荐。</p>
<ul>
<li>关注你感兴趣的服务，真的是一个很好的idea。</li>
</ul>
<p>难道只是因为餐饮行业太重，导致我们的启动困难嘛？</p>
<h2 id="17-6-13_毛姆">17.6.13 毛姆</h2><p>我最喜欢的作家，陶立夏，樊小纯，加缪，黎戈？毛姆？</p>
<p>我是个在黑暗里大雪纷飞的人啊。 你再不来，我要下雪了。</p>
<p>生怕错过风景。或许是这个时代最大的焦虑。</p>
<p>要做一个自成体系的人。</p>
<h2 id="17-6-12_关于说服与被说服">17.6.12 关于说服与被说服</h2><p>会说话真的是一件很锋利的武器。但我最害怕的是，我无论怎样，都能说服自己。</p>
<p>昨晚和傻鱼的谈话还是很受启发的，的确现在能够真正把产品做出来，而且真真正正仔细考虑用户体验的产品还是太少了，尤其对于科班出身的本科程序员来说。我们真的是一个很幸运的团队。要珍惜。</p>
<p>今天中午和gloria聊到的很多点子都很有趣。是平台，还是自营。</p>
<blockquote>
<p>还记得湾区创业的其中一个故事—约饭。从约饭来展开的社交需求，这片市场真的还是空白啊！</p>
</blockquote>
<p>又提到了我自己的政治主张，”开明的独裁统治“。在基于人为主体的社会体系里，这是很难的一种模式，被代表的人性的谈判更趋向利益的平衡而不是集中。但未来谁知道呢，如果人会成为机器的奴隶，而随着科技的发展，很多人们考察不到的细节都能够被精确计算，人们不需要懂这个指令，只需要知道这个指令是最优的，然后去执行就好了。这一定是一个特别高效的社会。但我们为此失去的是什么？是生之为人的尊严。</p>
<p>因为出现了一个不容分说的理由，人们的思考，创造力失去了衡量的体系。</p>
<h2 id="17-6-08_单独约见投资人">17.6.08 单独约见投资人</h2><p>经验很老道的投资人Dave，虽然年迈容易被商业和技术细节分散注意力，但回到真正投资拍板的时候，真是一点也不含糊。被针对提出的很多问题真的很对：</p>
<ul>
<li>不要去问投资人，你们能够给我们带来什么。而是准备好，告诉投资人我们希望你能够给我们带来什么。</li>
<li>估值。明确告诉你我们的估值和可以让度的股份，投资人能够在什么时候拿回资本。为什么投资人应该投我们的项目</li>
<li>关于各方合作的利益考虑，比如世界传媒报等，无论是媒体，还是投资人，还是商会的利益。我们怎样和他们的利益绑定在一起。</li>
</ul>
<h2 id="17-6-03_社交网络的孤独感">17.6.03 社交网络的孤独感</h2><p>面具戴久了，是会渗到肉里面去的。[关于迎合]</p>
<p>社交网络，有些人把它当成工作的，因为ins上获得的赞和关注越多，得到广告的机会就越大。我们听上去感觉有些可怜，而值得庆幸的是，他们是知道他们的生活是假的，这个不是他们真正的生活。而真正的可怜，是分不清，而把所有的灯光和聒噪当作真实。</p>
<p>在你认定了别人的生活都是虚假的，都是刻意的，而你们之间又有落差的时候 -&gt; 孤独感</p>
<p>给微信的建议，对于分群组的操作门槛，一定要越低越好。理论上的朋友圈不再是朋友圈，而是你的社交圈，你的应酬圈。而不同的圈子是期待着不同的态度的。当圈子越混杂在一起，我们的态度是由最严肃的程度所决定，就像你可能更偏向沉默不发，而不是在你的老板眼底下浮夸嘻哈。</p>
<blockquote>
<p>因为沉默，甚至嬉笑打诨，是最安全的选择。</p>
</blockquote>
<h2 id="17-5-31_这三天见投资人的一些感想">17.5.31 这三天见投资人的一些感想</h2><p>为什么要去追求幸福。是因为我们最终可能触及嘛，或许终于明白，即便触碰不到，在追求的过程中，我渐渐看清，容易去分辨清楚一些事情。可以最终一眼看出幸福的样子，哪怕它不再是原来的模样。[关于创业]</p>
<p>不是说单纯有什么不好。只是，应该是，单纯应该成为我们看清了这个世界之后的选择。[关于技术人才]。拥有同样逻辑的，还有偏执。它不应当成为一个不容分说的理由。</p>
<p>人的家庭背景，真的对人的影响特别大。的确有人的眼界，性格不一样。而我们习惯于称之为天赋，那些我们想做却做不到的能力。</p>
<p>主席Hugh一上来和我们谈，很直接的指出了一个问题，就是到目前为止，我们所做的，不是市场导向的，而是方便导向的(convenience-oriented)。“为什么只做华人的市场？”， “为什么不去尝试下国内的市场？”。嗯…因为我们创始人都是在多伦多。嗯…</p>
<p>也是能够理解投资人的顾虑的，如果可以有更完善的商业模式，有更看上去主流的市场，为什么他们要赌你的成功？</p>
<h2 id="17-5-26_海贼王教会我的事">17.5.26 海贼王教会我的事</h2><ul>
<li>主角光环吗？在伟大航道上的每一个人，没有成为海贼王的觉悟是不会来到这片海域的。基德说道。</li>
<li>如果路飞的伙伴不是世界第一的话，如果陪伴路飞航海的伙伴们，伙伴还是梦想。这片海上最自由的人才是海贼王。</li>
<li>这个世界上有一些事特别地有意思。正义的犹豫，坏人的仁慈，妓女的爱。那些犹豫，才是最值得玩味的地方。<ul>
<li>比如费舍尔泰格在被人类背叛的临死时的犹豫，我绝对不接受人类的血，多讽刺啊，对于一个一生致力于恢复人类和鱼人关系的英雄。</li>
<li>庸医西罗洛克在临死前，人究竟什么时候会死？ 是心脏被枪打中的时候？不对！得了不治之症时吗？也不对！喝了剧毒蘑菇汤之后吗？当然不对！…………..是被世人遗忘的时候。 就算我消失了，我的梦想还是会实现的！ 那个梦想一定能拯救这个国家人们的心病！</li>
<li>公主薇薇。我很想和你们一起去寻找ONE PIECE,可是我是一个国家的公主，我不能离开这里，我有更多的事情要做，如果我这样自私，你们还会承认我是你们的朋友么？</li>
<li>恶魔之子艾斯，我的存在是有意义的吗。一哭一笑，总结这一生。</li>
<li>白胡子，他手里有毁灭世界的能力，而渴望的，却是身边的家人。</li>
</ul>
</li>
<li>在大海贼时代，大家的梦想都很宏大。而这部作品精彩的地方在于，它允许有的梦想不必伟大。骗人布，我希望做一个勇敢的海上战士。如果我没有全力作战的话，就没有资格和他们搭同一艘船！更不可能和他们一起开心的笑了！他们，是在真心地对我笑啊！</li>
<li>正义的审判会成为暴力的代名词吗？</li>
<li>路飞之前一直也是为正义战斗，或者说刚好站在正义的一方（路飞选择考虑的永远不是正义，但恰恰每次他的选择都代表着正义），从橘子镇到阿拉巴斯坦，司法岛这些事件。但是包括德雷斯罗萨篇章在内（除了空岛无人知晓外），每一次击败了邪恶的海贼，解救了人民，最后还是被海军追着逃跑。舆论上，悬赏令上只会报道草帽海贼团变得更加危险了，人民看了只会觉得这个海贼团更加恐怖。</li>
</ul>
<p>多么虚构的故事，却把这个世界刻画得那么真。</p>
<h2 id="17-5-17_它不必深刻">17.5.17 它不必深刻</h2><p>好好整理反思自己写过的文字，远比去乱逛焦虑来得值的！放在Desktop里的很多文章笔记都写得很不错~</p>
<p>“读者意识到自己对生命的认识因为莎士比亚而深刻”</p>
<blockquote>
<p>而真正的阅读体验是，它不必深刻。</p>
</blockquote>
<h2 id="17-5-16_关于未来的App">17.5.16 关于未来的App</h2><p>未来的内容app会越来越和电影形式区分不开。</p>
<h2 id="17-5-03_关于鲸鱼">17.5.03 关于鲸鱼</h2><p>20号前要给多大中文发一篇长稿，一篇鲸鱼背后的开发故事，最好要流畅一点。</p>
<p>我们的噱头：</p>
<p>全学生开发，独立开发。学生，意味着我要展现出我们成长的过程，我们之前很柔弱的样子。独立开发，有很多和市面成熟产品相比很独特的经验，自己的酸甜苦辣。 </p>
<p>概念崭新，我们做的是全平台的聚合。</p>
<p>还需要添加一个开发期间的故事。学习一下，像facemesh和facebook，仔细想想有很多细节的。</p>
<h2 id="17-5-02_关于阅读">17.5.02 关于阅读</h2><blockquote>
<p>虽然很喜欢樊小纯的思想，但是关掉kindle竟然想不起来她的话了。只言片语始终抵不过一段故事来的震撼。</p>
</blockquote>
<p>喜欢读书，就和所有纯粹的喜欢一样。</p>
<p>会让人很平静，体验了不同的生活，那也是你心灵的底色。而说到底，你见证了那么多的生活，波澜也好，平淡也罢，当真正重要的东西出现在你的身边的时候，你更容易认得出她。</p>
<p>你清楚的知道，这一次，我不要再错过。</p>
<p>温顺如眼眸。</p>
<blockquote>
<p>渐渐学会一种力度，去回头轻轻梳理自己的生活。</p>
</blockquote>
<h2 id="17-4-27_关于自律\鲸语视频终于诞生\学会和开发者交流">17.4.27 关于自律\鲸语视频终于诞生\学会和开发者交流</h2><p>终于找回曾经早上八点泡图书馆，晚上六点也准时过来泡的生活节奏了。越努力，越幸运，不正也是你自己曾经最相信的嘛。今天忙活一天终于把视频下拉的动画做了出来，很感激那个愿意和第一次发邮件就愿意八百来字的详细解释动画原理和想法的开发者，很感激那一份真诚，也挺感激那个会迈开这一步的自己。</p>
<p>如果连你自己都不愿意思考怎么实现，还有谁会帮你，还有谁可以帮你？</p>
<p>突然又想起来那一句话，you are what you eat, what you think, what you do。</p>
<h2 id="17-4-17_关于天气">17.4.17 关于天气</h2><p>这几天多伦多的空气特别好闻呢，每次和家里人视频，我都会提到，就像那十年前的广州，是带有淡淡的甜味的。或许呢，曾经留驻在广州的空气终于跋山涉水来到了这里，呐，十年了。或许也想不清楚了，究竟自己怀念起的是当时的空气，还是当时的自己。</p>
<p>季节的交接往往没有我想象的那么缓慢。还记得高中的时候，每每到了夏天，就开始打量着，天气再凉点，我可以这么穿，再凉点可以那么穿，可结果却总是一场秋雨，就冷得只能裹着校服棉袄。没有和你提起过一句话，就分明拆穿了你所有的准备，这过的真像是一句隐喻……可谁又知道呢，越满怀踌躇，就越视而不见，这也是生活呀。</p>
<h2 id="17-4-17_关于全世界都在声讨的新闻？">17.4.17 关于全世界都在声讨的新闻？</h2><p>会只有一种文化，一种论调。并不是说关注时事有什么不好，只是…</p>
<p>好像时代越走越快，你越来越容易失去做一头安静的猪的权利。</p>
<p>真正的自由，意味着你拥有着可以不一样的权利。</p>
<p>还可能会失去创造力。</p>
<blockquote>
<p>[07.02]但其实我觉得还会牵涉到另一个很重要的问题，关于阶级的思想控制。如果整个社会里的人都不愿意碰苦活脏活，如果整个社会里的人都喜欢同样的一些东西，讨厌一些东西。那在那个时候被讨厌的受排挤的人或者观点，是不是就没有存在的价值了呢，或者说就是在价值观更低劣呢？唯一的价值观和判断是最危险的。你最容易放松警惕的时刻，是共识的诅咒。</p>
</blockquote>
<h2 id="17-3-17_你的文字">17.3.17 你的文字</h2><p>你永远不会知道 你的文字 会在谁的心中扎根 会婉转多少人的眼眸 可那些被留下的 是真的幸运</p>
<h2 id="17-3-17_在梦里读信">17.3.17 在梦里读信</h2><p>有时候也很好玩 梦见梦里在读信 明明就是自己的梦呀 那些文字不应该都是我的文字嘛 可信里的文字还是那么陌生而典雅 这真是我的梦么？</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[未选择的路 -《刀锋》读后感]]></title>
      <url>http://chocoluffy.com/2017/06/17/%E6%9C%AA%E9%80%89%E6%8B%A9%E7%9A%84%E8%B7%AF-%E3%80%8A%E5%88%80%E9%94%8B%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>对于《刀锋》还是有蛮多可以探索的主题的：</p>
<ul>
<li>为什么是刀锋。</li>
</ul>
<p>舅舅艾略特至死都崇望着上流社会的认可，他是穿着爵位的华服去世的。每个人都获得了幸福的结局，不同的人生，不同的快乐有区别吗？为什么是刀锋？为什么我要跨过去？</p>
<ul>
<li>“上帝为什么要创造邪恶呢？”拉里一生困惑的问题。这个问题重要吗？</li>
</ul>
<blockquote>
<p>[2018.7.28更新] 在看完了黑塞的《德米安》之后，发现基督教徒在真实面对这个光明和黑暗并存的世界的时候容易产生相类似的困惑，因为他们的教条尝试在掩盖邪恶的存在，并不愿意承认一个一分为二的世界。你要么相信上帝既是正义也是邪恶的，要么同样崇拜一个邪恶的神。</p>
</blockquote>
<ul>
<li>关于毛姆作家的。</li>
</ul>
<p>艺术充满力量，那通俗呢？那真实的？通俗有什么力量。“如果你志在追求艺术追求文学，那么去读一读希腊人写的东西好了。 <strong>因为要诞生真正艺术，奴隶制度是必不可少的。</strong> 而古希腊人便是这样：奴隶们耕种、烧饭、划船，而市民们则在地中海的阳光下陶醉于吟诗作赋，埋头于数学解析。所谓艺术便是这么一种玩艺。至于半夜三点在悄无声息的厨房里检查电冰箱的人，只能写出这等模样的文章而那就是我。” 来自村上的一段话。</p>
<ul>
<li>小说的细节描写。</li>
</ul>
<p>那个灯塔扫入医院的光，那个第二天凌晨腿的颤抖。以及很多来自作者本人的视角的描述。在与友人的对话中填补过去发生的事。一层层迷雾，也渐渐揭开。这个应该是悬疑小说最适合的套路吧，每找到一个新的人，对真相就颠覆一次。</p>
<p>拉里。真实感。</p>
<ul>
<li>命运的风起云涌。</li>
</ul>
<p>作者在结尾写道，这无意成为了一个成功的结局，大家各得其所。艾略特舅舅在上流社会得到认可，伊莎贝尔得到了财富和悠哉的生活，拉里也找到了他的幸福。作者整篇的语风，是非常坦率地喜欢着他们每一个人。</p>
<p><strong>每个人，都深深地陷在自己的世界里。</strong>所谓的生活不分高低贵贱，是既然每个人的出发点，每个人的方向都不同，那结果就不具有可比性。舅舅至死也没有对上流阶层的认可退让一小步。能说他们过得更可怜吗？</p>
<p>同样很值得玩味的是，所有出场的人物，伊莎贝尔，拉里，格雷，苏菲，他们在他们最开始的时候，竟是特别的相似的一群人。拉里，不过也是生活着大部分年轻人一样的生活，甚至他自己也以为他和伊莎贝尔的婚约会成真。但自从拉里经历了战争，失去了他最亲密的一个战友时，宛若一条溪流被河堤劈开两半，那份渺小感，那份茫然感注定让拉里走上了不同的方向，不能回头。</p>
<p>也想起来初中我们被要求背下的几句诗，来自弗罗斯特的未选择的路。</p>
<p>一片树林里分出两条路，<br>而我选了人迹更少的一条，<br>从此决定了我一生的道路。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[但是你记得｜《把你交给时间》读后感]]></title>
      <url>http://chocoluffy.com/2017/03/20/%E4%BD%86%E6%98%AF%E4%BD%A0%E8%AE%B0%E5%BE%97-%E3%80%8A%E6%8A%8A%E4%BD%A0%E4%BA%A4%E7%BB%99%E6%97%B6%E9%97%B4%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>“那些微小的瞬间， 一点都不重要， 但是你记得。”</p>
<a id="more"></a>
<p>很少这么专注地一口气读完一本书了。 一次没有WIFI的航程竟成了一场恩赐， 橘黄色的阅读灯刚刚够点亮我的位置， 在周围一片睡意里， 我静静地听着陶立夏讲述的一段又一段旅行故事。 故事里一再出现的“你”的提问和陪伴， 也让我感动仿佛作者就在面前的亲切。文字很轻， 没有什么呐喊， 也不需要什么奔走相告， 或许本身孤独的心就离的很近，而邻近的人， 就不必大声了。机舱很吵， 心很静。 或许这也是我那么多次航行在万丈高空里， 最虔诚的一次。</p>
<p>突然很想去旅行， 更准确的说， 其实是很想去感受作者旅行的感受吧， 冰岛壮阔的蓝， 溯游的三文鱼， 优雅的伦敦， 名字特别好听的小岛……自己明明羡慕的很， 羡慕远行的洒脱， 羡慕每篇依旧崭新而温热的回忆。但羡慕归羡慕， 我自己也清楚得很， 世界一直都是那个样子， 不同的人怀揣着不同的心事往昔去看， 也看到的是不同的样子。挺荒谬的不是嘛， 可能一群人跋山涉水追逐着记录下的风景和绝唱， 到头来那最终的震撼却因人而居， 细腻的人窥见细腻的风景， 多情的人捕捉住多情的回忆， 人呐， 始终走不出自己这个圈子罢了。</p>
<p>无数次和旅行一起捆绑的， 还有不断追问的意义。 人们总是想知道个所以然， 摸索到潜在的利害关系是最令人信服的， 毕竟谁都难以忍受住的， 却终究被少数人克服的那刻会揭开多少人的伤疤。 人还是喜欢自我安慰， 有个答案， 总比没有答案省事多了不是吗。问题到了作者那儿， 只见她款款在结尾写道， “人们常常问我旅行的意义， 我总是答不上来……那些微小的瞬间， 一点都不重要， 但是你记得。”</p>
<p>如果说遗忘是否定了存在过， 那么记得， 或许就是最实诚而浪漫的珍惜了吧， 那些隔着时光却依旧清晰的纹理， 味道和温度， 那些仅仅一小段旋律就撩开的汹涌回忆……人类发明各种科学技术交通手段来战胜空间仿佛无所不能， 却对时间无能为力。 而那些潮水冲散开后仍一直被攥紧着的， 又是多么得幸运。</p>
<p>而关于旅行同样重要的， 还有那些在经历了不平凡的生活之后， 对平凡的思考。在尝遍酸甜苦辣之后， 对平淡的回味。 我小时候也会想象， 那些恢弘的战争故事封笔后的情节， 将军战士总有褪下铠甲的一天， 撒去的热酒总有冷却的时候。和平的一如既往， 或者说战争的消逝， 会一并带走英雄吗？</p>
<p>有没有发现，最近的好莱坞，越来越擅长英雄迟暮了。</p>
<p>印象很深刻新世相的一句话，“人们活着是注定为一些重要的事情伤心的，它提醒你曾经拥有过某种幸福。下一次再遇到时，你会一眼认出，然后紧紧抓住它”。</p>
<p>耳边响起的是小王子的呢喃。是被“驯服”过的。于是千万灿烂的玫瑰园，也认得出那独一无二的一支。</p>
<p>有一天，你恍然发现曾无比熟悉的生活里陌生而盛大的风景，“也记起这一路的奔波劳累和美丽景色。那或许会是在世界另一头的繁华都市，或许是在某个酷热的热带岛屿，又或者只是在某个赶稿的寻常春日夜晚。我想起Simbahllin，想起她吱嘎作响的老旧木地板和泛着时间光泽的咖啡桌，想起空气里华夫饼的香气，像挂念一个远方的故知。她性格沉稳又古怪，虽然并不能常见面，却让你觉得心安，因为她代表着一份遥不可及的温柔。我喜欢这种可望不可即的寄托，这就是旅行带给我们的，最长久也最真切的美好。”</p>
<p>很安静和美好。这就够了。</p>
<p>“生活即隐喻”，要学会努力感受生活。二十一岁了，这是我第一次有这种感觉。谢谢你，陶立夏。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[App首发｜鲸语 - 多伦多玩乐攻略第一入口]]></title>
      <url>http://chocoluffy.com/2017/03/20/App%E9%A6%96%E5%8F%91%EF%BD%9C%E9%B2%B8%E8%AF%AD-%E5%A4%9A%E4%BC%A6%E5%A4%9A%E7%8E%A9%E4%B9%90%E6%94%BB%E7%95%A5%E7%AC%AC%E4%B8%80%E5%85%A5%E5%8F%A3/</url>
      <content type="html"><![CDATA[<p>我想象，当我想知道在多伦多，哪里有最好吃的煎饼果子或者绵绵冰， 哪里有最好玩的酒吧和密室，鲸语能给我最好的答案。</p>
<a id="more"></a>
<p>鲸语是我过去几个月用业余时间开发出来的作品，<strong>每天推送多伦多城市生活，校园生活的最新资讯</strong>，实时追踪着主流媒体平台的本地报道，涵盖微信公众号，微博，知乎，Facebook及各大潮流杂志等等。结合全面的搜索功能，<strong>每一个话题，都可以关注到最实用和最及时的回答</strong>，从浪漫的约会地点到实惠的报税攻略……如果能省下些平时刷公众号的时间，少些急用时又搜不到的焦虑，也是我最大的愿望。</p>
<p><img src="http://chocoluffy.com/ReactNativeEverydayDemo/images/xs-whalesper-search.gif" style="display: block; margin: 0 auto; height: 500px"></p>
<p>鲸语也同步了近期多伦多周边最热门的活动，一键加入日历或者开始导航。</p>
<p><img src="http://chocoluffy.com/ReactNativeEverydayDemo/images/xs-whalesper-event.gif" style="display: block; margin: 0 auto; height: 500px"></p>
<p>同时，诞生于多伦多大学校园的鲸语，也聚合了大部分华人社团的动态，在此基础上，打通了UTADA社团旗下的UT助手平台的数据库，引入自动化聊天机器人，希望以最快捷的方式提供实时校园服务，包括各图书馆开放时间查询，期末考时间查询，课程课本乃至建筑物的查询等等等等…</p>
<p><img src="http://chocoluffy.com/ReactNativeEverydayDemo/images/xs-whalesper-campus.gif" style="display: block; margin: 0 auto; height: 500px"></p>
<p>纷乱嘈杂的媒体环境，掩盖了许多不被分享的美好。而鲸语想实现的，是想把这些优质的本土内容攻略，沉淀下来，分享出去。用最自动化的方式。</p>
<h2 id="一个没有编辑部的媒体平台_-_鲸语是什么">一个没有编辑部的媒体平台 - 鲸语是什么</h2><p>曾经接触过许多优秀的学生开发者的作品，可每当发现作品的内容终止更新的时候，总会感到些许惋惜。</p>
<p>的确，作为学生，难以取舍的运营成本抑或突如其来的人情世故，太容易放弃作品背后的冲动。也或许是这样，在我有开发鲸语的计划时，自动化成为了我最重要的目标。</p>
<p>自动地收集，自动地提取分析归类，自动地推荐。这会是一个完整的媒体平台，实时追踪着多伦多最有趣的动态，由算法决定文章消息的过滤，概括，标签和分类，由用户的阅读和收藏权衡热度，由地理位置产生推荐……而唯独不依赖于我的编辑。哪怕一年之后我从多伦多大学毕业了，鲸语也可以长久地运营下去，推送本地最酷的内容，服务所有多伦多华人。</p>
<p>向今日头条和湾区日报致敬。</p>
<p>被更多人所熟知的今日头条在技术上给了我很多启发，我也尝试着按照我的理解来打造内容特征分析和协同推荐的流程。在体量上，鲸语有接近200个内容源，涵盖了诸如微信、微博、知乎、Facebook及各大本地优质杂志等等的热门媒体平台。</p>
<p>而湾区日报，则更让我亲切。一个人每天分享文章的业余项目，近3年写了近90万字的简评。阅读并收集优秀的资源是一个很好的习惯，而让我印象深刻的并不是作者这一坚持的习惯本身，而是，作为一名工程师，将整个习惯流程完全自动化的地步。而我也采用类似的技术栈为鲸语开发了自动化的审核系统，各类存在争议的文章和活动，能够在与聊天机器人的交互中完成审核，后续的发布也依旧交给程序。而近期也将开放接口给各合作社团及第三方，提供更多内容发布上的便利。</p>
<p>讲不清楚自己对自动化的执着。或许就是懒吧，但更多也是对鲸语更长远的期待。打造一个没有编辑部的媒体平台，我还想尝试更多可能。</p>
<h2 id="连接更多优质的服务与人_-_鲸语的下一步">连接更多优质的服务与人 - 鲸语的下一步</h2><p>鲸语的下一步，会和许多优质的服务第三方和个人合作。会有很酷的东西更新，这里抿一下嘴哈哈。</p>
<h2 id="连点成线_-_记鲸语的诞生日记">连点成线 - 记鲸语的诞生日记</h2><blockquote>
<p>生命里的每一个点都会最终连成线。乔布斯</p>
</blockquote>
<p>很难说现在回头看能望见什么，但这半年来的经历都在我计划鲸语的时候给了特别多的启发。从开发校园服务开始，集成UT助手过去几百篇文章的推荐系统，自动文本概括，聊天机器人和先后开发的四五个未上架的App原型等等等等……于是乎，鲸语的出现就仿佛是一张拼图慢慢浮现出了形状，与其说是我开发出了这个作品，不如说是我认出了它。</p>
<p>就像突然发现一条绷紧的风筝线，牵扯起背后风尘仆仆的过往。</p>
<p>以前很喜欢普鲁斯特的一句话，“每个读者只能读到已然存于他内心的东西。书籍只不过是一种光学仪器，帮助读者发现自己的内心。”。它告诉我，不同的人怀揣着不同的心事往昔，会看见不同的风景。那些被骄傲着的想法，那个在软件背后所规划的世界，都不过唯心而已；也渐渐发现，在世界兜了一大圈，最后不过和自己对话。</p>
<p>可越是如此，也想拼命问出来，自己想象里这个世界的样子，那些还没被串联起的可能。</p>
<p>镜头慢慢转回来，鲸语因为这些经历慢慢出现了雏形，开始下一个阶段更细致地规划和开发。这过程也不是一帆风顺。</p>
<p>曾经道听途说过一些创业故事，而终于轮到自己，才发现，曾经那些被争吵着的，被争分夺秒的，都是最血淋淋的事实。作为开发者，诚心而论，这个过程里最大的瓶颈却同样最大的动力就是技术。商业化作品的架构的稳定性和延展性远不同于平时随手玩玩的项目，从运算的效率改进到数据库优化，再加上跨平台的开发考量……无数个选择，都推动我去不断理解和尝试不同企业面临相似问题的时候所做出的选择。作为管理者，从产品定位到市场营销等方方面面，那些陌生的海域，是不能再真实的未知和试探。小到logo的色差，某个板块少覆盖了哪个网站，大到屏幕的布局和动画，和第三方合作的条条款款……和伙伴们一遍遍修改，拍板再推倒重来，也成为鲸语现在依旧青涩却最真实的样子。</p>
<p>谁没有些从陌生到渐渐开窍的故事呢，或许没有那么多理所当然和信手拈来，不过举重若轻罢了。</p>
<p>写了这么多，其实鲸语没有那么复杂，就是一个本地的媒体平台，实验着我自己对数据分析上的，语义分析上的很多想法。而对鲸语真正可贵的，是那些海量被标签的数据，作为媒体，对机器推荐的改进怎么都不为过不是吗。等自己空闲下来，还有很多在机器学习上更有趣的事情可以尝试!</p>
<p>在你看到这里的时候，鲸语的第一版已经稳定地发布了。看过那些关于鲸语诞生的故事，那些开发时候的尝试，翻过篇章，鲸语也将迎来新的冒险。而我，也将尝试些更多的东西，纪录下更多的故事。或许不是每个故事都有完整的起承转合，但能够想清楚写清楚那些婉转和遗憾，也很有意思。</p>
<p>就好像有一段和自己一起成长的故事，一场陪伴。</p>
<p>或许就是陶立夏笔下写到的，仿佛蜗牛与它的壳，人嘛，总想要一些熟悉的东西陪伴着去看这个世界的繁华与荒凉。也算是写给自己间隔一年的回忆吧。</p>
<p>期待下一章。</p>
<h2 id="关于伙伴和小幸运_-_比心">关于伙伴和小幸运 - 比心</h2><p>来多伦多的这一年半发生了很多事情。搬了一次家，做出了全职一年的决定，第二遍去读加缪，各个打磨地或许依旧不会上架但仍然有趣的作品，以及那可能还未亲近的冬天……其中印象最深刻的，或许就是那误打误撞地加入了一个社团UTADA，误打误撞地认识了现在最要好的朋友和室友。曾经一直以为自己会单打独斗下去，但一路上的小伙伴慢慢多了起来，深感起伙伴的意义和陪伴。</p>
<p>谢谢Ajax，很天才的设计师和学习速度特别快的开发者，鲸语里很多细节都很有你的风格。谢谢Gloria，作为社长给一个年轻而懵懂的社团带来了太多的改变，产品方面特别有想法，激情和执行力。你们的加入，给鲸语带来了太多太多。</p>
<p>谢谢AirLoft的成员，去年暑假每个周末的hackerthon为社团捣鼓各种奇怪的东西，或许只有你们能陪我这么折腾。谢谢很默契的室友还有办公室里经常抱团的五小只，一起上课一起上班的各种帮忙打掩护。还有多大中文，虽然很少有交集但每每看到他们的文字总觉得很亲切，同样很酷的作品Klido和很有才艺的开发者；觅迷，很精致的作品，给了鲸语启发；还有EZ4，刚来多大时还以为是普通社团参加的破冰活动到现在已经发展得规模如此之大，虽然带有争议，但团队里有我特别尊敬的人。</p>
<p>身边有很多很有趣的伙伴，无论学术还是业界，和他们的相遇和合作本身就值得感激。也想多做点什么，对得起时光，也对得起运气。</p>
<p>最后引用多大中文一篇文章里很有感触的一句话结尾，“二十多岁的大学生绝对是迷茫、恐惧和无聊的，但却真的可以做很多事情、影响很多人。”</p>
<p>也致21岁的上半场。</p>
<p>鲸语来自多伦多盛大而无常的生活，也希望带给大家这座城市更精致的一面。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[浅析经典面试算法题-two pointer的运用]]></title>
      <url>http://chocoluffy.com/2016/12/04/%E6%B5%85%E6%9E%90%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E7%AE%97%E6%B3%95%E9%A2%98-two-pointer%E7%9A%84%E8%BF%90%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>前几天和朋友讨论 Google 电面的一道题， 由此启发， 总结了下 two pointer 的使用场景， 在大部分情况下， 恰当地使用 two pointer 可以使时间复杂度保持在 O(n)， 像 online judge 里部分 medium 题经常提及的子数列类型问题， two pointer 也可以提供不错的切入角度。</p>
<a id="more"></a>
<h2 id="前记">前记</h2><p>前几天和朋友讨论 Google 电面的一道题， 由此启发， 总结了下 two pointer 的使用场景， 在大部分情况下， 恰当地使用 two pointer 可以使时间复杂度保持在 O(n)， 像 online judge 里部分 medium 题经常提及的子数列类型问题， two pointer 也可以提供不错的切入角度。</p>
<h2 id="Two_Sum">Two Sum</h2><h3 id="Original">Original</h3><p><strong>Question</strong> [EASY] 找到两个数， 其和为指定数量。 Given an array of integers, find two numbers such that they add up to a specific target number.</p>
<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p>
<p>很典型的two sum问题。除去brute force的n方时间复杂度的算法，还有n的方法。简单来说， 用hashmap找另一个值是否存在， 典型的用空间换时间， 这里空间复杂度也是n。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hashmap implementation. O(n) runtime, O(n) space.</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">  Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (map.containsKey(target - numbers[i])) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; i + <span class="number">1</span>, map.get(target - numbers[i]) + <span class="number">1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!map.containsKey(numbers[i]))&#123; <span class="comment">// edge case: duplicate items.</span></span><br><span class="line">        map.put(numbers[i], i);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Hashmap特别要注意的地方就是对于duplicates的考虑， 题目究竟是返回true or false就可以了， 还是需要返回所有符合的index， 还是只是最小（或最大）的index， 都会有不同的实现方案。</p>
<h3 id="Sorted">Sorted</h3><p>如果integer array已经排序过了的话，可以用两个pointer来实现n时间1空间复杂度的方案； 不难理解， 两个pointer从两头往中间移动， 其sum只有三种可能， 和比要求的target小， 那么起始点的pointer右移， 和比要求大， 末尾pointer左移， 直到得到和或者return没有结果为止。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Two pointer implementation. Given that array is sorted. O(n) runtime, O(1) space.</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">  <span class="keyword">int</span> p1 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> p2 = size - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (p1 &lt; p2)&#123;</span><br><span class="line">    <span class="keyword">if</span> (numbers[p1] + numbers[p2] &lt; target) &#123;</span><br><span class="line">      p1 += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (numbers[p1] + numbers[p2] &gt; target) &#123;</span><br><span class="line">      p2 -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;p1, p2&#125;;    </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>留意一下two pointer适合哪些情景? 基础的变式是通过两个移动不同步长的pointer来完成一些事情， 也在暗指， 本身iterate through的这个array必须存在一些特性使得pointer可以有不同的移动。</p>
<h3 id="Tricks">Tricks</h3><p>借此稍微总结一下， 运用到two pointer的场景和技巧。</p>
<p><strong>Question</strong> [EASY]合并两个sorted array变成一个sorted array。 Given two sorted arrays A and B, each having length N and M respectively. Form a new sorted merged array having values of both the arrays in sorted format.</p>
<p>利用设置在两个sorted array开头的指针， 来达到m+n时间复杂度的效果。 比较简单。</p>
<p><strong>Question</strong> [EASY]一次循环找到链表的中间元素。How to find middle element of linked list in one pass?</p>
<p><strong>Question</strong> [EASY]判断一个链表是否存在环。 How to find if linked list has a loop ?</p>
<p><strong>Question</strong> [EASY]找到链表中倒数第三个元素。How to find 3rd element from end in a linked list in one pass?</p>
<p>以上都是关于单向链类似的问题， 利用two pointer都可以得到快速的解答。</p>
<h3 id="Example1_-_continuous_maximum_subarray">Example1 - continuous maximum subarray</h3><p><strong>Question</strong> [MEDIUM]找到不大于M的连续最大和子数列。 Given an array having N positive integers, find the contiguous subarray having sum as great as possible,, but not greater than M. </p>
<p>其实第二题还涉及到了另一个技巧， 就是在对于部分求和问题里， 使用cumulative sum array是一个可能的切入口。 在将原数列生成对应的cumulative sum array之后， 这个题目也就相应转换为找到两个index， 使得对于这个递增的和数列， 满足：<code>cum[endIndex] - cum[startIndex-1] &lt;= M and cum[endIndex+1] - cum[startIndex-1] &gt; M</code>的条件， 而<code>endIndex</code>和<code>startIndex</code>在原数列里对应的子数列， 就是满足要求的最大和子数列。</p>
<p>转换了题意之后， 对于这个递增数列， 可以接着用two pointer的思想来处理， 设置start和end两个pointer从头开始， 右移end指针只到不能满足需求为止，然后右移start指针来减少sum使得end指针可以继续右移。 记录下每次start指针右移是的sum， 最大的那个sum所对应的指针位置， 对应回原数列， 就是我们想要找到的连续最大和子数列。<strong>可以说， 这道题的突破口是利用cumulative sum来创造一个递增的数列， 从而使two pointer的实现方式更为简洁。</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] main(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> ceiling) &#123;</span><br><span class="line">  <span class="keyword">int</span>[] cumSum = <span class="keyword">new</span> <span class="keyword">int</span>[numbers.length() + <span class="number">1</span>]; <span class="comment">// obtain cumulative sum.</span></span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">  cumSum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length(); i++) &#123;</span><br><span class="line">    sum += numbers[i+<span class="number">1</span>];</span><br><span class="line">    cumSum[i+<span class="number">1</span>] = sum;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>; <span class="comment">// two pointers start at tip of the array.</span></span><br><span class="line">  <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span>[] ids = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">while</span> (l &lt; cumSum.length()) &#123;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; cumSum.length() &amp;&amp; cumSum[r] - cumSum[l] &lt;= M) &#123;</span><br><span class="line">      r++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cumSum[r-<span class="number">1</span>] - cumSum[l] &gt; max) &#123; <span class="comment">// since cumSum[0] = 0, thus r always &gt; 0.</span></span><br><span class="line">      max = cumSum[r-<span class="number">1</span>] - cumSum[l];</span><br><span class="line">      ids[<span class="number">0</span>] = l; ids[<span class="number">1</span>] = r;</span><br><span class="line">    &#125;</span><br><span class="line">    l++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ids;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Example2_-_continuous_minimum_distinct_subarray">Example2 - continuous minimum distinct subarray</h3><p><strong>Question</strong> [MEDIUM]找到至少含有K个不同数字的连续最小和子数列。 Given an array containing N integers, you need to find the length of the smallest contiguous subarray that contains atleast K distinct elements in it. Output “−1−1” if no such subarray exists.</p>
<p>从题意上和上一问求连续最大和子数列很像， 其实处理方式也有共同之处， 利用cumulative sum来负责和的部分， 利用set的实现来负责distince element的部分， 和之前相比end指针移动的条件， 更换为使得set中元素至少有K个， 记录此时sum和对应得<code>end - start</code>得长度， 然后移动start指针， 更新set元素， 由此往复。n的时间复杂度。</p>
<h3 id="Example3_-_minimum_hustle_subsequence">Example3 - minimum hustle subsequence</h3><p><strong>Question</strong> [MEDIUM] 找到K个给出最小hustle值的子数列， 不要求连续。 Given an array having N integers, you need to find out a subsequence of K integers such that these K integers have the minimum hustle. Hustle of a sequence is defined as sum of pair-wise absolute differences divided by the number of pairs. </p>
<p>明确了hustle值， 也就是pair的差绝对值之和之后， 对于不要求连续的子数列找最小值， 可以利用sorting来排序， 转换为类似寻找连续最小和子数列的类型。可以稍微改变上题的方法来处理这道题。nlogn + n的时间复杂度。</p>
<h3 id="Example4_-_Google_phone_interview">Example4 - Google phone interview</h3><p>前几天看到朋友发的Google的其中一道电面的题， 和上面讨论的题型很像， 不过稍加改动之后还更简单了。</p>
<p><strong>Question</strong> [EASY] 找到number X满足最大cover。Given a set S of 10^6 doubles. Find a number X so that the [X, X+1) half-open real interval contains as many elements of S as possible.For example, given this subset:[2.7, 0.23, 8.32, 9.65, -6.55, 1.55, 1.98, 7.11, 0.49, 2.75, 2.95, -96.023, 0.14, 8.60], the value X desired is 1.98 because there are 4 values in the range 1.98 to 2.97999 (1.98, 2.7, 2.75, 2.95)</p>
<p>首先还是将数字sort一遍， 之后可以将题目转换为two pointer的类型。<code>array[end] - array[start] &lt; 1</code>， 同时使得collection的size最大。 每次end指针右移， 添加element到collection里面， 在start指针右移的时候记录下对应的<code>array[start]</code>的值和collection的size， 最后拿到当collection的size最大的时候的那个元素值就可以满足在<code>[X, X+1)</code>的区间中数列的元素最多了。 由于不需要考虑distinct element， 所以采用collection而不是set。 达到O(n)的时间复杂度， 较优的解法。</p>
<h3 id="Example5_-_three_pointers">Example5 - three pointers</h3><p><strong>Question</strong> [MEDIUM] 找到最长只含有两个不同字母的子数列长度。 Given a string S, find the length of the longest substring T that contains at most two distinct characters. For example, Given S = “eceba”, T is “ece” which its length is 3.</p>
<p>仍然是two pointer的变式， 在维持two pointer的移动规则， 以及保持map的元素一直为两个的同时， 利用第三个pointer来从map中移除元素。在这种情况下不是简单的每次直接移除一个， 而是利用第三个pointer来移除移除元素到map里只剩两个元素。之所以用map而不用set的原因是， 移除一个字符并不代表后面就没有该元素重复， 而是采用<code>map&lt;char, int&gt;</code>来计数， 当int为0时才从map的key中移除该字符。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * find longest substring with at most two distinct elements.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestSubstringTwoDistinctElement</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> l = <span class="number">0</span>, m = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> maxLen = <span class="number">0</span>;</span><br><span class="line">   Map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; map = <span class="keyword">new</span> HashMap&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;();</span><br><span class="line">   <span class="keyword">while</span> (r &lt; s.length()) &#123;</span><br><span class="line">      <span class="keyword">while</span> (map.size() &lt; <span class="number">3</span>) &#123; <span class="comment">// keep the set fixed.</span></span><br><span class="line">         maxLen = max(maxLen, r - l);</span><br><span class="line">         r++;</span><br><span class="line">         <span class="keyword">if</span> (map.containsKey(s[r])) &#123;</span><br><span class="line">            map.put(s[r], map.get(s[r]) + <span class="number">1</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(s[r], <span class="number">1</span>);</span><br><span class="line">         &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      m = l; <span class="comment">// pointer m moves the from left till map becomes two.</span></span><br><span class="line">      <span class="keyword">while</span> (map.size() &gt; <span class="number">2</span>) &#123;</span><br><span class="line">         <span class="keyword">if</span> (map.get(s[m]) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            map.put(s[m], map.get(s[m]) - <span class="number">1</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123; <span class="comment">// remove that char from map.</span></span><br><span class="line">            map.remove(s[m]);</span><br><span class="line">         &#125;</span><br><span class="line">         m++;</span><br><span class="line">      &#125;</span><br><span class="line">      l = m;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   Method2: Compare with using map, if we know string only contains ASCII characters, then we can use int[256] to replace with a map&lt;char, int&gt;, since ASCII contains 127 characters, while use 8 bits leave one space for signed or unsigned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstringTwoDistinct</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">int</span>[] count = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">   <span class="keyword">int</span> i = <span class="number">0</span>, numDistinct = <span class="number">0</span>, maxLen = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; s.length(); j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (count[s.charAt(j)] == <span class="number">0</span>) numDistinct++;</span><br><span class="line">      count[s.charAt(j)]++;</span><br><span class="line">      <span class="keyword">while</span> (numDistinct &gt; <span class="number">2</span>) &#123;</span><br><span class="line">         count[s.charAt(i)]--;</span><br><span class="line">         <span class="keyword">if</span> (count[s.charAt(i)] == <span class="number">0</span>) numDistinct--;</span><br><span class="line">         i++;</span><br><span class="line">      &#125;</span><br><span class="line">      maxLen = Math.max(j - i + <span class="number">1</span>, maxLen);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Substring">Substring</h2><p><strong>Question</strong> [EASY] 查找是否存在子字符串。Implement strstr(). Returns the index of the first occurrence of word1 in word2, or -1 if word1 is not part of word2.</p>
<p>其实典型做法就是科班的KMP算法， mn的时间复杂度， 注意的点还是在于对部分edge cases的考虑。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">strstr</span><span class="params">(String raw, String template)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; raw.length(); i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; template.length(); j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (i &gt; raw.length() - template.length()) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span> (template.charAt(j) != raw.charAt(i + j)) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (j == template.length()) <span class="keyword">return</span> i;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Reverse_Words_in_String">Reverse Words in String</h2><p><strong>Question</strong> [EASY] 将字符串中的单词们首位调换位置。Reverse words in string. Given an input string s, reverse the string word by word. For example, given s = “the sky is blue”, return “blue is sky the”.</p>
<p>注意的点在于使用StringBuilder而不是String concatenation， 因为StringBuilder不需要每次在赋值的时候再创建一个新的对象。 同时和这类题型特别相似的还有将某个integer array向某个方向rotate的， 存在类似的技巧。</p>
<h3 id="Original-1">Original</h3><p>基础的做法：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// parse token, reverse them. n time, n space.</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">reverse</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">	String[] tokens = s.split(<span class="string">"\\s+"</span>);</span><br><span class="line">	String result = <span class="string">""</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tokens.length(); i++) &#123;</span><br><span class="line">		result += tokens[tokens.length() - <span class="number">1</span> - i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果不允许使用<code>split()</code>来parse token的话， 可以尝试two pointer的方式， 一个负责track单词的起始位置， 一个负责track结束位置， 然后跳过空格继续执行。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// do better with only one pass, without using split util function. By using two pointers, one tracks the word's beginning, one tracks the end. n time n space.</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">reverse</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> start = s.length() - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> end = s.length() - <span class="number">1</span>;</span><br><span class="line">	StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">	<span class="keyword">while</span> (start &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">while</span> (!s.charAt(end)) &#123; <span class="comment">// start with a non-space word.</span></span><br><span class="line">			start--;</span><br><span class="line">			end--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(s.charAt(start)) start--;</span><br><span class="line">		<span class="keyword">if</span> (result.length() != <span class="number">0</span>) &#123;</span><br><span class="line">			result.append(<span class="string">' '</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		result.append(s.substring(start + <span class="number">1</span>, end));</span><br><span class="line">		end = start;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Tricks-1">Tricks</h3><p>以上提到的两种方法都是n时间n空间， 也就是我们都创建了一个新的array返回， 也有直接在原数列做交换的方式， 正是上文提到的关于rotate类型的技巧。由于我们观察到：如果给每一个单词都reverse一遍， 最后再整个字符串reverse一遍， 可以得到相同的结果， 比如：</p>
<ul>
<li>raw： “ab bc cd”</li>
<li>target： “cd bc ab”<ul>
<li>reverse each word from raw： “ba cb dc”</li>
<li>reverse whole string：“cd bc ab”， same as target string.</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	Reverse words in string, but do it with n time, 1 space.</span></span><br><span class="line"><span class="comment">	- one brilliant idea is, by reversing words first, then reverse the whole string. It has the same effect as reverse words in string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">char</span>[] s)</span> </span>&#123;</span><br><span class="line">	rotate(s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; j &lt;= s.length(); j++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(s[j] == <span class="string">' '</span> || j == s.length())&#123;</span><br><span class="line">			rotate(s, i, j);</span><br><span class="line">			i = j + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">char</span>[] s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (end - start) / <span class="number">2</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">char</span> temp = s[start + i];</span><br><span class="line">		s[start + i] = s[end - i - <span class="number">1</span>];</span><br><span class="line">		s[end - i - <span class="number">1</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="More">More</h3><p>类似的还有刚刚提及的将某数列向某方向rotate的题型， Rotate an array to the right by k steps in-place without allocating extra space. For instance, with k = 3, the array [0, 1, 2, 3, 4, 5, 6] is rotated to [4, 5, 6, 0, 1, 2, 3]. </p>
<p>同样可以用到reverse的技巧。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rotateRight</span><span class="params">(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> step)</span> </span>&#123;</span><br><span class="line">	rotate(numbers, <span class="number">0</span>, numbers.length() - step);</span><br><span class="line">	rotate(numbers, numbers.length() - step + <span class="number">1</span>, numbers.length());</span><br><span class="line">	rotate(numbers, <span class="number">0</span>, numbers.length());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (end - start) / <span class="number">2</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> temp = numbers[start + i];</span><br><span class="line">		numbers[start + i] = numbers[end - i - <span class="number">1</span>];</span><br><span class="line">		numbers[end - i - <span class="number">1</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Reading">Reading</h2><ul>
<li><a href="https://tp-iiita.quora.com/The-Two-Pointer-Algorithm" target="_blank" rel="noopener">quora-two pointer algorithm</a></li>
<li><a href="https://leetcode.com/" target="_blank" rel="noopener">leetcode</a></li>
</ul>
<h2 id="后记">后记</h2><p>刚开始用Java， 其实主要还是平时写Spring Boot的时候用的比较多， 如果上述的算法有错误或者忽略了edge cases的考虑， 欢迎在评论区指出。 同时大部分问题都存在其他或许更优的解法， 欢迎一起讨论~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[喜欢冬天，因为可以把寒冷归咎于天气]]></title>
      <url>http://chocoluffy.com/2016/11/20/%E5%96%9C%E6%AC%A2%E5%86%AC%E5%A4%A9%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%8F%AF%E4%BB%A5%E6%8A%8A%E5%AF%92%E5%86%B7%E5%BD%92%E5%92%8E%E4%BA%8E%E5%A4%A9%E6%B0%94/</url>
      <content type="html"><![CDATA[<p>自由主义的故事，曾经是因为其经济上的优势而繁荣和扩张的。然而绝大多数的时候，这只是一小部分精英们的故事，自由和权利或许都只会是上层阶级的财产和特权。可悲的是，人们没有其他选择。选择trump，是不想听见一个一直听腻的故事，是对遥远的精英们仅剩的嘲讽罢了。</p>
<a id="more"></a>
<h2 id="11-11">11.11</h2><h3 id="告别">告别</h3><p>今天和最亲最尊敬的小老板告别，还好是冬天，可以把难受和不舍归咎给天气。 这是一个流行离开的世界，但是我们都不擅长告别。 祝愿你一切都好。</p>
<p>(这是小老板家里面的一幅挂饰，写得好好啊，好喜欢~)</p>
<h2 id="11-10">11.10</h2><h3 id="unfamiliarity">unfamiliarity</h3><p>真的，技术进步这种东西，真的很少有aha moment，或者突然一下子的飞跃，感觉就是不断了解和深入之后的熟悉和融会贯通罢了。 突然想起来之前看一次react europe conferrence的视频，里面的主讲人之一pitt hunt好像是，提到过这么一句话，“don’t equal unfamiliarity to difficulty”，很多时候，你觉得它intimidating，仅仅是因为你站得比较远罢了。 突然适用的，还有崇拜和美感，世界上哪有什么男神女神的，哪只是因为你还不了解他或者她，甚至不愿意去了解，真正走近之后，真正让人牵挂的，也不再是她的光环。</p>
<p>自己每天的零碎时间都拿来看文章和博客，真的很有用！真的真的，要坚持下去哦！</p>
<p>愿每一次的打磨者，都只会是自己。</p>
<h2 id="11-09">11.09</h2><h3 id="看书">看书</h3><p>亚马逊的购物车里放了好几本特别想看的书，圣诞回去一定要买回来! 朱天文! 朱天文! 好喜欢看散文，没有长篇小说的负担，轻轻松松地，就像旁听一段对话或者独白。 温柔的力量，曾经看到新世相里描绘的，是轻轻拂过不用力的打扰。</p>
<p>也不知道为什么那么钟爱散文，就是那种如果几周不看些令自己满意的文字就会不舒服的毛病吧，也生怕自己再也写不出平静而诚挚的感觉了。 总是觉得，文学的这类朦胧和理学的逻辑思辨是有冲突的，就好像是距离带来的美感，是不审视带来的真实感一样，太多的想象力，轻轻一戳，就是荒谬。可尽管如此，我还是习惯性地想要体会言语间的柔软，像是一场逃离，想要能够轻轻对生活卖个萌的浪漫。</p>
<h3 id="关于冬天">关于冬天</h3><p>地铁里突然想起来，写下的一段话：</p>
<p>喜欢冬天的理由之一，是拥有一对仿佛可以塞下全世界的衣兜，喜欢那种随手一掏，就可以拿起笔记本的日子~</p>
<p>不喜欢冬天的理由之一，也源自一场轻描淡写的忧伤，看到一段字，“喜欢冬天，因为可以把寒冷归咎于天气。”</p>
<p>今天终于下定决心要开始写日记了! 最后有个周报或者月报什么的~ 给自己定下了一个死死的目标，“写博客，写项目和健身，每天三样能完成两样就已经很不错了呢”。也是受byvoid大神和小土刀师兄的启发。</p>
<h3 id="总统选举">总统选举</h3><p>今天也是美国总统选举结果公布的第一天。 各个媒体渠道都在铺天盖地的报道，我所选择的我认为阐释得比较周全得文章有以下两篇，摘抄在这里学习学习：</p>
<h3 id="关键词－民粹主义和民主主义，">关键词－民粹主义和民主主义，</h3><p>来自<a href="http://mp.weixin.qq.com/s?__biz=MzA4MjcxMDEwNQ==&amp;mid=2686252468&amp;idx=1&amp;sn=6fb3b2e145e4d8ec000df00a6401796a&amp;chksm=ba69ce828d1e47940f52ddce33eb85b570f0e2594d434b3b607ba9c5afaddb7676faaeda213e&amp;mpshare=1&amp;scene=2&amp;srcid=1107R9tLwL2xTllBCcyAXdAc&amp;from=timeline&amp;isappinstalled=0#wechat_redirect" target="_blank" rel="noopener">刘瑜：如何看待美国大选中的川普现象——论美国政治中的民粹主义</a>。</p>
<p>一个趋势是：没有政治家自称是“民粹主义”者，但是几乎人人都在给异己者贴上民粹主义标签。难道“我同意的民意”就是民主政治，“我不同意的民意”就是民粹政治？</p>
<p>本质上，自由式民主依赖精英主义和平民主义之间的平衡，而民粹政治信奉平民主义对精英主义的压倒性胜利。</p>
<p>民粹主义往往需要一种“人格化的力量”去唤起和表达。由于对“精英建制”（elite establishment）的敌视，民粹主义往往需要一个“孤胆英雄”式的人物去树立一个“反叛”的旗帜。无论是查韦斯、普京、埃尔多安、穆加贝，或美国的川普或桑德斯，都试图树立自己“孤胆英雄”的形象。因此，民粹主义的一个特点是其政治的“个人色彩”很强，这与民主政治的“机构色彩”形成鲜明对比。</p>
<p>因此，民粹政治的现实展开形式，常常是政治强人利用底层民众联手夹击社会中间层，而自由式民主固然具有精英主义色彩，但由于精英本身的多元性与分散性，却更能抵御威权主义的侵蚀。</p>
<p>但与此同时，对于民主主义来说，正因为美国政治的多元主义和精英主义成分，它也招致了许多人对美国“虚伪民主”的批评。《民主的反讽》一书认为，精英主义是美国民主得以良好运行和延续的“秘密”，而这正是美国民主的反讽之处。作者指出，由于精英往往比大众在政治上更加宽容，如果美国的政治体制镜像式地反映最主流的民意，而不是“掺入”了很多精英的理念，那么自由式民主或许早就不复存在了。</p>
<p>经济学家Caplan也指出，如果美国的底层民众投票率和中上层一样高（事实是前者低得多），那么美国的经济政策会“不理性得多”。换言之，尽管自由式民主的实践放大了精英的影响力，但是它增加了美国政治的理性程度，而这种理性是美国政治得以健康运行的“秘密”。</p>
<h3 id="关键词－自由主义的故事">关键词－自由主义的故事</h3><p>强烈推荐这一篇，来自<a href="http://mp.weixin.qq.com/s?__biz=MzA4MTM5NTYzMA==&amp;mid=2659494084&amp;idx=1&amp;sn=051f4dad152486be3799e8b69c50b1a2&amp;chksm=84e5a205b3922b13c9b1e725a155c1e9ad4df4384709ccfb7b016bfae89a191cdce8a0995282&amp;scene=0#wechat_redirect" target="_blank" rel="noopener">《人类简史》作者分析特朗普崛起：自由主义终结了么？</a>。</p>
<p>故事是人类思考问题的中心，而非事实、数字或者表格，故事越简单越好。<strong>对这个过去几十年在我们的世界处于统领位置的故事，我们可以称之为“自由主义的故事”。</strong></p>
<p>但是，自2008年全球金融危机始，人们开始不再相信这个故事的主线。在20世纪90年代和21世纪的第一个10年里，人们相信遵守游戏规则可以让他们的地位上升以及变得富裕；2008年以后，他们突然开始害怕自己被欺骗，害怕这个系统并非对他们有利。<strong>阿拉伯之春变成了“伊斯兰之冬”；莫斯科、安卡拉、耶路撒冷的威权政府一点点放弃了自由民主的价值观，转而拥护民族沙文主义和宗教极端主义；甚至生活在自由主义占据主流位置的西欧国家的人们都开始有了悔意</strong>。如今，这股幻灭的浪潮正在涌向美国，而正是美国将这个“自由主义的故事”推行到了美国之外的许多地方，有时还是拿着枪推行。几十年来，那么多的承诺和保证令美国公民感到失望，幻想破灭后的他们可能会把特朗普选为总统，美国的精英们对此感到又惊又怕。</p>
<p>有关人们对“自由主义的故事”失去信心的另一种解释是，比较起过去的成就，人们更关心他们对未来的期望。</p>
<p>普通选民可能不理解人工智能，但他们能感觉到民主机制已经不再能够赋予他们权力。<strong>事实上，关乎普通选民和他们的孩子未来的最重要选择可能不是由欧盟的某些官僚或者华盛顿的某些游说团体做出的，而是由工程师、企业家和科学家做出的，而这些工程师、企业家和科学家并不会意识到自己所做的决定会带来怎样的影响，他们自然也不代表任何人。</strong>选民们看不到他们，也无法对他们喊话，所以他们只能猛烈抨击他们所能抨击的。英国的选民们想象自己的权力可能转移到了欧盟手上，所以他们投票支持英国脱欧。美国的选民们想象“权势集团”垄断了所有权力，所以他们决心给这个系统予以狠狠一击，以此来证明他们仍然有发言权。特朗普因而成了他们眼中下一届美国总统的最佳人选。<strong>正是因为选特朗普做美国总统令主流精英感到匪夷所思，这件事情才能成为普通选民证明自己仍然保留了一些权力的理想方式。</strong></p>
<p>事实证明，“自由主义的故事”在灵活性和发展变化上远远超过了它的任何一个对手。它战胜了传统的帝国，战胜了法西斯主义和共产主义，原因是因为它采用了自己对手的一些最好的想法和做法（比如政府出钱发展服务于民众的教育、医疗和福利事业）。</p>
<p>在社会主义者看来，为个人做自己喜欢做的事情的权利辩护便是在维护中产阶级和上层阶级的财产和特权。你是拥有居住自由，可你支付不起房租；是有学习自己感兴趣的学科的自由，可是你交不起学费；你有去你想去的地方旅行的自由，可是你买不起车；在这些时候，自由对你又有什么价值？更糟的是，自由主义鼓励人们将自己视为一个个个体，因而造成了人与人之间的分离，如此一来，人们便无法联合起来反对压迫他们的制度，不平等现象因此得以延续下去。</p>
<p>一旦人工智能在大多数认知作业上的表现优于人类，那个时候的就业市场会成为什么样子？一个由数量非常巨大、在经济上“没有用”的人所组成的新阶层会在政治上产生怎样的影响？等到纳米技术和再生医学可以延长人们的寿命——让八十岁的年纪相当于之前的五十岁，人们的关系、家庭还有养老基金到时候会受到什么影响？当生物技术发展到我们能够“设计”婴儿的水平——贫富之间的差距也会因此变得更大，人类社会会变成什么样子？对于上面这些问题，你不太可能在《圣经》或《古兰经》里找到答案。<strong>在这个被技术和经济风暴席卷的世界，激进的伊斯兰教，正统的犹太教或者基要派基督教可能会向信众许诺，他们会获得能够给他们带来确定性的船锚；然而，在这场即将到来的21世纪大海啸中，要保证不迷失方向，你还需要一张好地图，还要有结实的船舵。</strong></p>
<p>如“让美国再次强大”或者“把我们的国家还给我们”这一类口号的情况也一样：你可以建起一座墙来防止墨西哥非法移民进入美国，但是你没法建起一座墙把全球变暖挡在国门之外；你可以让英国脱离欧盟，但是你无法让伦敦脱离全球金融体系。<strong>如果人们不顾一切地抓住已经过时的民族和宗教身份不放，那么在气候变化、经济危机和技术带来的颠覆性影响面前，全球体系只会土崩瓦解；而19世纪的民族主义神话和中世纪的虔诚既不能理解这些问题，也没有能力解决它们。</strong></p>
<p>因此，<strong>当英国脱欧、特朗普崛起这样的事情发生时，主流精英们只能一脸惊恐地看着，然后希望大众会幡然悔悟，及时回到自由主义阵营里来，从而避免灾难的降临。</strong>但是，“自由主义的故事”要想从当前这场信任危机中存活下来可能会很困难，因为长期以来支撑着这个故事的根基可能已经在崩塌之中，这个根基便是：自由主义伦理和资本主义经济之间传统上的联合。在20世纪里，“自由主义的故事”非常具有吸引力，因为它告诉人们，也告诉政府，他们不用在“做正确的事”和“做精明的事情”之间做选择；保护人类的自由既是一种道义责任，也对经济的增长至关重要。英国、法国和美国之所以会蓬勃发展，据称是因为它们放宽了对经济和社会的限制，如果土耳其、巴西或者中国也想变得和英、法、美一样繁盛，它们也必须效仿这三个国家的做法。<strong>在大多数情况下，让暴君们和军政府决定实施自由化政策的不是道德上的理由，而是经济上的。</strong></p>
<p>然而，<strong>到了21世纪，对于我们所面临的两个最大挑战：全球变暖和技术发展带来的颠覆作用，“自由主义的故事”并不能提供很好的解决方案。</strong>随着人们的经济上的重要地位逐步被算法和机器人所取代，也许保护人类自由在道义上仍然具有正当性，可是光有道义上的理由就足够了吗？当重视每个人的自由和愿望不再能带来经济收益时，各国的精英们和政府还会对之继续重视吗？人们对自己的未来感到忧惧并没有错。即使特朗普输掉了即将到来的大选，数以百万计的美国人仍会有一种直觉：这个制度不再对他们有利，而且他们可能是正确的。</p>
<p><strong>自由主义曾经很繁荣的原因是一是主要因为经济上的因素，但我们所面临的挑战却不一样了。</strong></p>
<p>到那个时候，算法将拥有权威，人类则将失去权威。</p>
<hr>
<p>像这类新闻观点类带有时效性的好文章，以及文学类的文章还是很适合以这种评论的方式记录下来的~</p>
<p>自由主义的故事，曾经是因为其经济上的优势而繁荣和扩张的。然而绝大多数的时候，这只是一小部分精英们的故事，自由和权利或许都只会是上层阶级的财产和特权。可悲的是，人们没有其他选择。选择trump，是不想听见一个一直听腻的故事，是对遥远的精英们仅剩的嘲讽罢了。</p>
<h2 id="10-12">10.12</h2><h3 id="开源产品">开源产品</h3><p>V2上分享的开源代替sticker的软件，用来桌面端记录todo，用react + electron写的。 piece。</p>
<p>“只愿每一次的打磨者都只会是自己。”</p>
<p>在v2ex上遇见了很棒的人，有piece的作者，设计带给人的力量是绝对绝对不能忽略的，降低了你尝试的门槛，很多时候，你的生活里会多出另外的一些可能，有daza.io的作者，完成了类似即刻稀土的全栈开发后独自旅行，</p>
<p>“有时候，不懂如何书写自己的人生，是因为没有主动观察过这个世界。”</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Computer Vision - 基于图片特征匹配合成全景图]]></title>
      <url>http://chocoluffy.com/2016/11/07/Computer-Vision-%E5%9F%BA%E4%BA%8E%E5%9B%BE%E7%89%87%E7%89%B9%E5%BE%81%E5%8C%B9%E9%85%8D%E5%90%88%E6%88%90%E5%85%A8%E6%99%AF%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>这一次尝试解决的问题是: 假如你希望有一幅风景的全景图(panaroma)，但是你手头上只有一堆关于该风景不同角度的图片， 怎么利用computer vision学习到的方法来合成一张全景图。</p>
<a id="more"></a>
<h2 id="前言">前言</h2><p>这学期虽然在公司实习， 但同时我也在学校part time了一门computer vision的课程。Computer Vision，说白了就是结合image recognition和machine learning的方法来训练机器能够识别和”理解”图片等媒体资源， 也算是一个特别新兴的研究领域。 正巧大项目开始前期， 我也准备在博客里总结一下前几次作业里面涉及的概念， 感觉特别有趣和实用呢~</p>
<p>这一次尝试解决的问题是: 假如你希望有一幅风景的全景图(panaroma)，但是你手头上只有一堆关于该风景不同角度的图片， 怎么利用computer vision学习到的方法来合成一张全景图。</p>
<p>比如一个简单的例子， 家里的游泳池的照片你刚好有两张不同角度的图片(如下图), 通过计算两张图片中的feature points(特征点)并且进行匹配，得到相应空间转换的矩阵(homography)， 借此可以将不同的图片映射到同一个景观上进行叠加(stitching)， 来获取更全面的视角。</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79gw1f9k6ilaabuj30hg0eo76b.jpg" style="display: block; margin: 0 auto;"></p>
<p>在全景图中的应用如下图:</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9k6mj1jw6j30qa0h0jv5.jpg" style="display: block; margin: 0 auto;"></p>
<p>这也是这篇博文希望最后完成的目标。</p>
<h2 id="Computer_Vision">Computer Vision</h2><h3 id="特征点提取">特征点提取</h3><p>Image features是描述一张图像的重要特征之一。 很多情况下我们分辨不同的图片的直觉之一是利用边缘的分布和形状， 也是一开始利用edge detection来处理图像的缘由， 通过把image当作一个$m*n$的矩阵， 其中每个元素为灰度图片的pixel intensity， 利用filter(box, haar)等等来简化对相邻元素的求导过程， 来得出pixel intensity上的变化速度， 大多数情况下假设边界往往意味着pixel intensity的剧烈变化， 那么将处理后数值高的来进行local maximum suppression之后可能大致得到边界点。由此而来的应用是corner detection， 比如最典型的harris corner detection。通过边角(corner)来帮助识别图片。</p>
<p>利用corner来作为图片特征是一个初步的可实现的想法， 然后有一些固有的缺点， 比如尽管corner detection是rotation invariant的， 但是不scale invariant， 这意味着， 一张被放大过的图片， 之前曾经被识别为corner的点， 在新图片中就不被识别出来了。 原理如图：</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9kfaxk3qqj311q0q4abj.jpg" style="display: block; margin: 0 auto;"></p>
<p>我们希望找到一些图片的特征， 这些特征不受旋转的干扰(rotation invariant)， 而且也不受放大缩小处理的干扰(scale invariant)。而这个也是SIFT(scale-invariant feature transform)算法所要解决的问题， 这也是这次全景组合的应用中我所用到的选取特征点的方式。 </p>
<p>大致的介绍下<a href="https://en.wikipedia.org/wiki/Scale-invariant_feature_transform" target="_blank" rel="noopener">SIFT</a>， 原理是利用Laplacian of Gaussian函数能够detect blob区域的特点， 根据不同的Gaussian sigma $\sigma$ 我们可以匹配到不同scale程度上的区域极值，而作者Lowe等人利用Difference of Guassian来替代具有相似函数属性的Laplacian of Gaussian， 从而提高计算速率(因为DoG是seperable的)， 通过这些处理， 可以得到在不同的locational and spatial都存在的local maximum， 也是我们所希望的到的特征点。</p>
<p>同时Lowe提出了将特征点描绘为一个向量的方式， 通过在其pixel区域附近的$16<em>16$的格间中， 收集每个$4</em>4$区域内关于image gradient的major magnitutude and orientation的信息形成一个histogram表， 大致分为8个bin, 从而得到的$4<em>4</em>8 = 128$维的向量作为该特征点的特征向量。</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 利用开源的matlab library vl_sift 来完成特征向量的获取</span></span><br><span class="line">I = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ;</span><br></pre></td></tr></table></figure>
<h3 id="特征点的匹配">特征点的匹配</h3><p>在对应每一张图片分别经过SIFT等算法进行处理， 得到特征点和特征向量之后， 我们需要将这些特征点对应起来。 换句话说， 如果两张图片有特别多的相似的特征点， 我们可以以很大的机率说它们在描述同一个东西。 </p>
<p>而匹配特征向量的方法也很原始， 就是计算向量之间的距离， 如果在Eludiean distance上离得比较近的点， 我们认为可能比较相似。 同时为了降低误判的纪律， 我们还希望最接近的那个距离， 相比第二个接近的距离要小很多。 通过两个数值的比小于某个threshold可以来达到这个效果。</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 同样利用vl_sift自带的matching函数， 来比较两张图片中特征向量的匹配</span></span><br><span class="line">I = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">II = imread(<span class="string">'hotel/hotel-01.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ; </span><br><span class="line">[ff,dd] = vl_sift(single(II)) ;</span><br><span class="line">[matches, scores] = vl_ubcmatch(d, dd, <span class="number">5</span>);</span><br></pre></td></tr></table></figure>
<p>大致的结果如图：</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9kg47w4mxj31em0jejyn.jpg" style="display: block; margin: 0 auto;"></p>
<h3 id="空间转换矩阵">空间转换矩阵</h3><p>具体的分析将会在另一篇博文中仔细讨论， 大致的原理是， 利用得到的feature match， 我们可以近似得到图片经过的转换， 然后用矩阵来表示。</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 通过计算homography矩阵， 将00中的特征点map到新的01图中</span></span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">close all;</span><br><span class="line">I = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">II = imread(<span class="string">'hotel/hotel-01.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ; </span><br><span class="line">[ff,dd] = vl_sift(single(II)) ;</span><br><span class="line">[matches, scores] = vl_ubcmatch(d, dd, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">[~, matchid] = sort(scores);</span><br><span class="line"></span><br><span class="line">matchid = matchid(<span class="number">1</span>, <span class="number">1</span>:<span class="keyword">end</span>);</span><br><span class="line">matches = matches(:, matchid);</span><br><span class="line">bestMatches = matches;</span><br><span class="line"></span><br><span class="line"><span class="comment">% these are matches.</span></span><br><span class="line">pSrc = f(<span class="number">1</span>:<span class="number">2</span>, bestMatches(<span class="number">1</span>, :));</span><br><span class="line">pTgt = ff(<span class="number">1</span>:<span class="number">2</span>, bestMatches(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">combs = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]; <span class="comment">% Use top 4 matches.</span></span><br><span class="line">bestMatchesID = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">A = <span class="built_in">zeros</span>(<span class="number">8</span>, <span class="number">9</span>); <span class="comment">% since for four matches, we have 8 rows.</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">4</span></span><br><span class="line">xi = pSrc(<span class="number">1</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line">yi = pSrc(<span class="number">2</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line">xiprime = pTgt(<span class="number">1</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line">yiprime = pTgt(<span class="number">2</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line"></span><br><span class="line">row1 = [xi yi <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> -(xiprime*xi) -(xiprime*yi) -xiprime];</span><br><span class="line">row2 = [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> xi yi <span class="number">1</span> -(yiprime*xi) -(yiprime*yi) -yiprime];</span><br><span class="line">A((<span class="number">2</span>*<span class="built_in">i</span><span class="number">-1</span>):(<span class="number">2</span>*<span class="built_in">i</span>), :) = [row1; row2];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">[V,D] = eig(A'*A);</span><br><span class="line">h = <span class="built_in">reshape</span>(V(:, <span class="number">1</span>), <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">X_hom=h'*[pSrc;ones(<span class="number">1</span>,size(pSrc, <span class="number">2</span>))];  <span class="comment">% be careful, Matlab has the matrix transposed</span></span><br><span class="line">X_hom=X_hom./<span class="built_in">repmat</span>(X_hom(<span class="number">3</span>,:),[<span class="number">3</span>,<span class="number">1</span>]);</span><br><span class="line">match_plot(I, II, pSrc', X_hom');</span><br></pre></td></tr></table></figure>
<p>上面这段代码可以得到如下的结果， 其中我用到了<code>match_plot</code>这个函数<a href="https://www.mathworks.com/matlabcentral/fileexchange/31144-match-plot" target="_blank" rel="noopener">here</a>来实现更好的可视化效果， 也就是把这些点给连线起来。可以看到的是， 这些点经过mapping之后仍然可以指向相同的位置， 尽管两张是完全不同的图片。 这个也是我们实现全景图的一个基础。</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9kg7usla1j30vs0c70y2.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww3.sinaimg.cn/large/006y8lVagw1f9fvb3funyj30vs0c7wk6.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww2.sinaimg.cn/large/006y8lVagw1f9fvbfrdxjj30vs0c7n2k.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww3.sinaimg.cn/large/006y8lVagw1f9fvbmsvkqj30vs0c77aj.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww4.sinaimg.cn/large/006y8lVagw1f9fvbs1gxuj30vs0c7dmk.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww1.sinaimg.cn/large/006y8lVagw1f9fvbzq4w6j30vs0c7wkq.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww1.sinaimg.cn/large/006y8lVagw1f9fvc7r1moj30vs0c7wk4.jpg" style="display: block; margin: 0 auto;"></p>
<p>如果假设每个图片都是一个矩形，我们希望将这些举行在空间中叠加起来： </p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 其中compute_homography是上述得到homography矩阵的算法</span></span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">close all;</span><br><span class="line">I = imread(<span class="string">'hotel/hotel-06.png'</span>);</span><br><span class="line">II = imread(<span class="string">'hotel/hotel-07.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ; </span><br><span class="line">[ff,dd] = vl_sift(single(II)) ;</span><br><span class="line">[matches, scores] = vl_ubcmatch(d, dd, <span class="number">40</span>);</span><br><span class="line">[~, id] = sort(scores);</span><br><span class="line">bestMatches = matches(:, id);</span><br><span class="line"></span><br><span class="line">h0001 = compute_homography(<span class="number">0</span>, <span class="number">1</span>, <span class="number">140</span>);</span><br><span class="line">h0102 = compute_homography(<span class="number">1</span>, <span class="number">2</span>, <span class="number">99</span>);</span><br><span class="line">h0203 = compute_homography(<span class="number">2</span>, <span class="number">3</span>, <span class="number">30</span>);</span><br><span class="line">h0403 = compute_homography(<span class="number">4</span>, <span class="number">3</span>, <span class="number">140</span>);</span><br><span class="line">h0504 = compute_homography(<span class="number">5</span>, <span class="number">4</span>, <span class="number">204.7</span>);</span><br><span class="line">h0605 = compute_homography(<span class="number">6</span>, <span class="number">5</span>, <span class="number">140</span>);</span><br><span class="line">h0706 = compute_homography(<span class="number">7</span>, <span class="number">6</span>, <span class="number">160</span>);</span><br><span class="line"></span><br><span class="line">I00 = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">I01 = imread(<span class="string">'hotel/hotel-01.png'</span>);</span><br><span class="line">[imgh, imgw, ~] = <span class="built_in">size</span>(I00);</span><br><span class="line"></span><br><span class="line">x = [<span class="number">0</span> <span class="number">0</span> imgw imgw];</span><br><span class="line">y = [<span class="number">0</span> imgh imgh <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">I03 = [x;y];</span><br><span class="line">I02Proj = projective_transform(h0203, x, y);</span><br><span class="line"></span><br><span class="line">I01Proj = projective_transform(h0102, x, y);</span><br><span class="line">I01Proj = projective_transform(h0203, I01Proj(<span class="number">1</span>, :), I01Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I00Proj = projective_transform(h0001, x, y);</span><br><span class="line">I00Proj = projective_transform(h0102, I00Proj(<span class="number">1</span>, :), I00Proj(<span class="number">2</span>, :));</span><br><span class="line">I00Proj = projective_transform(h0203, I00Proj(<span class="number">1</span>, :), I00Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I04Proj = projective_transform(h0403, x, y);</span><br><span class="line"></span><br><span class="line">I05Proj = projective_transform(h0504, x, y);</span><br><span class="line">I05Proj = projective_transform(h0403, I05Proj(<span class="number">1</span>, :), I05Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I06Proj = projective_transform(h0605, x, y);</span><br><span class="line">I06Proj = projective_transform(h0504, I06Proj(<span class="number">1</span>, :), I06Proj(<span class="number">2</span>, :));</span><br><span class="line">I06Proj = projective_transform(h0403, I06Proj(<span class="number">1</span>, :), I06Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I07Proj = projective_transform(h0706, x, y);</span><br><span class="line">I07Proj = projective_transform(h0605, I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :));</span><br><span class="line">I07Proj = projective_transform(h0504, I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :));</span><br><span class="line">I07Proj = projective_transform(h0403, I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">figure;fill(x, y, <span class="string">'r'</span>);hold on;</span><br><span class="line">fill(I02Proj(<span class="number">1</span>, :), I02Proj(<span class="number">2</span>, :), <span class="string">'g'</span>);</span><br><span class="line">fill(I01Proj(<span class="number">1</span>, :), I01Proj(<span class="number">2</span>, :), <span class="string">'b'</span>);</span><br><span class="line">fill(I00Proj(<span class="number">1</span>, :), I00Proj(<span class="number">2</span>, :), <span class="string">'y'</span>);</span><br><span class="line">fill(I04Proj(<span class="number">1</span>, :), I04Proj(<span class="number">2</span>, :), <span class="string">'k'</span>);</span><br><span class="line">fill(I05Proj(<span class="number">1</span>, :), I05Proj(<span class="number">2</span>, :), <span class="string">'w'</span>);</span><br><span class="line">fill(I06Proj(<span class="number">1</span>, :), I06Proj(<span class="number">2</span>, :), <span class="string">'c'</span>);</span><br><span class="line">fill(I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :), <span class="string">'m'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% projective_transform.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">proj</span> = <span class="title">projective_transform</span><span class="params">(h, x, y)</span></span></span><br><span class="line">proj = h'*[[x;y];<span class="built_in">ones</span>(<span class="number">1</span>,<span class="built_in">size</span>([x;y], <span class="number">2</span>))];  <span class="comment">% be careful, Matlab has the matrix transposed</span></span><br><span class="line">proj=proj./<span class="built_in">repmat</span>(proj(<span class="number">3</span>,:),[<span class="number">3</span>,<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>可以得到如下图所示的空间合集：</p>
<p><img src="http://ww1.sinaimg.cn/large/006y8lVagw1f9fvop5ss7j30fk0bot9k.jpg" style="display: block; margin: 0 auto;"></p>
<p>最后将所有图片的pixel都map过去， 再稍微blend一下就可以得到完整的全景图了：</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8lVagw1f9fvst75ufj30zr0dq0ut.jpg" style="display: block; margin: 0 auto;"></p>
<h2 id="Reference">Reference</h2><p>博文中部分图片示例来自课程slides <a href="http://www.teach.cs.toronto.edu/~csc420h/fall/slides/lecture9.pdf" target="_blank" rel="noopener">homography lecture slides</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[社团日记2 新生致辞]]></title>
      <url>http://chocoluffy.com/2016/10/06/%E7%A4%BE%E5%9B%A2%E6%97%A5%E8%AE%B02-%E6%96%B0%E7%94%9F%E8%87%B4%E8%BE%9E/</url>
      <content type="html"><![CDATA[<p>为什么我选择计算机。 因为它给了我自由。 和文字一样， 甚至更流行的自由。</p>
<a id="more"></a>
<p>两周前的那个周末面试了好多小伙伴。 有来自工程系正在实习着的， 有研究生搞计算机系统的， 有一个穿着印有Amazon logo衣服的， 还有一个中文说得很溜的外国朋友。人来来往往。</p>
<p>作为技术部门的负责人， 在新生大会上也将有一段致辞。 说来也好玩， 给新生们准备的一段话， 自己准备的时候却也常常反问自己新生时的那段过往， 想起自己第一次接触计算机， 第一次参加hacker meeting的等等等等…</p>
<p>以下是当时准备时的摘要：</p>
<h3 id="新生致辞">新生致辞</h3><p>这一段时间主要在忙招新、面试。 一直就会在想， 这到底是一个怎么样的社团， 我们想招进来什么样的人， 一个特别庞大的感觉其他社团都不太注重的tech部门， 究竟是干什么的， 为什么我要加入？</p>
<p>把我们精雕细琢的作品， 无论是程序还是海报， 分享出去。 哪怕是他们对我们的作品有异议， 但我们至少给生活的细节提供了观点。</p>
<p>特别印象深刻的是， “为什么加入ada“， 很多人的回答是， ”因为我曾经被UT助手的某些文章， 某些功能帮助过。”</p>
<p>我们特别珍惜这种感觉。</p>
<p>能够将自己的想法实现出来的自由。</p>
<p>这感觉是一个特别难回答的问题， 就好像你去问一个人， 什么是喜欢跑东跑西去摄影， 抑或什么才是旅行的意义。</p>
<p>但可能更多时候这个问题也特别简单， 因为我喜欢啊。我用照片想纪录下生活里最美最美的瞬间去留住记忆， 我想设计出别人看两眼都要抖两下的海报~</p>
<p>也因为喜欢， 你也想去找那同样饱含热情、热烈的一群人。</p>
<p>说白了，这是一群怎么样的人， 也会吸引那样子的一群人过来。</p>
<p>那我们tech部门呢， 特别特别珍重的一种感觉， 其实也恨简单， 就是好玩。</p>
<p>分享一个我们前段时间为了帮助新生更好的认识多伦多大学设计的一个简单的网页游戏-你究竟是不是一个多大学生。点进去会看到很多很美的风景， 你需要根据图片猜到这个地点的名称。蛮多新生可能猜不到几个， 所以我们在后续的小助手文章里也详细介绍了很多各个著名地点以及贴心的建议（比如：ba哪里有热水等等）。 感谢我们的lydia\jessie\gloria给我们整理的图片。最后还有一个很萌很萌的教授。</p>
<p>现在如何才能玩到这个游戏呢？很简单，在UT助手输入关键词都可以匹配到这篇文章找到这个游戏链接。</p>
<p>那这个也是一个很好玩的功能啦， 也就是上个月吧， 我给小助手的后台添加了语义理解的功能。</p>
<p>说回来， 这是一个很典型的， 也是一个我蛮喜欢的游击战合作方式啦， 短短一两天内， 从社长提出这个上一次brainstorm里joyce的想法， 到技术部水水完成基本框架， 再转移给marketing部jessie添加内容素材， 再转移给技术部我和justin来设计动效和优化加载时间。 然后就有了这份几千人在微信上玩的一个游戏。很好玩吧。</p>
<p>第二个我一直想分享的东西， 就是我们的UT助手了， 正如大家所看到的一样， 我们给UT助手添加了很多的功能。</p>
<p>那ADA和UT助手， 究竟是什么一个关系？UT助手是一个独立的媒体平台， 由ADA的市场部的伙伴运营， 想让大家听见不同的声音， 看见有态度有温度的文字。 我也非常期待今年的UT助手， 因为作者费诺、冯小姐都是我特别欣赏的人。而Tech部门的主要目标之一， 也是为这个媒体平台添加工具性的功能。</p>
<p>自动化。</p>
<p>这是今年Tech部门最最主要的使命之一。</p>
<p>从数据来源爬虫的自动采集， 到项目与slackbot、hubot的自动储存和部署。我希望今年大部分的ADA项目都可以在某个方面接受自动化的想法。 从开发环境的设置开始， 可能每次开发网页你都是在编辑器里面保存然后跑去浏览器那边刷新等新的结果， 而同样， 或者可以尝试webpack的热加载， 页面可以随时同步到最新的状态而不必你有任何操作。很多的东西都会在后续的workshop里面分享。</p>
<p>这是一个试错成本很高的时代，ADA想提供给你， 在你步入残酷的商业逻辑之前， 一次尝试的机会。</p>
<p>这里有一群我认为非常理想主义的人。</p>
<p>如果要我说， 为什么我选择计算机。 因为他给了我自由。 和文字， 设计一样。它给予了你实现你想法的自由。而自由的人， 是最快乐的。</p>
<div class="full-image" markdown="1"><br>  <iframe src="http://chocoluffy.com/ADA2016/" width="100%" height="600px"><br>    <p>Your browser does not support iframes.</p><br>  </iframe><br></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[社团日记1 重新出发]]></title>
      <url>http://chocoluffy.com/2016/09/11/%E7%A4%BE%E5%9B%A2%E6%97%A5%E8%AE%B01-%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91/</url>
      <content type="html"><![CDATA[<p>故事的开始。</p>
<a id="more"></a>
<p>有时候觉得自己还蛮幸运的， 一年前误打误撞来了多伦多， 误打误撞地加入了一个社团， 就认识了现在的室友和绝大多数最好的朋友。 原来觉得不过是一个简单的CS开发社团， 却不知觉受到了牵绊， 一路的小伙伴慢慢多了起来， 曾经一直以为自己会单打独斗下去， 现在则深感起伙伴的意义和陪伴。 这一年， 发生了太多的事情， 宛若被卷进了一篇篇故事情节般跌宕起伏， 迎来了自己进入计算机领域的第二年， 赢来了些许成就和关注； 开启了一份为期一年的全职工作； 第一次在白板上画出技术架构； 也第一次以vice president的身份见证一个年轻社团的懵懂和交接。 想写点什么， 对得起时光， 也对得起运气。</p>
<p>还记得今年年初曾经读过一本国内的创业传记《途客圈》， 硅谷工程师作者陈天在这本书里记录了途客圈这家曾经星光熠熠的创业公司的发展， 成熟， 瓶颈和没落。 记得当时零零散散的技术和期权笔记， 还在其中一个段落的结尾天真地自嘲到和现在的自己还完全没有什么关系嘛， 而半年之后， 却仿佛日日夜夜和小伙伴讨论起书里似曾相识的商业情节： 创始人及其同僚退任， 一个技术社团的高层大换血， 孤立无助的公关和市场部门， 流行和高雅的定位矛盾， 接受赞助和保持独立的选择与站队……不过这一次， 是切肤的感情和泪水， 是我们自己的选择。</p>
<p>这是一段真实的故事。 或许无关汹涌澎湃的情节，但这却是我最真实的生活。</p>
<p>故事的开头， 定格到一次关于赞助广告的紧急会议。 愿意接受来自商业机构的赞助吗？</p>
<p>一直以来， 赞助广告都好像会触动大众敏感的神经， 作为观众，其实争议和选择并不大， 无非是偶尔可能夸张了点的标题和或者画风突变的段子， 有时候效果好的， 人们反而乐在其中自愿做起了二次传播。 但作为被赞助的一方， 这却是一个很容易被上升到自由与独立的话题。 一方面， 有人觉得失去了创作的自由与方向， 而另一面， 有人觉得有了经济来源可以支撑起更大的自由……看似相互矛盾的两个论点， 实际上都是切中了同一个问题， “到底是谁在控制着开发抑或创作的自由？”， 如果赞助方以几近收购的经济优惠来和你提出合作邀请， 对不起， 他们需要的不是你， 而是你现在拥有的市场的关注和资源， 他们有他们准备好的一全套规划和商业蓝图， 而蓝图里并没有你可以自由发挥的地方， 你可以接受合作， 但却暗含接受给他们打工的前景。 虽然现实中Facebook巨额收购的Instagram和Whatsapp都将继续保持独立经营， 但这不过是FB在对手尚未反抗时的保护性市场垄断计划罢了， 而当初没有接受FB收购提议的Snapchat倒是在其曾经的年轻人圈子里打得一片火热。 试想想， 为什么Instagram和Whatsapp的发展宛若停止， 社交功能上几近亘古不变， 毕竟这是FB母体攫取广告费的主要流量来源， 任何有阻其扩大和维持市场的举动都不会被鼓励的。</p>
<p>而说回到我们自己社团对待赞助的情况， 更多的是我们自己依旧控制着我们创作开发以及市场运营的自由， 我们需要赞助， 也得以计划在科技领域下举办更多更有影响力的活动， 而我们几近全部的成果， 从组织的workshop， 到开发的产品功能， 原创的公众号文章， 都是我们学生利用业余时间独立做出来的……放在这个具体的环境下， 也很难说， 接受赞助合作会在哪些方面方面改变我们原本自己的轨迹。 而当天晚上， 我们也最终一致地通过了合作的计划， 值得一提地的是， 我们的社长大人硬生生将赞助费用拉高了十几个百分点， 哈哈……</p>
<p>我们还是一个特别年轻的社团， 在这个阶段， 我们需要侵略性不大的经济支持。 而至于长远的计划呢， 未来的愿景里对赞助的依赖有思考过吗？</p>
<p>其实作为技术部门的负责人， 我一直一直都很想将来源于”湾区日报”的启发在自己的社团产品里实现。 什么是湾区日报？ 它是由一个湾区的工程师独立一个人维系的业余项目， 每天通过各大社交平台发出自己阅读收集转载的商业、技术文章， 非营利项目， 据说作者还拒绝了很多商业赞助和合作， 目前的收入主要来自于APP的功能内购和自主捐赠。 阅读并收集优秀的资源是一个很好的习惯， 而让我印象深刻的并不是作者这一坚持的习惯本身， 而是， 作为一名工程师， 将整个习惯流程自动化的地步。 利用hubot和slack将阅读文章的保存以及之后的发布自动化， 极大地降低了分享的成本， 而分享本身的快乐， 也更容易被感受和坚持下去。 也是惊人的相似， 社团旗下也运营着一个辐射到整个多伦多大学华人学生的微信公众号， 而我这一个月带领的主要项目， 也是基于公众号所积累的内容做机器学习的处理， 同时努力把内容获取， 归档， 预处理和语义分析这一部分给自动化。 </p>
<p>任重而道远， 不过， 自动化， 也将会是这一年， 我给社团开发定下的首要目标。 或许慢慢地， 当我们的消息获取和处理成本极大的降低之后， 我们可以在微博， Facebook上自动发布我们收集转载的有用资讯， 市场部的小伙伴们可以集中精力在原创的文章和设计上……说着说着有种BuzzFeed的即视感， 不过我们只是一群追求效率的学生罢了， 我们只想静静地做好多伦多大学助手， 然后多伦多助手？ 然后？</p>
<p>镜头慢慢转回来， 距离我们签下赞助合同已经过去将近一个月了， 第二场关于招新的战役也近了， 而我们也太年轻， 也才反应过来犯下了好些错误， 从大受欢迎的游戏忘记的数据统计， 到社团官网的不太明了的内容介绍， 到社团在学校的百团大战几近煮熟的电脑。 可也正是这些事过以后的些许遗憾， 反衬出那些我们一起圆满了的美好。 短时间内设计的精美游戏， 惊艳的官网和硕果累累的招新， 突然想起社长大人的一段话， “最坏的情况不过就是维持现状， 而维持现状， 也挺好的不是嘛”……</p>
<p>很幸运能在奔波的路上遇见最真挚的伙伴， 沿途太多风景， 想抵达太多地方， 也是你们让我看见太多的可能。 很想写下这些莫名的情绪， 哪怕是尘封在角落， 也给我未来留下去找寻的线索， 这些天， 我曾经和这样的一帮人， 一起疯过。</p>
<p>分享很喜欢的一句话， 摘自《小王子》的作者， 安东尼圣修伯里， “如果你想打造一艘船， 别忙着号召人马， 收集木材， 分配工作， 发号施令。 你该做的是， 激起人们对浩瀚海洋的渴望。” </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[用ffmpeg从视频中获取图片及GIF]]></title>
      <url>http://chocoluffy.com/2016/08/27/%E7%94%A8ffmpeg%E4%BB%8E%E8%A7%86%E9%A2%91%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E5%8F%8AGIF/</url>
      <content type="html"><![CDATA[<p>最近的项目涉及比较多的视频和图片的处理， 发现了一个特别好用的linux library “ffmpeg”， 在其官网的介绍中可以发现的是convert\record\stream video和audio的功能， 但其实我只是利用这个工具来从视频中获取一张张单独的图片(frame)， 然后来做后续的机器学习(相似度匹配PCE， 人像识别等等)等处理。 </p>
<a id="more"></a>
<p>在项目的展示中， 我提出了来自youtube的启发， 我感觉也是最近这几周， youtube上的视频列表多了一个新功能是， 当你鼠标hover当前视频时， 静态图片会变成视频中其中的一段GIF， 然后过一段时间再变回来， 具体效果看这个动图：</p>
<p>当时上youtube就觉得用户体验好棒， 很快想到的一些问题是， youtube是随机攫取GIF的嘛， 是否这个GIF就是这个视频的重要scene， 是利用收集的社交数据和评论来预测重要性的， 还是仅仅通过比较frame出现的时长来比较……</p>
<p>这些都是很有趣的问题， 每一个方向展开来说都可以逐渐细分到实现的算法和数据格式。 我现在正在做的也正是我上面提到的其中一个方向哈哈， 而今天这篇博文想要探讨的， 是实现上面所有后续构想的building block， 怎样获取数据源和呈现。 ffmpeg和imagemagick这两个处理照片和视频特别方便的库也再这里介绍一下。</p>
<h2 id="Preparation">Preparation</h2><p>安装ffmpeg的方式很简单， 在OSX里面<code>brew install ffmpeg</code>就可以了。同理也有<code>brew install imagemagick</code>。</p>
<h2 id="Example">Example</h2><p>下面是各种working choice，ffmpeg强大的另外一个地方是它并不需要将整个视频都下载下来然后再进行处理， 而是可以直接read from stream。 而在整个流程最花时间的步骤其实并不是获取那个frame， 而是将frame根据一定编码保存到本地这个过程。 而后续如果有充分时间， 我也满希望可以仔细去看看ffmpeg编码的格式~</p>
<p>[1]<code>ffmpeg -y -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 -ss 3 -frames:v 1 frame_3.jpg</code><br>can help extract the third frame from that url.</p>
<p>[2]<code>ffmpeg -y -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</code><br>will output images to convert them into gif.</p>
<p>[3]<code>ffmpeg -t 3 -ss 00:00:02 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 middle.gif</code><br>The snippet directs ffmpeg to create a GIF 3 seconds long starting at 2 seconds into the video.</p>
<p>[4]Thus, simply combine the [2] and [3] can convert some specific time frames into optimized gif like this <code>ffmpeg -t 3 -ss 00:00:02 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4  -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</code></p>
<p>[5]ffmpeg has its own version of converting to gif. <code>ffmpeg -t 3 -ss 1 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 output.gif</code>. However, the file size is extremely large, hard to load.</p>
<p>For now, version [4] is the best choice.</p>
<p><code>-ss</code>: follows a single number means extracting that single frame from video source; follows a specific time-format means extracting from that time. </p>
<p><code>-t</code>: follows a number means the duration of that extraction.</p>
<p>我在这里只记录了几个较为常用的parameter options。更多的option可以参看<a href="https://www.ffmpeg.org/ffmpeg.html" target="_blank" rel="noopener">官方文档</a></p>
<h2 id="Dev_Environment">Dev Environment</h2><p>接下来是一段我写的示例代码， 主要还是就怎么使用ffmpeg的问题稍微说一下， 毕竟大部分Machine Learning的工作还是在python里面写， 而当我们需要在python里面获取这些frames的时候， 我们应该怎么调用ffmpeg和imagemagick呢？</p>
<p>这里稍微补充一点， 启示ffmpeg本身也可以convert seperate images into gif， 但是相比与imagemagick还提供了图片压缩和优化的选项， 我更倾向于使用两者的结合。</p>
<h3 id="virtualenv">virtualenv</h3><p>就使用ffmpeg这个方面本身并不需要提及virtualenv， 但是很多和ffmpeg相关的后续工作都会和很多python的scientific computing package一起合用， 而安装这些packages的过程是非常繁琐而容易出错的， 大家都习惯一上来就把这些library安装在全局， 而无论是安装过程还是未来的版本管理都是mess。</p>
<p>因此这里稍微提一下anaconda， 专为管理python packages而生的CLI， 为每一个项目创建一个virtualenv然后给那个项目安装不同的独立的python libraries， 用完即删。</p>
<p><code>conda create --name &lt;project-name&gt; python=2.7 opencv matplotlib</code>, use conda to install library dependencies. Also specify the python version and library needed to pre-install, say inside this project, we want  <code>import cv2</code>, thus we put those libraries right after the python version. Then <code>source activate &lt;project-name&gt;</code> can jump into that virtualenv.</p>
<h3 id="subprocess">subprocess</h3><p>Since I will utilize “imagemagick” library to process images into gifs, by piping the results from “opencv”, most likely I will need to create a subprocess to do that. The command-line way to achieve that is <code>ffmpeg -t 3 -ss 00:00:02 -i &lt;video source&gt; -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</code>, which for example, will extract starting at 00:00:02 a 3-seconds short video from origin video and convert\optimize them into a smaller gif. In order to support multiple pipes as in command line, we use subprocess’s <code>PIPE</code> functions to concatenate those different parts.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_video_gif</span><span class="params">(video, t, duration, output_name)</span>:</span></span><br><span class="line">    <span class="comment"># In subprocess, save gif to local.</span></span><br><span class="line">    <span class="comment"># ffmpeg -t 3 -ss 00:00:02 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</span></span><br><span class="line">    p1 = sp.Popen([<span class="string">'ffmpeg'</span>, <span class="string">'-t'</span>, str(duration), <span class="string">'-ss'</span>, str(t), <span class="string">'-i'</span>, video, <span class="string">'-vf'</span>, <span class="string">'scale=320:-1'</span>, <span class="string">'-r'</span>, <span class="string">'10'</span>, <span class="string">'-f'</span>, <span class="string">'image2pipe'</span>, <span class="string">'-vcodec'</span>, <span class="string">'ppm'</span>, <span class="string">'-'</span>, ], stdout=sp.PIPE)</span><br><span class="line">    p2 = sp.Popen([<span class="string">'convert'</span>, <span class="string">'-delay'</span>, <span class="string">'5'</span>, <span class="string">'-loop'</span>, <span class="string">'0'</span>, <span class="string">'-'</span>, <span class="string">'gif:-'</span>], stdin=p1.stdout, stdout=sp.PIPE)</span><br><span class="line">    p1.stdout.close()</span><br><span class="line">    p3 = sp.Popen([<span class="string">'convert'</span>, <span class="string">'-layers'</span>, <span class="string">'Optimize'</span>, <span class="string">'-'</span>, output_name], stdin=p2.stdout, stdout=sp.PIPE)</span><br><span class="line">    p2.stdout.close()</span><br><span class="line"></span><br><span class="line">    output = p3.communicate()[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<h2 id="Documentation">Documentation</h2><ul>
<li><a href="http://superuser.com/questions/556029/how-do-i-convert-a-video-to-gif-using-ffmpeg-with-reasonable-quality" target="_blank" rel="noopener">How to convert a video to gif using ffmpeg</a></li>
<li><a href="https://davidwalsh.name/convert-video-gif" target="_blank" rel="noopener">How to convert to and from between gif and video</a></li>
<li><a href="https://www.reddit.com/r/learnprogramming/comments/44nhzp/how_to_use_youtubedl_and_ffmpeg_to_download/" target="_blank" rel="noopener">use youtube-dl and ffmpeg to download</a></li>
<li><a href="http://superuser.com/questions/680323/processing-youtube-video-in-ffmpeg" target="_blank" rel="noopener">how to process youtube video without downloading it</a> main idea is to config ffmpeg with <code>libquvi</code>!!</li>
<li><a href="https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX" target="_blank" rel="noopener">install ffmpeg through homebrew</a> with recommending configuration options like <code>brew install ffmpeg --with-fdk-aac --with-ffplay --with-freetype --with-libass --with-libquvi --with-libvorbis --with-libvpx --with-opus --with-x265</code></li>
<li><a href="https://www.binpress.com/tutorial/how-to-generate-video-previews-with-ffmpeg/138" target="_blank" rel="noopener">[recommend]how to generate video preview with ffmpeg</a></li>
<li><a href="http://www.bogotobogo.com/FFMpeg/ffmpeg_thumbnails_select_scene_iframe.php" target="_blank" rel="noopener">ffmpeg generate thumbnail from video</a> after generate the thumbnail and stitch together, here is a front end demo to over it <a href="http://jsfiddle.net/r6wz0nz6/2/" target="_blank" rel="noopener">demo</a> to see a preview.</li>
<li><a href="https://wideopenbokeh.com/AthenasFall/?p=5" target="_blank" rel="noopener">some tricks of using youtube-dl</a></li>
</ul>
<p>Inside <code>~/.bashrc</code>, set <code>alias youtubemp3=&#39;youtube-dl --extract-audio --audio-format mp3&#39;</code> to be able to create a alias and save a youtube video to mp3.</p>
<p>So basically, <code>youtube-dl -F &lt;url&gt;</code> to list all available video format, then  <code>youtube-dl -f 134 -o video.mp4 https://www.youtube.com/watch?v=v1uyQZNg2vE</code></p>
<h2 id="Summary">Summary</h2><p>处理视频和图片对我来说是一个蛮有趣的方向。 我们每天都会查询和搜索到无数多媒体信息， 而人们对信息的处理能力和标准也越来越严苛， 从简单文本到图片分享再到视频， 现在还很火的视频直播技术不是吗。 人们越来越多地被记录下来， 从曾经一生可能只去几次的影楼， 到情绪高涨时举起的自拍杆， 再到可能无时无刻都存在的直播和拍摄。</p>
<p>而记录本身， 就孕育着还原的渴望。</p>
<p>利用文字， 图片和视频， 科学家们能会如何重构一个曾经发生的世界， 而又能怎样地拿那个世界的统计和观察来预测下一个每分每秒。 深度学习和人工智能火了， 或许也是人们在尝试还原重构这个世界的一个必经之路， 很期待未来几年的科技发展啊。</p>
<p>很幸运以一个学生和实习生的身份慢慢进入这个殿堂。 话说回来， 每次见到那些用户体验特别好的细节总是特别喜欢然后絮絮叨叨呢哈哈~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[React/ES6 style guideline]]></title>
      <url>http://chocoluffy.com/2016/08/01/React-ES6-style-guideline/</url>
      <content type="html"><![CDATA[<p>用React完成了好几个小项目， 同时还在学习React Native开发， 记录一些ES6特别便捷的用法和guideline。持续更新…</p>
<a id="more"></a>
<h2 id="React_conventions">React conventions</h2><h3 id="propType_and_defaultProps">propType and defaultProps</h3><p>使用propType不仅仅是检查props数据的格式， 也是提醒自己这个组件可以利用的来自母组件的数据， 方便以后开发。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Title.jsx</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Title</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123; this.props.text &#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Title.propTypes = &#123;</span><br><span class="line">  text: React.PropTypes.string</span><br><span class="line">&#125;;</span><br><span class="line">Title.defaultProps = &#123;</span><br><span class="line">  text: <span class="string">'Hello world'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Title</span> <span class="attr">text</span>=<span class="string">'Hello React'</span> /&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br></pre></td></tr></table></figure>
<h3 id="this-props-children">this.props.children</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Title</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;h1&gt;</span><br><span class="line">        &#123; <span class="keyword">this</span>.props.text &#125;</span><br><span class="line">        &#123; <span class="keyword">this</span>.props.children &#125;</span><br><span class="line">      &lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">class App extends React.Component &#123;</span></span><br><span class="line"><span class="regexp">  render() &#123;</span></span><br><span class="line"><span class="regexp">    return (</span></span><br><span class="line"><span class="regexp">      &lt;Title text='Hello React'&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span&gt;community&lt;/</span>span&gt;</span><br><span class="line">      &lt;<span class="regexp">/Title&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br></pre></td></tr></table></figure>
<h3 id="Dependency_injection">Dependency injection</h3><p>One disadvantage of using react, is that when we need to pass down data to a deeply-nested component, which requires passing props all along the way.</p>
<h3 id="A_simple_switcher_example">A simple switcher example</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Switcher</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">flag</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">    <span class="keyword">this</span>._onButtonClick = <span class="function"><span class="params">e</span> =&gt;</span> <span class="keyword">this</span>.setState(&#123; <span class="attr">flag</span>: !<span class="keyword">this</span>.state.flag &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;button onClick=&#123; <span class="keyword">this</span>._onButtonClick &#125;&gt;</span><br><span class="line">        &#123; <span class="keyword">this</span>.state.flag ? <span class="string">'lights on'</span> : <span class="string">'lights off'</span> &#125;</span><br><span class="line">      &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ ... and we render it</span></span><br><span class="line"><span class="regexp">class App extends React.Component &#123;</span></span><br><span class="line"><span class="regexp">  render() &#123;</span></span><br><span class="line"><span class="regexp">    return &lt;Switcher /</span>&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="Data_flow">Data flow</h3><p>Basically two way of passing data down with server call. One is parent component make a server request, usually in the <code>componentDidMount</code> and <code>componentWillMount</code>, and pass down the data using props to the children components. The disadvantage of that is the verbose passing process.</p>
<p>Another way is allow children components to make request themselves, which is the way of GraphQL.</p>
<h2 id="ES6">ES6</h2><h3 id="Arrow_functions">Arrow functions</h3><p>what the heck is the arrow function? <strong> Unlike functions, arrows share the same lexical this as their surrounding code.</strong></p>
<h3 id="Modules">Modules</h3><p>Language-level support for modules for component definition. Codifies patterns from popular JavaScript module loaders (AMD, CommonJS). Runtime behaviour defined by a host-defined default loader. Implicitly async model – no code executes until requested modules are available and processed.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// lib/math.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> pi = <span class="number">3.141593</span>;</span><br><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> math <span class="keyword">from</span> <span class="string">"lib/math"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"2π = "</span> + math.sum(math.pi, math.pi));</span><br><span class="line"><span class="comment">// otherApp.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;sum, pi&#125; <span class="keyword">from</span> <span class="string">"lib/math"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"2π = "</span> + sum(pi, pi));</span><br></pre></td></tr></table></figure>
<p>Some additional features include <code>export default</code> and <code>export *</code>:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib/mathplusplus.js</span></span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">"lib/math"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> e = <span class="number">2.71828182846</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.exp(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">import</span> exp, &#123;pi, e&#125; <span class="keyword">from</span> <span class="string">"lib/mathplusplus"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"e^π = "</span> + exp(pi));</span><br></pre></td></tr></table></figure>
<h3 id="Deconstructing">Deconstructing</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, b] = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="comment">// a === 1</span></span><br><span class="line"><span class="comment">// b === 2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; ui, name &#125; = <span class="keyword">this</span>.props;</span><br><span class="line"><span class="comment">// ui === this.props.ui;</span></span><br><span class="line"><span class="comment">// name === this.props.name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; <span class="attr">blogpost</span>: &#123; title, slug &#125; &#125; = <span class="keyword">this</span>.props;</span><br><span class="line"><span class="comment">// title === this.props.blogpost.title;</span></span><br><span class="line"><span class="comment">// slug === this.props.blogpost.slug;</span></span><br></pre></td></tr></table></figure>
<h3 id="Functional_binding">Functional binding</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Link</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  click() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.props);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Clicked with scope'</span>, <span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span> <span class="attr">onClick</span>=<span class="string">&#123;</span> <span class="attr">::this.click</span> &#125;&gt;</span>Click me!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Adding the function bind syntax to ::this.click converts down to this.click.bind(this), ensuring that your callbacks in a component are called with this scoped to the component.</p>
<h3 id="Spread_operator">Spread operator</h3><p>尤其在React Native的redux框架里， 我们不能在reducer里修改state， 只能每次返回一个新的object， 这时候spread syntax特别方便。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> postActions <span class="keyword">from</span> <span class="string">'actions/posts'</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> userActions <span class="keyword">from</span> <span class="string">'actions/users'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> actions = <span class="function">(<span class="params">dispatch</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> bindActionCreators(&#123; ...postActions, ...userActions&#125;, dispatch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example we create a new object containing all values from postActions and userActions in one line.</p>
<h2 id="React_interview_question">React interview question</h2><p>Check more information from <a href="https://www.codementor.io/reactjs/tutorial/5-essential-reactjs-interview-questions" target="_blank" rel="noopener">this post</a>.</p>
<ul>
<li>Under what circumstances would you choose React over (AngularJS, etc)?</li>
<li>If React only focuses on a small part of building UI components, can you explain some pitfalls one might encounter when developing a large application?</li>
<li>If you were rewriting an AngularJS application in React, how much code could you expect to re-use?</li>
</ul>
<h3 id="High-Level_Component_Lifecycle">High-Level Component Lifecycle</h3><p>At the highest level, React components have lifecycle events that fall into three general categories:</p>
<ul>
<li>Initialization</li>
<li>State/Property Updates</li>
<li>Destruction</li>
</ul>
<p>Every React component defines these events as a mechanism for managing its properties, state, and rendered output. Some of these events only happen once, others happen more frequently; understanding these three general categories should help you clearly visualize when certain logic needs to be applied.</p>
<p>For example, components will automatically re-render themselves any time their properties or state change. However in some cases a component might not need to update — so preventing the component from re-rendering might improve the performance of our application.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// only re-render if the ID has changed!</span></span><br><span class="line">    shouldComponentUpdate(nextProps, nextState) &#123;</span><br><span class="line">        <span class="keyword">return</span> nextProps.id === <span class="keyword">this</span>.props.id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Example_interview_coding_challenge">Example interview coding challenge</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="comment">// set the default internal state</span></span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            clicks: <span class="number">0</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentDidMount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.refs.myComponentDiv.addEventListener(</span><br><span class="line">            ‘click’, </span><br><span class="line">            <span class="keyword">this</span>.clickHandler</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentWillUnmount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.refs.myComponentDiv.removeEventListener(</span><br><span class="line">            ‘click’, </span><br><span class="line">            <span class="keyword">this</span>.clickHandler</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    clickHandler() &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            clicks: <span class="keyword">this</span>.clicks + <span class="number">1</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">let</span> children = <span class="keyword">this</span>.props.children;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=”my-component” ref=”myComponentDiv”&gt;</span><br><span class="line">                &lt;h2&gt;My Component (&#123;<span class="keyword">this</span>.state.clicks&#125; clicks&#125;)&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">                &lt;h3&gt;&#123;this.props.headerText&#125;&lt;/</span>h3&gt;</span><br><span class="line">                &#123;children&#125;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<p>However, there are two problems with the code above.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The constructor does not pass its props to the super class. It should include the following line:</span></span><br><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// The event listener (when assigned via addEventListener()) is not properly scoped because ES2015 doesn’t provide autobinding. Therefore we might re-assign clickHandler in the constructor to include the correct binding to this:</span></span><br><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">              <span class="keyword">this</span>.clickHandler = <span class="keyword">this</span>.clickHandler.bind(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>And in order to use this component, we can do this:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;MyComponent headerText=”A list <span class="keyword">of</span> paragraph tags”&gt;</span><br><span class="line">    &lt;p&gt;First child.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">    &lt;p&gt;Any other &lt;span&gt;number&lt;/</span>span&gt; <span class="keyword">of</span> children...&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>MyComponent&gt;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[webpack与react\redux前端开发工具库]]></title>
      <url>http://chocoluffy.com/2016/07/18/webpack%E4%B8%8Ereact-hot-reload%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>对Dan Abramov开源的react hot loader boilplate的浅探， 同时复习一下webpack与react搭配开发时的常用配置。<a href="https://github.com/chocoluffy/react-hot-boilerplate" target="_blank" rel="noopener">Github Source</a></p>
<a id="more"></a>
<h2 id="Babel">Babel</h2><p>通常用到的plugin, 在package.json里面保存的module有： “babel-loader”\”babel-preset-es2015”\”babel-preset-react”， 使用babel-loader, 一是可以在<code>.babelrc</code>这个文件里面写出使用另外两个module的配置， 或者， 在webpack里面的loaders部分添加相应的code来实现同样的功能。其中”babel-preset-es2015”是将es6的js语法compile成es5的， 现在IE9以上及大部分的主流浏览器目前都支持ES5语法了。</p>
<blockquote>
<p>至于ES6和ES5有什么区别， 以及即将到来的ES7有什么意义， 集成了大部分的functional programming的特性， 本来可能需要引用underscore.js的函数现在可能直接就可以用了。包括spread operator, function binding(::), arrow functions, modules export， 这些都是非常便捷和广泛采用的语法呢~</p>
</blockquote>
<p>而“babel-preset-react”则是将JSX译成JS的插件。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  devtool: <span class="string">'inline-source-map'</span>,</span><br><span class="line">  entry: [<span class="string">'./client/client.js'</span>], <span class="comment">// 将entry下的client.js最终打包成dist/bundle.js。</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    path: <span class="string">'./dist'</span>,</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    publicPath: <span class="string">'/'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>, <span class="comment">// 利用正则表达式来匹配所有以.js结尾的文件， 同时排除node_modules里面的js文件。</span></span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        query: &#123;</span><br><span class="line">          presets: [<span class="string">'react'</span>, <span class="string">'es2015'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意在express里面， 我们通常会调整前端index.html引用资源的路径为“./dist”:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(express.static(<span class="string">'./dist'</span>));</span><br></pre></td></tr></table></figure>
<p>这样的在index.html里面引用bundle.js就可以直接：<code>&lt;script src=&quot;bundle.js&quot;&gt;&lt;/script&gt;</code>就好了。</p>
<p>然后在webpack.config.js写好之后， <code>webpack --config webpack.config.js</code>可以run webpack。然后<code>nodemon server.js</code>就可以开始运行了。当然webpack也有hot reloading的功能。不用每一次都rebuild一次webpack， 而是可以在react里面看到更新component的变化。</p>
<h2 id="React_Hot_Reloading">React Hot Reloading</h2><p>具体的做法是将webpack当成一个middleman来hook服务器。相比nodemon， webpack的好处就是， 它并没有restart server, nodemon是会watching整个”*”， 而webpack只是更新改变的部分。所以我们希望的是让webpack来管理关于react component的部分， 而nodemon只是来监听剩下的部分， 例：<code>nodemon server.js --ignore components</code>， 这样nodemon会忽略所有components文件夹下面的改动。</p>
<p>要使用hot module reload，下载一个babel的插件， 其实babel主要的功能还是在compile上， webpack的主要作用还是在project building这个过程， 然后中间有很多相关的插件是相互联系的， 比如我们现在准备使用的这个“babel-preset-react-hmre”。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// updated webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  devtool: <span class="string">'inline-source-map'</span>,</span><br><span class="line">  entry: [</span><br><span class="line">    <span class="string">'webpack-hot-middleware/client'</span>,</span><br><span class="line">    <span class="string">'./client/client.js'</span></span><br><span class="line">    ], <span class="comment">// source file</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    path: <span class="built_in">require</span>(<span class="string">"path"</span>).resolve(<span class="string">"./dist"</span>),</span><br><span class="line">    path: <span class="string">'./dist'</span>,</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    publicPath: <span class="string">'/'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> webpack.optimize.OccurrenceOrderPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.NoErrorPlugin()</span><br><span class="line">  ],</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>, <span class="comment">// search all files with ".js" as last.</span></span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        query: &#123;</span><br><span class="line">          presets: [<span class="string">'react'</span>, <span class="string">'es2015'</span>, <span class="string">'react-hmre'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之前写的基本都是babel的插件， 现在引入了<code>npm install --save webpack</code>的插件， 同时为了避免多次执行<code>webpack --config webpack.config.js</code>，我们把webpack.config.js引入express server. </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'../webpack.config.js'</span>);</span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">var</span> webpackDevMiddleware = <span class="built_in">require</span>(<span class="string">'webpack-dev-middleware'</span>);</span><br><span class="line"><span class="keyword">var</span> webpackHotMiddleware = <span class="built_in">require</span>(<span class="string">'webpack-hot-middleware'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> compiler = webpack(config);</span><br><span class="line"></span><br><span class="line">app.use(webpackDevMiddleware(compiler, &#123;<span class="attr">noInfo</span>: <span class="literal">true</span>, <span class="attr">publicPath</span>: config.output.publicPath&#125;));</span><br><span class="line">app.use(webpackHotMiddleware(compiler));</span><br><span class="line"></span><br><span class="line">app.use(express.static(<span class="string">'./dist'</span>));</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.sendFile(path.resolve(<span class="string">'client/index.html'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.listen(port, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Express server listening on port"</span>, port);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="React_Hot_Boilerplate">React Hot Boilerplate</h2><p>最后的成果见这里， <a href="https://github.com/chocoluffy/react-hot-boilerplate/blob/master/webpack.config.js" target="_blank" rel="noopener">minimum react hot boilerplate</a>， fork自redux的作者dan abramov。他写的react hot loader boilerplate是我看过的最好的使用starter kit!</p>
<p>最后还想提出的一点， 主要关于ES6里面关于函数的this binding的问题， 通常来说，ES6的arrow可以解决这个问题，或者说在每次render里面调用函数的时候加上<code>.bind(this)</code>。 但是最好的办法还是写在constructor里面， 这样的函数只会bind一次之后都可以一直用。下面附上官方的使用范例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Counter</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;<span class="attr">count</span>: props.initialCount&#125;;</span><br><span class="line">    <span class="keyword">this</span>.tick = <span class="keyword">this</span>.tick.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  tick() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">count</span>: <span class="keyword">this</span>.state.count + <span class="number">1</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div onClick=&#123;<span class="keyword">this</span>.tick&#125;&gt; <span class="comment">// don't need to use arrow type or bind function here anymore since bind in contructor.</span></span><br><span class="line">        Clicks: &#123;<span class="keyword">this</span>.state.count&#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">Counter.propTypes = &#123; initialCount: React.PropTypes.number &#125;;</span></span><br><span class="line"><span class="regexp">Counter.defaultProps = &#123; initialCount: 0 &#125;;</span></span><br></pre></td></tr></table></figure>
<p>不得不说， 这个starter kit和chrome的react dev tool搭配用起来， 写react的项目真的是一种享受。</p>
<h2 id="Trouble_Shooting">Trouble Shooting</h2><p>在写react\redux的时候， 由于现在需要使用babel来compile一遍写的code， 很多bugs都是在于对babel的不熟悉而来而导致的编译不成功， 而这些时候， 由于没有办法像以前一样在chrome inspect来debug， 必须对一些基础的使用有一定了解才可以绕过去。特别是在引入webpack之后， 配置在前期挺麻烦的， 但是一旦把开发环境搭建好了， 后期的开发就特别轻松和享受了~也在这个部分， 把我遇到的， 和觉得有价值的细节都提出来， 和大家分享~</p>
<h3 id="Why_my_jsx_element_not_showing_correctly?">Why my jsx element not showing correctly?</h3><p><a href="http://gunnariauvinen.com/getting-es6-syntax-highlighting-in-sublime-text/" target="_blank" rel="noopener">config sublime text to highlight jsx</a></p>
<h3 id="Anything_about_ES6_syntax_error_by_browser-">Anything about ES6 syntax error by browser.</h3><p>For example, <code>store.js:1 Uncaught SyntaxError: Unexpected token import</code>, check<a href="http://stackoverflow.com/questions/33460420/babel-loader-jsx-syntaxerror-unexpected-token" target="_blank" rel="noopener">this post</a> for more information about babel plugins, however, we also need to pay attention to the path that plugins take effect. For example, in the “webpack.config.js” file, the module part looks like this:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">	loaders: [&#123;</span><br><span class="line">	  test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">	  loaders: [<span class="string">'react-hot'</span>, <span class="string">'babel'</span>],</span><br><span class="line">	  include: path.join(__dirname, <span class="string">'src'</span>)</span><br><span class="line">	&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>It means that “react-hot” &amp;&amp; “babel” will collect files from “/src” folder and apply two loaders on it. Thus, any folder outside the path the “/src” will be ignored by loaders. In our original example, store.js is located outside “/src”, thus the <code>import</code> syntax will not be converted into es2015 that browser can recognize, thus gives such error. </p>
<h3 id="Pressing_“enter”_don’t_automatically_submit_the_input">Pressing “enter” don’t automatically submit the input</h3><p>It’s more like a UX experience than a problem. In the traditional input and button structure:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;input </span><br><span class="line">	placeholder=<span class="string">"typing something here..."</span></span><br><span class="line">	value=&#123;<span class="keyword">this</span>.state.inputText&#125;</span><br><span class="line">	onChange=&#123;<span class="keyword">this</span>._onChange&#125;</span><br><span class="line">/&gt;</span><br><span class="line">&lt;button onClick=&#123;<span class="keyword">this</span>._onClick&#125;&gt;Submit&lt;<span class="regexp">/button&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>However, after user types in something in the input box, pressing “enter” key won’t directly submit the input. Thus, we want to improve it by converting it into a form style to automate whole process:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;form onSubmit=&#123;<span class="keyword">this</span>._onClick&#125;&gt;</span><br><span class="line">	&lt;input </span><br><span class="line">		placeholder=<span class="string">"typing something here..."</span></span><br><span class="line">		value=&#123;<span class="keyword">this</span>.state.inputText&#125;</span><br><span class="line">		onChange=&#123;<span class="keyword">this</span>._onChange&#125;</span><br><span class="line">	/&gt;</span><br><span class="line">	&lt;input type=<span class="string">"submit"</span> text=<span class="string">"Submit"</span>/&gt;</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Then, pressing “enter” key right after you finish typing should work!</p>
<h2 id="Tricks_and_Notes">Tricks and Notes</h2><h3 id="Render_JSX_with_if-else_logic_control">Render JSX with if-else logic control</h3><p>Sometimes, we just want to render JSX depending on some state values like in Angular. We can simple assign JSX to variable inside <code>render()</code>, and note that we need a parathesis around JSX for assignment. This code snippet is used in <a href="https://github.com/chocoluffy/redux-todolist" target="_blank" rel="noopener">redux-todolist</a>. Do note that to avoid confusion, I still use <code>.bind(this)</code> syntax below, but I recommend to put binding logic inside <code>constructor()</code>.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">render()&#123;</span><br><span class="line">	<span class="keyword">var</span> todoText;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">this</span>.props.todo.isCompleted)&#123;</span><br><span class="line">		todoText = (</span><br><span class="line">			&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">s</span>&gt;</span>&#123;this.props.todo.text&#125;<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">		)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		todoText = (</span><br><span class="line">			&lt;div&gt;&#123;<span class="keyword">this</span>.props.todo.text&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">		)</span></span><br><span class="line"><span class="regexp">	&#125;</span></span><br><span class="line"><span class="regexp">	return (</span></span><br><span class="line"><span class="regexp">		&lt;li&gt;</span></span><br><span class="line"><span class="regexp">			&#123;todoText&#125;</span></span><br><span class="line"><span class="regexp">			&lt;button onClick=&#123;this._onComplete.bind(this)&#125; &gt;Complete&lt;/</span>button&gt;</span><br><span class="line">		&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">	)</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>Some other times, in order to keep render function clean, we will move the render logic into another function to return JSX syntax and call that function inside <code>render()</code>, note that we don’t need the <code>.bind(this)</code> syntax in this case! Because, the whole reason of using <code>.bind(this)</code> is that inside the _onClick handler function, the <code>this</code> will points to nothing(null), instead of the React component, which may causes the “this.props” not found error and the like. However, in this case, we simply return JSX syntax based on if-else logic, and we won’t need the binding.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">renderTodoText()&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">this</span>.props.todo.isCompleted)&#123;</span><br><span class="line">		 <span class="keyword">return</span> (</span><br><span class="line">			&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">s</span>&gt;</span>&#123;this.props.todo.text&#125;<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">		)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (</span><br><span class="line">			&lt;div&gt;&#123;<span class="keyword">this</span>.props.todo.text&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">		)</span></span><br><span class="line"><span class="regexp">	&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">render()&#123;</span></span><br><span class="line"><span class="regexp">	return (</span></span><br><span class="line"><span class="regexp">		&lt;li&gt;</span></span><br><span class="line"><span class="regexp">			&#123;this.renderTodoText()&#125;</span></span><br><span class="line"><span class="regexp">			&lt;button onClick=&#123;this._onComplete&#125; &gt;Complete&lt;/</span>button&gt;</span><br><span class="line">			&lt;button onClick=&#123;<span class="keyword">this</span>._onDelete&#125;&gt;Delete&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">		&lt;/</span>li&gt;</span><br><span class="line">	)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Check more information in <a href="http://devnacho.com/2016/02/15/different-ways-to-add-if-else-statements-in-JSX/" target="_blank" rel="noopener">this post</a>.</p>
<h3 id="Webpack_in_production">Webpack in production</h3><p>Pretty similar with using webpack in dev mode, but much simpler in that you only need to specify a correct output path, and webpack will handle the else stuff. And it contains Uglify plugins and others that can help produce the production bundle.js file.</p>
<p>check <a href="http://www.pro-react.com/materials/appendixA/" target="_blank" rel="noopener">this post</a> for more information.</p>
<h3 id="How_redux’s_state_update_react’s_components">How redux’s state update react’s components</h3><p>When you use Redux in React application, follow one simple rule - all your components are stateless (means, <strong>no component initializes its state or calls .setState() anywhere</strong>).</p>
<p>The redux way of design based on state container, one big object that holds all application state. As React component, being connected to Redux store, Redux will pass the state (or portion of it) into that component, as this.props.state property.</p>
<p>That high-order component (or smart component), renders its children components (or dumb components) and handles events from them.</p>
<p>If child component requires change, it triggers corresponding handler (which typically passed as props). The only way to change the state is to dispatch an action. That action contains a type and a payload and based on that type, corresponding reducer is selected. The reducer then produces a new state, based on previous state and action payload.</p>
<p><strong>If in the result of reducer call, state got changed, Redux will re-render high-order component, passing new state in properties. So, all child components will be updated correspondingly.</strong></p>
<p>Check <a href="http://stackoverflow.com/questions/33668827/refresh-logic-in-react-component-or-flux-redux" target="_blank" rel="noopener">this post</a> for more information.</p>
<h3 id="How_to_use_seperate_reducers_to_handle_different_parts_of_state">How to use seperate reducers to handle different parts of state</h3><p>One thing to note that in seperate single reducers functions like this one, we no longer pass in the whole state tree, but instead the correct portion of that state tree, in this case, only todos array. And this part of code handles that:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> todoReducer <span class="keyword">from</span> <span class="string">'./todoReducer'</span>;</span><br><span class="line"><span class="keyword">import</span> userReducer <span class="keyword">from</span> <span class="string">'./userReducer'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rootReducer = combineReducers(&#123;</span><br><span class="line">    todos: todoReducer,</span><br><span class="line">    user: userReducer</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> rootReducer</span><br></pre></td></tr></table></figure>
<p>Note that after we split the reducer function, we will also update all related files.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ReactNative-简易个人博客客户端]]></title>
      <url>http://chocoluffy.com/2016/07/03/ReactNative-%E7%AE%80%E6%98%93%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
      <content type="html"><![CDATA[<p>记录了学习React Native过程中一开始的上手项目， 对初学者提供对比参考。<a href="https://github.com/chocoluffy/ReactNativeEveryday/tree/master/Day3SimpleNavigator" target="_blank" rel="noopener">Github Source</a></p>
<a id="more"></a>
<h2 id="Demo">Demo</h2><p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f5h54wb0ung20dc0ob4qu.gif" style="height: 486px; margin: 0 auto;"></p>
<h2 id="Dependency">Dependency</h2><p>react native components:</p>
<ul>
<li>TabBarIOS</li>
<li>Navigator</li>
<li>WebView</li>
</ul>
<p>third library:</p>
<ul>
<li>react-native-vector-icons</li>
</ul>
<h2 id="Trouble_Shooting">Trouble Shooting</h2><h3 id="Use_rnpm_to_link_with_third-party_libraries">Use <code>rnpm</code> to link with third-party libraries</h3><p>Sometimes the third-party libraries not fully integrated into the project even doing <code>rnpm link</code>. In such case, delete the node_modules folder and install again, <code>rm -rf node_modules &amp;&amp; npm install</code>, then do <code>rnpm link</code> to help link with IOS libraries instead of doing it mannually.</p>
<h3 id="How_to_center_an_image_of_fixed_size">How to center an image of fixed size</h3><p>Apply <code>flex: 1, justifyContent: &#39;center&#39;, alignItems: &#39;center&#39;</code> styling on image’s parent element, then for that image’s styling, only specify its fixed height and width will work!</p>
<h3 id="TouchableHighlight">TouchableHighlight</h3><p>TouchableHighlight component can only has one child element, thus if we want to have multiple children elements, wrap them into a single view container. </p>
<blockquote>
<p>Notice one error I met, we need to directly use a <code>View</code> component after <code>TouchableHighlight</code>.</p>
</blockquote>
<h3 id="Navigator">Navigator</h3><p>Finally using Navigator instead of NavigatorIOS, there are several important things to remember:</p>
<ul>
<li>we have an <code>renderScene</code> method in index.ios.js that defines what component to render when there is an scene being pushed.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// In parent component, we define renderScene method:</span></span><br><span class="line">renderScene(route, navigator) &#123;</span><br><span class="line">   <span class="keyword">if</span>(route.name == <span class="string">'Main'</span>) &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Main</span> <span class="attr">navigator</span>=<span class="string">&#123;navigator&#125;</span> &#123;<span class="attr">...route.passProps</span>&#125; /&gt;</span></span></span><br><span class="line"><span class="xml">   &#125;</span></span><br><span class="line"><span class="xml">   if(route.name == 'Home') &#123;</span></span><br><span class="line">     return &lt;Home navigator=&#123;navigator&#125; &#123;...route.passProps&#125; /&gt;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">// And in child component, we put all data we want to pass to next scene in route object.</span><br><span class="line">_navigate(property)&#123;</span><br><span class="line">  this.props.navigator.push(&#123;</span><br><span class="line">    name: 'Home',</span><br><span class="line">    passProps: &#123;</span><br><span class="line">      name: property</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;TouchableHighlight onPress=&#123; () =&gt; this._navigate('Hello World') &#125;&gt;</span><br><span class="line">    &lt;Text&gt;GO To View&lt;/Text&gt;</span><br><span class="line">&lt;/TouchableHighlight&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>And utilizing the spread syntax of passing properties, we can easily allow next scene to use the data passed from the previous scene, the one being trigger(ususally by pressing).</p>
<ul>
<li>The problem of “this”. In the above example, we use the ES6 arrow syntax, which automatically bind “this” for us, which means that the “this” inside the function we called points to the current component. However, if we use common function assignment like <code>onPress={this.onPress.bind(this)}</code>, we have to manually bind this to it!!!</li>
</ul>
<p>check <a href="https://medium.com/@dabit3/react-native-navigator-navigating-like-a-pro-in-react-native-3cb1b6dc1e30#.1kuxzxyps" target="_blank" rel="noopener">this post</a> for more information. And refer to the source code of example <a href="https://rnplay.org/apps/9_1QSA" target="_blank" rel="noopener">navigator example</a>.</p>
<h3 id="TabBarIOS">TabBarIOS</h3><p>Check <a href="https://devdactic.com/react-native-tab-bar/" target="_blank" rel="noopener">this post</a> for more helpful information.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;TabBarIOS selectedTab=&#123;<span class="keyword">this</span>.state.selectedTab&#125;&gt;</span><br><span class="line">        &lt;TabBarIOS.Item</span><br><span class="line">          selected=&#123;<span class="keyword">this</span>.state.selectedTab === <span class="string">'welcome'</span>&#125;</span><br><span class="line">          systemIcon=<span class="string">"featured"</span></span><br><span class="line">          onPress=&#123;() =&gt; &#123;</span><br><span class="line">              <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                  selectedTab: <span class="string">'welcome'</span>,</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;&#125;&gt;</span><br><span class="line">            &lt;Welcome/&gt;</span><br><span class="line">        &lt;<span class="regexp">/TabBarIOS.Item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;TabBarIOS.Item</span></span><br><span class="line"><span class="regexp">          selected=&#123;this.state.selectedTab === 'more'&#125;</span></span><br><span class="line"><span class="regexp">          systemIcon="featured"</span></span><br><span class="line"><span class="regexp">          onPress=&#123;() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">                this.setState(&#123;</span></span><br><span class="line"><span class="regexp">                    selectedTab: 'more',</span></span><br><span class="line"><span class="regexp">                &#125;);</span></span><br><span class="line"><span class="regexp">          &#125;&#125;&gt;</span></span><br><span class="line"><span class="regexp">          &lt;More/</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/TabBarIOS.Item&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>TabBarIOS&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="Test_on_real_device">Test on real device</h3><ul>
<li>Change from localhost to my computer’s IP.</li>
<li><a href="https://gist.github.com/andrewsardone/91797ff9923b9ac6ea64" target="_blank" rel="noopener">Add one more key to info.plist</a></li>
</ul>
<h3 id="Image_not_rendering_from_ListView">Image not rendering from ListView</h3><ul>
<li>One weird thing happened is that using the same uri from Day2 project, I want to render luffy on each row of ListView, but it doesn’t show up. Then, I change to a <em>small and https-sourced</em> image from facebook’s github repo, then it works. Not sure how to deal with it yet.</li>
<li>Some one from issue panel says that image may not be updated in ListView and you have to add an “ID” attribute to forcely update it, it can be saved for later’s use.</li>
</ul>
<h3 id="Icon">Icon</h3><p>Most used library for Icon is “react-native-vector-icons”, and simply import corresponding libraries will do the tricks, <code>import Icon from &#39;react-native-vector-icons/Ionicons&#39;;</code> Then, use <a href="http://ionicframework.com/docs/v2/ionicons/" target="_blank" rel="noopener">this website</a> for searching new icons. If animation required, use <a href="https://github.com/oblador/react-native-animatable" target="_blank" rel="noopener">react-native-animatable</a> to animate. icons.</p>
<h3 id="Nativebase">Nativebase</h3><p>It’s a surprise for me! Just like the bootstrap for html, nativebase gives so much template to build react native front-end. Check <a href="http://nativebase.io/docs/v0.3.0/components" target="_blank" rel="noopener">this tutorial</a> for more examples.</p>
<h3 id="Webview_render_HTML">Webview render HTML</h3><p>Use <a href="https://github.com/jsdf/react-native-htmlview" target="_blank" rel="noopener">react-native-htmlview</a> to render HTML-like text, which usually contains HTML tags like <code>&lt;p&gt;</code> and <code>&lt;/br&gt;</code> and so on. In order to directly jump to the original web page, we simple use react-native-webview library.</p>
<h2 id="Data">Data</h2><h3 id="Grab_data_from_RSS">Grab data from RSS</h3><p>Here is a handy website that transforms rss feed into json, and provides a API for that: <a href="http://rss2json.com/" target="_blank" rel="noopener">http://rss2json.com/</a>. For example, my blog’s rss feed being transformed to json is: <a href="http://rss2json.com/api.json?rss_url=http%3A%2F%2Fchocoluffy.com%2Fatom.xml" target="_blank" rel="noopener">http://rss2json.com/api.json?rss_url=http%3A%2F%2Fchocoluffy.com%2Fatom.xml</a>. Then using this json file, we can have a much more consistent and clear structure to formatize into RN app.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VRTO展会游记]]></title>
      <url>http://chocoluffy.com/2016/06/27/VRTO%E5%B1%95%E4%BC%9A%E6%B8%B8%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>记录在VR Toronto展会第一次尝试Oculus和Vive的使用体验。</p>
<a id="more"></a>
<p>先是有多大Steve Mann教授的开幕panel演讲， 其实内容和上学期ECE516的课程slides重合度非常高， 主要关于教授这四十年左右对VR的研究和总结， 以及他draft的三条关于VR的laws， 更多具体内容和demo可以在课程网页上找到。 </p>
<p>我还记得在课上Steve展示的频率可视化手环和水波乐器， 都在昨天和今天的会场展示了， 错过的同学们可以在教授的个人主页上看到更详细的介绍。</p>
<div class="video-container"><br>    <iframe width="560" height="315" src="https://www.youtube.com/v/Z9qiWqRPrcw" frameborder="0" allowfullscreen></iframe><br></div>

<p>接下来是一系列VR相关的演讲和demo展示， 尝试了目前市场比较流行的Oculus和Vive， 有很多游戏和服务行业开发公司都将各自的应用带到了展台， 大致的感受是：Oculus画质暂时比较差， 场景移动快的demo会导致轻微眩晕感， Vive的画质和human interaction相比之下都更加得细腻出色。</p>
<p>但同时不可否认的是， Facebook旗下的Oculus受到更多开发者的青睐， 拥有更多的游戏选择和强大的技术支持, 但最近曝出来的Oculus强制要求某些游戏开发商的优先发行权还是有损企业形象。Sony的VR头盔暂时没有出现在今天的展示中， 但基于PS4成熟市场规模和玩家预期来说， 仍是最值得期待和大规模流行的VR设备。Vive，在我今天的体验之后， 也给我留下了很深刻的印象， 一个三维画画的游戏应用， 见配图， 将手指slide\click\hold的操作融合得很棒， slide换画板， click选择不同的画笔画布装备， hold来画画， 也的确是本场最immersive的应用之一。</p>
<p>苹果也一直既往地选择观望态度， 短期内没有推出的VR设备的计划。微软Hololens作为AR设备， 相比VR， 拥有更大的生活场景应用空间， 今天体验到的Internet of Things， 包括家具电器灯泡的控制， 餐馆点餐是菜单的选择… 这个demo应该是今天最惊艳的展示了， 也感觉这一两年着力布局家居科技环境的苹果也将加入AR的市场。</p>
<div class="video-container"><br>    <iframe width="854" height="480" src="https://www.youtube.com/v/xG3hslceFqo" frameborder="0" allowfullscreen></iframe><br></div>

<p>同时讲座上提及的myo手环， 曾计划是写个应用给朋友庆祝生日的， 结果用户体验实在太差（动作捕捉不准确）， 不得不放弃myo， 目前市场上较实用的motion detection的设备更多时候还是参考大公司的产品风险比较小。</p>
<p>综上。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[写给高考三年后自己的一封信]]></title>
      <url>http://chocoluffy.com/2016/06/11/%E5%86%99%E7%BB%99%E9%AB%98%E8%80%83%E4%B8%89%E5%B9%B4%E5%90%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1/</url>
      <content type="html"><![CDATA[<p>这篇随笔，记为我对我高中思维的审判。 写给高考结束三年后的自己，也写给所有刚刚结束高考乃至即将开始高中生活的小伙伴们。</p>
<a id="more"></a>
<blockquote class="blockquote-center">“One Piece到底存不存在，我不想知道。”</blockquote>

<p>3年前，我刚结束高考，坐在爸妈的车上一起从学校回家，路上没多少车，很像我当时空空的心。</p>
<p>我是一个很容易有抽离感的人，和周围的人与声音闹腾久了，仿佛像一根针戳破了泡泡，我会安静下来。 还记得那天高考最后一门结束之后，一群家长拥挤了课室，突然一下子把我推进了陌生的热气腾腾。 然而我已经不记得当时的我送上了多少笑脸，但我清楚的记得那种从未有过的空旷，是高考的戛然而止意犹未尽也好，还是一种抵达终点的疲态彷徨，我站在那里，听着最熟悉而陌生的寒暄，无所适从。直到在人群里瞅见了爸爸妈妈，我才回过了神，当时就想一直抱着他们。</p>
<p>太多人的掌声和欢呼让你觉得高考就是终点，可没有多少人理解你的彷徨和张望。</p>
<p>“好像一下子什么都结束了……”</p>
<p>3年后，或是命运的偶然和眷顾，我碾转在中山大学，加州伯克利大学，并于去年落脚在多伦多大学。 回望高中毕业这几年我走过的脚印，太多太多的人与事牵扯着我，震撼着我，改变着我。 相比现在能够掌握着自己努力的痕迹和方向，“高考”两字对现在的我而言，更像是翻看儿时日记那般哭笑不得旳嫌弃和惋惜。 嫌弃当时自己那种不能够再真实的空阔无助，惋惜，或许能够更早些为热爱的东西付出更多的机会。也正是这份切切实实的想法，有时候让我发梦：如果让我回去三年前，看着课桌前傻乎乎的自己，我会和自己说写什么。</p>
<p>一、</p>
<p>我相信偶然，不是否定去勤奋、去努力的意义，不是去反驳人定胜天、铁杵成针的精神，而是我希望更多的宽容。初中高中大量大量不需要天赋而强调记忆的训练，中考高考前弥漫的三个月苦学逆袭的故事与激励，太容易让我们去接受一个线性因果论的世界，因为我这般这般的“付出”与训练，我一定能得到即时可见的成果，而往往成绩也很服气的提高更让我相信，“这条路我没有选错，只是我还不够努力而已”，“他们的成绩还没有提高，一定是还不够努力”的幻想。 很难讲这种思路对那个人的高考帮助到底大不大，但这却是一种很残酷的逻辑。</p>
<p>试想想，在一个付出就有回报的世界里，你所有的成功与荣光，都只与你自己相关，别人的失手挫折，都只因为他们付出的不够多； 富人的富，是天经地义的，而穷人的穷，也都无非是他们活该； 善良与同情变得胆怯了，伸出的援手好像也因为“到底他值不值得我的帮助”的打量而颤抖，我们生活在这样的世界里，太容易变得坚硬而自负，人定胜天不再是面对过程的鼓励而成了面对结果的嚣张。一个失去了尊重和惊喜的世界，我不喜欢。</p>
<p>我们想要尊重与惊喜，我们会因此想要理解对方的不同和允许那变幻莫测的运气，会想起宽容。 不是“如何如何原谅别人的错误”，而是相信自己的任何成就都离不开周遭人的相助与教诲，都离不开前人的经验和教训，相信没有那么理所当然。 感觉又像说起了大道理，可对于一个高中生，乃至现在许多的成年人过分的自我价值追求，这最最简单的一条，却一直不肯承认。</p>
<p>我记得很清楚，我初高中时候的“努力轨迹”。到初三前一直是吊车尾，只到发现自己玩的最好的一群小伙伴和自己喜欢的女生都可以毫不费力地进省级重点班，这成了自己当时努力的理由； 一直喜欢听宣布自己理科成绩的那一刻的掌声和赞叹，这成了我选择奥数、奥化的理由； 因为老师在作业本上给我写了个“有灵气”，成了我那三年那门课必须考满分的理由； 因为想要证明我比另一个同学更厉害，成了我必须保持年纪前列不断去争第一的理由。林林总总的理由，有笑有泪其中不乏充满了记忆与感动的理由，只可惜，没有一个理由是因为我喜欢……</p>
<p>我所谓的成就，不过是在某学科某考试上考的相对好一点罢了，可我所付出的，却是一段“太专注”的冲刺，以致于根本没来得及想自己的热情和兴趣所在，而自顾自地认为“我值得一切结果与荣誉”。 就像跑在跑道里的我们，从来好像都没有质疑过跑道的方向，而越跑越忘记了自己所属的那个方向，乃至奔跑的意义。</p>
<p>每个人都有走近舞台中央的时刻，学会宽容打在自己身上的光，学会理解运气和偶然，想的清楚别人的扶持与帮助，更看得清自己究竟属不属于这个舞台，毕竟这个世界上最简单而粗暴的忽悠，就是叫你去看着别人跑到哪儿，你也去那儿。 </p>
<p>二、</p>
<p>没有一个能解决所有问题的答案，但是可以有一个更倾向改变的角度。</p>
<p>下面这个故事是我在知乎上看到的一个印象很深刻的故事。 2016年普利兹克建筑奖得主Alejandro Aravena在2014年Ted论坛上的讲述他的设计哲学，开篇说道：如果设计有任何力量的话，那就是整合的力量。</p>
<p>事情的起因源于12年前Alejandro曾接到的一个项目，他要为智利北部伊基克市中心非法占据了半公顷土地的100个家庭设计一套社会保障性住房。而得到的预算是1万美元。1万美元的用途，包括买地，建房子，以及建相关基础设施。绝对的资金匮乏让他提出了一个绝妙的方案：“一个普通中产家庭拥有80平方米的住房是可接受的，但如果资金不够，这个家庭可能只好去买40平方米的小房子。如果我们把这个40平方米的小房子，看做是一个80平方米的“好房子的一半”（half of a good house），来建造并提供给这些家庭，给予这些家庭另外40平方米的可拓展空间，那么这无疑鼓励了这些家庭在未来财力足够的时候“扩建”自己的房子，成功拥有一个完整的好房子。”（摘自知乎原文）很惊喜的是，这些家庭大部分都同意了兴建，不仅同意，在主动助力修建工作，因为未来的另一半也是要他们自己建的，这是他们自己的房子。每户家庭想到的不再是如何和政府拉锯谈判，而是对未来自己的房子的憧憬和期待。一个很简单却也更有人情味的角度，“撬动了人们的自发性，我认为，这就是一种“整合”，就是“设计的力量””。</p>
<p>经济学的小伙伴可能很快就看出来了，这貌似就是所谓的“外部利益内部化”的一个更经典的例子嘛。 小到多人合租房间的打扫卫生，工作在大公司成为其中一颗齿轮，大到保护地球生态环境，“搭便车行为”无所不在，“公地悲剧”也不断上演。 非要深究原因的话，书上说是因为“公共物品产权难以界定”，我说，也不过就是当规模大了，涉及的人多了，就慢慢失去了归属感罢了。归属感，一个带着温度的词语。 我不想去深入探讨“拥有”（所谓的“产权”）和“归属”到底区别在哪里，简单来讲，你“拥有的”并不一定能带给你“归属”感，而归属，自愿付出，本身就沾着承诺与责任的味道。</p>
<p>“拥有好房子的一半（half of a good house）”这简单的口号没有解决任何资源稀缺的问题，而只是，给了伊基克市中心的居民们重新清晰的归属感，房子是自己未来好房子的一半，我会认真粉刷，仔细打扮，悉心准备装饰那另一半的到来……没有一个能解决所有问题的答案，但是可以找到一个更加打动的角度，一个更有人情味儿的角度，毕竟所有问题最终归根结底都回到人，而人，因为曾被温柔相待的归属，更倾向改变。</p>
<p>类似地，精致有心旳设计，真实客观的摄影，复杂而饱满的戏剧，这些艺术解决不了大部分现实问题，却苦勤于人心。 他们努力提出一个角度，无谓对与错，更没办法用高中习惯的判分标准参考答案来审判，往往出其不意，往往饱受误解，可也因那更多数的理解和感动而孵育着改变。很难讲艺术的意义究竟是什么，但如果一定要用一句话来概括，我想是：</p>
<p>我也会想成为温柔的人，因为曾被温柔的人那样对待，深深了解那种被温柔相待的感觉。</p>
<p>或许这就是改变的初衷吧。</p>
<p>三、</p>
<p>“One Piece到底存不存在，我不想知道。”</p>
<p>《海贼王》里面描述过很多不同身世背景的伙伴和路飞一起战斗的精彩剧情，但对我来说同样难忘的，还有另一幕，当乌索普问冥王雷利，“那个独一无二的大秘宝One Piece，究竟……”，还没等乌索普说完，路飞大吼一声，谁也没有见过路飞这样严肃的表情，“宝藏在哪里我不想知道，连宝藏又没有我也不想知道，虽然什么都不知道，但是大家都是这样赌上性命出海的，要是在这里就被大叔透露了……我就不当海贼了”。</p>
<p>对于终点和意义的讨论从来没有停止过，而高考，在其重大的社会责任下背负了太多塑造一生、决定一生的名声，可就像生命里其他重要的选择一样，听过掌声，走过低谷，我们依旧要继续上路。意义是很私人的东西，你做不到让别人帮你生活，也做不到按图索骥去参悟旅行的意义，希冀的快乐也远远不同于世界上其他任何人。 过早地接受了终点的模样而擦身而过无数或美妙或苦涩却都精彩无比的可能性，或许正是所谓的“终点”最大的诅咒了吧。</p>
<p>冥王雷利幽幽地问道，“伟大航路的艰险远远超出了你们的想象，敌人都很强悍，你办得到吗？统治这片大海。”，路飞看着雷利，咧开一个笑容，“我才不要统治呢，这片大海上最自由的人，就是海贼王！”</p>
<p>时间仿佛停止在这一刻，思绪宛若卷入一幕幕电影场景般跳跃，肃立在舞台的正中央看着灯光慢慢聚拢，光脚游走在柔和的森林，再跳入环游世界的海贼船把手臂高高举起……想起了好多好多，感慨了好多好多，终于回过神，才恍然自己有多么幸运。 高中的学习课余生活让我成长了太多，在省实也让我认识了可以一起撒娇打诨很久很久的朋友。 但同时我也慢慢意识到，面向高考的教育仿佛无可避免地让我们更容易接受线性因果的世界观，存在面面俱到的标准答案和一种风光却道听途说的生活。</p>
<p>这篇随笔，记为我对我高中思维的审判。 写给高考结束三年后的自己，也写给所有刚刚结束高考乃至即将开始高中生活的小伙伴们。</p>
<p>说实话，在我刚上高中那年级，脑子里除了跑跑卡丁车，就是怪物猎人了吧。 日子过得特别慢，谁会花功夫想这些折腾呢！</p>
<p>虽然一直不擅于文字，却很庆幸自己还存留着对文字的眷恋。也是想看看和文字里的自己一起成长吧。 </p>
<p>新世相最近一篇关于高考的文章很有意思，还记得里面开头的一个提问，过去很多年，我真的从高考中夺回自己的控制权吗？</p>
<p>Yes, finally.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[socket.io开发多人聊天室教程]]></title>
      <url>http://chocoluffy.com/2016/05/23/socket-io%E5%BC%80%E5%8F%91%E5%A4%9A%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>用socket.io搭配express写的一个多人聊天室应用， 同时借这个机会复习了一下socket及TCP/IP的一些细节知识， 在UI上用jquery， 简洁而快速地完成一些基础前端样式的开发， 开发时用nodemon和browser-sync来辅助开发流程。<a href="http://52.20.64.23/chatroom" target="_blank" rel="noopener">在线Demo-网页版</a>, <a href="https://github.com/chocoluffy/chatroom" target="_blank" rel="noopener">github源代码</a>, 欢迎提交bug issue或者pull request~</p>
<a id="more"></a>
<h2 id="什么是socket?">什么是socket?</h2><p>socket是对TCP/IP协议的封装， 本身是一个调用接口， 也就是我们常说的API， 用socket可以让程序员更方便的使用TCP/IP协议而已。 </p>
<p>在学习C语言(csc209)的时候大家接触到的socket的接口函数比如<code>create/listen/connect/accept/send/read/write</code>， 实际上正是针对TCP编程的接口， 在课程里我们用C语言来实现TCP最基础的一个socket链接， 监听， 包括server-client之间的通信，同样的， socket这个调用接口也可以用java, python和nodejs任何后端语言来实现， 也会出现在各种各样需要服务器端和客户端通信的应用中。</p>
<p>而什么是TCP呢？</p>
<p>Transmission Control Protocol (TCP) 就是其中发送文本信息的<strong>规则规范</strong>而已。 TCP依赖更底层的函数实现来在网络上传输binary data。 这里和大家介绍telnet\putty这些利用TCP在command line上帮助你发送和接受纯文本消息的应用， 你可以利用telnet来， 比如， 发送消息到google.com：<code>telnet google.com 80</code> 在端口80连接到google.com(80默认给网络请求)。我们当然不会随便发文本消息给google.com， 因为我们知道google.com不会接受随意的， 没有结构的文本请求。 是的， 我们需要一个<strong>标准(protocol)</strong>来规范交流的方式。我们在浏览器输出<a href="http://google.com，" target="_blank" rel="noopener">http://google.com，</a> 这意味着：</p>
<ul>
<li>在port 80用TCP协议连接google.com的服务器。</li>
<li>请求返回资源“／”（默认资源）。</li>
<li>将请求用http（hypertext transfer protocol）的形式来规范。</li>
</ul>
<h2 id="什么是socket-io?">什么是socket.io?</h2><p>“Socket.IO goes a step beyond just providing an easy-to-use and more robust API on top<br>of web sockets. It also provides the ability to seamlessly use other real-time protocols if WebSockets are not available. For example, it will fall back on JSON long polling in the absence of WebSocket support.” from Rohit Rai</p>
<p>简单来说，socket.io来socket本身的接口函数上再抽象了一层， 让程序员可以专注应用逻辑的开发， 而由socket.io来操作底层的函数调用和优化， 比如有些时候， 由于浏览器的原因不能使用web socket时， 可以默认用long polling来达到同样的效果。</p>
<p>在socket.io出现之前，我们会采用很多的hack来解决一个问题：<strong>怎样在server和client端更有效率地双向传递信息？</strong>比如上文提到的long polling,  client端发送XHR请求， 然后在server端挂住， 直到server收到数据， 就回传数据， 还是比较常见的hack。</p>
<p>直到HTML5的大规模使用， 出现了两种从服务器端推送数据到客户端的新方法， 一个是Server-Sent Events (SSE)， 另一个是今天的主角， 支持双向通信的WebSockets.</p>
<h2 id="怎么用socket-io?">怎么用socket.io?</h2><h3 id="http模块实现">http模块实现</h3><p>下面用一个简单的例子来说明socket的使用， 很明确， 在服务器段当有新的连接的时候， 向客户端发送一个”greeting-from-server”的消息， 同时还监听客户端发来的”greeting-from-client”的事件，将消息打印在console里面。 </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// plain http's version of server.js</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line">	socketIO = <span class="built_in">require</span>(<span class="string">'socket.io'</span>);</span><br><span class="line">	fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// if using express framework, we can define router easier!</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	fs.readFile(__dirname + <span class="string">'/index.html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">		res.writeHead(<span class="number">200</span>);</span><br><span class="line">		res.end(data);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// The above code is used for create a server to serve the static index.html file under the current directory. The following part is the main idea of how to use socket.io to construct and listen to events.</span></span><br><span class="line">server.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'listen on http://localhost:3000'</span>);</span><br><span class="line"></span><br><span class="line">io = socketIO(server);</span><br><span class="line"></span><br><span class="line">io.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">socket</span>)</span>&#123;</span><br><span class="line">	socket.emit(<span class="string">'greeting-from-server'</span>, &#123;</span><br><span class="line">		greeting: <span class="string">'Hello client!'</span></span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	socket.on(<span class="string">'greeting-from-client'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(msg);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- client side index.html  --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/socket.io/socket.io.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> socket = io(<span class="string">'http://localhost:3000'</span>);</span></span><br><span class="line"><span class="javascript">            socket.on(<span class="string">'greeting-from-server'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.body.appendChild(</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.createTextNode(message.greeting)</span></span><br><span class="line"><span class="undefined">                );</span></span><br><span class="line"><span class="javascript">                socket.emit(<span class="string">'greeting-from-client'</span>, &#123;</span></span><br><span class="line"><span class="javascript">                    greeting: <span class="string">'Hello Server'</span></span></span><br><span class="line"><span class="undefined">                &#125;);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>代码很简洁。以上是用node原生的http模块来搭建的本地服务器， 还可以尝试使用express这个最负盛名的node框架之一来重新实现一下相同的逻辑。</p>
<h3 id="Express模块实现">Express模块实现</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express's version of server.js</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>),</span><br><span class="line">    app = express(),</span><br><span class="line">    http = <span class="built_in">require</span>(<span class="string">'http'</span>),</span><br><span class="line">    socketIO = <span class="built_in">require</span>(<span class="string">'socket.io'</span>),</span><br><span class="line">    server, io;</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.sendFile(__dirname + <span class="string">'/index.html'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server = http.Server(app);</span><br><span class="line">server.listen(<span class="number">5000</span>);</span><br><span class="line">io = socketIO(server);</span><br><span class="line"></span><br><span class="line">io.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</span><br><span class="line">  socket.emit(<span class="string">'greeting-from-server'</span>, &#123;</span><br><span class="line">      greeting: <span class="string">'Hello Client'</span></span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  socket.on(<span class="string">'greeting-from-client'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(message);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Express is a collection of HTTP utilities and middleware that make it easier to use Node as a web server.</p>
</blockquote>
<p>用<code>var app = express()</code>来创建一个Express应用，将这个Express app当作第一个参数传入HTTP模块得到本地的简易服务器，we told Node that we wanted to use Express as our handler for HTTP requests. 而这个服务器的作用是在接收到对“／”默认资源的请求时， 将index.html文件传回给客户端，也就是我们的浏览器上显示出内容。</p>
<p>Next, we passed the HTTP server directly to the SocketIO method exactly as we would have if we were using a nonExpress HTTP server. Socket.IO took the server instance to listen for new socket connections on it. </p>
<p>其中一个小细节：用 <code>emit</code> 来传输named message, 用 <code>send</code> 来传输a message without name.</p>
<h2 id="多人在线聊天室">多人在线聊天室</h2><p>下面是对以上应用的一个简单拓展。使用一个轮播(broadcasting)的方式， 将客户端传来的消息显示给每一个在线的用户。</p>
<p><a href="https://github.com/chocoluffy/chatroom" target="_blank" rel="noopener">github源代码    </a></p>
<p><a href="http://52.20.64.23/chatroom" target="_blank" rel="noopener">在线Demo-网页版</a></p>
<p>在手机上也是可以用的， 不过UI没有专门针对移动端优化， 会有点糗的感觉😭。有bug汇报到Issue呀， 谢谢~</p>
<h3 id="效果图Demo:">效果图Demo:</h3><p>[1] pick a nickname:</p>
<p>[2] chatroom initialization:</p>
<p>[3] multi users chatting(one in chrome, another in safari):</p>
<h3 id="server端源代码">server端源代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A fragment of server.js</span></span><br><span class="line"><span class="keyword">var</span> port = process.env.PORT || <span class="number">3000</span>;</span><br><span class="line">server.listen(port);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'listen on '</span> + port);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> io = socketIO(server);</span><br><span class="line"><span class="keyword">var</span> sockets = [];</span><br><span class="line"><span class="keyword">var</span> ID2user = &#123;&#125;; <span class="comment">// username </span></span><br><span class="line"></span><br><span class="line">io.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">socket</span>)</span>&#123;</span><br><span class="line">	sockets.push(socket);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">var</span> updateUserNum = <span class="function"><span class="keyword">function</span>(<span class="params">skt</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> people = sockets.length === <span class="number">1</span> ? <span class="string">'person'</span> : <span class="string">'people'</span>;</span><br><span class="line">		skt.emit(<span class="string">'greeting-from-server'</span>, &#123;</span><br><span class="line">			greeting: <span class="string">'Welcome! '</span> + sockets.length + <span class="string">' '</span> + people + <span class="string">' online now!'</span></span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	updateUserNum(socket);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// boardcast?!</span></span><br><span class="line">	socket.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">message</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> userlistChanged = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(!ID2user[socket.id])&#123; <span class="comment">// if new user comes in.</span></span><br><span class="line">			<span class="keyword">var</span> profile = &#123;</span><br><span class="line">				username: message.username,</span><br><span class="line">				avatar: message.avatar</span><br><span class="line">			&#125;;</span><br><span class="line">			ID2user[socket.id] = profile;</span><br><span class="line">			userlistChanged = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; sockets.length; i++)&#123;</span><br><span class="line">			sockets[i].emit(<span class="string">'message'</span>, message);</span><br><span class="line">			<span class="keyword">if</span>(userlistChanged)&#123; <span class="comment">// update userlist when new user comes in.</span></span><br><span class="line">				<span class="built_in">console</span>.log(ID2user[socket.id].username + <span class="string">'(id: '</span> + socket.id + <span class="string">' )'</span> + <span class="string">'joins!'</span>);</span><br><span class="line">				sockets[i].emit(<span class="string">'userlist'</span>, ID2user);</span><br><span class="line">				updateUserNum(sockets[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	socket.on(<span class="string">'disconnect'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;sockets.length; i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(sockets[i].id === socket.id)&#123;</span><br><span class="line">				sockets.splice(i, <span class="number">1</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">var</span> usernameOut = ID2user[socket.id].username;</span><br><span class="line">		<span class="keyword">delete</span> ID2user[socket.id]; <span class="comment">// remove user from online users.</span></span><br><span class="line">		<span class="comment">// send to client an updated userlist.</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; sockets.length; i++)&#123;</span><br><span class="line">			<span class="built_in">console</span>.log(usernameOut + <span class="string">'(id: '</span> + socket.id + <span class="string">' )'</span> + <span class="string">'leaves...'</span>);</span><br><span class="line">			sockets[i].emit(<span class="string">'userlist'</span>, ID2user);</span><br><span class="line">			updateUserNum(sockets[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">"There are "</span> + sockets.length + <span class="string">" active sockets remaining."</span>);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>由于我们需要将这个应用放在服务器上看效果， 所以port number就不能一直是本地的localhost了， 需要改成<code>var port = process.env.PORT || 3000;</code>。</p>
<h3 id="达到的效果">达到的效果</h3><ul>
<li>显示同时在线的人数和user list。根据你自己选的nickname在user list上显示。</li>
<li>每当有人加入或者disconnect的时候，更新所有客户端的user list。同时console都会有记录。</li>
<li>每当有客户端发送消息的时候， broadcasting给所有在线用户。</li>
</ul>
<h3 id="TODOs">TODOs</h3><ul>
<li>local cache most frequent online users, to make the message transfer much much more efficient and effective. </li>
<li>support image transfer, which should be quite similar to text message, but rather using binary image data. </li>
<li>introduce animation!! this part should be quite familiar to me but I’s just being lazy……</li>
<li>social media ;)</li>
</ul>
<h3 id="client端源代码">client端源代码</h3><p>下面是部分client端的代码：由于监听了一些事件（毕竟我还是调整了前端的😂）, 所以代码有点长， 下面只显示核心部分：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">// part of index.html's script</span><br><span class="line">var socket = io();</span><br><span class="line">socket.on('connect', function()&#123;</span><br><span class="line"></span><br><span class="line">    // ... some codes here ...</span><br><span class="line"></span><br><span class="line">	socket.on('greeting-from-server', function(msg)&#123;</span><br><span class="line">		$('#greeting').empty();</span><br><span class="line">		$('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('headline').text(msg.greeting).appendTo($('#greeting'));</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">    // MAIN IDEA: if message comes, append to right place, and self adjust the view!</span><br><span class="line">	socket.on('message', function(msg)&#123;</span><br><span class="line"></span><br><span class="line">		var container = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').attr('id', 'container');</span><br><span class="line">		var bubble = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('talk-bubble tri-right left-in border');</span><br><span class="line">		var textWrapper = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('talktext').appendTo(bubble);</span><br><span class="line">		$('<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>').html(msg.messageText).appendTo(textWrapper);</span><br><span class="line"></span><br><span class="line">		// append the jquery clone to target destination.</span><br><span class="line">		var nameClone = username2jqy(msg.username);</span><br><span class="line">		var avaClone = avatar2jqy(msg.avatar);</span><br><span class="line"></span><br><span class="line">		avaClone.appendTo(container);</span><br><span class="line">		nameClone.appendTo(container);</span><br><span class="line">		bubble.clone().appendTo(container);</span><br><span class="line">		container.clone().appendTo($('#messages'));</span><br><span class="line"></span><br><span class="line">		$('<span class="tag">&lt;<span class="name">br</span>&gt;</span>').appendTo($('#messages'));</span><br><span class="line"></span><br><span class="line">		// self-adjust scrolling height.</span><br><span class="line">		var msgWrapper = document.getElementById('messages');</span><br><span class="line">		msgWrapper.scrollTop = msgWrapper.scrollHeight;</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">    // MAIN IDEA: when user list need to update, do it!</span><br><span class="line">	socket.on('userlist', function(userlist)&#123;</span><br><span class="line">		$('#userlist').empty();</span><br><span class="line">		$('<span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span>').text('Online users:').appendTo($('#userlist'));</span><br><span class="line">		Object.keys(userlist).map(function(d)&#123;</span><br><span class="line">			var usrImg = $('<span class="tag">&lt;<span class="name">img</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span>').attr('src', userlist[d].avatar);</span><br><span class="line">			var usrName = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').text(userlist[d].username).addClass('listname');</span><br><span class="line">			var profileWrapper = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('userlistProfile');</span><br><span class="line">			usrImg.appendTo(profileWrapper);</span><br><span class="line">			usrName.appendTo(profileWrapper);</span><br><span class="line">			profileWrapper.appendTo($('#userlist'));</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="背景知识补充">背景知识补充</h2><p>完成一个小demo的开发同样会需要很多边角料信息的补充， 没有人会记得所有javascript各种处理对象的函数， 也没有人需要记得。留个note给自己， 也再以后查纠的之后方便回忆。</p>
<ul>
<li><a href="http://ios.jobbole.com/85230/" target="_blank" rel="noopener">微信,QQ这类IM app怎么做——谈谈Websocket</a></li>
<li><a href="http://betterexplained.com/articles/a-simple-introduction-to-computer-networking/" target="_blank" rel="noopener">A Simple Introduction To Computer Networking</a></li>
<li><code>array.splice(i, 1);</code> will remove one item from ith index in that array, namely, in this case, remove the ith item from array.</li>
<li><code>docuemnt.createTextNode(string) \ document.createElement(&#39;div&#39;); \  document.getElementById(&#39;SOMEID&#39;).appendChild(element);</code> are some common DOM objects munipulations example.</li>
<li>refer to this post: <a href="http://stackoverflow.com/questions/8894226/javascript-submit-textbox-on-enter" target="_blank" rel="noopener">send message by pressing enter</a>, by adding an eventlistener function to message-box, we listent on the keyCode we press, if it is 13(Enter key), then we trigger the message send function.</li>
<li>refer to this post: <a href="http://codepen.io/Founts/pen/gmhcl" target="_blank" rel="noopener">styling for chat bubble</a></li>
<li>Know how to create DOM elements in jquery: <code>$(&#39;&lt;div&gt;&lt;/div&gt;&#39;).addClass(&#39;headline&#39;).html(msg).appendTo($(&#39;#greeting&#39;));</code></li>
<li>create modal in a visually good-looking way, refer to this post: <a href="https://github.com/kylefox/jquery-modal" target="_blank" rel="noopener">jquery.modal.js</a></li>
<li>add user a good-looking avatar! <a href="https://github.com/adorableio/avatars-api" target="_blank" rel="noopener">adorable avatar!</a></li>
<li>change html input focus, refer to this post: <a href="https://api.jquery.com/focus/" target="_blank" rel="noopener">html input focus</a></li>
<li>auto-adjust the scrolling top to the latest message, refer to this post: <a href="http://stackoverflow.com/questions/15432691/css-overflow-value-for-chat" target="_blank" rel="noopener">srollTop = scrollHeight</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[前端开发工具库[第一期]-npm script]]></title>
      <url>http://chocoluffy.com/2016/05/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BA%93-%E7%AC%AC%E4%B8%80%E6%9C%9F-npm-script/</url>
      <content type="html"><![CDATA[<p>在自动构建工具grunt\webpack等红噪一时的背景下，为什么我想用npm script而不是grunt和gulp等其他工具?</p>
<a id="more"></a>
<h2 id="前言">前言</h2><p>为什么我们需要自动构建工具？</p>
<p>在前端开发的时候，会遇到很多实际产品开发之外上的需求，比如开发者希望做到“所写即所得”，可以一边在编辑器里面修改和开发代码，浏览器可以同步更新而不需要我们手动去refresh页面； 比如我们希望可以压缩最后的成品代码， 图片资源的大小，让每次浏览器下载所需要的js代码的时间可以更短，或者考虑CDN； 比如我们希望我们写的scss可以适配任何类型的浏览器等等。</p>
<p>很多功能曾经是要开发者手动引入script文件的，但鉴于npm上活跃的开发者将很多需求的module开发并发布出来， 我们可以利用npm这个包管理器来配置使用这些方便的module，在能够达到同样功能的工具里面比如bower, grunt, gulp，我认为对于一个轻量的小项目， 个人项目来说, npm script是最方便的， 最容易上手的。<strong>没有最好的工具， 只有最合适的使用场景。</strong></p>
<p>而今天的主题：在配置工具grunt\webpack等红噪一时的背景下，为什么我想用npm script而不是grunt和gulp等其他工具?</p>
<p><strong>因为simplicity matters。</strong>没有必要在需要用的时候才去找那些数量有限的grunt, gulp plugins，而直接将node modules拿来用。对于个人开发和维护的小项目， 有没有必要花时间去研究Gruntfile.js怎么去配置， 或者说， 在配置上花的时间相对短期集中开发的时间来说值不值？不是说反对使用grunt, gulp和webpack等工具， 而是我们没有必要拿大炮去打蚊子， 我们想要agile development。 也正是simplicy， 所以才有RoR, meteor等全栈框架的出现来挑战java等较为臃肿的开发流程不是么？</p>
<p>下图是截止至今年1月为止的各平台的插件数量，仍在不断地增加中。</p>
<h2 id="什么是npm_script">什么是npm script</h2><p>其实npm script就是希望执行的command的alias， 类似与command line里面的make， 通过提前设置希望执行的命令， 我们可以通过<code>npm run &lt;alias&gt;</code>来执行我们预先设置的命令。 还有一些特别方便的commands比如：</p>
<ul>
<li><code>npm home request</code>， 可以直接跳转到那个module的介绍页面；</li>
<li><code>npm install request --save</code>可以将我们使用的modules以“^”形式保存在package.json文件里面， 这意味着下一次用同一个package.json安装依赖模块时， 没有经过major version jump的模块可以下载到本地项目目录； </li>
<li><code>npm install --production</code>可以安装生产环境的模块， 同<code>NODE_ENV=production npm install</code></li>
</ul>
<h2 id="如何config你的npm_script">如何config你的npm script</h2><p>而目前npm上有很多很棒的module可以直接处理项目， 下面列出来的是我平时自己经常使用的module: </p>
<p>比如: browserfy将文件的各种文件和浏览器同步; postcss和autofixer可以将css文件添加适配各种浏览器的前缀同时进行压缩; js-lint用来检查js文件的各种格式细节; uglify用来压缩js文件的大小; imagemin用来压缩各种图片文件的大小， 在各种大型网站中， 图片的大小占据了大部分。</p>
<h3 id="node－sass">node－sass</h3><p>下面是一些具体使用的例子：比如我们想将sass compile成css。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev node-sass</span><br></pre></td></tr></table></figure>
<p>将<code>node-sass</code>这个module装在developing环境之后，可以直接<code>node-sass --output-style compressed -o dist/css src/scss</code>来将”src/scss“这个文件夹下面的sass文件compile出来并保存在”dist/css“文件夹下面； 或者一个更便捷的做法，是使用npm script：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"scss"</span>: <span class="string">"node-sass --output-style compressed -o dist/css src/scss"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在console里run <code>npm run scss</code>就可以执行这个相同命令了。和makefile的原理和使用习惯可以类比， 只不过使用场景和平台不同。</p>
<h3 id="autoprefixer">autoprefixer</h3><p>同理对上文提到的autoprefixer这个module， <code>npm install --save-dev postcss-cli autoprefixer</code>来安装， 然后配置script：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="string">"autoprefixer"</span>: <span class="string">"postcss -u autoprefixer -r dist/css/*"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么<code>npm run autoprefixer</code>这个效果就相当于<code>postcss -u autoprefixer --autoprefixer.browsers &#39;&gt; 5%, ie 9&#39; -r dist/css/*</code>。</p>
<h3 id="eslint">eslint</h3><p>类似地还有eslint这个对js文件进行syntax testing的常用module：<code>npm install --save-dev eslint</code>或者使用shortcut：<code>npm i -D eslint</code>, 然后配置package.json的script部分：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="string">"lint"</span>: <span class="string">"eslint src/js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="项目源代码示例">项目源代码示例</h2><p>一个实战项目的源代码使用在这里和大家分享：</p>
<p>考虑到开发和生产环境的不同，还需要配置不同的环境，这个项目在开发上有浏览器同步更新，语法检查，压缩源文件， 监听端口， s3同步备份的自动化优势， 还引入了前端的jade框架代替html， stylus框架代替css，mocha的testing框架和karma驱动。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"npm-scripts-example"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">"An example of how to use npm scripts"</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"browserify"</span>: <span class="string">"^6.3.2"</span>,</span><br><span class="line">    <span class="string">"hashmark"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="string">"http-server"</span>: <span class="string">"^0.7.3"</span>,</span><br><span class="line">    <span class="string">"jade"</span>: <span class="string">"^1.7.0"</span>,</span><br><span class="line">    <span class="string">"jshint"</span>: <span class="string">"^2.5.10"</span>,</span><br><span class="line">    <span class="string">"karma"</span>: <span class="string">"^0.12.28"</span>,</span><br><span class="line">    <span class="string">"karma-browserify"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"karma-cli"</span>: <span class="string">"^0.0.4"</span>,</span><br><span class="line">    <span class="string">"karma-mocha"</span>: <span class="string">"^0.1.10"</span>,</span><br><span class="line">    <span class="string">"karma-phantomjs-launcher"</span>: <span class="string">"^0.1.4"</span>,</span><br><span class="line">    <span class="string">"live-reload"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="string">"minifyify"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="string">"mocha"</span>: <span class="string">"^2.0.1"</span>,</span><br><span class="line">    <span class="string">"nodemon"</span>: <span class="string">"^1.2.1"</span>,</span><br><span class="line">    <span class="string">"opener"</span>: <span class="string">"^1.4.0"</span>,</span><br><span class="line">    <span class="string">"parallelshell"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"rimraf"</span>: <span class="string">"^2.2.8"</span>,</span><br><span class="line">    <span class="string">"s3-cli"</span>: <span class="string">"^0.11.1"</span>,</span><br><span class="line">    <span class="string">"stylus"</span>: <span class="string">"^0.49.3"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"clean"</span>: <span class="string">"rimraf dist/*"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"prebuild"</span>: <span class="string">"npm run clean -s"</span>,</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"npm run build:scripts -s &amp;&amp; npm run build:styles -s &amp;&amp; npm run build:markup -s"</span>,</span><br><span class="line">    <span class="string">"build:scripts"</span>: <span class="string">"browserify -d assets/scripts/main.js -p [minifyify --compressPath . --map main.js.map --output dist/main.js.map] | hashmark -n dist/main.js -s -l 8 -m assets.json 'dist/&#123;name&#125;&#123;hash&#125;&#123;ext&#125;'"</span>,</span><br><span class="line">    <span class="string">"build:styles"</span>: <span class="string">"stylus assets/styles/main.styl -m -o dist/ &amp;&amp; hashmark -s -l 8 -m assets.json dist/main.css 'dist/&#123;name&#125;&#123;hash&#125;&#123;ext&#125;'"</span>,</span><br><span class="line">    <span class="string">"build:markup"</span>: <span class="string">"jade assets/markup/index.jade --obj assets.json -o dist"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"karma start --singleRun"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"watch"</span>: <span class="string">"parallelshell \"npm run watch:test -s\" \"npm run watch:build -s\""</span>,</span><br><span class="line">    <span class="string">"watch:test"</span>: <span class="string">"karma start"</span>,</span><br><span class="line">    <span class="string">"watch:build"</span>: <span class="string">"nodemon -q -w assets/ --ext '.' --exec 'npm run build'"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"open:prod"</span>: <span class="string">"opener http://example.com"</span>,</span><br><span class="line">    <span class="string">"open:stage"</span>: <span class="string">"opener http://staging.example.internal"</span>,</span><br><span class="line">    <span class="string">"open:dev"</span>: <span class="string">"opener http://localhost:9090"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"deploy:prod"</span>: <span class="string">"s3-cli sync ./dist/ s3://example-com/prod-site/"</span>,</span><br><span class="line">    <span class="string">"deploy:stage"</span>: <span class="string">"s3-cli sync ./dist/ s3://example-com/stage-site/"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"serve"</span>: <span class="string">"http-server -p 9090 dist/"</span>,</span><br><span class="line">    <span class="string">"live-reload"</span>: <span class="string">"live-reload --port 9091 dist/"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"npm run open:dev -s &amp;&amp; parallelshell \"npm run live-reload -s\" \"npm run serve -s\" \"npm run watch -s\""</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>很多时候就是因为准备的工具效率高， 开发者也因此得以集中精力于产品逻辑， 在更短的时间内开发出更好更稳定的产品。</p>
<h2 id="后记小结">后记小结</h2><p>npm script不是没有缺点的，就像我一再强调的，没有最好的工具， 只有最合适的使用场景， 在个人小项目适合的npm script，在大项目， 动辄几十万的前端项目的构建和测试下， npm script会显得特别臃肿和难以维护。 而目前大热的grunt\gulp\webpack也迎来了他们的舞台。下一期，集中介绍grunt和webpack，公司里使用的也是grunt，为什么它会在众多工具中脱颖而出。</p>
<h2 id="参考链接">参考链接</h2><ul>
<li><a href="https://www.zybuluo.com/yangfch3/note/249328" target="_blank" rel="noopener">用npm搭配脚本执行</a> npm 不仅可以用于模块管理，还可以用于执行脚本。对于多个任务的操作很方便！</li>
<li><a href="https://www.nczonline.net/blog/2016/03/mimicking-npm-script-in-node-js/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+nczonline+%28NCZOnline+-+The+Official+Web+Site+of+Nicholas+C.+Zakas%29" target="_blank" rel="noopener">Mimicking npm script in Node.js</a> The underlying mechanism of using npm script is that npm modifies the PATH environment variable so that it affects the lookup of executables. Run <code>npm install --save-dev eslint</code>, then do <code>npm run lint</code>, it works because npm script is actually running <code>node_modules/.bin/eslint</code>.</li>
<li><a href="http://gon.to/2015/02/26/gulp-is-awesome-but-do-we-really-need-it/" target="_blank" rel="noopener">Gulp is awesome, but do we really need it?</a></li>
<li><a href="http://blog.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/" target="_blank" rel="noopener">How to Use npm as a Build Tool</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[另一种鼓声-读《途客圈》有感]]></title>
      <url>http://chocoluffy.com/2016/05/13/%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%BC%93%E5%A3%B0-%E8%AF%BB%E3%80%8A%E9%80%94%E5%AE%A2%E5%9C%88%E3%80%8B%E6%9C%89%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>“如果你清醒地知道你要去哪儿，脑海中还保留着那份憧憬，那么你就能逢山开路，遇水搭桥，所有的阻碍都将成为一个个里程碑，被踩在你的身后……”</p>
<a id="more"></a>
<h2 id="前言">前言</h2><p>在<a href="http://chocoluffy.com/2016/04/25/%E5%85%B3%E4%BA%8E%E5%88%9B%E4%B8%9A%EF%BC%8C-%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E8%AF%B4%E7%9A%84%E7%A7%98%E5%AF%86/">关于创业, 那些不能说的秘密</a>里主要记录了阅读<the hard="" thing="" about="" things="">的阅读手记， 而另一本几乎同时完成的书&lt;途客圈创业记&gt;的阅读记录思考，在这里分享。</the></p>
<p>在一个充斥着来自CEO乃至风险投资人视角的创业回顾的环境下， 一个来自技术合伙人(CTO)的视角显得尤为可贵。 从最早的技术选型， 到带领其它技术人员的开发和维护， 到技术过渡和商业选择， 陈天给了一份很详细和真挚的参考选项。</p>
<p>每本书， 每个文字对不同的人意义都是不同的。 下面纪录了我在看完这本书之后的想法。</p>
<h2 id="关于创业，那所有无关技术的事">关于创业，那所有无关技术的事</h2><p>一开始不要设置过高的期权池， 期权池的主要目的是未来吸引和留住人才。期权与股权不同，股权代表所有权，期权代表的则是在特定的时间、以特定的价格购买特定所有权的权利，它可被视作是员工与公司之间关于股权买卖的一份合同。行权之后员工获得的股份是普通股。</p>
<h3 id="在创新工场里的打拼">在创新工场里的打拼</h3><p>在和创新工场就入驻细节的交谈中：</p>
<ul>
<li><p>清算优先权</p>
</li>
<li><p>反稀释条款</p>
</li>
</ul>
<p>如何雇佣到最好的人， 的确拥有创新工场这个名字更容易发现更好的技术人员。</p>
<p>nanfang就是通过创新工厂的招聘进来的。同时alex的官方博客和知乎都可以用来获取人才的来源。</p>
<h3 id="技术选型和工具库">技术选型和工具库</h3><p>当时作者使用的是amazon的四台最小免费计算单元， 用4个账号注册的。一台用来跑翻译， 一台跑wordpress， 一台跑toureet.com， 和另一台。 现在国内的云服务可以考虑阿里云。</p>
<p>在UI上要直观和实用。 一定要在第一轮宣传之前完成UI的设计和构架， 毕竟第一轮宣传之后， 往后的宣传的力度和效果都将大大不如之前。</p>
<p>同时也需要考虑的就是域名和注册的问题!!</p>
<p>要把钱花在刀刃上， 要舍得去花钱。app的制作是必须的!!!!!!!!尽管大家使用web的时间很多， 但是下载了一个app就是护城河。</p>
<p><strong>对于一些特别优秀的人， 一定要和他们经常讨论产品的发展方向， 因为对于他们来说， 他们之所以加入你， 已经不是因为技术的吸引力了， 而是因为他的声音很可能在塑造他准备推出的产品， 因为从未有的对产品的掌控力。而这， 也是创业的魅力吧!</strong></p>
<h3 id="市场推广">市场推广</h3><p>历时一个月的推广大赛， 烧了30万（加上员工的工资）， 换来的是一次性的用户， 看热闹的用户， 注册了3万多人， 然而没有什么用。</p>
<p>如果你战略上不是很清晰，你再做什么也是没有用的，<strong>是在用战术性的疲劳掩盖战略上的懒惰</strong>。百场汇不停地在战略层面做一些调整，所以战术上大家不会那么辛苦。一年来，百场汇全公司只有一个人离职。这对初创公司来说是很不容易的。</p>
<h2 id="关于功能的实用和噱头">关于功能的实用和噱头</h2><p>有没有想过如果微信把朋友圈的功能作为每一次打开的初始页面？而不是一直以来的群组或者单聊？首屏一定要放你最最核心的功能， 而社交是最为用户粘性的方式之一， 绝对不能喧宾夺主。或者说， 所有的工具式网站， 都应该考虑围绕那个工具所最最合适的社交场景。</p>
<p>比如微信的工具属性是：即时通讯和群聊， 那么聊天的社交场景就应该是： 让更多的人发现聊天的内容， 也从纯文字转换到图片和视频和直播， 乃至可以让更多的人加入和感受到聊天的这个场景里面。</p>
<p>比如网易云音乐的工具属性是： 发现和享受高品质音乐， 那么找音乐和听音乐的社交场景就应该是： 让更多的人去发现你喜欢和收藏的音乐， 并基于这些音乐进行进一步的交流。而我觉得一个非常非常棒的功能就是， 不仅仅允许用户分享他们自己创作的歌单， 而且允许把他们最常听的那25首歌显示出来。你不会欺骗你自己的耳朵。如果可以把这一栏更突出地显示会更好？！</p>
<h2 id="关于工具和社区的交叠和矛盾">关于工具和社区的交叠和矛盾</h2><p>每一个需求在被解决的时候， 产品是被工具化的， 而希望推广这种解决方案的时候， 产品是被社区化的。 现在大部分围绕工具性产品还是社区性产品的讨论， 如果被抽象出了产品本身要解决的问题的话， 基本都是废话和干扰。 拿两种使用场景和频率比较不同的方向做比较， 比如听音乐和旅游这两个商业方向。 </p>
<p>人们听音乐的两个需求， 在自己疲惫不爽的时候听到自己最喜欢的音乐， 和发现那些不认识却好听的音乐； 当然， 人们还会从分享自己组好的歌单或者评论里面得到分享和反馈的满足，但我认为这种行为是因为社区化带来的，因为在人群中， 所以也想得到人群的温暖和共鸣 ，但这种社会心理的需求我暂不归于听音乐本身的需求。 就拿网易云音乐APP作例子， 其本身在很多细节上做得很棒了， 但是我认为还可以提高的地方：</p>
<p>基于喜欢同一个专辑的乐众的社交兴趣小组。人们对自己喜欢的东西永远都有如数家珍般的热情。</p>
<p>从你不会骗自己的耳朵， 你最最经常听的25首歌。</p>
<p>同样发现别人最最经常听的25首歌。</p>
<p>用户对收集到歌曲的分类的自我重组。 应当支持双向的标记， 一是tag， 二是collection。像管理笔记一样去管理音乐， 同时将任何collection都注重社交化的分享， 像pinterest的理念学习。</p>
<p>评论分为两栏， 一栏是trending， 一栏是历史最热。 trending要像hackernews一样的不断让新事物涌现来代替旧评论， 而历史最热， 则是就硬碰硬的质量。原因？你不会去参加一个高低胜负已经分明的比赛。你之所倚评论， 你总会有被反馈的渴望， 而看见自己的文字被淹没是最最失落的， 哪怕你知道这的确不是最好的文字~</p>
<h2 id="关于期权池">关于期权池</h2><p>以下内容， 来源自知乎。可参考：<a href="http://zhuanlan.zhihu.com/p/20726127" target="_blank" rel="noopener">知乎专栏</a>, 作者：黄海, 著作权归作者所有。</p>
<p>可能有创业者会问了：我给了员工股份，他3个月以后就跳槽了，我不就亏了。当然不会，首先记住这是股权池，不是股份池。给的是股权，不是直接送股份。所谓股权，就是一定时候，可以以行使价格买入股票，这个行使价格由董事会决定，一般特别低。</p>
<h3 id="有股权的员工和创始人的区别">有股权的员工和创始人的区别</h3><p>你最早的员工可能和你一起度过了创业的全过程，而且还通过股权池获得股权，那你可能会问，那他们算创始人么？</p>
<p>答案是，他们与创始人还是有很大不同的。首先，如果他们不行使权利，他们甚至都不算是股东，话语权当然不一样。另外创始人开始都是、没有工资，甚至自己就是投资人，承担了所有的风险。员工就很不一样，依然是雇佣关系，除了失业风险较大，同时劳资可能相对低，但这些都是个人风险，而不是企业风险。所以还是有很大区别的。</p>
<p>越迟加入公司的员工需要冒的风险越低。</p>
<p>创始人应该最终拿整个公司大约50%的股份。首层下面的5层员工的每一层最终都分别分到大约10%的公司股份，每一层的员工都将平分这10%的股份。</p>
<p>现在，你搞定了一个公平的份股系统，但还有一个重要的原则：你必须执行“股份绑定”(vesting)。股份绑定期最好是 4 到 5 年。任何人都必须在公司做够起码 1 年才可持有股份（包括创始人）。好的股份绑定计划一般是头一年给 25%，然后接下来每个月落实 2%。否则，你的合作创始人将加入公司 3 个星期后跑掉，然后 7 年后又出现，并声称他拥有公司的 25% 的股份。</p>
<p>没有“股份绑定”条款，你派股份给任何人都是不靠谱的！</p>
<p>没有执行“股份绑定”是极其普遍的现象，后果可以十分严重。你看到有些公司的 3 个创始人没日没夜地工作了 5 年，然后你发现有些混蛋加入后 2 个星期就离开，这混蛋还以为他仍然拥有公司 25% 的股份，就因为他工作过的那 2 个星期。</p>
<p>好了，让我们清理一下整个设计蓝图中没搞定的小问题。</p>
<p>如果你的公司融资了，股份如何分割？</p>
<p>投资可以来自任何方向，一个天使投资人，一个风险投资公司，或者是某人的老爸。基本上，回答很简单：</p>
<p>新的投资将“稀释”所有人的股份。</p>
<p>千万不要用分配股权来解决这些问题。</p>
<p>其实，你只需要针对每位创始人拿的工资做好记帐：不拿工资创始人就给 她记着工资“欠条”。当公司有了足够现金，就根据这个工资欠条补发工资给她。接下来的几年中，当公司现金收入逐步增加，或者当完成第一轮风险投资后，你可 以给每一位创始人补发工资，以确保每一位创始人都可从公司得到完全一样的工资收入。</p>
<h3 id="创业构想提出者应该多拿股份吗？">创业构想提出者应该多拿股份吗？</h3><p>不拿。构想基本上是不值钱的。仅仅因为提出创业构想就获得更多股 权，因此导致纷争是不值得的。如果你们当中有人首先提出的创业构想，但你们都同时辞工并同时开始创业，你们应该拿同等的股份。为公司工作才是创造价值的原 因，而你洗澡的时候突发奇想的“创业点子”根本不值什么钱。</p>
<h3 id="创始人不全职投入工作？">创始人不全职投入工作？</h3><p>那么，他（们）就不能算是“创始人”。在我的概念中，如果 一个人不全职投入公司的工作就不能算是创始人。任何边干着他们其它的全职工作边帮公司干活的人只能拿工资或者工资“欠条”，但是不要给股份。如果这个“创 始人”一直干着某份全职工作直到公司拿到风投，然后辞工全职过来公司干活，他（们）和第一批员工相比好不了多少，毕竟他们并没有冒其他创始人一样的风险。</p>
<h3 id="如果有人给公司提供有价值的东西？">如果有人给公司提供有价值的东西？</h3><p>比如提供了设备， 专利或者是域名。</p>
<p>很好啊。按这些东西的价值支付现金或开个“欠条”咯，别给股份。你准确算一下他给公司带来的那台电脑的价值，或者他们自带的某个聪明的字处理专利的价格，给他们写下欠条，公司有钱后再偿还即可。在创业初期就用股权来购买某些公司需要的东西将导致不平等，纷争和不公平。</p>
<p><strong>再重复一遍!! 用欠条， 而不是股份解决问题!!!!解决大部分的资金纷争和各种帮助!!</strong></p>
<p>今天买来的用户，明天还是不会成为你的品牌用户。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Angular入门-module和service]]></title>
      <url>http://chocoluffy.com/2016/05/12/Angular%E5%85%A5%E9%97%A8-module%E5%92%8Cservice/</url>
      <content type="html"><![CDATA[<p>自己学习angular时候记录的学习笔记，这一篇主要讨论module和service。</p>
<a id="more"></a>
<h2 id="How_to_define_a_module?">How to define a module?</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// define a module</span></span><br><span class="line">angular.module(<span class="string">'notesApp'</span>,</span><br><span class="line">    [<span class="string">'notesApp.ui'</span>, <span class="string">'thirdCompany.fusioncharts'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// look up a module.</span></span><br><span class="line">angular.module(<span class="string">'notesApp'</span>);</span><br></pre></td></tr></table></figure>
<p>Also, make sure the file that defines the module is loaded first.</p>
<p>After defining the module, we use Angular to use these modules to bootstrap the application. <code>ng-app</code> takes an optional argument, the name of the modulr to load.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">ng-app</span>=<span class="string">"notesApp"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello AngularJS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      Hello &#123; &#123; 1 + 1 &#125; &#125;nd time AngularJS</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">angular.module(<span class="string">'notesApp'</span>, []); </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Controller_in_Angular">Controller in Angular</h2><ul>
<li>fetching data from server to UI.</li>
<li>presentation logic.</li>
<li>user interaction, what will happen when user clicks something. </li>
</ul>
<p>An AngularJS controller is almost always directly linked to a view or HTML. We will <strong>never have a controller that is not used in the UI</strong> (that kind of business logic goes into services).</p>
<h3 id="HTML_code">HTML code</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">angular.module(<span class="string">'notesApp'</span>, []) .controller(<span class="string">'MainCtrl'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// Controller-specific code goes here</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'MainCtrl has been created'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;]);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The above code define a module that depends on nothing, and a controller and its dependencies in the second argument, an array(the last argument in that array is the actual function itself).</p>
<p>We also introduce a new directive, ng-controller. This is used to tell AngularJS to go instantiate an instance of the controller with the given name, and attach it to the DOM element. In this case, it would load MainCtrl, which would end up printing the console.log() statement.</p>
<h3 id="Angular_code">Angular code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;html ng-app=&quot;notesApp&quot;&gt; </span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;Notes App&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body ng-controller=&quot;MainCtrl as ctrl&quot;&gt;</span><br><span class="line">      &#123; &#123; ctrl.helloMsg &#125; &#125; AngularJS.</span><br><span class="line">      &lt;br/&gt;</span><br><span class="line">      &#123; &#123; ctrl.goodbyeMsg &#125; &#125; AngularJS</span><br><span class="line">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">angular.module(&apos;notesApp&apos;, [])</span><br><span class="line">  .controller(&apos;MainCtrl&apos;, [function() &#123;</span><br><span class="line">    this.helloMsg = &apos;Hello &apos;;</span><br><span class="line">    var goodbyeMsg = &apos;Goodbye &apos;;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>The reason why it only shows the the hello message it that: We <strong>defined the variable helloMsg on the controller’s instance</strong> (using the “this” keyword, and it is how we expose the data from controller to front-end UI), and the variable goodbyeMsg as a local inner variable in the controller’s in‐ stance (using the var keyword).</p>
<p>By using <code>ng-controller</code>, it allows us to associate an instance of controller with a UI element, in this case, the <body> tag.</body></p>
<p>“This” in javascipt, since it will be easily modified by whoever call the function, which causes the case that “this” inside and outside the function(the asychcronous function) may refer to two different objects. Thus, using a proxy variable will help!! Since with the help of the closure, that proxy varibale will always stay the same(pointing to “this”) inside the function.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"note in ctrl.notes"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span> &#123; &#123; note.label &#125; &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"status"</span> <span class="attr">ng-bind</span>=<span class="string">"note.done"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The two methods appear above are the same effect, but we recommend the second way, since the second one will be replaced before the the first one. </p>
<h2 id="Angular’s_working_flow">Angular’s working flow</h2><p>After the entire HTML is loaded, angular.js starts to find the <code>ng-app</code> directive, then using that directive, it looks for the angular modules defined and attached to that DOM element. </p>
<p>Then it starts to find other directive and binding elements inside the range. Every it meets <code>ng-controller</code> or <code>ng-repeat</code>, it creates a scope for that part of element. <strong>scopr is the context of that element</strong>, and it dictates what each DOM has access to in terms of functions, variables and so on.</p>
<p>Angular also adds <strong>watcher and listeners</strong> on HTML’s DOM element.</p>
<p>The way angular update the UI, only happens for a certain events including XHR, server calls, page loads and user interaction such clicks and type.</p>
<h3 id="what_is_XHR?">what is XHR?</h3><p>XMLHttpRequest (XHR) is an API available to web browser scripting languages such as JavaScript. It is used to send HTTP or HTTPS requests to a web server and load the server response data back into the script.</p>
<p>Data from the response can be used to alter the current document in the browser window without loading a new web page, and despite the name of the API, this data can be in the form of not only XML, but also JSON, HTML or plain text.</p>
<p>Ajax depends heavily on XHR.</p>
<h2 id="More_directive">More directive</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"note in ctrl.notes"</span> <span class="attr">ng-class</span>=<span class="string">"ctrl.getNoteClass(note.done)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span> &#123; &#123; note.label &#125; &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"assignee"</span> <span class="attr">ng-show</span>=<span class="string">"note.assignee"</span> <span class="attr">ng-bind</span>=<span class="string">"note.assignee"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">self.getNoteClass = <span class="function"><span class="keyword">function</span>(<span class="params">status</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    done: status,</span><br><span class="line">    pending: !status</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>ng-show</code> and <code>ng-hide</code> can help display or hide the DOM element. <code>ng-class</code> will add class to DOM element depending on the [1] if it is string [2] it is a json object, assign the key by the value of that key. <code>ng-switch on=&quot;&lt;some variable value in scopr&gt;&quot;</code> with <code>ng-switch-when=&quot;&lt;the conditional value of that variable&gt;&quot;</code> will create the if-else effect directly in html.</p>
<h2 id="Testing_in_Angularjs">Testing in Angularjs</h2><h3 id="Test_Runner_Versus_Testing_Framework">Test Runner Versus Testing Framework</h3><p>We have often noticed that developers can sometimes get confused between the test runner and the testing framework. This could be because the same library often handles both responsibilities.</p>
<p>When working with JS (and AngularJS), we have two separate tools/ libraries for each purpose. Karma, which is the test runner, is solely responsible for finding all the unit tests in our codebase, opening browsers, running the tests in them, and capturing results. It does not care what language or framework we use for writing the tests; it sim‐ ply runs them.</p>
<p>Jasmine is the testing framework we will use. Jasmine defines the syntax with which we write our tests, the APIs, and the way we write our assertions. It is possible to not use Jasmine, and instead use something like mocha or some other framework to write tests for AngularJS.</p>
<h2 id="Model_in_angular">Model in angular</h2><p>The <code>ng-bind</code> and “{ {  } }” we see in the above example demonstrates the one-way data-binding in angular, to use two-way data-binding, we opt for <code>ng-model</code>. As expected, such functionality is heavily used in user form.</p>
<h2 id="Angular’s_service">Angular’s service</h2><p>service refers to reuseable api that can be shared across the applications. One obvious difference between controllers and services is <strong>services are independent of views</strong>, while controllers drives UI.  </p>
<h3 id="Dependency_injection">Dependency injection</h3><p><strong>Dependency injection is a concept that started more on the server side.</strong> Dependency injection states that instead of creating an instance of the dependent service when we need it, the class or function should ask for it instead and the “injector” will be responsible for figuring out how to create it.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Without Dependency Injection</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fetchDashboardData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $http = <span class="keyword">new</span> HttpService();</span><br><span class="line">  <span class="keyword">return</span> $http.get(<span class="string">'my/url'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// With Dependency Injection</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fetchDashboardData</span>(<span class="params">$http</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> $http.get(<span class="string">'my/url'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The two probable ways to write service and why the latter is better? In the first example, we use “new” keyword, we have new instance everytime we use service while <strong>service in angular is singletons for the scope of our application, </strong> and two controllers ask for service A will get the vary same instance!</p>
<p>To use built-in services, we should remember that the built-in services are prefixed with “<code>$</code>“ sign like “<code>$log</code>“, “<code>$http</code>“ and so on.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myModule.controller(<span class="string">"MainCtrl"</span>, [<span class="string">"$log"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$log</span>) </span>&#123;&#125;]);</span><br><span class="line"></span><br><span class="line">myModule.controller(<span class="string">"MainCtrl"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$log</span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure>
<p>And here are the two ways we usually inject services, but why we prefer the former one, the one with safe style of dependency injection. </p>
<p>Because of the “uglify” procedure. During the uglifing process, the variable will be shortened to some random string, while at that time, we won’t be able to tell which service it is using! Also, since the “uglify” won’t change string constant, it will help to identify which service we are using. </p>
<p>Why we call “injection”? because the way we use those services like <code>myModule.controller(&quot;MainCtrl&quot;, [&quot;$log&quot;, &quot;$window&quot;, function($l, $w) {}]);</code> is similar to injecting those services for the function to use. </p>
<h3 id="Some_common_services">Some common services</h3><h4 id="$location">$location</h4><p>The <code>$location</code> service in AngularJS allows us to interact with the URL in the browser bar, and get and manipulate its value. Any changes made to the <code>$location</code> service get reflected in the browser, and any changes in the browser are im‐ mediately captured in the <code>$location</code> service. The <code>$location</code> service has the fol‐ lowing functions, which allow us to work with the URL:</p>
<ul>
<li>absUrl. A getter that gives us the absolute URL in the browser (called <code>$location</code>. absUrl()).</li>
<li>url. A getter and setter that gets or sets the URL. If we give it an argument, it will set the URL; otherwise, it will return the URL as a string.</li>
<li>path. Again, a getter and setter that sets the path of the URL. Automatically adds the forward slash at the beginning. So <code>$location.path()</code> would give us the current path of the application, and <code>$location.path(&quot;/new&quot;)</code> would set the path to /new.</li>
<li>search. Sets or gets the search or query string of the current URL. Calling <code>$location.search()</code> without any arguments returns the search parameter as an ob‐ ject. Calling <code>$location.search(&quot;test&quot;)</code> removes the search parameter from the URL, and calling <code>$location.search(&quot;test&quot;, &quot;abc&quot;);</code> sets the search parameter test to abc.</li>
</ul>
<h4 id="$http">$http</h4><p>We will deal with <code>$http</code> extensively in Chapter 6, but it is the core AngularJS service used to make XHR requests to the server from the application. Using the <code>$http</code> service, we can make GET and POST requests, set the headers and caching, and deal with server responses and failures.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">angular.module(<span class="string">'notesApp'</span>, [])</span><br><span class="line">  .controller(<span class="string">'MainCtrl'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">    self.tab = <span class="string">'first'</span>;</span><br><span class="line">    self.open = <span class="function"><span class="keyword">function</span>(<span class="params">tab</span>) </span>&#123;</span><br><span class="line">      self.tab = tab;</span><br><span class="line">    &#125;;</span><br><span class="line">    &#125;])</span><br><span class="line">  .controller(<span class="string">'SubCtrl'</span>, [<span class="string">'ItemService'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ItemService</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>; self.list = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ItemService.list(); </span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    self.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      ItemService.add(&#123;</span><br><span class="line">        id: self.list().length + <span class="number">1</span>,</span><br><span class="line">        label: <span class="string">'Item '</span> + self.list().length</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    &#125;])</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// we created ItemService using angular's module function: factory. </span></span><br><span class="line">  .factory(<span class="string">'ItemService'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">var</span> items = [</span><br><span class="line">      &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">label</span>: <span class="string">'Item 0'</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">label</span>: <span class="string">'Item 1'</span>&#125;</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      list: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> items; </span><br><span class="line">      &#125;,</span><br><span class="line">      add: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">        items.push(item);</span><br><span class="line">      &#125; </span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>The point in the above example is that if we add one more item in one of the tabs, we can also see that item in the other tab, because the itemService instance in both tabs are the same. To summerize:</p>
<p>AngularJS guarantees the following:</p>
<ul>
<li>The service will be lazily instantiated. The very first time a controller, service, or directive asks for the service, it will be created.</li>
<li>The service definition function will be called once, and the instance stored. Every caller of this service will get this same, singleton instance handed to them.</li>
</ul>
<h3 id="Factory,_provider_and_service">Factory, provider and service</h3><p><strong>There are several ways to defining a service: factory, provider and service.</strong></p>
<p>we use “factory” if we define the service in a more functional way, like in the previous example, we return an object that contains functions; or we can use “service” if we define the service in a classic class\OO way, which doesn’t return anything. </p>
<p>An example of using “serive” is followed:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ItemService</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> items = [</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">label</span>: <span class="string">'Item 0'</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">label</span>: <span class="string">'Item 1'</span>&#125;</span><br><span class="line">      ];</span><br><span class="line">  <span class="keyword">this</span>.list = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.add = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">        items.push(item);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">angular.module(<span class="string">'notesApp'</span>, [])</span><br><span class="line">  .service(<span class="string">'ItemService'</span>, [ItemService])</span><br><span class="line">  .controller(<span class="string">'MainCtrl'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">    self.tab = <span class="string">'first'</span>; self.open = <span class="function"><span class="keyword">function</span>(<span class="params">tab</span>) </span>&#123;</span><br><span class="line">          self.tab = tab;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;])</span><br><span class="line">  .controller(<span class="string">'SubCtrl'</span>, [<span class="string">'ItemService'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ItemService</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>; self.list = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> ItemService.list(); </span><br><span class="line">    &#125;;</span><br><span class="line">    self.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      ItemService.add(&#123;</span><br><span class="line">            id: self.list().length + <span class="number">1</span>,</span><br><span class="line">            label: <span class="string">'Item '</span> + self.list().length</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="Communication_with_server">Communication with server</h3><p><code>$http</code> is a core AngularJS service that allows us to communicate with server endpoints using XHR. Like XHR such tedious task, we usually instantiate a XMLHttpRequest Object and read the response, check the error codes and so on, or using jquery’s <code>$.ajax</code> syntax. </p>
<p>Also, it follows the Promise interface.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">angular.module(<span class="string">'resourceApp'</span>, [<span class="string">'ngResource'</span>])</span><br><span class="line">    .factory(<span class="string">'ProjectService'</span>, [<span class="string">'$resource'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$resource</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> $resource(<span class="string">'/api/project/:id'</span>); </span><br><span class="line">    &#125;]);</span><br></pre></td></tr></table></figure>
<p><strong>use <code>ngResource</code> to handle RESTful API </strong> as it will make it extremely easy to send the “GET”\”POST” request to the server. In the above example, we produce a service called “ProjectService”, which depends on the built-in module called “<code>$resource</code>“, which wraps the RESTful endpoint to make our life easier as we can then use:</p>
<ul>
<li>ProjectService.query() to get a list of projects.</li>
<li>ProjectService.save({id: 15}, projectObj) to update a project with ID 15.</li>
<li>ProjectService.get({id: 19}) to get an individual project with ID 19.</li>
</ul>
<p>The following is a full-fledged example, showing how to use <code>ngResource</code> in front end to cooperate with the back end.</p>
<div style="text-align:center" markdown="1"><br>  <iframe src="http://angular-example-dev.us-east-1.elasticbeanstalk.com/http-post-example.html" width="100%" height="500"><br>    <p>Your browser does not support iframes.</p><br>  </iframe><br></div>

<p>The source code is listed as followed:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js (Express 4.0)</span></span><br><span class="line"><span class="keyword">var</span> express        = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> morgan         = <span class="built_in">require</span>(<span class="string">'morgan'</span>);</span><br><span class="line"><span class="keyword">var</span> bodyParser     = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">var</span> methodOverride = <span class="built_in">require</span>(<span class="string">'method-override'</span>);</span><br><span class="line"><span class="keyword">var</span> app            = express();</span><br><span class="line"></span><br><span class="line">app.use(express.static(__dirname + <span class="string">'/public'</span>)); <span class="comment">// this line is important as we will serve those html file directly in screen as option, in those html front-end example, we will use angular's ngResource to create http request for the backend of this server.js (the endpoint we just created using express's router).</span></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>)); 					<span class="comment">// log every request to the console</span></span><br><span class="line">app.use(bodyParser()); 						<span class="comment">// pull information from html in POST</span></span><br><span class="line">app.use(methodOverride()); 					<span class="comment">// simulate DELETE and PUT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> notes = [</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">label</span>: <span class="string">'First Note'</span>, <span class="attr">author</span>: <span class="string">'Shyam'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">label</span>: <span class="string">'Second Note'</span>, <span class="attr">author</span>: <span class="string">'Brad'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">3</span>, <span class="attr">label</span>: <span class="string">'Middle Note'</span>, <span class="attr">author</span>: <span class="string">'Someone'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">4</span>, <span class="attr">label</span>: <span class="string">'Last Note'</span>, <span class="attr">author</span>: <span class="string">'Shyam'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">5</span>, <span class="attr">label</span>: <span class="string">'Really the last Note'</span>, <span class="attr">author</span>: <span class="string">'Shyam'</span>&#125;</span><br><span class="line"></span><br><span class="line">];</span><br><span class="line"><span class="keyword">var</span> lastId = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/note'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(notes);</span><br><span class="line">&#125;);</span><br><span class="line">router.post(<span class="string">'/note'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> note = req.body;</span><br><span class="line">  note.id = lastId; <span class="comment">// An smart way to keep track of the last id.</span></span><br><span class="line">  lastId++;</span><br><span class="line">  notes.push(note);</span><br><span class="line">  res.send(note);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/note/:id/done'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> noteId = req.params.id;</span><br><span class="line">  <span class="keyword">var</span> note = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; notes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (notes[i].id == req.params.id) &#123;</span><br><span class="line">      note = notes[i];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  note.label = <span class="string">'Done - '</span> + note.label;</span><br><span class="line">  res.send(notes);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/note/:id'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; notes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (notes[i].id == req.params.id) &#123;</span><br><span class="line">      res.send(notes[i]);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(&#123;<span class="attr">msg</span>: <span class="string">'Note not found'</span>&#125;, <span class="number">404</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/note/:id'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; notes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (notes[i].id == req.params.id) &#123;</span><br><span class="line">      notes[i] = req.body;</span><br><span class="line">      notes[i].id = req.params.id;</span><br><span class="line">      res.send(notes[i]);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(&#123;<span class="attr">msg</span>: <span class="string">'Note not found'</span>&#125;, <span class="number">404</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'API LOGIN FOR '</span>, req.body);</span><br><span class="line">  res.send(&#123;<span class="attr">msg</span>: <span class="string">'Login successful for '</span> + req.body.username&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/api'</span>, router);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">8000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Open http://localhost:8000 to access the files now'</span>); <span class="comment">// shoutout to the user</span></span><br></pre></td></tr></table></figure>
<p>And the front-end part code is:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- File: chapter6/public/http-post-example.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">ng-app</span>=<span class="string">"notesApp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTTP Post Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .item &#123;</span></span><br><span class="line"><span class="undefined">      padding: 10px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-controller</span>=<span class="string">"MainCtrl as mainCtrl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello Servers!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"todo in mainCtrl.items"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"todo.label"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>- by <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"todo.author"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"todo.messege"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"addForm"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">ng-submit</span>=<span class="string">"mainCtrl.add()"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">placeholder</span>=<span class="string">"Label"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">ng-model</span>=<span class="string">"mainCtrl.newTodo.label"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">required</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">placeholder</span>=<span class="string">"Author"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">ng-model</span>=<span class="string">"mainCtrl.newTodo.author"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">required</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"messege"</span> <span class="attr">ng-model</span>=<span class="string">"mainCtrl.newTodo.messege"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">value</span>=<span class="string">"Add"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">ng-disabled</span>=<span class="string">"addForm.$invalid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  angular.module(<span class="string">'notesApp'</span>, [])</span></span><br><span class="line"><span class="javascript">    .controller(<span class="string">'MainCtrl'</span>, [<span class="string">'$http'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$http</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> self = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="undefined">      self.items = [];</span></span><br><span class="line"><span class="undefined">      self.newTodo = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> fetchTodos = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> $http.get(<span class="string">'/api/note'</span>).then(</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              self.items = response.data; <span class="comment">// set the items to be the return data.</span></span></span><br><span class="line"><span class="javascript">            &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">errResponse</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.error(<span class="string">'Error while fetching notes'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">      &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      fetchTodos();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">      self.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $http.post(<span class="string">'/api/note'</span>, self.newTodo)</span></span><br><span class="line"><span class="javascript">            .then(fetchTodos) <span class="comment">// update items.</span></span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              self.newTodo = &#123;&#125;; <span class="comment">// clear the form.</span></span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">      &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;]);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="$http_in_detail">$http in detail</h3><p>Promise-style syntax.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">angular.module(<span class="string">'notesApp'</span>, [])</span><br><span class="line">  .controller(<span class="string">'MainCtrl'</span>, [<span class="string">'$http'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$http</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">    self.items = [];</span><br><span class="line">    $http.get(<span class="string">'/api/note'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">      self.items = response.data;</span><br><span class="line">      &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">errResponse</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.error(<span class="string">'Error while fetching notes'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">  &#125;]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>why Promise is better? try thinking about a case when we have to make 3 http request in a row, when the latter ones will depend on the information from the first ones. If using callbacks, we will need to nest them all together!</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$http.get(<span class="string">'/api/server-config'</span>)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">configResponse</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $http.get(<span class="string">'/api/'</span> + configResponse.data.USER_END_POINT);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">userResponse</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $http.get(<span class="string">'/api/'</span> + userResponse.data.id + <span class="string">'/items'</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">itemResponse</span>) </span>&#123; </span><br><span class="line">    <span class="comment">// Display items here</span></span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Common error handling</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="Additional_information">Additional information</h2><h3 id="difference_between_Promise_and_callback_in_js?">difference between Promise and callback in js?</h3><p>As for their effect, they are pretty like the same in terms of being asynchronous while Promise’s syntax looks far more clear than nested callbacks.</p>
<p>Promises provide a more succinct and clear way of representing sequential asynchronous operations in javascript. They are effectively a different syntax for achieving the same effect as callbacks. The advantage is increased readability. Something like this</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">aAsync()</span><br><span class="line">  .then(bAsync)</span><br><span class="line">  .then(cAsync)</span><br><span class="line">  .done(finish);</span><br><span class="line"><span class="comment">// Promise is much more readable then the equivalent of passing each of those individual functions as callbacks, like:</span></span><br><span class="line"></span><br><span class="line">Async(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> bAsync(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cAsync(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            finish()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>简单来说， Promise就是syntactic sugar。Everything that can be written in Promise can be written in nested callbacks.</p>
<h3 id="difference_between_websocket_and_RESTful_API?">difference between websocket and RESTful API?</h3><p>It really depends on the context, whether it requires less interaction like reading a blog, or requires time browsing; or it requires rich interaction and messege sending. For the former, close the connection during reading or browsing may actually save resources, which is exactly what HTTP does, while the latter one calls for websocket!!</p>
<p><strong>HTTP is a pull service, while websocket is bidirectional.</strong></p>
<p>参考<a href="https://www.pubnub.com/blog/2015-01-05-websockets-vs-rest-api-understanding-the-difference/" target="_blank" rel="noopener">这篇博客</a>介绍得非常详细!!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第三期]-民主的不满]]></title>
      <url>http://chocoluffy.com/2016/05/07/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80-%E7%AC%AC%E4%B8%89%E6%9C%9F-%E6%B0%91%E4%B8%BB%E7%9A%84%E4%B8%8D%E6%BB%A1/</url>
      <content type="html"><![CDATA[<p>我不清楚我的选择会是什么， 但这并不是我拒绝去看这个问题的理由， 或许在相信他们针锋相对的背后， 就是我的立场。</p>
<a id="more"></a>
<p>自由， 就在于人们选择他们价值与目标的能力。</p>
<p>我们在政治生活中公民的或者塑造性的一面在很大程度上， 已经让位于自由主义。 而这正是我们现在参与政治活动的困境， 政治， 或者说， 公共哲学， 是否应该具有塑造性。</p>
<p>古代的政治理论， 比如亚里士多德， 认为政治的目标就是培养德行和达到某种的善。而这种达到某种善的观点， 在现在非常容易被反驳， 我们很容易说， 这是价值判断， 什么是善呢？什么是你认为的善的呢？先抛开价值判断的这种做法来说， 毕竟如果在情愿对一件事， 一种态度深入了解之前就放弃了解它的机会的话， 我们会错过很宝贵的东西。回到这种良善的想法， 其实这种观念自然地会发展出一种社会契约论， 而这个契约的目的正是保证人们往那种善的方向发展。它要求人们需要有对公共事务的知识， 归属感， 对集体的关系， 和共同道德的维系， 一种公民的参与感（相比于现在的自由主义）。</p>
<p>对一个共同方向的认可， 意味着牺牲某些个人意愿。这是我们都能想到的， 而这种取舍， 或许就是其中一个定义了自由主义和上述共和主义的区别之一。自由主义的宣扬者会说， 政治理论不是某种特定的良善生活观念， 而是坚持宽容、公正的程序以及尊重个人权利， 从各种美国最高法院的判决案例我们也能看出一些倾向性， 自由言论的权利是被美国人民镌刻在心的一种inborn权利， 法官对任何有可能伤害到这种自由的嗅觉是异常灵敏， 或许也是缘因美国人心里对大政府天生的反感。</p>
<p>我们能不能用之前所说的价值判断这种说法， 来指出共和主义的问题而支持自由主义呢？ 其实仔细想想， 这种价值判断的论断核心是相对主义。 相对主义的一个明显的标志就是， 不去主张什么， 而是变现为质问“谁来判断？谁来决定？”。 他们会问， 什么是良善？什么是高雅和污秽？ 然而我们也可由此问回他们“什么才是他们口中的宽容、自由和公平呢？”。以相对主义来为自由主义辩护根本就算不上是一种辩护。</p>
<p>但仔细去追究自由主义和共和主义， 我们会发现一个经常提出的问题， 权利和善哪个更重要？这里的善， 我们可以想为是一种道德上的义务， 和认同。我们究竟是一副无负荷自我（the unencumbered self）的自由主义形象, 还是为我们家庭、民族、文化的身份所赋予的目标所束缚？在很多情况下， 也正是这些束缚带给我们困境和痛苦。</p>
<p>举一个栗子， 内战前的罗伯特李大将军， 身为联邦军队的一名高级将领， 李将军反对分裂， 然后再战争迫近的时候， 他认为他对弗吉尼亚州的责任超过了他对联邦的责任， 于是他毅然会到家乡， 和他的家乡人民共患难。一个让人心酸的困境。如果我们认为，与自己人民站在一起的召唤是一种道德要求而不是情感表达的话， 这正是印证了前文关于良善， 关于道德义务上的困境。相反， 一个自由主义者， 他们没有这样子的束缚， 他们只为他们选择去承担的责任所约束， 也只去承担他们选择去承担的部分。仔细想想， 我们其实常常崇敬这些像李将军一样的人，不一定是因为他们做出的选择， 而是因为他们的考虑所反映的特质－－作为能够反思自身处境的存在者， 看清楚自己的生命处境并担当起来， 自己深深卷入其中的特定生活对自己有所要求， 而自己又意识到这种生活的特殊性， 也就是说意识到存在更加广阔的世界， 另外的生活方式。</p>
<p>书摘 摘自《民主的不满》</p>
<p>2015.7.26</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWS elastic beanstalk使用体验]]></title>
      <url>http://chocoluffy.com/2016/05/04/AWS-elastic-beanstalk%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p>本文对目前市面上的主流Paas(platform as a service)提供商进行了比较， 比如heroku和amazon家的新星elastic beanstalk。并以一个nodejs爬虫的实例部署在了eb的服务器上。很多关于服务器端的概念也因此理清了， 比如reverse proxy server, dynamic IP addressing和后端的一些配置。也在文章中做个小结， 分享给感兴趣的大家。</p>
<a id="more"></a>
<h2 id="概览">概览</h2><p>将之前用nodejs写的对<a href="https://cnodejs.org/?tab=good" target="_blank" rel="noopener">cnode社区精华帖</a>的爬虫放在AWS的EC2 instance下管理， 利用elastic beanstalk来对AWS资源进行分配和调控， 由于使用的还是free-tier的single instance， 则elastic beanstalk所特有的load-balancing的优势没有办法享受到。</p>
<p>一开始如果直接按照AWS给的方法, <code>eb init</code>初始化一个elastic beanstalk的项目， <code>eb create</code>创建一个environment和一个EC2实例, 然后<code>eb deploy</code>将.git里面committed的改动push到elastic beanstalk的生产环境里面， 然后用<code>eb open</code>来打开这个IP address， 如果之后需要终止这个app的话， 就<code>eb terminate</code>就好了。</p>
<p>如果之前有使用heroku的经验的话， 其实你会发现其实amazon elastic beanstalk和heroku提供的服务非常相似， 实际上， 就这两家服务的定位而言， 都是platform as a service（Paas）， 也就是让developer可以将网站， 移动端部署在云端(cloud)不需要顾虑backend server和database的configuration。 而heroku本身相对于其他市面上的Paas在auto-scaling上做得更加出色， 它的computing resources(dyno)可以按照计算的需求而叠加从而满足在高流量下的网站后端流畅运行。而近几年amazon的elastic beanstalk的出现， 在这个Paas的市场给我们developer多一个很好的选择。就自己的使用而言， 感觉两者的command line interface其实设计得差不多， 都很简洁方便， 不过相比heroku， amazon的AWS还涉及租用到计算单元EC2, 就配置的操作来说， 你在配置AWS的服务上需要花更多的时间去设置环境变量和考虑密钥存储， 毕竟你可能有时候有ssh远程登陆amazon linux服务器的需求。相比之下， heroku的配置就是很简单的在<code>~/.bashrc</code>文件里面添加toolbelt文件夹的路径了。</p>
<blockquote>
<p> 其实heroku它本身就是deploy在了AWS上的呀😂， 所以理论上在performance上不会有太大的差别。</p>
</blockquote>
<p>而在pricing上， 我认为AWS的价格和服务会更加的实惠， 毕竟考虑到你有一张信用卡就可以申请到你一年的free-tier的single instance的使用权利， 而single instance对一些小型的side project来说完完全全是够用的呀。即便不够用， 换成large instance也是several clicks away， 反正也是按用量收费， 经济实惠!</p>
<h2 id="遇到的问题">遇到的问题</h2><p>第一个使用EB部署的应用是一个nodejs爬虫， 负责爬去cnode社区的精华帖， 然后返回一个json object收集精华帖的link, 标题和作者avatar， 为了显示的直观， 我并没有写前端的样式， 而是直接<code>JSON.stringify(json)</code>然后send会浏览器。之后如果仅仅作为REST API使用的话， 还需要在router上修饰一下URL。目前还是有点粗糙的。<a href="https://github.com/AirLoft/web-scraper" target="_blank" rel="noopener">github链接</a></p>
<p>一开始我直接将在本地localhost运行的版本deploy到了elastic beanstalk上， 由于缺少了这一行配置<code>var port = process.env.PORT || 3000;</code>， 我直接把port定在了3000， 而elastic beanstalk是有应该占用的port的， 所以得到了“502 bad gateway error”。</p>
<p>还有一点需要注意的是<code>npm start</code>这个npm script里面的配置， AWS elastic beanstalk会找到这条指令并去执行来执行相应的js文件， 比如我把写cnode网站的爬虫写在了cnode.js里面， 那么我需要</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"start"</span>: <span class="string">"node cnode.js"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>来保证服务器执行的是我对cnode这个网站的爬虫。</p>
<h2 id="Q&amp;A">Q&amp;A</h2><p>以下内容是我在自己折腾Elastic Beanstalk的时候收集的一些比较简练而准确的总结， 在这里分享给大家。 其实amazon的AWS教程写得非常详细的， 大家自己如果有能力最好去尝试自己阅读和实践它给的例子!</p>
<p><strong>How elastic beanstalk works?</strong><br>Now you have a web app running in AWS Elastic Beanstalk. As Elastic Beanstalk creates your environment, it <strong>interacts with several other AWS services</strong> to create the resources required to run your web app securely and resiliently.</p>
<p><strong>How EC2 instance works?</strong><br>EC2 instance – A virtual machine that runs Amazon Linux or Microsoft Windows Server and that is configured to run web apps on the platform that you choose.<br>Each platform runs a different set of software, configuration files, and scripts to support a specific language version, framework, web container, or combination thereof. Most platforms <strong>use either Apache or nginx as a reverse proxy</strong> that sits in front of your web app, forwards requests to it, serves static assets, and generates access and error logs.</p>
<p><strong>What is reverse proxy server?</strong><br>A proxy server is a go-between or intermediary server that forwards requests for content from multiple clients to different servers across the Internet. A reverse proxy server is a type of proxy server that typically <strong>sits behind the firewall in a private network</strong> and directs client requests to the appropriate backend server. A reverse proxy provides an additional level of abstraction and control to ensure the smooth flow of network traffic between clients and servers.</p>
<p>Common uses for a reverse proxy server include:</p>
<ul>
<li>Load balancing – A reverse proxy server can act as a “traffic cop,” sitting in front of your backend servers and distributing client requests across a group of servers in a manner that maximizes speed and capacity utilization while ensuring no one server is overloaded, which can degrade performance. If a server goes down, the load balancer redirects traffic to the remaining online servers.</li>
<li>Web acceleration – Reverse proxies can compress inbound and outbound data, as well as cache commonly requested content, both of which speed up the flow of traffic between clients and servers. They can also perform additional tasks such as SSL encryption to take load off of your web servers, thereby boosting their performance.</li>
<li>Security and anonymity – By intercepting requests headed for your backend servers, a reverse proxy server protects their identities and acts as an additional defense against security attacks. It also ensures that multiple servers can be accessed from a single record locator or URL regardless of the structure of your local area network.</li>
</ul>
<p><strong>What is amazon s3 bucket?</strong><br>Amazon S3 bucket – A storage location for your source code, logs, and other artifacts that are created when you use Elastic Beanstalk.</p>
<p><strong>How your domain will look like?</strong><br>Domain name – A domain name that routes to your web app in the form subdomain.region.elasticbeanstalk.com.</p>
<p><strong>When should I use AWS Lambda versus Amazon EC2?</strong></p>
<p>Amazon Web Services offers a set of compute services to meet a range of needs.</p>
<p>Amazon EC2 offers flexibility, with a wide range of instance types and the option to customize the operating system, network and security settings, and the entire software stack, allowing you to easily move existing applications to the cloud. With Amazon EC2 you are responsible for provisioning capacity, monitoring fleet health and performance, and designing for fault tolerance and scalability. AWS Elastic Beanstalk offers an easy-to-use service for deploying and scaling web applications in which you retain ownership and full control over the underlying EC2 instances. Amazon EC2 Container Service is a scalable management service that supports Docker containers and allows you to easily run distributed applications on a managed cluster of Amazon EC2 instances.<br>AWS Lambda makes it easy to execute code in response to events, such as changes to Amazon S3 buckets, updates to an Amazon DynamoDB table, or custom events generated by your applications or devices. With Lambda you do not have to provision your own instances; Lambda performs all the operational and administrative activities on your behalf, including capacity provisioning, monitoring fleet health, applying security patches to the underlying compute resources, deploying your code, running a web service front end, and monitoring and logging your code. AWS Lambda provides easy scaling and high availability to your code without additional effort on your part.</p>
<p><strong>To create a hosted zone in Amazon Route 53</strong></p>
<ul>
<li>Open the Amazon Route 53 management console.</li>
<li>Choose Hosted Zones.</li>
<li>Choose Create Hosted Zone.</li>
</ul>
<p>For Domain Name, type the domain name that you own. For example: example.com.</p>
<p>Choose Create.</p>
<p>Next, add a CNAME record to the hosted zone. A CNAME record registers a domain name that you own as an alias of your web app environment’s elasticbeanstalk.com subdomain.</p>
<p>When an Amazon Route 53 DNS server receives a name request for your custom domain name, it resolves to the elasticbeanstalk.com subdomain, which resolves to the public DNS name of your Elastic Load Balancing load balancer, which resolves to your web app’s IP address.</p>
<p>Note<br>In a single-instance environment, the elasticbeanstalk.com subdomain resolves to an Elastic IP address attached to the instance running your web app.</p>
<p><strong>关于elastic beanstalk的价格</strong><br>有小伙伴在comment里面提问， 如果用完了一年的free-tier的话， 价格怎么计算呢? 可以参考下amazon的<a href="https://aws.amazon.com/elasticbeanstalk/pricing/" target="_blank" rel="noopener">这篇介绍</a>里面详细记录了EC2, S3, DB等等AWS相关服务的价格。如果是个人的side project, 对CPU和图片等用户信息存储的需求不是特别大的话， 免费的plan或者是micro的instance是完全够用的， 如果是在某方面的需求特别大， 比如说unsplash这个高清摄影图片分享的社区。</p>
<p> unsplash将用户上传的照片存储在Amazon的S3服务上会比较安全和便捷，(搭配着Imgix这个service使用)， 具体的网站花销可以参考<a href="http://backstage.crew.co/what-does-unsplash-cost/" target="_blank" rel="noopener">这篇博文</a>， 里面记录了unsplash一个月网站使用的各种服务的明细记录， 也可以给一些希望做图片分享社区的创业者们一个参考。一个值得注意的点是， unsplash的花销是比较适合借鉴的， 因为unsplash和目前许多的创业公司一样， 选择将自己的主服务host在heroku这个平台， 选择S3等等主流的服务， 不像一些更geeky的公司可能为了省钱就自己来搭建和管理自己的服务器和数据库。 当然， 管理成本和维护成本都要考虑进去， 所以综上我才认为unsplash的例子是非常值得借鉴的!</p>
<h2 id="参考链接">参考链接</h2><p>下面的链接是我在自己尝试搭建环境时参考的内容， 以及我选择free-tier的configuration的页面。其中就有以express为例子的服务端环境搭建。</p>
<ul>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/set-up-ec2-cli-linux.html#set_aes_home_linux" target="_blank" rel="noopener">setting up EC2 cli on mac</a> we store EC2 api tool, aws-access-key and aws-secret-key in <code>~/.bashrc</code>, so that we can use the shortcut commands to do <code>init\create\deploy\open</code>. The common commands are listed as followed.</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eb init</span><br><span class="line">eb create</span><br><span class="line">eb deploy</span><br><span class="line">eb open</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://docs.aws.amazon.com/quickstarts/latest/webapp/welcome.html" target="_blank" rel="noopener">A high level explanation of what EB does and what can we config</a> trying to give a high-level description of what is the use and purpost of each AWS service, including EC2, the reverse proxy server sitting in front of servers, router 53 and so on so forth.</li>
<li><a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_express.html" target="_blank" rel="noopener">A detailed explanation of how to host an express app on EB full-step tutorial</a> The tutorial uses an express app to explain how to use EB.</li>
<li><a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs.html" target="_blank" rel="noopener">How to deploy a nodejs project to EB</a> similar to the previous tutorial post.</li>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html" target="_blank" rel="noopener">how to connect to EC2 instance using ssh</a><br>by using <code>ec2-describe-instances</code>, we can get the id of my instance.</li>
</ul>
<p>So after we have created an project, we go to the elastic beanstalk console, we will see the dashboard of all the application I host on EB such as the recent one(webscraper). The following is a screen capture of the configuration of that application on EB as in a free-tier plan:<br>In this page, we can set the scaling option from single instance to load-balanced configuration, and when we add a load-balancer, it will automatically adjust the number of instances depending on the need.</p>
<p>When you turn on load balancing, Elastic Beanstalk creates a load balancer, deletes the Elastic IP address from your environment, and provisions a new EC2 instance. Elastic Beanstalk also updates DNS records to point the web app’s domain name to the load balancer instead of to the IP address of a single instance.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AirLoft组织动员宣言]]></title>
      <url>http://chocoluffy.com/2016/04/27/%E7%AC%AC%E4%B8%80%E6%9C%9F-AirLoft%E7%BB%84%E7%BB%87%E5%8A%A8%E5%91%98%E5%AE%A3%E8%A8%80/</url>
      <content type="html"><![CDATA[<p>The best education comes from inside. </p>
<a id="more"></a>
<h2 id="Orientation">Orientation</h2><p>这个ada内部组织airloft成立的目的， 是我希望大家能在一个更加紧密和熟悉的环境下分享和学习课外知识， 采用github托管的形式是因为它管理代码的高协作效率和peer review的便捷。</p>
<p>为了保证大家自学步骤的一致性和自由发挥的空间， 我决定采取的是任务发布形式。 <strong>每周会由我或我指定的负责人发布1-2篇的教程或任务</strong>， 任务内容从刚入门的git的使用与协作， 到之后的网站样式布局， 移动端，动效设计，后端编程都会涉及， 而教程则主要来源于<strong>所有有心人对某些创意点子的实现过程无论成败的记录(任何人都可以发布)</strong>。 我不会在任务完成度上给大家太多压力， 但是所有的任务都会指向最终AirLoft移动端APP及一系列配套web app的诞生， 能够深入互动参与每个方向讨论和实践并自己动手coding的人， 也会收获远比完成一个作品， 一个产品更多也更重要的东西， being insightful and clear of what you really want to do。</p>
<p>组织内部大致的方向：<br>我主导的 - AirLoft reactive native的开发， 并将Airloft网站端从angular1.4全部由react重写。<br>朱子宁主导的 - 爬虫scripts， 对于校园内部热门活动消息，教务信息和周边消息的收集和呈现。<br>Joyce主导的 - 走进多大的web app及html5微信移动页面。<br>Jerry主导的 - 基于GPS的餐饮外卖信息呈现和成交平台。</p>
<p>每个方向都由不同的coding侧重点， 每个人可自由参与任意方向， <strong>不强制任务进度， 但强制定期分享。</strong>就最终成果而言， 作品与作品之间可以相互配合和改善， 举个例子， 我会使用服务器端的爬虫来收集兴趣小组的讯息， 会在之后的宣传阶段用html5写移动端的宣传页面， 而基于GPS本身就是AirLoft的功能基础。</p>
<p>而需要再强调一遍的是， <strong>任何人， 在任何时候， 都可以提出新的开发方向和想法， 无论关乎技术还是设计还是美工还是用户体验。</strong>我会欢迎脑洞， 折腾些好玩却可能“无用”的东西， 比如哪一周主题或许就是自学Sketch来给AirLoft换个图标？或者就开个repo去参加HackerRank？能带你自己一直走下去的， 不是压力， 是兴趣。</p>
<p>很多人会好奇我自己的成长轨迹， 而如果真的往回看， 我是在2015年3月29号那天， 在交换时期参加的一次hacker meeting上， 第一次见识到html\css\js， 那天的主题是用meteor.js和mongo在5min内搭建一个todo应用， 嘉宾是伯克利大二的一个学生。到现在学CS大概有1年了吧， 从一开始写javascript各种运动框架开始， 到用ruby on rails自己前后端折腾了5， 6个中型blogging, social或者API网站， 到上学期用react重写各种网站及耗时一个月的SPA应用Airloft， 和现在react native。 我并不觉得自己已经有能力开始回顾自己过去的作品和荣誉， 只是最近挺多人问我“如果想做课外的项目应该学些什么的问题”， 我把我自己的轨迹拿出来给大家参考。永远没有一步登天的成就， 去凭着兴趣摸索， 因为好奇而坚持， 是我能给的最好的建议。</p>
<p>Orientation动员会的最后， 和大家分享两句话， 第一句来自自己的体会， 第二句来自ECE516 prof: Steve Mann：</p>
<ul>
<li>the best education comes from inside.</li>
<li>the best way to learn is to teach.</li>
</ul>
<h2 id="第一期任务">第一期任务</h2><p>学会git的简单使用, 直接在org内创建一个新的repo， 添加一个readme.md文件， 在里面写上你对两件事的想法， <strong>1、关于社区建造。 你认为应该怎样打造一个经久不衰的社区？举个现实生活中的例子？为什么？ 怎么设计回馈和奖励机制能够造就一个好的社区？哪些设计体现或者暗示了这些机制？2、你对哪个具体开发方向感兴趣？如果在这方面有充足的能力， 你可以怎样贡献到哪个任务里？做出怎样的作品？</strong>， 或者直接在github网页端操作创建新的repo和添加新文件， 或者更佳推荐的方式是本地代码备份然后关联到github的相关repo再push你的本地修改。</p>
<p>创建好之后， 做第三件事， <strong>3、至少在其他一个别人的repo里面的issue panel提出你对他这个想法的看法和补充</strong>。</p>
<blockquote>
<p>任务解释， 比如我喜欢看hackernews， 我对它的投票机制特别感兴趣， 我就拿这个社区的各种机制来举例， 又或者我喜欢B站， 去尝试分析B站哪些设计是特别有用户吸引力的， 记录下来， 新创repo分享。所有可能遇到的问题， 尝试记录下来自己解决， 找不到办法， open一个新的issue然后在微信群里讨论讨论。</p>
</blockquote>
<p>参考的链接， 我在第二期任务发布的时候公布。开始折腾起来吧。</p>
<h2 id="题外话">题外话</h2><ul>
<li>暑假就是要好好浪的。周末去骑trail， 打球， 聚餐什么的都要约起来啊。</li>
<li>我喜欢爱折腾的小伙伴。 有什么想说的话都可以私戳我。</li>
<li>认真对待梦想。 可能这个时代最一文不值和被轻易低估的， 就是梦想了。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于创业, 那些不能说的秘密]]></title>
      <url>http://chocoluffy.com/2016/04/25/%E5%85%B3%E4%BA%8E%E5%88%9B%E4%B8%9A%EF%BC%8C-%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E8%AF%B4%E7%9A%84%E7%A7%98%E5%AF%86/</url>
      <content type="html"><![CDATA[<p>每个人， 在每个阶段， 都会有个不容分说的理由。</p>
<a id="more"></a>
<p>趁着考完期末考的一段自由时间， 把之前一直积压着的两本书给读完了。</p>
<p>第一本是来自Ben Horowitz的创业维艰， 前半段描述了他管理Loudcloud到Opsware将一个濒临破产的公司带到最后以16亿美元的价格被惠普收购的传奇经历， 后半段则记录下了他对公司管理的各个细节的心得思考。巧合的时， 就在我阅读这本书的期间， 曾任多家上市公司董事， Ben的精神导师Bill Campbell逝世了。 他对Ben说的那句， “要和员工一起宣布这个消息”的告诫仿佛还历历在目， 通过Ben的描述， 看得出Campbell极其富有同理心(empathy)的领袖气质。 向Campbell致敬。</p>
<p> 第二本书是硅谷创业者陈天的随笔。 在一个充斥着来自CEO乃至风险投资人视角的创业回顾的环境下， 一个来自技术合伙人(CTO)的视角显得尤为可贵。 从最早的技术选型(为什么用Django)， 到带领其它技术人员的开发和维护(4台EC2)， 到技术过渡和商业选择， 陈天给了一份很详细和真挚的参考选项， 也让一个非商圈的学生， 慢慢了解到国内白手起家创业的一条非常有代表性的道路。感激陈天老师的分享。</p>
<p>曾经一直以为， 创业是一件离自己很远的事情。直到一个月前， 一个多伦多大学毕业的直系师兄找到我来聊聊创业的可能。 他希望我能够以技术合伙人的身份帮他做出一个类似airbnb的网站和移动端， 已经有另外两个商科毕业已经工作的学姐愿意参与市场营销和推广， 万事具备， 就差个程序员了。</p>
<p>也是第一次， 我感觉到创业， 其实也只是一种选择罢了， 突然想到一句微博上看到的话， “对有能力的人来说， 很多事情不是机会， 而是选择。”， 我当然不觉得我自己有能力和把握在这个阶段就合适技术合伙人的身份， 只是当我在一个旁观者的角度去看我身边的故事时， 好像创业， 也并没有倾家荡产， 孤注一掷般的惊天动地， 好像创业， 更像是创始人在生命某个时期赴的一场约， 选择了一条人迹罕至的路， 也由此义无反顾。</p>
<p>下面是我在阅读时记录下的文字， 从我的角度出发， 或摘录， 或直接是自己的感受， 像《金蔷薇》里那个收集着金色尘土的老人， 我把它们留在这里：</p>
<h2 id="The_hard_thing_about_hard_things">The hard thing about hard things</h2><ul>
<li>在团队有十几个人的时候， 我招了一个人力管理人员， 专门帮我们招聘最聪明的人从硅谷。</li>
<li>Ben从一个同事分享的mosaic浏览器， 发现这就是未来， 于是第二天就去面试mosaic公司。</li>
<li><strong>究竟为什么要上市？</strong> 在文中， 作者是在2000年互联网泡沫的时候， 发现私人资金已经没有出路的时候， 想到公开上市， 认为公开市场， 会有更多的人来给自己投资， 而不是一直以来私人投资者的钱。</li>
<li><strong>如何做资产重组？</strong> 在Ben即将破产的时候， 他问他自己， 如果要退出， 他会怎么做， 他说他会把opsware带出来卖给别人用， 因为这是他自己开发的， 他知道这个特别好用， 但是基于当时的情况， 这个软件被限制住， 没法和loudcloud分离开用， 于是他回去分配了一个精英小组去尝试从现有软件分离出来。</li>
<li>在紧急情况的时候， 有很有多人议论你， 他们有些人是因为同情， 因为关心， 也可能是想摧毁你。 也会有很多人想帮你， 想帮你摆脱困境， 给出各种各样的建议。 永远从数据和具体情况出发， 没有任何一个旁观者有这个耐心帮你理顺所有的商业策略， 如果你任凭那些根本不了解具体情况的人对公司指手画脚， 那公司就无药可救了。</li>
</ul>
<p><strong>很多时候， 我们都会评论那些伟大的CEO， 很自恋自大， narcisist， 专制。 然而他们只是没有听进去那些愚蠢的建议吧了， 又有谁比他们更清楚公司发展的每一个细节呢？</strong></p>
<ul>
<li><p>EPS真正想要的是tangram这家公司的软件， 而opsware在tangram比较低股价的时候收购了tangram， 让主要负责融洽opsware的EPS负责任frank特别高兴。也就是Ben他的要求， 弄清楚买方到底想要什么， 去提供他最想要的东西， 而不是一个劲地夸自己好。</p>
</li>
<li><p>同时非常重要的也是团队会议， Ben在两次会议中表现都超出了我的意料。第一次在计划从loudcloud中分离出opsware的时候， Ben将新公司的股票送给所有人， 同时允许有人决定退出。 “我不会送你出门， 但我汇帮你找份新的工作。要明确自己此刻所站的位置， 哪些人可以依靠。告诉大家你的决定。”<br>第二次， 在遇到bladelogic这个强劲的对手的时候， Ben再次开了一个全体的会议， 和大家说明白， 他需要大家， 在未来的6个月里面卯足了劲， “我要你们和你们最关心的人认真地谈一次话， 我们需要一次达成目标。”</p>
</li>
<li><p>研发出好产品是创新者的职责， 而不是客户。 <strong>客户只知道根据现在的产品体验来判断自己想要什么。</strong></p>
</li>
<li><p>在会议中添加一项， “我现在没有做什么” 的议程。而大家觉得的还没有做到的事， 都是一致的。那就是自动化。在公司慢慢做大的时候， 会有很多收购的声音， 其中， 你也会<strong>仅仅因为别人打算收购的意愿而得到股票的溢价</strong>， 要看清楚自己的价值。 同时， 也充分了解自己的直系下属他们的意愿。</p>
</li>
<li><p>而对于一个CEO能力的最好的考量， 是逆境不是顺境， 是专心致志的能力， 和在走投无路的时候选择最佳路线的能力。不是去如何不犯错误， 而是在犯错误之后如何去深刻理解那些你必须要做的事。</p>
</li>
<li><p>当你意识到一个CEO的职责就是为公司解决问题的时候， 你就知道， 有些没有用的空话可以省去了。</p>
</li>
<li><p><strong>在人类的所有交往中， 沟通量和信任程度成反比。</strong>现在很多的公司文化会阻碍坏消息的传播， 真相如果永远只能被戏谑地说出来， 那么等到采取行动的时候就晚了。建立一个奖励文化， 对找到问题症结和解决方案的人给予奖励。于此同时， 公司的任何决策必须当机立断， 比如像裁员这一类的重大决定， 如果不小心走漏风声， 当员工过来质问管理层的时候， 管理者就只有两种选择了， 要么表现出不知情， 要么就是撒谎， 而这其中任何的一个行为都会破坏公司文化。</p>
</li>
<li><p>对待裁员。 裁员对公司的最大伤害就是士气。而士气低下的主要表现症状就是怀疑， 所以越是困难的时候， 就越要坦诚相待你的员工。同时， 这是一个非常严重和严肃的时刻， 需要一名直接亲属上司去温和地解决这个事情， 你只要记住， 你的员工可能并无法记得他在这里工作的每一天， 但是他一定会记住他被辞掉的那一天。 <strong>永远记得， 聪明是一种天赋， 而善良是一种选择。</strong> 但是有一点也很重要， <strong>话是说给留下来的人听的</strong>， 你怎么对待那些被辞去的员工， 在困难时候， 就会是留下来的员工的一次自我映照。</p>
</li>
<li><p>一定要明晰什么时候笨办法最有用， 不是欺骗自己说， “产品是完美的， 是没有问题的， 问题出在销售人员， 问题出在用户的三分钟热度。”， 不， 问题是， 产品不够好。</p>
</li>
<li><p>不让这个公司最精英的人才去参与最棘手的问题， 完全就是浪费。<strong>一个人， 无论多出色， 都解决不了他不了解的问题。也就像开源社区所倡导的一样， 只有有足够多的眼镜， 就可以让所有问题浮出水面。</strong></p>
</li>
<li><p>很多时候， 你会吩咐很多指令给你的下属， 但他们并不一定会严格执行， 甚至不会执行这些要求。 而这种现象的背后原因是， <strong>你只告诉了他们应该怎么做， 他们却不知道为什么要这么做。</strong>一个好的工作环境就是， 每个人早上一睁开眼睛就知道自己所做的工作高效有用。管理层需要和每个员工有一对一的会面。当然就有人问了， 好的工作环境和坏的工作环境有什么区别， 是的， 在一切顺利的时候， 没有区别， 你的亮眼成绩会遮住所有可能质疑声的嘴， 问题不是没有， 而是让解决问题的人自我怀疑了。 但是一旦在事情不顺利的时候， 好与坏就是生与死的差别。</p>
</li>
<li><p><strong>如何对生产力进行直观的测量？</strong></p>
</li>
<li><p>好的产品经理会将一些重要问题以书面形式纪录下来， 竞争中的良策， 艰难的架构选择， 艰难的产品选择。而差的产品经理， 只会以口头的方式表达自己的意见。</p>
</li>
<li><p>大公司的主管都是应答式的, 当有事情要实例， 接受到命令之后， 才会去执行。而小公司的主管， 创业公司的管理者， 你不自己主动承担起很多的责任这个公司就倒了啊。一种很危险的情况就是， 在创业公司艰难的时期， 你雇用了一个认股数还不小的高薪高管， 他好像并没有干什么事， 却能够占到一定比例的利润。这就是并不适应节奏的管理层， 对创业公司的奋斗员工有很大的打击。</p>
</li>
<li><p><strong>关于招聘</strong>。 永远要提醒自己， 我们是找谁拥有解决问题的能力， 而不是谁看上去最适合。每个人都会有或多或少的缺点， 他可能不善于表达， 他可能有点自大， 有点脾气躁， 这些特质都不应该迷惑你真正找寻的目标。 尤其是在国内这个鱼龙混杂的招聘市场， 明明优秀的人就已经是凤毛麟角了， 如果你还只关注缺点， 只希望站在高处评论一番自我麻醉的话， 这对公司就太可惜了。<strong>写下你认为检验人才最好的几个问题， 形成面试的规范。</strong></p>
</li>
<li><p>一个好的管理者思考问题从是会有两个角度， 一个是我想怎么做， 另一个是员工会怎么想。</p>
</li>
<li><p>办公室政治</p>
<ul>
<li>如果你的员工给你提加薪的要求？ 拒绝， 如果你接受了这个要求， 其他员工会认为你加薪是因为你提出了这个要求而不是因为你出色的业绩。 这个会让其他人更加跃跃欲试。坏处二， 那些办公室里老实沉默， 或者对这种政治手段不敏感的人， 是不是就错过了加薪的机会呢？其中一个避免的方法就是<strong>保证员工收入和公司收入之间的一致性</strong>。</li>
<li>如果你的员工给你提希望扩大权力范围的要求？一个绝对不能触碰的底线是， 你给他一个口头承诺， 给了小道消息一次机会。 记住， 在公司的决策方案是， <strong>决策即出， 立即执行， 不要在交谈的时候流露出任何口头承诺的倾向</strong>。</li>
</ul>
</li>
</ul>
<ul>
<li><p>不要因为你在业务上缺乏经验就降低对他们工作的要求。很多年经轻轻的CEO， 会因为在公司创立之初媒体发布的几篇正面报道而喜出望外。这个标准太低了。</p>
</li>
<li><p>管理一家创业公司就像驾驶着一辆高速行驶的汽车， 当你以一个高速过弯的时候， 千万别看墙， 如果你看着墙， 你就直接撞上去， 盯着路， 你就安然无恙。</p>
</li>
<li><p>Ben他们建立一个风投公司的初衷， 就是发现了技术性创始人CEO和职业CEO的区别， 那些伟大的技术型驱动的公司都是由创始人经营的， 然而技术型创始人在管理上， 人脉上和营销宣传上有很大的不足。</p>
</li>
</ul>
<blockquote>
<p>后记:对于《途客圈》一书的总结回顾将会分开在另外一篇博文中， 主要探讨工具性和社交性产品的比较和更多创始人必须注意的具体股权结构， 敬请期待。</p>
<p>Edit:《途客圈》一书的阅读手记已完成，👉<a href="http://chocoluffy.com/2016/05/13/%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%BC%93%E5%A3%B0-%E8%AF%BB%E3%80%8A%E9%80%94%E5%AE%A2%E5%9C%88%E3%80%8B%E6%9C%89%E6%84%9F/">另一种鼓声-读《途客圈》有感</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[创意视频分屏 - HTML5 & JS]]></title>
      <url>http://chocoluffy.com/2016/04/23/%E5%88%9B%E6%84%8F%E8%A7%86%E9%A2%91%E5%88%86%E5%B1%8F-HTML5-JS/</url>
      <content type="html"><![CDATA[<p>和朋友聊天时无意间发现的一个创意视频分屏的想法， 来自<a href="http://www.beoplay.com/products/beoplayh7?_ga=1.127614725.969767543.1461077943#at-a-glance" target="_blank" rel="noopener">beoplay</a>这个高端耳机的宣传页面， 在自己实现的过程中， 也发现了视频自适应居中的这个设计细节， 自己也捣鼓了出来， 话说在之后产品的宣传主页视频可以一试的， 从两个视角去诠释同一个故事， 就是对这样有心思的设计细节没有任何抵抗力呢。</p>
<a id="more"></a>
<h2 id="目标">目标</h2><p>仿造beoplay这款耳机<a href="http://www.beoplay.com/products/beoplayh7?_ga=1.127614725.969767543.1461077943#video" target="_blank" rel="noopener">主页的宣传视频</a>来实现一个类似的视频分屏的效果。</p>
<h2 id="版本1-0（不加视频自适应居中）">版本1.0（不加视频自适应居中）</h2><p>right video是静止的不动的， 同时位于最底层。 目前所有的伸缩都是在控制left video， 同时由于我们设置了left video的<code>z-index</code>为3， 那么左边的视频会覆盖在右边的视频上。接下来的目标就很明确了， 我们需要追踪鼠标在整个container里面的位置(我们会用占宽度的百分比来表示)， 然后， 通过改变左边视频的宽度， 同时也就把位于下面的右边视频暴露出来了， 来达到切换的效果。</p>
<p>理解到这一步之后，目标就是<strong>如何改变视频宽度</strong>了。</p>
<h3 id="如何改变视频宽度">如何改变视频宽度</h3><p>这里其实隐藏着一个陷阱， 就是因为我们不可以直接改变<strong>视频本身的宽度</strong>，因为视频的高宽比在拍摄的时候就决定了， 我们如果只拉长视频而不同时提高高度的话， 就会使得在纵轴上部分内容被遮盖到， 大致意思如图：</p>
<p>而这并不是我们想要的效果， 我们希望， 视频可以维持在同一个大小，而改变的只是<strong>视窗的横向移动</strong>，<br>这一步我用到了一个trick， 就是<code>overflow: hidden;</code>， 我们在左边的视频外面包住了一层<code>div</code>， 因为我们控制的就是左边的视频， 然后我们来改变这个“wrapper”的宽度（同时保证保证里面的left video的宽度占比仍然占最外面container的100%）， 来改变我们的视窗， 所以这个wrapper在网页上所包住的部分， 加上了<code>overflow: hidden;</code>遮去了超出部分后， 显示的就是左边的视频了。</p>
<p>比如一开始， 我们希望两个视频都各占一半， 那么左边的视窗一开始就会是占比原container的宽度的50%， 而原视频本身的宽度应该不变， 即container的宽度的100%， 所以我们需要给left video赋上200%的宽度， 理由是这个属性是对其直接父级的div起作用的。</p>
<h3 id="引入视窗">引入视窗</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* clipper 即左侧视频的视窗 */</span></span><br><span class="line"><span class="selector-id">#clipper</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 该属性作用于左侧视频  */</span></span><br><span class="line"><span class="selector-id">#clipper</span> <span class="selector-tag">video</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">200%</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>之后的事情就清楚了， 我们只需要改变<strong>左边视窗的宽度， 并同时保证视频本身相对原容器的宽度不变</strong>。写的js代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rect = videoContainer.getBoundingClientRect(),</span><br><span class="line">offset = e.pageX - videoContainer.offsetLeft,</span><br><span class="line">position = ((e.pageX - videoContainer.offsetLeft) / videoContainer.offsetWidth) * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (position &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">	videoClipper.style.width = position+<span class="string">"%"</span>;</span><br><span class="line">	leftVideo.style.width = ((<span class="number">100</span>/position)*<span class="number">100</span>)+<span class="string">"%"</span>;</span><br><span class="line">	leftVideo.style.zIndex = <span class="number">3</span>;</span><br><span class="line">｝</span><br></pre></td></tr></table></figure>
<blockquote>
<p>简单地说， 只需保证<code>videoClipper.style.width * leftVideo.style.width = 100%</code>即可。</p>
</blockquote>
<p>那最后一个改变<code>z-index</code>的目的， 就是确保左边的视频一直叠加在右边的视频之上。</p>
<h2 id="版本2-0（增加了自适应居中）">版本2.0（增加了自适应居中）</h2><p>初衷： 因为从拍摄的角度， 大部分的时间， 我们都会把拍摄的主体放在视频的中间位置， 而如果我们只是简单地移动视窗而不改变视窗的主角位置的话， 我们在鼠标移动的时候， 就只能看到边边角的视频内容了， 这违反设计直觉。</p>
<p>因此我们希望在移动视窗的同时， <strong>同时移动视频本身的位置来弥补视窗的偏差</strong>。相应的js代码是：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">offset = e.pageX - videoContainer.offsetLeft,</span><br><span class="line">offsetRight = videoContainer.offsetWidth - offset,</span><br><span class="line"></span><br><span class="line"><span class="comment">// for adaptive resizing:</span></span><br><span class="line">rightVideo.style.webkitTransform = <span class="string">"translate("</span> + offset / <span class="number">2</span> + <span class="string">"px, 0)"</span>;</span><br><span class="line">leftVideo.style.webkitTransform = <span class="string">"translate(-"</span> + offsetRight / <span class="number">2</span> + <span class="string">"px, 0)"</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>画外音： 使用<code>transform</code>来改变DOM元素的位置相比直接改写他们的”定位属性“有很多好处， 其中最突出的就是， transform使用的是GPU， 而那些<code>top\left</code>等的定位元素使用的是CPU， 我们希望充分利用GPU和它提供的硬件加速， 同时<code>transform</code>也不会触发网页的repaint， 从而在渲染上更加的smooth和fast。</p>
</blockquote>
<p>那这个地方，<code>offset</code>就是鼠标在container里面距离左边边框的距离， 那么我们同时根据这个距离， 让左边的视频在视窗移动时， <strong>往相反的方向以一半的速度移动来弥补视窗偏差</strong>。使得可以在视窗移动的时候， 始终保持视频本身拍摄的主体视角也处于该视窗的主体视角! 原理可以参考这个图：</p>
<p>那么也就大功告成啦!</p>
<h2 id="总结">总结</h2><p>HTML5对media文件更多功能上的支持使得我们可以更好的操作media文件， 包括视频的开始暂停， 以及各种音量的调节， 而这个程序实例， 是一个很好的对相关API的使用的一个示范和一个小小的创意细节。这个项目， 也是饭后和朋友聊天聊出来的实现方案，也希望看到更多的创意脑洞和美的设计!</p>
<p>这个是这个项目的<a href="https://github.com/chocoluffy/screen-split-video" target="_blank" rel="noopener">github repo</a>, 这个是项目的展示<a href="http://chocoluffy.com/screen-split-video/">demo</a> 欢迎评论和pull request~</p>
<h2 id="Q&amp;A">Q&amp;A</h2><p>后续的一些疑问和解答：(基于V2ex和微博的评论)</p>
<p><strong>跟<a href="http://www.mi.com/hezi3s/" target="_blank" rel="noopener">这个链接</a>中间的 2K－4K 对比差不多一个意思？</strong><br>A: 哈哈在分屏效果上是类似的， 不过那个对图片的处理就会简单很多啦， 感觉就是在某个位置以左叠加一个高斯模糊的滤镜就可以了~ 相比之下， 对视频的处理还要考虑到视窗和视频本身的移动呢! 不过谢谢分享啦!</p>
<p><strong>多个声音怎么办？两个声音会重叠嘛？</strong><br>A: 我做了音轨的渐变处理， 也就是根据视频的相对大小来相对改变音量， 也就是说， 当某个视频占主体位置的时候， 另一个视频的声音是会渐弱的， 这样可能使用体验更好吧! 在博文最后有 demo 的网址， 你可以试试， 我 host 在了 github pages 上， 对了， 这个 demo 只在桌面端 work ， 在手机端还是实现不了这个效果呢， 有点可惜啦， 如果有改进的建议的话， 希望能提出来啦~</p>
<p><strong>快速拉扯的时候边缘缝隙比较大?</strong><br>A: 啊对的！我调试的时候也发现是有， 原因也很明显， 我只对整个 container 绑定了 mousemove 事件， 而 html 页面其他元素是不会监听 mousemove 的， 因此当鼠标快速移出 container 的时候， 就会发现边缘缝隙较大了， 我现在就改改 code ， 加个 condition ， 如果鼠标在 container 之外， 就把视频宽度订死为全屏~谢谢啦!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MEAN全栈开发[第三期-Mongo数据库搭建REST API]]]></title>
      <url>http://chocoluffy.com/2016/03/22/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%89%E6%9C%9F-Mongo%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BAREST-API/</url>
      <content type="html"><![CDATA[<p>AirLoft的原型。 第三期， 基于mongodb的mongoose来搭建RESTful API， 主要包括了关于各类涉及到对象的GET, POST, PUT DELETE方法的实现。 在postman上不断的模拟， 也最终搭好一个稳定且flexible的后端API处理， 剩下的就是将数据库和这个Express App的controller结合， 并在前端上灵活的应用啦！如果说前端就像一个人的妆容， 那么数据库以及API处理就是他的谈吐和内涵， 这个应用也有了scaling的能力， 加油!</p>
<a id="more"></a>
<p><img src="http://ww1.sinaimg.cn/large/c5ee78b5jw1f26lk141v7j21kw0tjn61.jpg" alt="screenshot"></p>
<h2 id="前言">前言</h2><p>In MVC architecture, we need to have views without content or data. An common way to implement MVC architecture is to <strong>first build up a frontend clickable prototype, then extract the content from the view back to controller(concerned with data structure), then back to model.</strong> And now we are in the second step, we try to put variable in jade file in place of content, and put the content as variable into the controller.</p>
<h2 id="Mongoose">Mongoose</h2><p>First set up a connection URI like: <code>var dbURI = &#39;mongodb://localhost/airloft&#39;;</code>, username, password and port number is optional for localhost.</p>
<p>A stupid mistake!! Need to open the <code>mongod</code> before you tried to connect to it. One thing to notice is that Mongoose connection doesn’t automatically close when the application restarts or stops. In order to do that whenever we restart the <code>nodemon</code>, we will need to listen for nodejs event. Nodemon uses <code>SIGUSR2</code>, application termination uses <code>SIGINT</code>, Heroku uses <code>SIGTERM</code>, like:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> graceShutDown = <span class="function"><span class="keyword">function</span>(<span class="params">msg, callback</span>)</span>&#123;</span><br><span class="line">	mongoose.connection.close(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">'Mongoose is closed through '</span> + msg);</span><br><span class="line">		callback();</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">process.once(<span class="string">'SIGUSR2'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	graceShutDown(<span class="string">'nodemon restart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		process.kill(process.pid, <span class="string">'SIGUSR2'</span>);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>use <code>process.once</code> to overwrite the default <code>SIGUSR2</code> function, but then use <code>kill</code> to resend the <code>SIGUSR2</code> signal again, but this time we hook up a msg display functionality. Especially the place, we use <code>process.once()</code> instead of <code>process.on()</code> in the <code>SIGUSR2</code> case, since nodejs will listen for the same event, and if we use <code>on</code>, then it will forms a infinite loop. Note that <code>process.kill()</code> serves the functionality of sending the signal.</p>
<blockquote>
<p>Recap: Basically four step as discussed here, first define a connection URI string, then second setup the db connection; third monitor the mongoose connection events like <code>connected</code> and <code>disconnected</code>, and fourth monitor the node process event in order to close the db connection when we restart.</p>
</blockquote>
<p>From view to controller, finally to store in db is what we have gone through so far. It works pretty well, since the moment we move the data to the controller, we gradually solidy the data structure we want to use!!</p>
<p>Some technical names: “path” is like attribute names in relational database while “property object” is like the values but like other JS object, can be nested. Also, we can add data validation inside the schema, two advantages: </p>
<ul>
<li>save the roundtrip time to datebase</li>
<li>save the code inside the application for validation.</li>
</ul>
<p>Adding indexes can make database search more efficiently, jist like adding index to the files you want to search in your drawer. In order to add a GeoJSON path into your application, you only need to do this: <code>coords: {type: [Number], index: &#39;2dsphere&#39;}</code>; using <code>2dsphere</code> allows mongodb to be able to calculate the geolocation fast, thus <strong>it is helpful to build a location-based application.</strong></p>
<p>Subdocument is helpful when handling nested data structure, one thing to note, when creating attributes like <code>timestamp</code>, we use data type called <code>Date</code>, like:   </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reviewSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">	rating: &#123;<span class="attr">type</span>: <span class="built_in">Number</span>, <span class="string">"default"</span>: <span class="number">0</span>, <span class="attr">min</span>: <span class="number">0</span>, <span class="attr">max</span>: <span class="number">5</span>&#125;,</span><br><span class="line">	author: <span class="built_in">String</span>,</span><br><span class="line">	createdOn: &#123;<span class="attr">type</span>: <span class="built_in">Date</span>, <span class="string">"default"</span>: <span class="built_in">Date</span>.now&#125;,</span><br><span class="line">	text: <span class="built_in">String</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f1wrkszhcej218w0u6wib.jpg" alt="mongo"> 这张图讲得很清楚， schema是application-side的东西， 每一个model是的实例instance通过schema可以map到database里面的每一个document, 1:1的对应关系。</p>
<p>While typing in <code>mongod</code> will let you start the mongodatabase, using <code>mongo</code> will start tht shell and let you connect to the test database. And some useful commands in mongo go here:</p>
<ul>
<li><code>show dbs</code> to show all existing database so far.</li>
<li><code>use local</code> to switch to another database. And if that db doesn’t exist yet, mongo will create it for us.</li>
<li><code>show collections</code></li>
<li><code>db.startup_log.find()</code> returns all the content from collection, uesful when we check whether the data has been saved.</li>
<li><code>db.missions.save({...})</code> will savev a new document into collection.</li>
<li><code>db.inventory.remove({})</code> will remove all documents in collection <code>inventory</code>.</li>
<li><code>db.missions.update()</code> will query a document and update its content. The first argument is query string, and second argument use <code>$push</code> to insert subdocuments.</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &gt; db.locations.update(&#123; </span><br><span class="line">   name: <span class="string">'Starcups'</span></span><br><span class="line">  &#125;, &#123; </span><br><span class="line">    $push: &#123;</span><br><span class="line">      reviews: &#123;</span><br><span class="line">        author: <span class="string">'Simon Holmes'</span>,</span><br><span class="line">        id: ObjectId(),</span><br><span class="line">        rating: <span class="number">5</span>,</span><br><span class="line">        timestamp: <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"Jul 16, 2013"</span>),</span><br><span class="line">        reviewText: <span class="string">"What a great place. I can't say enough good things about it."</span></span><br><span class="line">      &#125; </span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>So far, we have insert a fake data document in our local computer, but in real life, <strong>we want database to be externally accessible.</strong> use <code>heroku addons:add mongolab</code> to register a db URI at mongolab as a heroku addons.<strong> And use <code>heroku addons:open mongolab</code> to go the website interface to check database details. </strong>In order to get the uri of the database, type <code>heroku config:get MONGOLAB_URI</code>. </p>
<blockquote>
<p>Note that in real practice, I have to fixed a typo bug from my previous data stored in mongolab, I have to first go to the mongo shell to <code>remove({})</code> and <code>insert({...})</code> again, then do the <code>mongodump</code> and <code>mongorestore</code> again to dump the data into the temp folder at <code>~/tmp</code> and push the data to live database. And make sure to press the “Delete all collection” button before we did <code>mongorestore</code> to avoid same key collision.</p>
</blockquote>
<p>After receive URI, we will first dump our localhost data into a folder in local computer, then restore the data to the live database. use <code>mkdir -p ~/tmp/mongodump</code> will create a folder to hold up the dumped data. Note that use <code>-p</code> option will create the non-existed folders on the path like “tmp”.</p>
<ul>
<li>use <code>mongodump -h localhost:27017 -d airloft -o ~/tmp/mongodump</code> to export airloft.missions data into BSON.</li>
<li>use <code>mongorestore -h &lt;host and port number&gt; -d &lt;live database name&gt; -u &lt;username(same as database name)&gt; -p &lt;password&gt; &lt;path to dump data folder&gt;</code> to push the data up to the mongolab live database.</li>
<li>Last step(testing), we can use <code>mongo hostname:port/database_name -u username -p password</code> to change the <code>mongo</code> to interact with an external database. Note that in the last two steps, database name is the same as username. Then, we can use commands introduced before to interact with live database. In summery, we have one source code and can be used to manipulate databases at two locations, one in local computer, a test database, and one in Heroku, a live database.</li>
</ul>
<p>Let application use right database. use <code>heroku config:set NODE_ENV=production</code> to set the environment variable <code>NODE_ENV</code> to be production for Heroku. <strong>Environment variable will affect the way the core process runs.</strong> When we tried to use <code>nodemon</code> to start application, one way to make sure what environemnt we are running in is to prepend a ENV variable before nodemon like <code>NODE_ENV=production nodemon</code>, and corresponds to this change, we also change the code in db.js(with a if-else block) to set the dbURI aligned with environment. In application, we can access to such variable by <code>process.env.NODE_ENV</code>, but since we post it in public repo, we don’t want our credentials to be public. Instead, we use environment variables from Heroku configuration.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dbURI = <span class="string">'mongodb://localhost/airloft'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(process.env.NODE_ENV === <span class="string">'production'</span>)&#123;</span><br><span class="line">	dbURI = process.env.MONGOLAB_URI;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mongoose.connect(dbURI);</span><br></pre></td></tr></table></figure>
<h2 id="REST_APIs">REST APIs</h2><p>REST is an architecture style, it’s stateless, meaning it will not recognize users or history. Having such program interface will allow us to talk to our database through HTTP and perform CRUD operations then send back a HTTP response. An way to construct URLs is to think about the collections in our database. In ‘airloft.missions’ collection, we may want to allow operations like:</p>
<ul>
<li><code>/missions</code> to create an new mission.</li>
<li><code>/missions</code> to read all missions.</li>
<li><code>/missions/&lt;index&gt;</code> to read a specific mission.</li>
<li><code>/missions/&lt;index&gt;</code> to update a specific mission. And so on so forth.</li>
</ul>
<p>As we can see the urls are same for several operations, and we will use different request methods to tell the server what action to take.</p>
<ul>
<li><code>POST</code> to create new data in database(from submitting form).</li>
<li><code>GET</code> to read data.</li>
<li><code>PUT</code> to update a document.</li>
<li><code>DELETE</code> to delete a document.</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// missions</span></span><br><span class="line">router.get(<span class="string">'/missions'</span>, ctrlMissions.missionsListByDistance);</span><br><span class="line">router.post(<span class="string">'/missions'</span>, ctrlMissions.missionsCreate);</span><br><span class="line">router.get(<span class="string">'/missions/:missionid'</span>, ctrlMissions.missionsReadOne);</span><br><span class="line">router.put(<span class="string">'/missions/:missionid'</span>, ctrlMissions.missionsUpdateOne);</span><br><span class="line">router.delete(<span class="string">'/missions/:missionid'</span>, ctrlMissions.missionsDeleteOne);</span><br></pre></td></tr></table></figure>
<p>Then in the corresponding controller files, we define these functions and fill them with the simplest response to display when received such request.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sendJsonRes = <span class="function"><span class="keyword">function</span>(<span class="params">res, status, content</span>)</span>&#123;</span><br><span class="line">	res.status(status);</span><br><span class="line">	res.json(content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.missionsListByDistance = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	sendJsonRes(res, <span class="number">200</span>, &#123;<span class="string">"status"</span>: <span class="string">"success"</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="“GET”_method_implementation">“GET” method implementation</h2><p>Some useful queries in Mongoose:</p>
<ul>
<li><code>find</code> general search based on query object.</li>
<li><code>findById</code> look for specific ID.</li>
<li><code>findOne</code> get the first match document.</li>
<li><code>geoNear</code> find geo-closef query.</li>
<li><code>geoSearch</code> add query functionality to geoNear operation.</li>
</ul>
<p>After using queries, we use <code>exec</code> method execute the query and passes a callback function that will run when the operation is complete. The callback function should accept two parameters, an error object and the instance of found document.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sendJsonRes = <span class="function"><span class="keyword">function</span>(<span class="params">res, status, content</span>)</span>&#123;</span><br><span class="line">	res.status(status);</span><br><span class="line">	res.json(content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.missionsReadOne = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	Missions</span><br><span class="line">		.findById(req.params.missionid)</span><br><span class="line">		.exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">200</span>, mission);</span><br><span class="line">		&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Then, we want to add error checking like this: note that we can also utilize <code>console.log</code> to print out some useful information about the data in terminal since we use <code>nodemon</code>. </p>
<p>In real practice, we may not always want to retrive a whole document from mongodb, we may only just need some specific data. Thus, we can limit the data being passed around to improve speed, using <code>select</code> to retriece only “name” and “reviews” entry from a document in collection. Like this:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports.reviewsReadOne = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(req.params &amp;&amp; req.params.missionid &amp;&amp; req.params.reviewid)&#123;</span><br><span class="line">		Missions</span><br><span class="line">			.findById(req.params.missionid)</span><br><span class="line">			.select(<span class="string">'name reviews'</span>)</span><br><span class="line">			.exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(!mission)&#123;</span><br><span class="line">					sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">						<span class="string">"message"</span>: <span class="string">"missionid not found"</span></span><br><span class="line">					&#125;)</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span> <span class="keyword">if</span>(err)&#123;</span><br><span class="line">					sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">var</span> response, review;</span><br><span class="line">				review = mission.reviews.id(req.params.reviewid);</span><br><span class="line">				<span class="keyword">if</span>(!review)&#123;</span><br><span class="line">					sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">						<span class="string">"message"</span>: <span class="string">"reviewid not found!"</span></span><br><span class="line">					&#125;)</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				response = &#123;</span><br><span class="line">					mission: &#123;</span><br><span class="line">						name: mission.name,</span><br><span class="line">						id: req.params.missionid</span><br><span class="line">					&#125;,</span><br><span class="line">					reviews: review</span><br><span class="line">				&#125;;</span><br><span class="line">				sendJsonRes(res, <span class="number">200</span>, response);</span><br><span class="line">			&#125;);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">			<span class="string">"message"</span>: <span class="string">"No missionid or reviewid in request"</span></span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Apart from the error checking in the above code, we can use <code>id</code> to query subdocument the <code>_id</code> entry. <strong>note that in the raw data, I mistakenly put the entry name to be <code>id</code> instead of <code>_id</code>, which causes me to re-insert the data again to let the <code>id()</code> work for subdocument.</strong></p>
<p>These above example codes shows us how to simulate “GET” request for mission and reviews in “missions” collection in live mongolab database. When it comes to geo-query, we need to query the longtitude and latitude in <code>req.query</code> with some urls like this: <code>api/missions?lng=-12.34343434&amp;lat=51.22424224</code>.</p>
<p>Besides, the way writing the js code is quite important using closure!! I use an example that will be reused in later geo-distance calculation to illustrate how to <strong>only expost functions for later use with closure to wrap the inner variables from outer collisions.</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> theEarth = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> earthRadius = <span class="number">6371</span>;</span><br><span class="line">  <span class="keyword">var</span> getDistanceFromRads = <span class="function"><span class="keyword">function</span>(<span class="params">rads</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseFloat</span>(earthRadius * rads);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> getRadsFromDistance = <span class="function"><span class="keyword">function</span>(<span class="params">distance</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseFloat</span>(distance/getRadsFromDistance);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getDistanceFromRads: getDistanceFromRads,</span><br><span class="line">    getRadsFromDistance: getRadsFromDistance</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
<p>Then the complete geo searching functions are:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for main page listing by distance.</span></span><br><span class="line"><span class="keyword">var</span> resToList = <span class="function"><span class="keyword">function</span>(<span class="params">results</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> lst = [];</span><br><span class="line">	results.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">doc</span>)</span>&#123;</span><br><span class="line">		lst.push(&#123;</span><br><span class="line">				distance: theEarth.getDistanceFromRads(doc.dis),</span><br><span class="line">				name: doc.obj.name,</span><br><span class="line">				author: doc.obj.author,</span><br><span class="line">				rating: doc.obj.rating,</span><br><span class="line">				tags: doc.obj.tag,</span><br><span class="line">				_id: doc.obj._id</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">return</span> lst;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.missionsListByDistance = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(req.query.lng &amp;&amp; req.query.lat)&#123;</span><br><span class="line">		<span class="keyword">var</span> lng = <span class="built_in">parseFloat</span>(req.query.lng);</span><br><span class="line">		<span class="keyword">var</span> lat = <span class="built_in">parseFloat</span>(req.query.lat);</span><br><span class="line">		<span class="keyword">var</span> point = &#123;</span><br><span class="line">			type: <span class="string">"Point"</span>,</span><br><span class="line">			coordinates: [lng, lat]</span><br><span class="line">		&#125;;</span><br><span class="line">		<span class="keyword">var</span> geoOptions = &#123;</span><br><span class="line">			spherical: <span class="literal">true</span>,</span><br><span class="line">			maxDistance: theEarth.getRadsFromDistance(<span class="built_in">parseInt</span>(req.query.maxdistance||<span class="number">2000</span>)),</span><br><span class="line">			num: <span class="number">10</span>,</span><br><span class="line">		&#125;;</span><br><span class="line">		<span class="comment">// console.log(geoOptions.maxDistance);</span></span><br><span class="line">		Missions.geoNear(point, geoOptions, <span class="function"><span class="keyword">function</span>(<span class="params">err, results, stats</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(err)&#123;</span><br><span class="line">				sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">				<span class="keyword">return</span> ;</span><br><span class="line">			&#125;</span><br><span class="line">			sendJsonRes(res, <span class="number">200</span>, resToList(results));</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">			<span class="string">"message"</span>: <span class="string">"Found no longtitue or lattitude in query string."</span></span><br><span class="line">		&#125;);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>So far, we complete all three “GET” methods for this website, namely, [1]ListByDistance for the main page “/api/missions”; [2]get a single mission information for each mission document in db “/api/missions/<_id>“; [3]get a single review information for reviews from each mission document as subdocument “/api/missions/<_id>/reviews/<_id>“. And next, we will look at other methods like “POST”, “PUT” and “DELETE”.</_id></_id></_id></p>
</blockquote>
<h2 id="“POST”_method_implementation">“POST” method implementation</h2><p>In this project, since we only involve missions and reviews, we need to implement new mission post and new review post from form data, which is stored at <code>req.body.&lt;attr&gt;</code>.<br>The way we create an document is using <code>create()</code> directly :</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports.missionsCreate = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	Missions.create(&#123;</span><br><span class="line">		name: req.body.name,</span><br><span class="line">		rating: req.body.rating,</span><br><span class="line">		tag: req.body.tags.split(<span class="string">","</span>),</span><br><span class="line">		author: req.body.author,</span><br><span class="line">		coords: [<span class="built_in">parseFloat</span>(req.body.lng), <span class="built_in">parseFloat</span>(req.body.lat)],</span><br><span class="line">		timepanel: &#123;</span><br><span class="line">			title: req.body.timetitle,</span><br><span class="line">			timeslots: req.body.timeslots.split(<span class="string">","</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(err)&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">201</span>, mission);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>For subdocuments or facing with a list instead of an array, we probably just retrieve that list and <code>push</code> a new item into the list. Then we just need to <code>&lt;instance&gt;.save()</code> to save the item like this:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> addReiview = <span class="function"><span class="keyword">function</span>(<span class="params">req, res, mission</span>)</span>&#123;</span><br><span class="line">	mission.reviews.push(&#123;</span><br><span class="line">		rating: req.body.rating,</span><br><span class="line">		author: req.body.author,</span><br><span class="line">		text: req.body.text</span><br><span class="line">	&#125;)</span><br><span class="line">	mission.save(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> thisReview;</span><br><span class="line">		<span class="keyword">if</span>(err)&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			updateAveRating(mission._id);</span><br><span class="line">			thisReview = mission.reviews[mission.reviews.length - <span class="number">1</span>];</span><br><span class="line">			sendJsonRes(res, <span class="number">201</span>, thisReview);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="“PUT”_method_implementation">“PUT” method implementation</h2><p>“PUT” method is similar to “POST” in a way that they both use form data stored in <code>req.body</code>, while one is create from nothing and add to the database, the other is to find an existing one and update part of the information. </p>
<ul>
<li>One hack I thought about is to use <code>Object.keys(obj)</code> to obtain the keys from a js object, then using <code>$set</code> in <code>mongo.update()</code> to only update the value in body? <strong>Ideas:</strong> this idea only works when all field are requiring same manipulation from body data. To be more specifically, some data are needed to be processed to feed for later use, such as we add <code>.split(&quot;,&quot;);</code> for tags data, and some fields like “coords” is an array. Thus, if we want to apply more operations on some data, we cannot just treat them in the same way in a for loop</li>
<li>Or, utilize the the way mongoose model treat model parameters, we can do <code>var newReview = new Review(req.body)</code> to create an instance of “Review” model, then use this to replace the old one?</li>
</ul>
<blockquote>
<p>One important thing to notice is that when we save, we save <strong>parent document!</strong> In our case, we did <code>mission.save(function(err, mission))</code> instead of <code>review.save(...)</code>!</p>
</blockquote>
<h2 id="“DELETE”_method_implementation">“DELETE” method implementation</h2><p>“DELETE” method is easier, we only need to find that document by “missionid”, then do <code>Missions.remove(function(err, mission))</code>. For the subdocument, we simply find that subdocument and call remove at the end. The prototype is like:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A working prototype without error checking.</span></span><br><span class="line"><span class="built_in">module</span>.exports.reviewsDeleteOne = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	Missions</span><br><span class="line">		.findById(req.params.missionid)</span><br><span class="line">		.select(<span class="string">"reviews"</span>)</span><br><span class="line">		.exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(err)&#123;</span><br><span class="line">				sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">					<span class="string">"message"</span>: <span class="string">"Found no match"</span></span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">			mission.reviews.id(req.params.reviewid).remove();</span><br><span class="line">			mission.save(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123; <span class="comment">// save parent document.</span></span><br><span class="line">				updateAveRating(mission._id);</span><br><span class="line">				sendJsonRes(res, <span class="number">204</span>, <span class="literal">null</span>);</span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Summery">Summery</h2><ul>
<li><p>How to insert an common model instance into mongodb? I mean, since we can’t generate the “_id” by ourselves, then how comes we insert such object into <code>mongo</code>? <strong>Answer:</strong> we need to know the difference between <code>db.missions.save</code> and <code>db.missions.insert</code>, using <code>save</code>, we can simple provide an model instance according to the model schma, while using using <code>insert</code>, we have to write the object exacty the same as the final document! </p>
</li>
<li><p>“GET” method implementation? <strong>Answer:</strong> using mongodb query like <code>findById</code> and others to get the document from db, and sometimes we need <code>id</code> to retrieve info from subdocument. Besides, <code>geoNear</code> is handy in mongodb to get displaying documents by distance.</p>
</li>
<li><p>Some important places for error checking: </p>
<ul>
<li>If argument is in the <code>req.body</code> or <code>req.query</code> or <code>req.params</code>. <strong>if not, return a message in <code>res</code> saying founding no argument in coming request.</strong></li>
<li>Then given an ID(probably), we may want to search that document in database using <code>getById()</code>, and the callback function contains an <code>error</code> object and a instance object, where the returning instance object indicates whether or not searching database is succeeded or not. <strong>If not, return a message saying object not found in database.</strong></li>
<li>When we tried to update of create a new document, we may usually use <code>save</code> and <code>create</code>, the callback function contains an error object either, <strong>it indicates whether or not such instance can be created or updated correctly, if the error message appears, it usually dues to the fact that some fields violates the validation rules specified in database schema.</strong></li>
</ul>
</li>
</ul>
<h2 id="Tools">Tools</h2><ul>
<li>Unless you fancy adding hundreds of script tags to your pages, you need a build tool to bundle your dependencies. You also need something to <strong>allow NPM packages to work in browsers</strong>. This is where Webpack comes in.</li>
<li>Add a .gitattributes file and push it to github to overwrite the project type calculated by github, adding <code>*.css linguist-language=Javascript</code> into the file to let a specific file being overwritten.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MEAN全栈开发[第二期-前端实战手记]]]></title>
      <url>http://chocoluffy.com/2016/03/11/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%BA%8C%E6%9C%9F-%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%88%98%E6%89%8B%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>AirLoft的原型。 第二期， 基于Bootstrap的扁平化设计， 把所有涉及的页面的clickable prototype做出来， 再迁移到express application或者Angular SPA上， 虽然只是前端的prototype， 但是做好一些npm scripts的配置会让前端开发特别的高效和舒服， 也算是在入门了各种炫技的前端展示后， 逐步到一个full-fledged website的过渡。</p>
<a id="more"></a>
<p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f1tkjoatboj21kw0r7aic.jpg" alt="project screenshot"></p>
<h2 id="Difference_about_MEAN_stack">Difference about MEAN stack</h2><p>Traditional web server like Apache is multi-thread, <strong><em>the key idea about multi-thread is visitors use seperate resources.</em></strong>Like a bank system, it works perfectly fine when the population size is small, while when the size grows more than the resources, you have to queue for resources. (然而当你访问一个网站的时候， 你是不会等的， 你看那个网站响应很慢， 你就退出了). In nodejs, it is single-threaded. 所以你知道现在很多大型的企业架构， 尤其是国内的， 在前几年还特别严重， 一到过年过节流量特别大的时候， 你的网站就会宕机， 因为太多人访问了， 你必须等。所以解决办法是什么， 通常企业就回去买更多的服务器， 或者更新过大的内存， 来扛过流量最大的时候， 可是有一个问题就是， 在流量没有那么大的绝大多数时候， 你的资源被浪费了! </p>
<p>在单线程的nodejs里面， 有一个非常重要的特性就是必须是非阻塞， 因为默认的情况就是大家都会去同一个center office， 同一个线程， 然而我们不希望前一个的request, 比如request static files or database, 影响到下一个用户， 所以nodejs里面的函数都是异步的。</p>
<p>Some useful helper libraries like Underscorejs, Mochajs, and Colors(which can add color to the nodejs console log).</p>
<p>Check out the articles in Evernore, saying that why we don’t want to use the default way of using directory to organize our view static files in Expressjs, but instead use a function-focused way to group the files.</p>
<p>Mongodbd stores documents as BSON(binary format of JSON). Mongoose like the shell for mongodb, enable us to add data validation on database(schema)</p>
<p>Traditional way of doing web, is let the server do all the data processing and application logic, then passes HTML out to the browser. While angularjs allows us to pull some data and logic to the browser.(so server only pass the data from database). Since we have V8 in Chrome.</p>
<p>The difference of Jquery and AngularJS is that Jquery added to the page to provide interactivity, it assume that you have a complete DOM, While angularjs comes earilier to help you form the HTML.</p>
<p>关于SPA(single page application)的缺点， 尤其在SEO上， search engine only fetches the page layout and it won’t run any javascript, thus those data and contents generated by javascript will be ignored by search engine. <strong><em>the key feature of SPA is that it takes a longer load for first time login, and it can reduce the pressure on server side, since it handle the logic mostly on browser. </em></strong> For example, for a blog website, the blog post entry is for people to read and is expected to show up quitely quickly, is not suitable for SPA, while the admin page can be done in SPA. <strong><em>Thus, for the blog entry, we want the original and traditional method(passing the HTML pages), utilizing Express!</em></strong></p>
<p>Remeber, Angularjs is not only for SPA, it can also provide rich data interactivity to an static pages.</p>
<p><strong><em>API-rich means decouple the reliance!!! You don’t contact directly to the database, but instead use API and if API is satisfied, components can be substituted by any other components.</em></strong></p>
<p>基础的架构是： database\rest API\application在同一个server上， 但之后我们通常会把database分开到另外一个server上（avoid fighting for the same resources）.</p>
<h2 id="Express">Express</h2><p>When using express, we can configure it to have some options, like which html engine to use, which css preprocessor, and whether to add the support for session;</p>
<p>We can see in <code>app.js</code> that there are a lot of <code>app.use()</code>, they are middlewares, and the request coming from the application will go through each of them. For example, use <code>app.use(cookieParser());</code> will parse out the cookie information from the request and prepare to be more friendly in controller code. Server side js(app.js) if modified, should let the server stop and restart, but the client-side js or html or css, can just use browser refresh to update on-the-fly. <strong><em>To fix that, we use <code>nodemon</code>, a module that allows auto-reloading when server-side javascript is changed. I have install it globally, so we just need to type <code>nodemon</code> inside the project folder.</em></strong></p>
<p><code>block content</code> in jade, is the inheritance machanism of HTML layout, we can define some block + <variable name=""> in the parent template, then in each child layout that extends it, the child template will redefine such block, just like in c++\java, an abstract class.</variable></p>
<p>We decided to implement MVC inside the Express, like what we did in rails, we route the corresponding URL to controllers(which we created in a new folder).</p>
<p>Bootstrap is not being processed by node engine, thus we put it under <code>public</code> folder. Inside the <code>layout.jade</code> file, we will include the bootstrap theme and js files we want to use in our project:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    # set viewport metadata for better display in mobile device.</span><br><span class="line">  	meta(name=&apos;viewport&apos;, content=&apos;width=device-width, initial-scale=1.0&apos;)</span><br><span class="line">    title= title</span><br><span class="line">    # before the style.css file, so that we can write style to override or polish the style in bootstrap theme.</span><br><span class="line">    link(rel=&apos;stylesheet&apos;, href=&apos;/bootstrap/css/cerulean.bootstrap.css&apos;)</span><br><span class="line">    link(rel=&apos;stylesheet&apos;, href=&apos;/stylesheets/style.css&apos;)</span><br><span class="line">  body</span><br><span class="line">    block content</span><br></pre></td></tr></table></figure>
<p>After deciding on the urls we want to use, we will add corresponding controller into the index.js inside the routes folder. since we mainly have two function groups, we use <code>ctrlLocations</code> and <code>ctrlOthers</code> to represent these two main controller files.</p>
<h2 id="Jade_in_Express">Jade in Express</h2><p>Let’s start to move the content in view into controller. When we look at the clickable prototype, especially its Jade view pages, we define Javascript object in hash in controller to store the data. <strong><em>We design data structure to hold data for views.</em></strong> Then in view folder, we can do: [1] use <code>=</code> to use that object’s value, or use <code>#{}</code> to <strong><em>insert</em></strong> the value into a string.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">h1= title </span><br><span class="line">p &amp;nbsp; #&#123;title&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Pay attention to the format when using the programming syntax or inline coding. </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注意在用synax的时候要多空4个space--&gt;</span><br><span class="line">.row</span><br><span class="line">    .col-xs-12.col-sm-8</span><br><span class="line">        .row.list-group</span><br><span class="line">            each mission in missions</span><br><span class="line">                .col-xs-12.list-group-item</span><br><span class="line">                    h4</span><br><span class="line">                        a(href=&apos;/mission&apos;)= mission.name</span><br><span class="line">                        small &amp;nbsp;</span><br><span class="line">                            - for (var i=0; i&lt;mission.rating; i++)</span><br><span class="line">                                span.glyphicon.glyphicon-star</span><br><span class="line">                            - for (var i=mission.rating; i&lt;5; i++)</span><br><span class="line">                                span.glyphicon.glyphicon-star-empty</span><br><span class="line">                        span.badge.pull-right.badge-default 100m</span><br><span class="line">                    p.author= mission.author</span><br><span class="line">                    p</span><br><span class="line">                        each tag in mission.tags</span><br><span class="line">                            span.label.label-warning= tag</span><br><span class="line">                            | &amp;nbsp;</span><br></pre></td></tr></table></figure>
<p>In Jade, we want to use <strong>mixin</strong> as functions inside a jada file and use <code>include</code> to make it reuseable for other file. Like this, we usually put mixin at between <code>extends layout</code> and <code>block content</code>. </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mixin outputRating(rating)</span><br><span class="line">  - for (var i=0; i&lt;mission.rating; i++)</span><br><span class="line">    span.glyphicon.glyphicon-star</span><br><span class="line">  - for (var i=mission.rating; i&lt;5; i++)</span><br><span class="line">    span.glyphicon.glyphicon-star-empty</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--same place, but using `include`--&gt;</span><br><span class="line">include _includes/sharedHTMLfunctions</span><br></pre></td></tr></table></figure>
<p>Here is an example of showing how to render sting to HTML when the textarea has newline character:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">extends layout</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">	#banner.page-header</span><br><span class="line">		.row</span><br><span class="line">			.col-sm-12</span><br><span class="line">				h1= title</span><br><span class="line">	.row</span><br><span class="line">		.col-sm-12</span><br><span class="line">			p !&#123;(text).replace(/\n/g, &apos;&lt;br/&gt;&apos;)&#125;</span><br></pre></td></tr></table></figure>
<p>For now, the data is stored in controller, while in practice, we need database and data model to store the data. But here we are in the right track of fast development, namely, from developing a clickable prototype, to move hard-cored data into controller as variables, and finally put them into database.</p>
<h2 id="Heroku">Heroku</h2><p>Add the <code>engines</code> part at project’s package.json, add the node and npm version on it.</p>
<p>Add a Procfile, used to declare the process type used by application. we put <code>web: npm start</code> inside the Procfile so that it tells Heroku to tun such web process.</p>
<p>Use forego to test before push it into production environment. <code>brew install forego</code> to install forego, then do <code>forego start</code> and go to <code>localhost:5000</code> to see the result.</p>
<p>Then if everything goes fine, from <strong><em>a) engines part b) Profile c) tested under <code>forego</code></em></strong>, then we do <code>heroku create</code> and <code>git push heroku master</code> to push the local git repo to the remote heroku container. Then <code>heroku open</code> to open that url.</p>
<p>Terminology: <strong>Dynos</strong> are isolated, virtualized Unix containers, that provide the environment required to run an application. Generally, if you deploy an application for the first time, Heroku will run 1 web dyno automatically. In other words, it will boot a dyno, load it with your slug, and execute the command you’ve associated with the web process type in your Procfile. <strong>So, it mainly is about scaling, if we have more dynos, we will have more resources. And we got that 1 dyno for free.</strong> we can type in <code>heroku ps</code> to check which dyno is running which process and for this command, <code>heroku ps:scale web=3 queue=2</code>, it means that we can start 5 dynos, 3 for the web and 2 for the queue process types.</p>
<h2 id="Bootstrap">Bootstrap</h2><p>in Bootstrap, there is always 12 columns, and you can define how many columns you want to use in device, <code>col-sm-6</code> means that element will take up 6 columns on device of size sm <strong>and larger.</strong> </p>
<ul>
<li>xs: phone</li>
<li>sm: tablets</li>
<li>md: laptop</li>
<li>lg: external monitors</li>
</ul>
<p><code>&lt;div class=&quot;col-xs-12 col-sm-6&quot;&gt;&lt;/div&gt;</code> means it will take the full width in phone screen while take only half in tablets or larger.</p>
<p>In Jade, in order to put plain text, we need to use pipe at front.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ul.nav.navbar-nav.navbar-right</span><br><span class="line">    li</span><br><span class="line">        a(href=&apos;#&apos;)</span><br><span class="line">            span.glyphicon.glyphicon-user</span><br><span class="line">            |  Sign Up</span><br><span class="line">    li</span><br><span class="line">        a(href=&apos;#&apos;)</span><br><span class="line">            span.glyphicon.glyphicon-log-in</span><br><span class="line">            |  Login</span><br></pre></td></tr></table></figure>
<p>When dealing with <code>block content</code>, we should note that if some elements are not contrained by css, then they will be strethed to have full width of screen. what we did now is do wrap the content with a <code>div.container</code> so that we can apply css on the container easily.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">div.container</span><br><span class="line">  block content</span><br></pre></td></tr></table></figure>
<p>现在的一个主要问题是， 我知道布局是什么样子的， 但是我不知道应该怎么写？when to use <code>.row</code> or <code>.page-header</code>. </p>
<ul>
<li><strong>row. Rows must be placed within a .container (fixed-width) or .container-fluid (full-width) for proper alignment and padding. </strong></li>
<li>Use rows to create horizontal groups of columns.</li>
<li>Content should be placed within columns, and only columns may be immediate children of rows.<strong><em><code>col-</code> is the direct child element for <code>row</code></em></strong></li>
<li>Actually <code>.page-header</code> just applies some of its default styling options to the element with that class. In practice, we find that the element with that class will be margined from normal element. </li>
</ul>
<p>We can download the cutomized bootstrap theme from <a href="http://getbootstrap.com/customize/" target="_blank" rel="noopener">the website</a>, say it I only want to use the <code>glyphicon</code> icon from Bootstrap, then I can just check that box and download it, then after unzipping the file, we include the file under the css part and <strong>inlcude the css tag inside the html</strong>, then it works fine! Hooray! In this project, I mainly use <code>glyphicon-user</code>, <code>glyphicon-fire</code> and <code>glyphicon-chevron-left</code> for navigation.</p>
<p>Using <a href="https://github.com/nicinabox/superslides" target="_blank" rel="noopener">superslides</a> to achieve a full-screen images scrolling animation. pretty amazing effects.</p>
<p>Use <code>.panel</code> for inner component positioning.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   .panel.panel-primary</span><br><span class="line">.panel-heading</span><br><span class="line">	h2.panel-title Training Time</span><br><span class="line">.panel-body</span><br><span class="line">	p March 15 - March 17: 7:00 am - 7:00 pm</span><br><span class="line">	p March 21 - March 23: 7:00 am - 7:00 pm</span><br></pre></td></tr></table></figure>
<h2 id="Additional_reference">Additional reference</h2><p>How to undo the <code>git add &lt;filename&gt;</code> before <code>git commit</code>. Use <code>git reset &lt;filename&gt;</code>. Include <code>node_modules</code> into <code>.gitignore</code> so that it won’t be commited to github. Use</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#You can create your own .gitignore which ignores itself. Create a .gitignore with this two records:</span><br><span class="line">.gitignore</span><br><span class="line">node_modules</span><br></pre></td></tr></table></figure>
<p>在<a href="http://bootswatch.com/" target="_blank" rel="noopener">free bootstrap themes</a>下载bootstrap theme到public folder.</p>
<p><a href="http://stackoverflow.com/questions/33549178/best-practices-for-loading-videos-on-a-web-page" target="_blank" rel="noopener">Like Airbnb, how to load video at the background of a website</a>, using progressive loading or ?</p>
<p>使用nodemon来监听server-side js文件的改动来自动更新server， 使用browser-sync来监听各种css file的改动。有两种模式， 一种是通过直接创建一个server来host本地的static file, 另一种模式是通过代理另一个服务器， 比如php server, rails webbrick server, python simplehttpserver, nodejs server都可以的!!!!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">browser-sync start --proxy=&apos;localhost:3000&apos; --files &apos;app_server/views/*.jade, app_server/controllers/*.js, public/stylesheets/*.css&apos;</span><br><span class="line"></span><br><span class="line">browser-sync start --server --files &apos;app_server/views/*.jade, app_server/controllers/*.js, public/stylesheets/*.css&apos;</span><br></pre></td></tr></table></figure>
<p>由于我在nodejs里面设置了服务器的端口是3000， 那么通过让browser-sync监听这个端口并创建在3001的代理， 我可以在<code>localhost:3001</code>上面得到自动更新的网页!!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MEAN全栈开发[第一期-前端布局]]]></title>
      <url>http://chocoluffy.com/2016/03/06/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%80%E6%9C%9F-%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<p>AirLoft的原型。一个sharing economy的网站。 Loft是阁楼的意思， 每个心中那个静静守候一些秘密和癖好的地方。 有些情感， 只能在尘封的铁门后诉说， 就像有些话， 只讲给某个人听。厌倦了某些网站没有审美的UI， 也趁着青春轻狂， 去改变吧。第一期， 记录我前端页面开发的一些手记， 后面慢慢过渡到数据库和后台API设计。</p>
<a id="more"></a>
<h2 id="前言">前言</h2><p>最近在做一个sharing economy的网站，在参考了大部分现有网站的UI的样式后， 我们感觉非常的不满😂(当然像quora这种属于知识信息密度特别高的网站使用文本密集的形势还说的过去)， 但是像airbnb还有携程这种大型的peer sharing的网站， 如何可以从第一屏就吸引到用户是一个很重要的问题。直接上图看看：<br>首先是<a href="https://www.airbnb.ca/" target="_blank" rel="noopener">airbnb</a>的网站：<br><img src="http://ww1.sinaimg.cn/large/c5ee78b5gw1f1mrezw5z0j21kw0t9dqn.jpg" alt="airbnb website"><br>airbnb在网站的第一屏是用一段视频来当做背景的， 非常惊艳， 但是第一屏没有满屏是什么意思？是想吸引我们可以往下滚嘛？但是这种样式让我非常不舒服， 明明有非常好的创意， 为什么不像这个<a href="http://thenewcode.com/samples/polina.html" target="_blank" rel="noopener">thenewcode.com</a>一样使用高清全屏的视频来当做网页背景呢， 很惊艳对不对!!</p>
<p>再看一下<a href="http://www.ctrip.com/#ctm_ref=nb_cn_top" target="_blank" rel="noopener">携程</a>的网站， 感觉还是滞留在上个世纪的UI。<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1f1mrhyoxpvj21kw0t7qiu.jpg" alt="携程website"><br>于是， 也是出于对颜值的追求，我决定尝试使用轮播在第二屏的网站展示页面来展示各个兴趣小组（比如一起做早餐吃早餐啦， 一起go hiking啦， 一起复习期末考写作业的兴趣小组啦）</p>
<p>考虑到完整项目的时间紧迫， 就不准备在前端的js的代码上花太多时间， 毕竟后面还有转移到express的jade模版， 然后最后还要用angularjs来重写。 于是我就在找各类比较好的carousel的js插件， 在比较了几个的表现之后， 还是<a href="https://github.com/nicinabox/superslides" target="_blank" rel="noopener">superslides</a>最得我心。废话不多说， 直接上实例代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;Superslides - A fullscreen slider for jQuery&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;../dist/stylesheets/superslides.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=&quot;slides&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;slides-container&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/people.jpeg&quot; alt=&quot;Cinelli&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/surly.jpeg&quot; width=&quot;1024&quot; height=&quot;682&quot; alt=&quot;Surly&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/cinelli-front.jpeg&quot; width=&quot;1024&quot; height=&quot;683&quot; alt=&quot;Cinelli&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/affinity.jpeg&quot; width=&quot;1024&quot; height=&quot;685&quot; alt=&quot;Affinity&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;nav class=&quot;slides-navigation&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;#&quot; class=&quot;next&quot;&gt;Next&lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;#&quot; class=&quot;prev&quot;&gt;Previous&lt;/a&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;javascripts/jquery.easing.1.3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;javascripts/jquery.animate-enhanced.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;../dist/jquery.superslides.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(&apos;#slides&apos;).superslides(&#123;</span><br><span class="line">      animation: &apos;fade&apos;</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>忽略其他的不管， 如果我们希望引入superslides的功效， 我们只需要添加这几个tag:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--css--&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;../dist/stylesheets/superslides.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--js--&gt;</span><br><span class="line">&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;../dist/jquery.superslides.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>注意jquery的引入要在superslides的前面， 来保证superslides在引用的时候可以用到jquery里面的定义的函数。</p>
<p>在添加了css和js之后， 我们就可以来创建全屏图片轮播的html结构了， 官方推荐的是在<code>&lt;div id=&quot;slides&quot;&gt;</code>里面放一个div里面放各种img， 或者也可以使用一个<code>&lt;li&gt;</code>来分开img和div来在后期分别写样式和定位， 我在我的项目中使用的就是后者， 比如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;slides&quot;&gt;</span><br><span class="line">  &lt;ul class=&quot;slides-container&quot;&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      &lt;img src=&quot;http://flickholdr.com/1000/800&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        Slide one</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      &lt;img src=&quot;http://flickholdr.com/1000/800/space&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        Slide two</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      &lt;img src=&quot;http://flickholdr.com/1000/800/tech&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        Slide three</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">  &lt;nav class=&quot;slides-navigation&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;next&quot;&gt;Next&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;prev&quot;&gt;Previous&lt;/a&gt;</span><br><span class="line">  &lt;/nav&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>由于我的网站背景颜色是暗色系的， 我添加了<code>reveselay</code>和<code>overlay</code>来创建两个mask来写出渐变渐出的效果， 这样可以很好的和背景颜色混为一体。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;section&quot; id=&quot;android&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;containerrow&quot;&gt;</span><br><span class="line">    &lt;div id=&quot;slides&quot;&gt;</span><br><span class="line">      &lt;ul class=&quot;slides-container&quot;&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;img src=&quot;./image/desk.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;reverselay&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;mainbadget&quot;&gt;</span><br><span class="line">              &lt;h5&gt;</span><br><span class="line">                &lt;span class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/span&gt;&amp;nbsp;134 &amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;span class=&quot;glyphicon glyphicon-fire&quot;&gt;&lt;/span&gt;&amp;nbsp;3440</span><br><span class="line">              &lt;/h5&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;text-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;maintitle&quot;&gt;</span><br><span class="line">               &lt;a href=&quot;&quot;&gt;Morning Call&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;maintext&quot;&gt;</span><br><span class="line">              &lt;p&gt;Join our breakfast cooking club for fresh pancakes and sunshine!</span><br><span class="line">              Meet your friends here and enjoy every piece of buttered toast. &lt;a href=&quot;&quot;&gt;See more.&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;    </span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">      &lt;nav class=&quot;slides-navigation&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; class=&quot;prev&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-chevron-left&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; class=&quot;next&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-chevron-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;div id=&quot;slider-control&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;#react&quot; class=&quot;active&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;#intro&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a href=&quot;#native&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a href=&quot;#touch&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a href=&quot;#android&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>注意我这里的<code>text-container</code>, <code>maintitle</code>, <code>maintext</code>都是用来创建overlay在图片上面的文字， 分离出来比较方便定位。最后记得要初始化js：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(&apos;#slides&apos;).superslides(&#123;</span><br><span class="line">    animation: &apos;fade&apos;,</span><br><span class="line">    play: &apos;8000&apos;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>还有很多的功能选项， 在<a href="https://github.com/nicinabox/superslides" target="_blank" rel="noopener">主页</a>可以查看到最全的功能配置，也可以参考他的<a href="http://archive.nicinabox.com/superslides/#1" target="_blank" rel="noopener">实例页面</a> 那就搞定了! 最后附上成品的gif:<br><img src="https://giant.gfycat.com/WetLongHapuka.gif" alt="project gif"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ajax(with Jquery) on Nodejs server]]></title>
      <url>http://chocoluffy.com/2016/02/20/Ajax-with-Jquery-on-Nodejs-server/</url>
      <content type="html"><![CDATA[<p>Nodejs的第一个上手小项目， 就是尝试自己在本地的页面来发送Ajax请求， 并且通过nodejs的json文件返回后以比较优雅的前端样式呈现出来。 算是再一次复习了Bootstrap， fontawesome库的调用， 以及一些jquery的语法。 仔细回想， 其实nodejs的后端开发和rails\django的router的本质都是一样的， 以前在还没有理解实质的时候就上手实战， 现在慢慢理解了才能够融会贯通， 现在的开发速度大大进步了。 同时也学会了如何允许CORS的请求， 和正则匹配的部分细节。<br><a id="more"></a></p>
<p><img src="https://zippy.gfycat.com/FancyWeeBrontosaurus.gif" alt="project gif"></p>
<h2 id="Requirements">Requirements</h2><p>Requesting 127.0.0.1:3000 should give your index page (with CSS and JS). For the subsequent requests, you should use AJAX to send requests to the Node server and update only some parts of the page with the response data. Ideally, you should return JSON data as a response and then format that using Javascript.</p>
<h2 id="Ongoing_notes">Ongoing notes</h2><ul>
<li><p>how to use Ajax to request the data instead of using url request to node server? <strong><em>Main idea is that to use <code>$.getJSON(&quot;http://127.0.0.1:3000/favs.json&quot;, function(...){...}</code> to send out the Ajax request, and set the nodejs script to be able to respond such json file request and properly handle CORS problem. The things left will be just styling and formatted retrieved information and display.</em></strong></p>
</li>
<li><p>nodejs. You might use Node.js to connect to a database (returning a result set from a query, say, or updating a record); deliver HTML, XML, or JSON content; connect to local files; or serve up static web pages like Apache or another web server.</p>
</li>
<li><p>ajax. The mechanism for sending data to and retrieving data from the server with Ajax is the XMLHttpRequest object. So, now that we have an XMLHttpRequest object created, what do we do with it? We use it to make HTTP requests. To do so, we initialize the object with the open() method, which takes three arguments. Like <code>xmlhttp.open(&quot;GET&quot;,&quot;Demo.xml&quot;,true);</code>.</p>
<ul>
<li>HEAD. <code>xmlhttp.open(&quot;HEAD&quot;,&quot;Demo&quot;,true);</code> and <code>xmlhttp.send(null)</code>.</li>
<li>GET. <code>xmlhttp.open(&quot;GET&quot;,&quot;Demo?FirstName=Nat&amp;LastName=Dunn&quot;,true);</code>, the last argument is choose for true(asynchronous) or false(synchronous). The difference is that for synchronous version, browser has to wait for a response. The code below shows how to use Ajax solely to listen to the content change.</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    function start() &#123;</span><br><span class="line">        var xmlhttp = new XMLHttpRequest();</span><br><span class="line">        var contentDiv = document.getElementById(&quot;Content&quot;);</span><br><span class="line"> </span><br><span class="line">        xmlhttp.open(&quot;GET&quot;, &quot;Demo?FirstName=Nat&amp;LastName=Dunn&quot;, true);</span><br><span class="line">        xmlhttp.onreadystatechange = function() &#123; // handle Ajax response.</span><br><span class="line">            if (xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200) &#123;</span><br><span class="line">                contentDiv.innerHTML = xmlhttp.responseText;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        xmlhttp.send(null);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    observeEvent(window, &quot;load&quot;, function() &#123;</span><br><span class="line">        var btn = document.getElementById(&quot;btnStart&quot;);</span><br><span class="line">        observeEvent(btn, &quot;click&quot;, start);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Ajax in jquery. In general, Ajax does not work across domains. Exceptions are services that provide JSONP (JSON with Padding) support, which allow limited cross-domain functionality. JQuery provides Ajax support that abstracts away painful browser differences. It offers both a full-featured $.ajax() method, and simple convenience methods such as $.get(), $.getScript(), $.getJSON(), $.post(), and $.fn.load(). A working example of using Ajax of pulling image data from Flick referring <a href="http://www.w3school.com.cn/jquery/ajax_getjson.asp" target="_blank" rel="noopener">this post</a></p>
</li>
<li><p>How to avoid CORS(cross-origin resources sharing) error, refer to <a href="http://www.bennadel.com/blog/2327-cross-origin-resource-sharing-cors-ajax-requests-between-jquery-and-node-js.htm" target="_blank" rel="noopener">this post</a>. <strong><em>Main idea is that at the nodejs server part, we allow some origin and some type of content being CORS, thus we can request such resources at client part, which in this case in my own browser.</em></strong></p>
</li>
<li><p>How to regex all the href links inside a tweet? Especially how to do that in javascript? </p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// tweet here is a JSON object</span><br><span class="line">var tweetString = JSON.stringify(tweet);</span><br><span class="line">var regex = /(https?:\/\/.*?)(&quot;|\s)/g;</span><br><span class="line">var matchlst = [];</span><br><span class="line">tweetString.replace(regex, function(a, b, c, d)&#123;</span><br><span class="line">	if(a.slice(-1)==&apos;&quot;&apos;)&#123;</span><br><span class="line">		a = a.slice(0, -1);</span><br><span class="line">	&#125;</span><br><span class="line">	matchlst.push(a);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><strong><em>Main idea is that we first make a JSON object into a string, then we can do regex match on a string. we use //g to indicate that it is search globally. And then for those valid match, we trim out the trailing quote then store it into a list for later formatting use. </em></strong>. Note that we should make full use of the flag option provided with regex matching, refer to <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">this post</a>. For example, <code>/.../g</code> is for global match, <code>/.../i</code> is for case-insensitive match.</p>
<ul>
<li>How to use Jquery to construct <code>div</code> or <code>a</code> elements? refer to <a href="http://stackoverflow.com/questions/867916/creating-a-div-element-in-jquery" target="_blank" rel="noopener">this post</a>, simply do the following: <strong><em>Here I make use of the Bootstrap alert styling!</em></strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;&lt;div&gt;&quot;).addClass(&apos;alert alert-warning&apos;).html(&quot;&lt;strong&gt;Warning!&lt;/strong&gt; Such user or tweet does not exist. Please enter a valid query.&quot;).prependTo(query_list);</span><br></pre></td></tr></table></figure>
<ul>
<li>Avoid the <code>submit</code> event cause a page redirection or refresh? simply add a <code>return false</code> at the end of the submit function. Here is the submit function I wrote to process the info after AJAX from nodejs server. Note that my nodejs server host at <code>http://127.0.0.1:3000/</code>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#queryform&quot;).submit(function()&#123;</span><br><span class="line">    		emptyAll();</span><br><span class="line">    		var searchval = $(&quot;#search&quot;).val();</span><br><span class="line">    		console.log(searchval);</span><br><span class="line">    		$(&quot;#list ul&quot;).addClass(&quot;unseen&quot;);</span><br><span class="line">    		var query_list = $(&quot;#query&quot;);</span><br><span class="line">    		var nameHash = &#123;&#125;;</span><br><span class="line">    		var tweetidHash = &#123;&#125;; </span><br><span class="line">	    	$.getJSON(&quot;http://127.0.0.1:3000/favs.json&quot;, function(tweets)&#123;</span><br><span class="line">				$.each(tweets, function(i,tweet)&#123;</span><br><span class="line">					nameHash[tweet.user.screen_name] = tweet;</span><br><span class="line">					tweetidHash[tweet.id_str] = tweet;</span><br><span class="line">				&#125;);</span><br><span class="line">				if(Object.keys(nameHash).indexOf(searchval)&gt;=0)&#123;</span><br><span class="line">					var formattedText = &quot;&lt;strong&gt;User screen name: &lt;/strong&gt;&quot;;</span><br><span class="line">					formattedText += searchval + &quot;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;strong&gt;Tweet: &lt;/strong&gt;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;pre&gt;&lt;code&gt;&quot; + JSON.stringify(nameHash[searchval], null, 4) + &quot;&lt;/code&gt;&lt;/pre&gt;&quot;;</span><br><span class="line">					$(&quot;&lt;p&gt;&quot;).html(formattedText).prependTo(query_list);</span><br><span class="line">				&#125;</span><br><span class="line">				else if(Object.keys(tweetidHash).indexOf(searchval)&gt;=0)&#123;</span><br><span class="line">					var formattedText = &quot;&lt;strong&gt;Tweet ID: &lt;/strong&gt;&quot;;</span><br><span class="line">					formattedText += searchval + &quot;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;strong&gt;Tweet: &lt;/strong&gt;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;pre&gt;&lt;code&gt;&quot; + JSON.stringify(tweetidHash[searchval], null, 4) + &quot;&lt;/code&gt;&lt;/pre&gt;&quot;;</span><br><span class="line">					$(&quot;&lt;p&gt;&quot;).html(formattedText).prependTo(query_list);</span><br><span class="line">				&#125;</span><br><span class="line">				else&#123;		</span><br><span class="line">					$(&quot;&lt;div&gt;&quot;).addClass(&apos;alert alert-warning&apos;).html(&quot;&lt;strong&gt;Warning!&lt;/strong&gt; Such user or tweet does not exist. Please enter a valid query.&quot;).prependTo(query_list);</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">	</span><br><span class="line">			$(&quot;#query&quot;).removeClass(&quot;unseen&quot;);</span><br><span class="line">			$(&quot;#query&quot;).addClass(&quot;seen&quot;); </span><br><span class="line">			return false; </span><br><span class="line">    	&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>Some JS tricks:<ul>
<li><code>if...in...</code> equivalent type in JS as in python. use <code>Array.indexOf(element)&gt;=0</code> to know that if such element exist in this array.</li>
<li>Get the keys array of a Hash. <code>Object.keys(hash)</code>.</li>
<li>Get the last character from a string. <code>string.slice(-1)</code>.</li>
<li>Trim out the last character from a string. <code>string = string.slice(0, -1)</code>.</li>
<li>Use Jquery to get the value from submitted form. </li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Online messege sending后端C实现版]]></title>
      <url>http://chocoluffy.com/2016/02/18/Online-messege-sending%E5%90%8E%E7%AB%AFC%E5%AE%9E%E7%8E%B0%E7%89%88/</url>
      <content type="html"><![CDATA[<p>原型是最近一门课的作业， 这是我在过程中记下的一些手记心得， 都是我认为是值得关注的地方。 未来会把这些后端函数加入TCP协议， 更贴近实战使用吧。基础的数据结构主要是链表， 算是用C自己再复习一遍链表实现。算法嘛？没有算法😂不需要考虑性能也就没有考虑算法优化咯。</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f149fxx25oj21360w6n5z.jpg" alt="screenshot"><br><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f149r4zqkaj213e0zgajd.jpg" alt="profileshot"></p>
<h2 id="Ongoing_notes">Ongoing notes</h2><ul>
<li>how to enter the interactive mode? the main function for interactive mode is process_args. Like the code snippet below, it keep reading inputs from stdin(then using <code>fgets</code> to feed it into a input buffer), then using tokenize function(making use of <code>strtok</code> to tokenize the input commands), then the input command is stored in <code>char ** cmdargv</code>, which just like <code>argv</code> we often use. <code>cmdargv[0]</code> stores the first command, like <code>profile</code> and so on. What is left is just to depend on the return value from each core functions to display a proper information back to the screen.  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;Welcome to FriendMe! (Local version)\nPlease type a command:\n&gt; &quot;);</span><br><span class="line"></span><br><span class="line">while (fgets(input, INPUT_BUFFER_SIZE, input_stream) != NULL) &#123;</span><br><span class="line">    // only echo the line in batch mode since in interactive mode the user</span><br><span class="line">    // just typed the line</span><br><span class="line">    if (batch_mode) &#123;</span><br><span class="line">        printf(&quot;%s&quot;, input);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    char *cmd_argv[INPUT_ARG_MAX_NUM];</span><br><span class="line">    int cmd_argc = tokenize(input, cmd_argv);</span><br><span class="line"></span><br><span class="line">    if (cmd_argc &gt; 0 &amp;&amp; process_args(cmd_argc, cmd_argv, &amp;user_list) == -1) &#123;</span><br><span class="line">        break; // can only reach if quit command was entered</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    printf(&quot;&gt; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>cast type when allocating memory for <strong><em>Fixed length character array</em></strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">typedef struct user &#123;</span><br><span class="line">    char name[MAX_NAME];</span><br><span class="line">    char profile_pic[MAX_NAME];  // This is a *filename*, not the file contents.</span><br><span class="line">    struct post *first_post;</span><br><span class="line">    struct user *friends[MAX_FRIENDS];</span><br><span class="line">    struct user *next;</span><br><span class="line">&#125; User;</span><br></pre></td></tr></table></figure>
<p>we need to do this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">char* username = malloc(MAX_NAME*sizeof(char));</span><br><span class="line">strcpy(newuser-&gt;name, username);</span><br></pre></td></tr></table></figure>
<p>to be able to allocate the memory for that character array. </p>
<ul>
<li>how to handle structs of linked list when only the head of the list is given like <code>int create_user(const char *name, User **user_ptr_add)</code>. Note that since we will modify the linked list itself, we will have to pass in a pointer of pointer. Now if we only want to iterate through this linked list, we don’t need the ptr of ptr. Resolved by referring to <a href="http://geeksquiz.com/linked-list-set-2-inserting-a-node/" target="_blank" rel="noopener">this post </a>, and refer to <a href="https://www.cs.bu.edu/teaching/c/linked-list/delete/" target="_blank" rel="noopener">this post</a> and <a href="http://geeksquiz.com/linked-list-set-3-deleting-node/" target="_blank" rel="noopener">this post from Geeksquiz</a> for deleting a node from a post. <blockquote>
<p>one key thing of dealing with ptr of ptr in linked list is that we need make clear the use of <code>curr</code> pointer and <code>*user_ptr</code> since we are suppore to change it in function <code>int create_user(const char *name, User **user_ptr_add)</code>. </p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// add the newuser to the end of linked list.</span><br><span class="line">// int create_user(const char *name, User **user_ptr_add) </span><br><span class="line"></span><br><span class="line">	// now append this node to the end of linked list.</span><br><span class="line">	User* last = *user_ptr_add;</span><br><span class="line">	if(*user_ptr_add == NULL)&#123; // if linked list is empty</span><br><span class="line">		*user_ptr_add = newuser;</span><br><span class="line">	&#125;</span><br><span class="line">	else&#123; // otherwise</span><br><span class="line">		if(strcmp(last-&gt;name, name) == 0)&#123; // if the first node is the same user.</span><br><span class="line">			return 1;</span><br><span class="line">		&#125;</span><br><span class="line">		while(last-&gt;next!=NULL)&#123;</span><br><span class="line">			if(strcmp(last-&gt;name, name) == 0)&#123; // if same user exists</span><br><span class="line">				return 1;</span><br><span class="line">			&#125;</span><br><span class="line">			last = last-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		last-&gt;next = newuser;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// delete the user with name from the linked list.</span><br><span class="line">// int delete_user(const char *name, User **user_ptr_del)</span><br><span class="line"></span><br><span class="line">		User* curr = *user_ptr_del;</span><br><span class="line">		User* prev; // store previous node.</span><br><span class="line"></span><br><span class="line">		// if head node itself holds the user to be deleted.</span><br><span class="line">		if(curr != NULL &amp;&amp; strcmp(curr-&gt;name, name)== 0)&#123;</span><br><span class="line">			*user_ptr_del = curr-&gt;next;</span><br><span class="line">			free(curr);</span><br><span class="line">			return 0;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		while(curr != NULL &amp;&amp; strcmp(curr-&gt;name, name) != 0)&#123;</span><br><span class="line">			prev = curr;</span><br><span class="line">			curr = curr-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		delete_user_from_friends(name, *user_ptr_del);</span><br><span class="line">		prev-&gt;next = curr-&gt;next;</span><br><span class="line">		free(curr);</span><br></pre></td></tr></table></figure>
<ul>
<li><p>type is not assignable during <code>malloc</code>: <code>struct user *friends[MAX_FRIENDS];</code></p>
</li>
<li><p>segmentation fault!!! <strong><em>Usually in practice, if we want to access the memory location where we don’t have access to, meaning that when we want to set some attributes, we need to first make sure that that part of memory has been malloc!!</em></strong></p>
<blockquote>
<p>One trick on this is to make sure that whenever we see a struct like this: first is to malloc memory for the all struct, then for each array, like here <code>name</code>, <code>profile_pic</code> and <code>friends</code> array. Especially the <code>friends</code> array, the haunting time when debugging for the final function <code>delete_user</code>, I always get a segmentation fault, which results from that I did not malloc the memory for the friend array at the very first beginning inside <code>create_user</code> function, thus when I try to change one element’s value, I will access to unallocated memory, a segmentation fault.</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">typedef struct user &#123;</span><br><span class="line">    char name[MAX_NAME];</span><br><span class="line">    char profile_pic[MAX_NAME];  // This is a *filename*, not the file contents.</span><br><span class="line">    struct post *first_post;</span><br><span class="line">    struct user *friends[MAX_FRIENDS];</span><br><span class="line">    struct user *next;</span><br><span class="line">&#125; User;</span><br></pre></td></tr></table></figure>
<ul>
<li>Difference between <code>memcpy</code> and <code>strcpy</code>. <code>strcpy</code> will stop when meeting a ‘\0’ line terminator, while <code>memcpy</code> will not do that, it can do the content copy without looking to the value of the contents.</li>
</ul>
<h2 id="Bugs_remaining_to_fix">Bugs remaining to fix</h2><ul>
<li>time.h. I finally do a trick to cover up the failure of using time.h. we are supposed to record the time when a post is created, and store the address of that <code>time_t</code>, which is actually a long int, to the struct attribute <code>post-&gt;date</code>, while it fails to display the right time when doing <code>ctime</code> in <code>print_user</code> function. I finally insert a time update right into the <code>print_user</code> function to let them next to each other and it display right result?!.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Responsive web design[第三期]-js动画]]></title>
      <url>http://chocoluffy.com/2016/02/04/Responsive-web-design-%E7%AC%AC%E4%B8%89%E6%9C%9F-js%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<p>Introduce greensock library to javascript, along with GPU acceleration to create high-quality and smooth animations. </p>
<a id="more"></a>
<h2 id="Introduction">Introduction</h2><p>很多前端开发者会告诉你，你应该避免使用 JavaScript 动画。使用 CSS 动画会有更好的性能（更少的 CPU 时间）和更平滑的效果（更高的帧率）。</p>
<p>然而，JavaScript 动画慢的原因经常是因为你用的库并没有为动画进行优化。优化过的 JavaScript 动画引擎（比如 GreenSock 或 Velocity.js）有堪比 CSS 动画的性能。某些情况下 JS 动画甚至比 CSS 动画更快！可参考下面这个性能的比较， 最后发现在某些情况下greensock的性能会比jquery好上5-6倍</p>
<ul>
<li><a href="https://www.greensock.com/js/speed.html" target="_blank" rel="noopener">greensock</a> </li>
</ul>
<h2 id="引入greensock_js库">引入greensock js库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">TweenMax.fromTo(&quot;#box&quot;,1, &#123;</span><br><span class="line">    // from</span><br><span class="line">    css: &#123;</span><br><span class="line">      left: &quot;-200px&quot;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    // to</span><br><span class="line">    css: &#123;</span><br><span class="line">      left: &quot;200px&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 永久重复动画的选项</span><br><span class="line">    repeat: -1,</span><br><span class="line"></span><br><span class="line">    // 反转、重新运行动画的选项</span><br><span class="line">    yoyo: true,</span><br><span class="line"></span><br><span class="line">    // 改变 easing 类型</span><br><span class="line">    ease: Power2.easeInOut,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>什么是fps? 帧率或画面更新率是用于测量显示帧数的量度[1]。测量单位为“每秒显示帧数”（Frame per Second，FPS，帧率）或“赫兹”，一般来说FPS用于描述影片、电子绘图或游戏每秒播放多少帧，而赫兹则描述显示屏的画面每秒更新多少次。<br>由于人类眼睛的特殊生理结构，如果所看画面之帧率高于每秒约10-12帧的时候，就会认为是连贯的[2]， 此现象称之为视觉暂留。这也就是为什么电影胶片是一格一格拍摄出来，然后快速播放的。但30帧仅仅是流畅，而非平滑连续，因此有更多帧率的产品推出也就不足为奇了。<br>有声电影的拍摄及播放帧率均为每秒24帧，对一般人而言已算可接受，但对早期的高动态电子游戏，尤其是射击游戏或竞速游戏来说，帧率少于每秒30帧的话，游戏就会显得不连贯，这是因为电脑会准确地显示瞬时的画面（像是一台快门速度无限大的相机），没有动态模糊使流畅度降低。而使用相同帧率的摄影机拍摄物体移动时，该场景的视频必定会表现所有移动物体在曝光时间内所有位置的完整组合。因此很多新世代电玩游戏以动态模糊为特色。在实际体验中，60帧相对于30帧有着更好的体验。</p>
</blockquote>
<p>在app.js里面我们用y来表现出垂直状态的变化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function animateLogo()&#123;</span><br><span class="line">	TweenMax.fromTo(&quot;#logo&quot;, 2.5, &#123;</span><br><span class="line">		css: &#123;</span><br><span class="line">			y: &quot;-30px&quot;,</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, &#123;</span><br><span class="line">		css: &#123;</span><br><span class="line">			y: &quot;20px&quot;,</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		repeat: -1,</span><br><span class="line">		yoyo: true,</span><br><span class="line">		ease: Sine.easeInOut,</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="GPU加速">GPU加速</h2><p>你可以把一个网页想象为一堆矩形。布局和绘图都是由 CPU 完成的：</p>
<p>CPU 计算这些矩形的布局。矩形在哪里？它们有多大？<br>CPU 把矩形渲染成点阵位图（bitmap）。<br>之后如果可能的话，矩形被送到 GPU 以获得更好的性能：</p>
<p>CPU 以点阵位图的形式上传到 GPU 中。<br>CPU 给 GPU 发送指令去处理这些位图。可能有平移/缩放/旋转，修改透明度，等等。<br>GPU 为什么比 CPU 快呢？假设我们把一个红色点阵和一个绿色点阵结合，CPU 不得不一个一个像素地做.</p>
<p>总的来说，当修改 CSS 属性时，有三种可能的开销：</p>
<p>重排（CPU。代价最高）。<br>重绘（CPU）。<br>变换, 旋转, 缩放, 透明度（GPU，代价最低）。</p>
<p>因此在使用transform的时候， 我们常常用y在表示垂直方向的移动，这么做是不会重新排列布局的， 而是在局部位置偏移。</p>
<blockquote>
<p>注意： left 只对 position: absolute 生效 </p>
</blockquote>
<p>transform 的原理是由元素的定位位置（absolute or relative) 偏移。<br>用 GreenSocks 去修改 left 的话是改变定位位置。<br>也就是说 left 的动画改变布局，但 transform 动画不会改变布局。</p>
<h2 id="多步骤动画">多步骤动画</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var t = new TimelineMax();</span><br><span class="line">t.to(&quot;#box&quot;,1,&#123;x: 200&#125;)</span><br><span class="line">  .to(&quot;#box&quot;,0.5,&#123;rotation: &quot;360deg&quot;&#125;)</span><br><span class="line">  .to(&quot;#box&quot;,1,&#123;y: 100&#125;)</span><br><span class="line">  .to(&quot;#box&quot;,0.5,&#123;rotation: &quot;-=360deg&quot;&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="指示器(滚动指示条)">指示器(滚动指示条)</h2><p>当窗口滚动时, 你可以用 window.scrollY 来算出窗口正在展示的是哪一部分。那么现在的重点就在于， 怎样可以获得关于元素所在位置， 高度的各种属性， 比如<code>scrollY</code>, <code>offsetHeight</code>, <code>offsetTop</code></p>
<ul>
<li><a href="http://stackoverflow.com/questions/6777506/offsettop-vs-jquery-offset-top/21880020#21880020" target="_blank" rel="noopener">offset的各种用法实例</a></li>
</ul>
<h2 id="取消link默认行为">取消link默认行为</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function addSmoothScrolling()&#123;</span><br><span class="line">	var links = document.querySelectorAll(&quot;#slider-control a&quot;);</span><br><span class="line">	for(var i=0; i&lt;links.length; i++)&#123;</span><br><span class="line">		var link = links[i];</span><br><span class="line">		var section = document.querySelectorAll(&quot;div.section&quot;)[i];</span><br><span class="line">		(function(sec)&#123;</span><br><span class="line">			// console.log(sec);</span><br><span class="line">			link.addEventListener(&quot;click&quot;, function(e)&#123;</span><br><span class="line">				// console.log(sec.offsetTop+&quot;px&quot;);</span><br><span class="line">				scrollToElement(sec);</span><br><span class="line">				e.preventDefault();</span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;)(section)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>首先用一个闭包来保证， 里面的函数在click的时候才之行， 而在那个时候， i 已经到了最后一个link的位置， 所以必须提前找到对应的section， 然后在闭包中传入。 同时需要在click事件的最后加上一个e.preventDefault， 来阻止link的默认行为， link的默认行为是直接跳转， 然后我们需要动画来辅助。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Memory allocation in C]]></title>
      <url>http://chocoluffy.com/2016/01/26/Memory-allocation-in-C/</url>
      <content type="html"><![CDATA[<p>Learning memory allocation in C for beginners will be totally a pain. This post, distilled from course materials, will provide you a practice guide and example coding snippets to help you learning more and fast in C programming language. It is cherishable, at least to me :)</p>
<a id="more"></a>
<h2 id="Introduction_to_malloc">Introduction to malloc</h2><ul>
<li>Variable defined in function will be stored in stack, so how to use that part of memory after function returns? we use <code>void * malloc(size_t size)</code> will allocate memory in heap. This function will remain the memory for the variables until the function explicitly deallocate them. The argument for this function indicates how many bytes of memory should it allocate.</li>
<li>In general, <code>size_t</code> is unsigned_int. Notice the <code>void *</code> type of the pointer, we know that in C, add 1 to a pointer will go to the next legal address, for <code>int*</code>, it is the next integer, for <code>char*</code>, it is next character.</li>
<li>A void pointer is a pointer that represent a generic type. It just points to the memory specified, so it do not need to specify right now what type of that memory is, instead, we will declare the type when use pointer:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int * pt = malloc(sizeof(int));</span><br></pre></td></tr></table></figure>
<p>the above code indicates that we will the allocated memory for integer. </p>
<h2 id="Example_code">Example code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">/* </span><br><span class="line"> * Return an array of the squares from 1 to max_val.</span><br><span class="line"> */</span><br><span class="line">int *squares(int max_val) &#123;</span><br><span class="line">    int *result = malloc(sizeof(int) * max_val);</span><br><span class="line">    int i;</span><br><span class="line">    for (i = 1; i &lt;= max_val; i++) &#123;</span><br><span class="line">        result[i - 1] = i * i ;</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">    int *squares_to_10 = squares(10);</span><br><span class="line">    </span><br><span class="line">    // let&apos;s print them out </span><br><span class="line">    int i;</span><br><span class="line">    for (i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">        printf(&quot;%d\t&quot;, squares_to_10[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Note that in the above code, there are several variables that are located in heap. They are, the address store inside the variable result, since it points to a integer that lies in heap, while <strong>the addresss of the variable result is not in the heap, it is in the stack</strong>. One quick trick is that those value in heap, their address is valid. </p>
<h2 id="Explicitly_deallocate_the_memory">Explicitly deallocate the memory</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int play_with_memory() &#123;</span><br><span class="line">    int i;</span><br><span class="line">    int *pt = malloc(sizeof(int));</span><br><span class="line"></span><br><span class="line">    i = 15;</span><br><span class="line">    *pt = 49;</span><br><span class="line">    </span><br><span class="line">    // What happens if you comment out this call to free?</span><br><span class="line">    free(pt);</span><br><span class="line"></span><br><span class="line">    // What happens if you uncomment these statements?</span><br><span class="line">    printf(&quot;%d\n&quot;, *pt); // output 49</span><br><span class="line">    *pt = 7;</span><br><span class="line"></span><br><span class="line">    printf(&quot;%d\n&quot;, *pt); // output 7</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    play_with_memory();</span><br><span class="line">    play_with_memory();</span><br><span class="line">    play_with_memory();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Important issue here: when returned from the function, all variables will be freed from stack, which means that the <code>i</code> and <code>result</code> in the above code will be removed. It will cause a memory leak if we forget to link the memory from <code>malloc</code> to other heap variables. Since there will be no way from elsewhere to access that part of memory.</p>
</blockquote>
<ul>
<li>The danger of memory leak is that if it accumulates, it will finally cause a <code>out of memory</code> issue.</li>
<li>what happens if we print out the value stored in that memory location after we free up that pointer? <strong>Address is still valid and the value can still be accessed, but this time, we are using the part of memory that does not belong to us</strong>. Note that using unallocated memory is OK in some cases, but it will be dangerous when that part of memory being reallocated. So, always use allocated memory!</li>
</ul>
<h2 id="Passing_values">Passing values</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void helper(int **arr_matey) &#123;</span><br><span class="line">   // let&apos;s make an array of 3 integers on the heap</span><br><span class="line">   *arr_matey = malloc(sizeof(int) * 3);</span><br><span class="line"></span><br><span class="line">   int *arr = *arr_matey;</span><br><span class="line">   arr[0] = 18;</span><br><span class="line">   arr[1] = 21;</span><br><span class="line">   arr[2] = 23;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    int *data;</span><br><span class="line">    helper(&amp;data);</span><br><span class="line"></span><br><span class="line">    // let&apos;s just access one of them for demonstration</span><br><span class="line">    printf(&quot;the middle value: %d\n&quot;, data[1]);</span><br><span class="line"></span><br><span class="line">    free(data);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>there are basically two ways to help to avoid memory leak, a) <strong>return value</strong>, if we define that function type to be a pointer type, so that we can return the pointer in order to assign the values in main function. b) <strong>argument</strong>, we pass the one we want to assign values to the function and do the assigning part inside that function, and this time, the function type can be void but still finish the task.</li>
<li>However, it is much harder to use <code>argument</code> one since in C, the changes inside the function will not be preserved if we return nothing. Therefore, we need to the “address-value” relation in such scenario – That is <strong>we pass in pointer, we change value pointed at pointer, without returning anything, and we’re done.</strong> While problem comes when we want to change the pointer, say this line <code>*arr_matey = malloc(sizeof(int) * 3);</code>, we want to change the pointer now, but such change will not be preserved after function. Therefore, we will need to pass in a <strong>“poiter of pointer” to deal with pointer assignment!</strong> </li>
</ul>
<h2 id="Nested_structure">Nested structure</h2><p>if we want to use a nested struture to represent an array, say in that array, each element points to another array, since we don’t know that array size at compilation time, we would use <code>malloc</code> to allocate memory for those int array. The code is like</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int ** pt = malloc(sizeof(int*)*2);</span><br></pre></td></tr></table></figure>
<p>Say, now, I want the pt[0] to hold up an array of one integer, the way to do that is to use:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt[0] = malloc(sizeof(int));</span><br></pre></td></tr></table></figure>
<p>Similarly, if we want pt[1] to hold up 3 integers, we would use:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt[1] = malloc(sizeof(int)*3);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note that when we free those pointers, we need to free the innermost pointer first then outer one. </p>
</blockquote>
<p>An complete code example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">    // this allocates space for the 2 pointers</span><br><span class="line">    int **pointers = malloc(sizeof(int *) * 2); </span><br><span class="line">    // the first pointer points to a single integer</span><br><span class="line">    pointers[0] = malloc(sizeof(int));</span><br><span class="line">    // the second pointer pointes to an array of 3 integers</span><br><span class="line">    pointers[1] = malloc(sizeof(int) * 3);</span><br><span class="line"></span><br><span class="line">    // let&apos;s set their values</span><br><span class="line">    *pointers[0] = 55;</span><br><span class="line"></span><br><span class="line">    pointers[1][0] = 100;</span><br><span class="line">    pointers[1][1] = 200;</span><br><span class="line">    pointers[1][2] = 300;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    // do other stuff with this memory</span><br><span class="line"></span><br><span class="line">    // now time to free the memory as we are finished with the data-structure</span><br><span class="line">    // first we need to free the inner pieces</span><br><span class="line">    free(pointers[0]);</span><br><span class="line">    free(pointers[1]);</span><br><span class="line">    // now we can free the space to hold the array of pointers themselves</span><br><span class="line">    free(pointers);</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Memory_model">Memory model</h2><ul>
<li>note that th variable in main function does not belong to global variable, indicating it should still go to the stack part. The “global data” part contains mainly three stuff: <strong>a) global variables, b) string literals </strong> Note that for the string literals, the code like this: <code>char* str = &quot;Hello world!&quot;;</code> can lie in a local function, it just means that the pointer str can be in the stack, while the string literal “Hello world!” is in global data part. </li>
<li>And dynamic memory allocation lie in heap.</li>
</ul>
<h2 id="String">String</h2><ul>
<li><p>difference between a string and a character is that at the end of string, there is a <code>\0</code> as an ending signal. Once the character array declared, the size is fixed. Note that the difference between these similar version of declaring character array:</p>
<ul>
<li><code>char string[20] = &quot;cool shit&quot;</code>, it is defining a <strong>string variable</strong>, with a <code>\0</code> at the end of the array, note that there will be a lot of <code>\0</code> following the valid words. It can be changed afterwards.</li>
<li><code>char string[] = &quot;cool shit&quot;</code>, defining a <strong>string variable</strong> the size will be fixed according to the first assignment. It can be changed afterwards.</li>
<li><code>char* string = &quot;cool shit&quot;</code>, defining a <strong>string constant</strong>. it is a string literal! cannot be changed!! If you change the string, it will give a “bus error”. Main point here: <em> <strong>it makes string point to a read-only memory where string literal is stored, while the above two way are indeed allocating memory and copy string to them.</strong></em></li>
</ul>
</li>
<li><p>difference between <code>strlen</code> and <code>sizeof</code>. <code>strlen</code> will return the valid number of characters before null character, while <code>sizeof</code> will just give you the size of whole char array including null characters.</p>
</li>
<li><p>use <code>strncpy</code> as a stable counterpart of <code>strcpy</code>, the usage is like: <code>strncpy(s1, s2, sizeof(s1));</code> see the complete code below, s2 is a string literal. </p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    char s1[5];</span><br><span class="line">    char s2[32] = &quot;University of&quot;;</span><br><span class="line"></span><br><span class="line">    // This is unsafe because s1 may not have enough space</span><br><span class="line">    // to hold all the characters copied from s2.</span><br><span class="line">    //strcpy(s1, s2);</span><br><span class="line"></span><br><span class="line">    // This doesn&apos;t necessarily null-terminate s1 if there isn&apos;t space.</span><br><span class="line">    strncpy(s1, s2, sizeof(s1));</span><br><span class="line">    // So we explicitly terminate s1 by setting a null-terminator.</span><br><span class="line">    s1[4] = &apos;\0&apos;;</span><br><span class="line"></span><br><span class="line">    printf(&quot;%s\n&quot;, s1);</span><br><span class="line">    printf(&quot;%s\n&quot;, s2);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note that s1 is a character array, which means that there is no null characters at the end. if we want to do this way, we want to add null character at the end.</p>
</blockquote>
<ul>
<li>Similarly, <code>strncat(s1, s3, sizeof(s1)-strlen(s1)-1);</code> is the stable version of using strcpy.</li>
<li><code>char * strchr(const char s, int c);</code> return the index at the first occurence of the character</li>
<li><code>char * strstr(const char* s1, const char* s2);</code> find sub string. see the code example below:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    char s1[30] = &quot;University of C Programming&quot;;</span><br><span class="line">    char *p;</span><br><span class="line"></span><br><span class="line">    // find the index of the first &apos;v&apos;</span><br><span class="line">    p = strchr(s1, &apos;v&apos;);</span><br><span class="line">    if (p == NULL) &#123;</span><br><span class="line">        printf(&quot;Character not found\n&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        printf(&quot;Character found at index %ld\n&quot;, p - s1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // find the first token (up to the first space)</span><br><span class="line">    p = strchr(s1, &apos; &apos;);</span><br><span class="line">    if (p != NULL) &#123;</span><br><span class="line">        *p = &apos;\0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%s\n&quot;, s1);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>if the character specified in the second argument cannot find the right place, then it will assign NULL to p in this case. We can use pointer subtraction to get the index. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[象征与符号]]></title>
      <url>http://chocoluffy.com/2016/01/23/%E8%B1%A1%E5%BE%81%E4%B8%8E%E7%AC%A6%E5%8F%B7/</url>
      <content type="html"><![CDATA[<p>是什么，在流血。</p>
<a id="more"></a>
<p>每一个刺耳的反对声音，都很容易被看作是一种象征，与其说是自愿地走上风口浪尖，不如说，是在大众的狂欢和幻想意淫里演变为一场戏剧式的剑拔弩张。 人们娱乐着，消遣着，像是有了将帅挂靠着的小兵肆意地挑逗着对手的神经，全然不觉语气里的傲慢与肤浅。 枪口最后还是走火了，不过看热闹的小兵早已作鸟兽散，留下曾经市井起义逐渐背离初衷的将帅，在一片哀叹中，付出沉重的代价。</p>
<p>关于查理周刊的事情，我想试着从一个不那么主流，但是仍然很有趣的角度去想，究竟什么是象征，是什么推动了出现象征性。是什么让这种呈现和代表变得躁动不安又难以抗拒。 又是什么，在流血。</p>
<p>首先引起我注意的是这几句话</p>
<ul>
<li>“一种沉重的象征主义的重量——原本并不存在于我们的漫画中，也离我们很远的东西，现在落在了我们的肩上。”</li>
<li>“实际上，《查理周刊》一直以来都致力于反对象征主义：我们摧毁符号，打破禁忌，将那些幻想的泡沫破灭。我们很高兴看到人们给予《查理周刊》支持，但同时他们的做法却跟《查理周刊》的初衷背道而驰。”</li>
<li>“任何意义的象征主义都能被任何人利用起来做他们想做的事。”</li>
</ul>
<p>我接着联想到的是，很久之前的一个大新闻，戴安娜王妃之死。 如果大家还有印象，当时那个车祸发生之后的几天，是接踵而来的铺天盖地关于邪恶的小报记者的评论，大家指责那些追逐在王妃身后的狗仔记者们，认为他们手上沾满了鲜血，要对公众心中那个高贵优雅的戴安娜王妃的事故负上不可推卸的责任。 然而如果仔细推敲，渴望注视戴安娜王妃高贵而优雅的形象，又在其陨灭之时渴求安慰的，究竟是那些努力挖掘“隐私”的小报，还是拥有着窥视他人生活的这个或许谈不上弱点的本能的大众呢？而那些狗仔小报，或许只是市场的产物，只是人们愿意窥视，哪怕只是对他人生活的一种不恶意的关心的象征。 而一旦顶上了象征的头衔，也容易在万众注视下成为笔伐口诛的对象。 换句话说，很可能是人们这种不必然具备恶意的欲望，促成了那种“有害”的小报和令人们讨厌的狗仔记者。</p>
<p>听上去挺“悖论”的，为什么明明是不必然恶意的东西，会衍生出有害的结果。 而为什么，主角都是传媒媒体，都是传播者。</p>
<p>人们饭前茶后的谈资，自古放肆得甚至有点愚蠢朋克的法式幽默，又真得能经受得住媒体放大器般的传播吗？媒体往往是言论自由和新闻自由的象征和符号。 美国宪法史上好几次最精彩的判决和宣判都和言论自由有关，而关于新闻自由和涉及“所谓的政府内幕的间谍罪”之间的争论也一直不会停止。 人们不希望受到恶意言论所困，却又畏惧在任何形式上的禁止和压迫上走得更远。 而媒体，则更像一个扩音器，无论是积极还是消极的影响都会被施加上令人喘不过气的压迫力。 一个我能想到的理由，然而并不新鲜，是更多的人们偏爱剑拔弩张多过鲜花掌声，反对和刺耳，带着张着血气的眼神，比冷静和无为更为刺激和爽感。 而媒体，只是一次次转发传递的情感累积，只是在一场场人群的狂欢中那个热气朝天的广场，没有了人群，没有了咆哮，也就没有它本身存在的意义。</p>
<p>人们可以在自己的本能和欲望中注视到许多象征的缘由。 或许象征本身，就是人们所力所不及却昼夜痴狂的一种群体记忆吧。而没有了回响，也就没有了意义。</p>
<blockquote>
<p>后记： 这篇文章的大部分构架是我在等地铁的时候偶然想到的。 缘于读书小组的一次主题讨论，看到朋友分享的一篇文章，由一些只言片语所启发所引来的一堆胡思乱想。 或许我可以写得更加详细一点，但是可能大家在自己思考的时候的所思所想也已远超过我的文笔和见解，多一些余地，也多一些回响的空间嘛。趁周末的时候写点文字的感觉还是极好的，望坚持！最后，本文中关于戴安娜王妃的例子阐述，也是启发于以前看到的北大法学系苏力教授关于隐私权的探讨，而那些摘录的句子，来源于下面这篇朋友转发的文章。附上我所参考的文章原文。</p>
</blockquote>
<h2 id="《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画">《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画</h2><p>当地时间1月7日，法国漫画杂志《查理周刊》突遭恐怖分子持枪袭击，造成12人死亡，11人受伤。遇难者中包括杂志社五名重要的漫画家以及两名警察。面对这样的暴行，“Je suis Charlie”（我是查理）成为了一句口号，一面宣扬保护言论自由、抵制恐怖主义的旗帜。</p>
<p>Luz在《查理周刊》工作了20年。1月7日是他的生日，因此他在当天早上在《查理周刊》杂志社总部召开的每周编辑会议上迟到了，因此逃过一劫。现在他同其他的幸存者一起在为1月14日发行的下一期《查理周刊》做准备，这一期漫画将印刷100万份。在这份新的杂志中，Luz和他的同事们将在漫画中描述这周日的共和国大游行。在恐怖分子杀死了他的朋友，他的导师，他的亲人之后，Luz向记者讲述了他的愤怒，他的恐惧，他的怀疑。目前悲痛欲绝的他不能确定在1月7日的悲剧之后他是否还能继续画下去。</p>
<p>记者：下周三的《查理周刊》的内容将是很敏感的国家与政治问题。在目前这种不稳定的局势下，你们为什么要承担起这样的责任呢？</p>
<p>Luz：当我最初拿起画笔的时候，我并不认为这是一件危险的事，我们认为我们只是画出类似滑稽的米老鼠的东西而已。但现在，在死亡，枪击，暴力之后，一切都改变了。所以的目光都聚焦在我们身上，我们现在成了一个象征，就像我们画出来的漫画一样。《人道报》Humanité 将《查理周刊》2015年1月7号刊的作家Houellebecq漫画像作为封面，并配上头条标题“自由已被谋杀”，莫大的讽刺。一种沉重的象征主义的重量——原本并不存在于我们的漫画中，也离我们很远的东西，现在落在了我们的肩上。</p>
<p>《查理周刊》1月7号刊，刚出新作《屈服》的Houellebecq登上封面，书中想象了2022年伊斯兰化了的法国。</p>
<p>记者：您所说的“象征主义的重量”是什么意思呢？</p>
<p>Luz: 2007年，当丹麦报纸Jyllands-Posten把一系列穆罕默德的漫画刊登出来之后，我们被看成是为媒体言论自由抗争的麻烦制造者或是勇敢的白衣骑士。在2011年，当我们的办公室被燃烧弹攻击时，我们再一次被看作是白衣骑士。2012年，一部关于穆斯林的喜剧电影上映（穆斯林的无知），当时我们把这部电影画成了相关的漫画，得到了相同的回应：我们再一次成为了危险的麻烦制造者，画出危险的漫画导致法国领事馆关闭、导致在国外的法国人承担恐惧的麻烦制造者。当全球都因此处于恐慌之中时，我们只是该死的一本受大众喜爱的杂志而已。这本杂志成为了国家、国际的象征，但是，被杀死的是“人”，不是“言论自由”！是那些坐在办公室里画漫画的人。</p>
<p>记者：你的意思是说漫画的本质改变了吗？</p>
<p>Luz：自从我们开始画有关穆罕默德的漫画开始，漫画“不承担责任”的本质就开始一点点消失了。从2007年开始，我们的漫画被人们以字面上的意思来理解。人们，包括一些像Plantu那样的漫画家（Plantu，法国政治讽刺漫画家）都认为我们不该画那些关于穆罕默德的漫画，因为这些画都在网络上疯传。因此我们得处处小心遭人报复，这种感觉让人难以忍受。</p>
<p>记者：为什么？</p>
<p>Luz：从2007年开始，《查理周刊》就受到审查并被警告要承担责任。我们画出的每一幅漫画都被解读成是跟政治有关。这些责任就落到了我们肩上。但我们只是一份杂志，买了，打开看了，再合上，就这么简单。若是人们把我们的漫画传到网上，若是媒体强调我们的一些漫画，那是他们的责任，不是我们的。</p>
<p>记者：但同你们事与愿违的事情发生了。</p>
<p>Luz：我们被加上了象征主义的责任，而这本不是《查理周刊》的初衷。我们跟Plantu不同，我们反对象征主义。“战争中鸽子象征着和平”这类隐喻不是我们想要表达的。我们是在细节上下功夫，我们注重的是怎样把我们画的东西用法式幽默表达出来。</p>
<p>记者：漫画在某些情况下会被认为是粗鲁的，或是很朋克的东西。</p>
<p>Luz：有些时候愚蠢，有些时候粗鲁，至于朋克，那是肯定的。有时候漫画不会产生任何影响，另一些时候它就只是供人消遣的娱乐。《查理周刊》聚集了一群思想差异很大的漫画家。根据不同的漫画家用不同的风格来表现一副漫画——画政治或是艺术，漫画的本质也在改变。但是这种多样性的表达方式现在却不复存在了。每一幅漫画都被看作是我们所有人一起完成的。实际上，《查理周刊》一直以来都致力于反对象征主义：我们摧毁符号，打破禁忌，将那些幻想的泡沫破灭。我们很高兴看到人们给予《查理周刊》支持，但同时他们的做法却跟《查理周刊》的初衷背道而驰。</p>
<p>记者：你们现在已经成为引领民族团结的旗帜。</p>
<p>Luz：这种团结能帮助奥朗德巩固整个国家，同样对于勒庞提倡的恢复死刑的主张也有帮助。任何意义的象征主义都能被任何人利用起来做他们想做的事。而这恰恰跟《查理周刊》追求的不同，你不能去做任何你幻想出来的事情。当我们嘲讽，开政治的玩笑，或者说是娱乐大众的时候，我们没有成为一种符号。我认为Charb（《查理周刊》主编，在11.7恐袭案中遇难）是20世纪末、21世纪初的Jean-Marc Reiser，他用自己的方式对这个社会做出评价。他画出藏在表象下的阴影，那些爱说谎的丑陋的人。而现在我们也被掩盖在表象下了。</p>
<p>记者：您的意思是？</p>
<p>Luz：在目前一种情绪状态下发布《查理周刊》是一个正确的时机吗？这样快速地对所攻击的象征主义做出回应适合吗？我很怀疑。用象征主义来回应象征主义，这不是《查理周刊》做的事。昨天晚上我在脑海中描绘出一幅漫画，不过我可能不会把它画出来：地板上一滩滩污渍代表着遇难者倒下的地方，一幅眼镜散落在角落说“哈哈哈”，背景是黑色。这不是一个好的主意，因为它会被打上象征主义的标签。</p>
<p>记者：所以您的问题时“事件过后你们将以什么方式继续画下去？”</p>
<p>Luz：是的，以及我怎样在这样的背景下画画，在《查理周刊》被赋予了那么多幻想之后。</p>
<p>记者：《查理周刊》将怎么继续下去呢？</p>
<p>Luz：这将会很复杂。除了我之前提到的那些原因之外，我们那几个善于画画、善于思考政治、道德、思想激进的同事—— Charb, Tignous, Honoré，还有其他几位，不在了。在这种困难的时刻，我们剩下的人承担着重任。现在只剩下Catherine, Willem, Coco以及我，还有受伤的Riss。单凭我们几个人的力量怎么才能越过这种象征主义呢？（早前从《查理周刊》离职的Jul现在前来帮助策划下一期的内容。）每个人都能成为漫画家，但他们能抓住查理的精神吗？我们的精神流传了22年了，现在这份杂志得以生存至今都是杂志社所有成员的努力。</p>
<p>记者：你们觉得有必要将先知画进讽刺漫画里吗？抑或你们有时候会觉得自己掉进了陷阱里？</p>
<p>Luz：有趣的是在2007年的事件过后我们继续画了一些有关穆罕默德的漫画。在2007年、2011年以及2012年三次画的默罕默德漫画引起争议之后，Charb 和 Zineb El-Rhazoui（在《查理周刊》工作的穆斯林女记者） 又出了两卷关于穆罕默德生活的漫画，但并没有引起轰动。我们的目的达到了。Charb 想要按照这个设想一直进行下去，穿着他的登山鞋，和他喜欢得不得了的实际上很丑的军裤，站在高处（笑）。Charb相信我们可以继续克服禁忌和符号标准。但现在，我们成为了一种符号。当一种符号就是你自己的时候，你能怎么样去摧毁它？</p>
<p>站在被烧毁的办公楼前的Charb。</p>
<p>记者：我不知道。</p>
<p>Luz：我也不知道。这周我不打算去想这个问题，我也不确定以后我会不会来解决它。我们会继续发布《查理周刊》。我会强迫我自己的。我会去思考我死去的朋友们，我知道他们不是为了法国而倒下的！今天，看上去似乎是《查理周刊》为言论自由而死了。但事实很简单，就是我们的朋友死了。我们爱的朋友，那些有着让我们非常欣赏的才华的朋友死了。</p>
<p>记者：在BFMTV上，我们看到现在局势很混乱。Charb的女友Jeannette Bougrab 说，他们值得被埋葬在法国的先贤祠里。</p>
<p>Luz：《查理周刊》不同意这样做。在先贤祠里被火葬对于居里夫人来说并没有改变任何东西！</p>
<p>记者：这将是一个很好的纪念方式。。。</p>
<p>Luz：1月7日晚的自发集会我没有去。在那里人们唱起了国歌。我们谈起Charb, Tignous, Cabus, Honoré, Wolinski: 他们一定会嘲笑这种行为态度。人们用他们喜欢的方式来表达自己，但是共和国不应该也变成一个歇斯底里的送葬者。这是一种悲哀。</p>
<p>记者：我想这将成为你把明天的集会记录在漫画里的理由吧？</p>
<p>Luz：我也不知道。毫无疑问，明天将会有各种美好的场面，泪水，微笑，或许还会有点荒谬。同时这也会表现出《查理周刊》本质的变化：现在来支持我们的人中，有很多都从来没读过我们的作品。我并不是跟他们生气。我们的目标从来都不是说服所有人。</p>
<p>记者：去年11月，Charb发出声明呼吁大家来订阅《查理周刊》，来拯救这本杂志。那个时候这本杂志很孤独。</p>
<p>Luz：自从第三次因为画默罕默德而受到争议之后，一些时候我们感到很孤独。很多关于《查理周刊》无神论的说法、思想都涌现了出来。但实际上我就就只是简简单单，快乐的不信教的人而已。死掉的那些，都是快乐的无信仰的人。现在他们死了，不存在了，就跟其他所有人一样。</p>
<p>记者：对于瓦尔斯总理没有邀请右派的勒庞来参加明天的共和国大游行一事，你怎么看？</p>
<p>Luz：我没有任何看法。</p>
<p>记者：你认为现在人们是有要拯救《查理周刊》的趋势吗？</p>
<p>Luz：说老实话，去救什么？现在大家还在势头上，有气势。而在一年的时间里，这些为言论自由而战的气势又会剩下多少？会给予私人媒体资金赞助吗？人们会抵制纸媒和报刊亭的衰落吗？人们还会买报纸杂志吗？这些气势会剩下什么？也许会剩下，也许不会。</p>
<p>记者：你们将如何工作？</p>
<p>Luz：我们将继续画那些快乐的小人儿。作为漫画家，我们的工作是以这些快乐的人们为素材来画成漫画，以传达一个观点，就是我们所有人都是快乐的小人物，我们会努力把我们需要做的做好。那些被杀害的人都只是画出那些欢快的小人儿的普通人。</p>
<p>记者：因此让你们这些简单快乐的小人物来拯救整个法国，未免太沉重了？</p>
<p>Luz：是的。</p>
<p>（来源：法媒les in rocks，采访：Anne Laffeter）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Responsive web design[第二期]-position/overlay]]></title>
      <url>http://chocoluffy.com/2016/01/20/Responsive-web-design-%E7%AC%AC%E4%BA%8C%E6%9C%9F-position-overlay/</url>
      <content type="html"><![CDATA[<p>在使用position等css属性的时候会经常在’absolute’,’relative’和’static’上进坑。 本文从实战的角度介绍position的各种应用和如何添加一层优雅的渐变背景过渡层。</p>
<a id="more"></a>
<h2 id="position:_static">position: static</h2><p>when dealing with nested container, the parent div is usually set to be <code>position: relative</code> while child div is <code>position: absolute</code> so that the child element can be positioned to any pos within parent container, if the parent div is set to <code>position: static</code>, child element will ignore parent position.</p>
<blockquote>
<p>Note that <code>position: static</code> is CSS default setting, so if we want to use <code>position: absolute</code>, we should always set the parent element to <code>position: relative</code>. ReactNative set the default value back, so no worries.</p>
</blockquote>
<p>when use position properties like <code>top</code> and <code>left</code>, we usually set them to <code>50%</code>, but the result will be like the element’s top left corner is sticked to the center, while the rest of it is not at the center, which is not what we want, we usually use <code>transform</code> property and get it to <code>-50%</code> to center the element.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">top: <span class="number">50</span>%;</span><br><span class="line">left: <span class="number">50</span>%;</span><br><span class="line">transform: translate(<span class="number">-50</span>%, <span class="number">-50</span>%);</span><br></pre></td></tr></table></figure>
<p>这里我们要说说 static 元素的另外一个坑。</p>
<p>absolute, relative: 有 z-index。<br>static: 没有 z-index。<br>没有 z-index 的元素默认在有 z-index 的元素下面。</p>
<p>img 和 h1 元素都是 position: static。z-index 对 static 元素不起作用，因此它们都在绝对定位的元素下面。</p>
<h2 id="position:_relative">position: relative</h2><p>接下来看看我们嘴经常见到的<code>position: relative</code>。<br>简单地说， 就是在这个元素原本的位置上做位移， 因为有了<code>position: relative</code>的设定， 我们可以用<code>top``left</code>来移动这个元素。<br>If you specify position:relative, then you can use top or bottom, and left or right to move the element relative to where it would normally occur in the document.</p>
<p>Let’s move div-1 down 20 pixels, and to the left 40 pixels:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#div-1 &#123;</span><br><span class="line"> position:relative;</span><br><span class="line"> top:20px;</span><br><span class="line"> left:-40px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Notice the space where div-1 normally would have been if we had not moved it: now it is an empty space. The next element (div-after) did not move when we moved div-1. That’s because div-1 still occupies that original space in the document, even though we have moved it. 效果参考：</p>
<p>另外， position:relative 还带来了z-index的属性。</p>
<ul>
<li>references from <a href="https://css-tricks.com/absolute-relative-fixed-positioining-how-do-they-differ/" target="_blank" rel="noopener">Absolute, Relative, Fixed Positioning: How Do They Differ?</a><br>There are two other things that happen when you set position: relative; on an element that you should be aware of. One is that it introduces the ability to use z-index on that element, which doesn’t really work with statically positioned elements. Even if you don’t set a z-index value, this element will now appear on top of any other statically positioned element. You can’t fight it by setting a higher z-index value on a statically positioned element. The other thing that happens is it limits the scope of absolutely positioned child elements. Any element that is a child of the relatively positioned element can be absolutely positioned within that block.</li>
</ul>
<h2 id="position:_absolute">position: absolute</h2><p>如果我们使用<code>position: absolute</code>呢, 这个元素将会脱离文本， 我们可以人意将它摆放到的想去的位置， 注意和static的区别是， 这个absolute是相对<em><strong>上一个定位为relative</strong></em>的定位， 而static是相对浏览器的定位。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#div-1 &#123;</span></span><br><span class="line"> position:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#div-1a &#123;</span></span><br><span class="line"> position:absolute;</span><br><span class="line"> top:<span class="number">0</span>;</span><br><span class="line"> right:<span class="number">0</span>;</span><br><span class="line"> width:<span class="number">200</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>最后一个补充：我们常常和<code>float</code>搭配使用的<code>clear: both</code>, 作用是使得定义了该属性的元素的左侧和右侧均不允许出现浮动元素。</p>
</blockquote>
<h2 id="滚动控制">滚动控制</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"slider-control"</span>&gt;</span><br><span class="line">  &lt;a href=<span class="string">"#native"</span> class=<span class="string">"active"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href=<span class="string">"#touch"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href=<span class="string">"#async"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href=<span class="string">"#flex"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>让它们position: fixed, 效果参考：</p>
<h2 id="overlay_平滑过渡">overlay 平滑过渡</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;section&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">container</span>" <span class="title">id</span>="<span class="title">intro</span>-<span class="title">section</span>"&gt;</span></span><br><span class="line"><span class="class">    &lt;div class="overlay"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="class">    &lt;h1&gt;<span class="title">I</span> <span class="title">Love</span> <span class="title">React</span>&lt;/h1&gt;</span></span><br><span class="line"><span class="class">    &lt;p&gt;<span class="title">I</span> <span class="title">just</span> <span class="title">want</span> <span class="title">to</span> <span class="title">see</span> <span class="title">the</span> <span class="title">so</span>-<span class="title">called</span> <span class="title">live</span>-<span class="title">coding</span>&lt;/p&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class">&lt;/section&gt;</span></span><br></pre></td></tr></table></figure>
<p>将最上面的container的背景设置为图片背景， 然后中间加一个div.overlay的div, 然后通过渐变设置其背景为主背景颜色。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#intro-section&#123;</span></span><br><span class="line">  background-image: url(../image/background.jpg);</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-position: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#intro-section h1, p&#123;</span></span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.overlay&#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: <span class="number">0</span>;</span><br><span class="line">  left: <span class="number">0</span>;</span><br><span class="line">  width: <span class="number">100</span>%;</span><br><span class="line">  height: <span class="number">100</span>%;</span><br><span class="line">  background-image: linear-gradient(rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),rgba(<span class="number">22</span>, <span class="number">21</span>, <span class="number">37</span>, <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><ul>
<li><a href="http://hex2rgba.devoth.com/" target="_blank" rel="noopener">hex to rgba online converter</a></li>
<li><a href="https://github.com/luckymore0520/sike-react-ilovereact" target="_blank" rel="noopener">ilovereact</a></li>
<li><a href="http://gugugupan.github.io/sike-react-ilovereact/" target="_blank" rel="noopener">最后成品效果ilovereact－添加动画</a></li>
<li><a href="https://github.com/gugugupan/sike-react-ilovereact/blob/master/index.html" target="_blank" rel="noopener">上面github项目的index.html</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Flexbox website layout - Intro]]></title>
      <url>http://chocoluffy.com/2016/01/12/Flexbox-website-layout-Intro/</url>
      <content type="html"><![CDATA[<p>My first attempt to build up a responsive website using Flexbox layout. Check <a href="http://chocoluffy.com/flex-layout/">Live Demo</a> here!</p>
<a id="more"></a>
<p>check <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener">this post</a> on the complete guide about Flexbox layout.</p>
<blockquote>
<p>Below is the code that can be applied to many text\presentation related website. [1] font is cool and elegant. [2] layout is fast since we set div to <code>display: flex</code>. We won’t be bother to type that anymore, focusing on “position” and “stretch”</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  background-color: #1F1E34;</span><br><span class="line">  color: #FFF;</span><br><span class="line">  font-family: &quot;Avenir Next&quot;,</span><br><span class="line">      &quot;HelveticaNeue-Light&quot;, &quot;Helvetica Neue Light&quot;, &quot;Helvetica Neue&quot;, Helvetica,</span><br><span class="line">      Arial, &quot;Lucida Grande&quot;, sans-serif;</span><br><span class="line">  font-weight: 100;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">  font-size: 64px;</span><br><span class="line">  font-weight: 100;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h2 &#123;</span><br><span class="line">  font-size: 48px;</span><br><span class="line">  font-weight: 100;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">  font-weight: 400;</span><br><span class="line">  color: #FFF;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a:hover &#123;</span><br><span class="line">  font-weight: 400;</span><br><span class="line">  color: #DADADA;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>especially the font, it is so beautiful!</p>
<p>These units are vh (viewport height), vw (viewport width), vmin (viewport minimum length) and vmax (viewport maximum length). we set the vh to 100 like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  height: 100vh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>for the parent div container, since we want that parent div can take up a viewport height. vh stands for “viewport height”</p>
<blockquote>
<p>Note that <code>flex-direction</code> indicate items’ aligning, rows or columns. Then <code>align-items</code> means main-axis and <code>justify-content</code> is for sub-axis.</p>
</blockquote>
<h2 id="flex">flex</h2><p>在使用 ReactNative 时你会经常看到一个神秘的设定 flex: 1，用了来扩大一个 flexbox。flex 是一个简写，同时设置 flex-grow，flex-shrink 和 flex-basis 三个属性。它们的默认值为：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flex: 0 1 auto;</span><br><span class="line">/*</span><br><span class="line">flex-grow: 0;</span><br><span class="line">flex-shrink: 1;</span><br><span class="line">flex-basis: auto;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
<p>flex: 1 意为 flex: 1 1 auto</p>
<h2 id="Summary_For_All">Summary For All</h2><p>basically using some flex-related properties to structure the whole website.</p>
<p>[1] to formate those section-like website, need to use <code>section</code> tag in html file and set the corresponding containter to be <code>100vh</code> which means the viewport height, so that each section can be strecthed to adapt to your screen height. (which is pretty elegant)</p>
<p>we usually use </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flex-direction: column;</span><br><span class="line">align-items: center;</span><br><span class="line">justify-content: center;</span><br></pre></td></tr></table></figure>
<p>these properties as container’s property.</p>
<blockquote>
<p>Note that we have main-axis and sub-axis, which will help you position the items by <code>align-items: center;
  justify-content: center;</code></p>
</blockquote>
<p>[2] structure inside each section. we may use another flexbox container inside one parent container to hold up more items like navigation or some scrum-map. And in this way, the <code>flex-direction</code> may usually be the opposite to the parent container. For the child container, we may wonder to stretch the block to whatever proportion to the whole layout. we want to use<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flex-grow: 1;</span><br><span class="line">flex-basis: 0;</span><br><span class="line">align-self: stretch;</span><br></pre></td></tr></table></figure></p>
<p>which also applies the same logic from main-axis and sub-axis when setting their values.</p>
<p>Note that the <code>flex-basis</code> is pretty useful when you try to eliminate the effect of inner text to the block when stretching since <code>align-self: stretch</code> ONLY stretch the empty space to full length!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Twitter engine in React]]></title>
      <url>http://chocoluffy.com/2016/01/06/Twitter-engine-in-React/</url>
      <content type="html"><![CDATA[<p>The hand-on project to get myself familiar with React.js, which pulls the latest post from Twitter by using a nodejs module in client-side javascript and allows users to form their own collections and share them via Codepen or other platforms. </p>
<a id="more"></a>
<p><strong>Some important details you want to learn on this project</strong></p>
<h2 id="Browserify">Browserify</h2><p>used for building all the dependency file together in such a way that we can use Node.js module to build up out client-side application. We install it in this way:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install - - save-dev browserify</span><br></pre></td></tr></table></figure></p>
<p>Notice, here is a save-dev flag, which tells npm that it is a development dependency, it will write this dependency in package.json file. Writing a module name into package.json tells npm to install when executed command: <code>npm install</code>. Here is a distinction between running dependency and developing dependency. And since Browserify is used during build time, so it belongs to developing dependency. </p>
<h2 id="Writing_style">Writing style</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">var React = require(&apos;react&apos;);</span><br><span class="line">var Stream = require(&apos;./Stream.react.js&apos;);</span><br><span class="line">var Collection = require(&apos;./Collection.react.js&apos;);</span><br><span class="line"></span><br><span class="line">var Application = React.createClass(&#123;</span><br><span class="line">	getInitialState: function()&#123;</span><br><span class="line">		return &#123;</span><br><span class="line">			collectionTweets: &#123;&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	addTweetToCollection: function(tweet)&#123;</span><br><span class="line">		var collection = this.state.collectionTweets;</span><br><span class="line">		collection[tweet.id] = tweet;</span><br><span class="line">		this.setState(&#123;</span><br><span class="line">			collectionTweets: collection</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line">	removeTweetFromCollection: function(tweet)&#123;</span><br><span class="line">		var collection = this.state.collectionTweets;</span><br><span class="line">		delete collection[tweet.id];</span><br><span class="line">		this.setState(&#123;</span><br><span class="line">			collectionTweets: collection</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	removeAllTweetsFromCollection: function()&#123;</span><br><span class="line">		this.setState(&#123;</span><br><span class="line">			collectionTweets: &#123;&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	render: function()&#123;</span><br><span class="line">		return (</span><br><span class="line">				&lt;div className=&quot;container-fluid&quot;&gt;</span><br><span class="line">					&lt;div className=&quot;row&quot;&gt;</span><br><span class="line">						&lt;div className=&quot;col-md-4 text-center&quot;&gt;</span><br><span class="line">							&lt;Stream onAddTweetToCollection=&#123;this.addTweetToCollection&#125; /&gt;</span><br><span class="line">						&lt;/div&gt;</span><br><span class="line">						&lt;div className=&quot;col-md-8&quot;&gt;</span><br><span class="line">							&lt;Collection tweets=&#123;this.state.collectionTweets&#125; onRemoveTweetFromCollection=&#123;this.removeTweetFromCollection&#125;</span><br><span class="line">							 onRemoveAllTweetsFromCollection=&#123;this.removeAllTweetsFromCollection&#125; /&gt;</span><br><span class="line">						&lt;/div&gt;</span><br><span class="line">					&lt;/div&gt;</span><br><span class="line">				&lt;/div&gt;</span><br><span class="line">			)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br><span class="line">module.exports = Application;</span><br></pre></td></tr></table></figure>
<p>It is in out Application.react.js. The reason we adopt a CommonJS writing style is that it will be convenient for other part of the file to require this react component we just build. So we use  such <code>module.exports = Application;</code> to allow other file when used to require this component. </p>
<h2 id="Children_elements_change_parent’s_elements">Children elements change parent’s elements</h2><p>Focus on this part:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Stream onAddTweetToCollection=&#123;this.addTweetToCollection&#125; /&gt;</span><br></pre></td></tr></table></figure>
<p>the function defined in this react component is passed in, which indicates that this function will be called inside Stream component where since we know addTweetToCollection embodies a <code>setState</code> method, it illustrates how child element can update its parent component’s state.</p>
<p>Thus, in Stream component, we can access this method by using <code>this.props.onAddTweetToCollection</code>. <strong> Child component feed the arguments to parent’s state-changing function which will trigger <code>render()</code> function to re-render the whole children component again. </strong></p>
<h2 id="React_lifecycle_method_API_like_componentDidMount()">React lifecycle method API like componentDidMount()</h2><p>This function is part of react API, that will be called once after the initial rendering finished. At that time, we have a initialed DOM tree, and it will be a perfect time for using another js library! </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">componentDidMount: function()&#123;</span><br><span class="line">	SnapkiteStreamClient.initializeStream(this.handleNewTweet);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">compoentWillUnmount: function()&#123;</span><br><span class="line">	SnapkiteStreamClient.destroyStream();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p><code>componentWillUnmount()</code> will be called when react unmount the components.</p>
<p>And in general, react lifecycle methods can be grouped into three phases.<br>mounting, updating and unmounting. </p>
<p>And in this coding example, we see <code>componentDidMount</code> and <code>componentWillUnmount</code>. Also, we have <code>componentWillMount</code> and other methods</p>
<blockquote>
<p>Note that <code>componentDidMount</code> will be the method when DOM is ready. Thus we usually will introduce other JS library at this method to do something on the DOM tree. For example, Jquery, setInterval, setTimeout and so on.</p>
</blockquote>
<p>say in this example, if we want to use setInterval method:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">componentDidMount: function() &#123;</span><br><span class="line">  this.interval = setInterval(this.handleTick, 1000);</span><br><span class="line">&#125;,</span><br><span class="line">componentWillUnmount: function() &#123;</span><br><span class="line">  clearInterval(this.interval);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>And we use react-don node.js module here. </p>
<p>Some of other lifecycle methods are: <code>shouldComponentUpdate</code>, this will determine whether or not to call the render function, and <code>forceUpdate</code> can skip this function checking. Note that it is a good way to enhance app’s speed when in hundreds of components app. <code>componentWillRecieveProps</code> will invoke wen receiving new props can use <code>setState</code> inside this method while the similar method <code>compontWillUpdate</code> cannot. <code>componentDidUpdate</code> will invoke after each update. </p>
<h2 id="getDefaultProps">getDefaultProps</h2><p>it will set the props if it receive no props from parent components</p>
<h2 id="Checking_for_props_exist?">Checking for props exist?</h2><p>the predicate statement at parent component may sometimes determine whether or not to render a children component. If not, then in later children component part, it should check whether it receives props from parent component. </p>
<h2 id="Validation_function_for_properties">Validation function for properties</h2><p><code>propTypes</code> is used for validating if a property is used and has value. If not, it will report an error to console.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">propTypes: &#123;</span><br><span class="line">	tweet: function(properties, propertyName, componentName)&#123;</span><br><span class="line">		var tweet = properties[propertyName];</span><br><span class="line"></span><br><span class="line">		if(!tweet)&#123;</span><br><span class="line">			return new Error(&apos;Tweet must be set. &apos;);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		if(!tweet.media)&#123;</span><br><span class="line">			return new Error(&apos;Tweet must have an image&apos;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	onImageClick: React.propTypes.func</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>So in <code>propTypes</code>, we are validating the existence of Tweet by obtaining the tweet property object from <code>properties[propertyName]</code>. And for validating the <code>onImageClick</code> part, we only need to ensure that it is a function. so we did:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">onImageClick: React.propTypes.func</span><br><span class="line">```	</span><br><span class="line"></span><br><span class="line">Some similar validation functions provided by React are: React.propTypes.number and so on.</span><br><span class="line"></span><br><span class="line">## this.refs</span><br><span class="line"></span><br><span class="line">Keep in mind, however, that the JSX doesn&apos;t return a component instance! It&apos;s just a ReactElement: a lightweight representation that tells React what the mounted component should look like. In other word, we can insert `ref` property in `render()` , the component it renders, so that we can access that component outside `render` function.</span><br></pre></td></tr></table></figure>
<p>componentDidMount: function(){<br>    this.refs.collectionName.focus();<br>},</p>
<p>render: function(){<br>    return (<br>            <form classname="form-inline" onsubmit="{this.handleFormSubmit}"><br>                <header text="Collection Name: "></header></form></p>
<pre><code>        &lt;<span class="keyword">div</span> className=<span class="string">"form-group"</span> style={inputStyle} onChange={this.handleInputValueChange}
         value={this.state.inputValue} <span class="keyword">ref</span>=<span class="string">"collectionName"</span> /&gt;
         &lt;/<span class="keyword">div</span>&gt;

         &lt;<span class="type">Button</span> label=<span class="string">"Change"</span> handleClick={this.handleFormSubmit} /&gt;
         &lt;<span class="type">Button</span> label=<span class="string">"Cancel"</span> handleClick={this.handleFormCancel} /&gt;
    &lt;/form&gt;
)
</code></pre><p>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">we know that `componentDidMount` will be called instantly after DOM tree is ready.  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## Bootstrap usage in this project</span><br></pre></td></tr></table></figure></p>
<p><div classname="container-fluid"><br>                    <div classname="row"><br>                        <div classname="col-md-4 text-center"><br>                            <stream onaddtweettocollection="{this.addTweetToCollection}"><br>                        </stream></div><br>                        <div classname="col-md-8"><br>                            <collection tweets="{this.state.collectionTweets}" onremovetweetfromcollection="{this.removeTweetFromCollection}" onremovealltweetsfromcollection="{this.removeAllTweetsFromCollection}"><br>                        </collection></div><br>                    </div><br>                </div><br>```</p>
<p>It is where we use some Bootstrap property to quickly add style to the components. Note that we only add those style at the wrapper element for example we always wrap a <code>div</code> outside the target element. </p>
<p>references <a href="http://getbootstrap.com/css/" target="_blank" rel="noopener">this post</a> for more Bootstrap property.</p>
<ul>
<li><code>container-fluid</code> for a full width container, spanning the entire width of viewport.</li>
<li><code>text-center</code> to put the innerHTML text at the center of the element. </li>
<li><code>row</code> will create a horizontal groups of elements. </li>
<li><code>col-md-8</code> and <code>col-md-4</code> for sparing width horizontally.</li>
<li><code>form-group</code> for optimum spacing for labels and input controls.</li>
<li><code>form-control</code> for element inside the form wrapper, usually appear with the <code>form-group</code> class. </li>
</ul>
<h2 id="Try_to_add_color_palette_using_Mustache-js_and_ColorThief-js">Try to add color palette using Mustache.js and ColorThief.js</h2><blockquote>
<p>Due to my technical issue, I can only make it a local version. I will try me best to host it online.</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[D3js in 3D [Animation focus]]]></title>
      <url>http://chocoluffy.com/2015/12/31/D3js-in-3D-Animation-focus/</url>
      <content type="html"><![CDATA[<p>Focus on how animations work in such 3D scene and how I achieve that. <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> here! </p>
<a id="more"></a>
<h2 id="Animation">Animation</h2><p>One key thing for such 3D scene is animations and we need a lot of interaction to finish that cooperation. Thus, in usual, we need to add multiple event listener to many sibling elements and the way we did that is by creating a parent element and by utilizing the event propagation to achieve the goal.</p>
<p>Say, we have a lot of <code>&lt;a-cube&gt;</code> now, and we want to add the click event listener to the <code>&lt;a-cube&gt;</code> below to trigger the animations of the <code>&lt;a-cube&gt;</code> above the scene. [The way we add animations is to append tag <code>&lt;a-animation&gt;</code>  as the childNode of the <code>&lt;a-cube&gt;</code>]. Now, in order to do that attachment in one time, we need to group all the <code>&lt;a-cube&gt;</code> into a container, we can just use a <code>&lt;a-entity id=“meteor”&gt;&lt;/a-entity&gt;</code> to do that thing. So we can add the click event listener at the parent node, and when the childNode get clicked, the event will propagated to the parent level by level, and back then when it achieve the targeted parent. we can trigger the function and do all the <code>append</code> or other actions on <code>e.target</code>. [here <code>e.target</code> refers to the one get clicked]. </p>
<p>In the later interaction. we want the action of one object may trigger another object’s actions. Then, we need to leave such mark to indicate which object may be related to! For example, in my code, I use  a data-attribute called “flag” as a id to indicate which object to bind. So later in the eventListener, we can use <code>e.target.getAttribute(“flag”)</code> to obtain that value for further use like <code>meteorParentNode.childNodes[e.target.getAttribute(“flag”)].append()</code> some animation nodes to the “meteor”!!</p>
<h2 id="Image_on_meteor">Image on meteor</h2><p>In order to make it a fun, I decided to use image as the surface of the meteors ,  and the way to achieve that is to wrap a tag <code>&lt;a-root&gt;</code> and a tag <code>&lt;a-entity&gt;</code> further inside. So now the structure will be like:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-entity some-attributes-here&gt;</span><br><span class="line">	&lt;a-root&gt;</span><br><span class="line">		&lt;a-entity some-attribute-here&gt;</span><br></pre></td></tr></table></figure></p>
<p>And set the src to be some texture image or even in this project some funny images as the surface of the meteors. And that’s it! </p>
<h2 id="Further_Reading">Further Reading</h2><ul>
<li><a href="http://aframevr.tumblr.com/" target="_blank" rel="noopener">Aframe in tumblr</a></li>
<li><a href="https://aframe.io/docs/core/animation.html" target="_blank" rel="noopener">Official Aframe animations guide</a></li>
<li><a href="http://projects.bmannconsulting.com/aframe-boilerplate/" target="_blank" rel="noopener">How to add texture for Aframe objects</a></li>
<li><a href="http://www.kirupa.com/html5/handling_events_for_many_elements.htm" target="_blank" rel="noopener">How to add event listener to multiple sibling elements</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[D3js in 3D]]></title>
      <url>http://chocoluffy.com/2015/12/30/D3js-in-3D/</url>
      <content type="html"><![CDATA[<p>Create a virtual-reality-like scene in mobile and desktop. Using D3js to do the math! Check out <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> now!</p>
<a id="more"></a>
<p>Inspired by <a href="https://www.youtube.com/watch?v=Tb2b5nFmmsM" target="_blank" rel="noopener">d33d</a>, 💣<strong> <a href="http://chocoluffy.com/d3js-Aframe/">Live Demo</a> </strong></p>
<h2 id="Build_up_a_local_server_to_avoid_cross-origin_error">Build up a local server to avoid cross-origin error</h2><p>we know that using <a-image> can do insert the image. Due to the cross-origin problem, in local testing, we need to use a local server to host the static file and its assets, such as images so that when used in html file, it will not cause a cross-origin error. The way we build up a temporary server is to use python. First cd to the corresponding directory, then do:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8000</span><br></pre></td></tr></table></figure></a-image></p>
<p>Then go to the localhost:8000 can see the files. For more detailed info, check <a href="http://stackoverflow.com/questions/8456538/origin-null-is-not-allowed-by-access-control-allow-origin" target="_blank" rel="noopener">this post</a> in stack overflow.</p>
<h2 id="How_to_append_tag_in_multiple_nodes">How to append tag in multiple nodes</h2><p>references <a href="http://stackoverflow.com/questions/24318154/d3-js-append-on-existing-div-and-hierarchy" target="_blank" rel="noopener">this post</a> from stack overflow</p>
<h2 id="Color_palette">Color palette</h2><p>references <a href="http://paletton.com/#uid=10M0u0kiRKW0VGw8oOOrBQoTc+M" target="_blank" rel="noopener">this website</a></p>
<h2 id="How_to_host_your_static_page_in_github">How to host your static page in github</h2><p>references <a href="https://help.github.com/articles/creating-project-pages-manually/" target="_blank" rel="noopener">this post</a></p>
<p>The final result will be, you can access the project site from your github.io website with a branch. The procedure goes well, but it seems that gh-pages cannot host a d3 or aframe pages? Answer: YES, SURE WE CAN!!! for more info, you can just visit <a href="https://chocoluffy.github.io/d3js-Aframe/" target="_blank" rel="noopener">my website</a>, github can host static website for free, so what kind of websites can be called as static? we called those sites as “static” as it only involves client-side scripting if it contains js file. Those who need server-side scripting are called dynamic websites.</p>
<blockquote>
<p>note that in order to use gh-pages to host my project website, you need to name the html file to be <code>index.html</code>. Other file name will not be recognized!!</p>
</blockquote>
<p>To summarize, the basic procedure is:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone … // from github, copy the repo’s https</span><br><span class="line">cd …</span><br><span class="line">git checkout - -orphan gh-pages</span><br><span class="line">git rm -rf .</span><br></pre></td></tr></table></figure>
<p>Then now, the gh-pages should be empty. Move the prepared <code>index.html</code> to here then<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m “First commit”</span><br><span class="line">git push origin gh-pages</span><br></pre></td></tr></table></figure></p>
<p>Then, go to www.chocoluffy.com/<your-project-name>, you can see the project site!!</your-project-name></p>
<h2 id="How_A-frame_works">How A-frame works</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-assets&gt;</span><br><span class="line">  &lt;a-mixin id=&quot;red&quot; material=&quot;color: red&quot;&gt;&lt;/a-mixin&gt;</span><br><span class="line">&lt;/a-assets&gt;</span><br><span class="line">&lt;a-scene&gt;</span><br><span class="line">  &lt;a-entity camera look-controls wasd-controls&gt;&lt;/a-entity&gt;</span><br><span class="line">  &lt;a-entity light=&quot;type: point; color: #EEE; intensity: 0.5&quot; position=&quot;0 3 0&quot;&gt;&lt;/a-entity&gt;</span><br><span class="line">  &lt;a-light color=&quot;#da47da&quot; position=&quot;0 0 0&quot; type=&quot;ambient&quot;&gt;&lt;/a-light&gt;</span><br><span class="line">  &lt;!-- &lt;a-sky color=&quot;#c8f8e0&quot;&gt;&lt;/a-sky&gt; --&gt;</span><br><span class="line">  &lt;a-sky src=&quot;road.jpg&quot;&gt;&lt;/a-sky&gt;</span><br><span class="line">&lt;/a-scene&gt;</span><br></pre></td></tr></table></figure>
<p>References <a href="https://aframe.io/docs/primitives/a-sky.html" target="_blank" rel="noopener">this website</a> for more A-frame primitives.</p>
<p>Then by using d3js, we can add corresponding number of <a-entity> to the scene from data array.</a-entity></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      var data=[10, 10, 10, 10, 10, 10, 10, 10, 10, 10]</span><br><span class="line">      var tip = -0.5;</span><br><span class="line">      var radius = 6;</span><br><span class="line">      var scene = d3.select(&quot;a-scene&quot;)</span><br><span class="line">      scene.append(&quot;a-camera&quot;)</span><br><span class="line">           .attr(&#123;</span><br><span class="line">            position: function()&#123;</span><br><span class="line">              var x = 0;</span><br><span class="line">              var y = tip;</span><br><span class="line">              var z = 0;</span><br><span class="line">              return x + &quot; &quot; + y + &quot; &quot; + z</span><br><span class="line">            &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">      var cubes = scene.selectAll(&quot;a-entity.bar&quot;).data(data)</span><br><span class="line">                  .enter()</span><br><span class="line">                  .append(&quot;a-entity&quot;)</span><br><span class="line">                  .classed(&quot;bar&quot;, true)</span><br><span class="line">                  .attr(&#123;</span><br><span class="line">                    // mixin: &quot;link&quot;,</span><br><span class="line">                    material: &quot;color: #7BC8A4&quot;,</span><br><span class="line">                    geometry: &quot;primitive: box; width: 2; height: 2; depth: 2&quot;,</span><br><span class="line">                    position: function(d, i)&#123;</span><br><span class="line">                      var theta = (i / data.length) * (2 * Math.PI);</span><br><span class="line">                      var x = radius * Math.cos(theta); </span><br><span class="line">                      var y = 0;</span><br><span class="line">                      var z = radius * Math.sin(theta);</span><br><span class="line">                      return x + &quot; &quot; + y + &quot; &quot; + z</span><br><span class="line">                    &#125;,</span><br><span class="line">                    rotation: function(d, i)&#123;</span><br><span class="line">                      var x = 0;</span><br><span class="line">                      var y = -360 * i/data.length;</span><br><span class="line">                      var z = -80*Math.atan(tip/radius);</span><br><span class="line">                      return x + &quot; &quot; + y + &quot; &quot; + z</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;)</span><br><span class="line">    cubes.append(&quot;a-mouseenter&quot;)</span><br><span class="line">         .attr(&#123;</span><br><span class="line">            // scale: &quot;1 2 1&quot;,</span><br><span class="line">            position: &quot;0 2 0&quot;,</span><br><span class="line">            visible: false</span><br><span class="line">         &#125;)</span><br><span class="line">    cubes.append(&quot;a-mouseleave&quot;)</span><br><span class="line">         .attr(&#123;</span><br><span class="line">            scale: &quot;1 1 1&quot;</span><br><span class="line">            // position: &quot;0 2 0&quot;</span><br><span class="line">            // visible: true</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure>
<p>Find the structure of this scene, it will like having several <code>&lt;a-entity&gt;</code> inside <code>&lt;a-scene&gt;</code>, and each of <code>&lt;a-entity&gt;</code> has multiple attributes that defines its position, rotation, material and geometry. And inside the <code>&lt;a-entity&gt;</code>, also has  <code>&lt;a-mouseenter&gt;</code> and <code>&lt;a-mouseleave&gt;</code> tags which helps define the actions when hovered. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[【转载】为什么大公司不会偷取你的想法]]></title>
      <url>http://chocoluffy.com/2015/12/28/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%A7%E5%85%AC%E5%8F%B8%E4%B8%8D%E4%BC%9A%E5%81%B7%E5%8F%96%E4%BD%A0%E7%9A%84%E6%83%B3%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>那些难以复制的。</p>
<a id="more"></a>
<h2 id="前言">前言</h2><p>[唠叨]好久没有更新公众号了， 之前因为一个机器学习的比赛和期末考， 21号结束期末考之后又接了一项数据可视化的比赛， 同时手上还有一些rails app项目想好好干一番， 所以平时只能断断续续地写一些思考。 也托大家的福， 最后那门人脸表情识别的比赛在所有本科生和研究生里面排第6，准确率达到82%， 冠军是84%。 最近也会把这个比赛的一些技巧心得写到博客里，对机器学习感兴趣的同学可以直接发消息到后台和我交流。我的博客收集了平时项目中遇到的technical技巧和思考还有一些不错的公众号的文章， 欢迎参观：www.chocoluffy.com 有一些关于社会人文的文字之后会陆陆续续和大家见面， 最近一段时间先更新一些关于商业圈的想法和读书笔记， 比如这一篇。</p>
<p>在面对投资人的时候， 很多VC都会问你这样的一个问题：如果大公司偷了你的想法的话， 你怎么办? </p>
<p>我想， 先不要把自己代入后果， 在各种利弊分析中致自己于死地， 而是尝试从根本去想， 为什么大公司想偷(采用)我们小startup的想法， 从这个角度做到自圆其说， 对投资人而言也是一剂强心针。 不过说服归说服的技巧， 下文所列为你可以尝试切入的分析原因， 希望你可以在自己的产品上真正做到不可复制。</p>
<p>[1] 大公司不会像VC那样的portfolio investing， 好比如说作为一个VC， 你可以在一个项目投入几十万， 在另一个项目投入几十万， 你有一个不把鸡蛋放在同一个篮子的原则， 但是大公司做不到， 大公司在每进入一个新市场， 承担的是所有stock holder的期望， 他们的试错成本太高， 往往会是在经过了深思熟虑之后的大举侵入。 你说不是谷歌和facebook不是投入了很多资金在许多不同的研究上吗， 但是如果仔细想想， 投资或者收购， 以及其他的很多战略都可以从其意图中推敲出来， 有些投资和入股是防御性质的， 是希望创造一个暂时垄断市场的， 比如中国你最近听到的大部分合并。 而谷歌\facebook的那一种投资是用于开拓市场的， 是希望在未来当舆论熟悉了新的科技场景的时候， 他们能够在研发上占得先机。 所以当你一个做O2O食品分发的， 送外卖的， 被问到， 如果你的想法被大公司知道了话， 你怎么办的话， 你完全不用傻傻地觉得你会被有钱的大公司直接干掉， 大公司， 基于他的身份和社会预期， 大部分时候只会选择成熟的市场和场景。 对国内的市场尤其是如此， 就好比， 当国内的大公司发掘到这是一个有利可图的战略市场的市场的时候， 他们的第一选择绝对不是自己do from scratch， 他们要么会选择收购， 要么就是战略入股。 而那时候， 如果你真的够格的话， 也会走到市场的前几名了。<br>[2] 普通大公司的固有惰性， 其实这一点和上一点有重叠。下面参考文章中所述简洁明了， 不再赘述。<br>[3] 与其花时间想象一堆可能不存在的假想敌， 还不如想想更致命的问题， 比如， 到底这个你准备进入的市场需要你提供的服务嘛？ 你能提供的是一个容易被模仿的feature， 还是一个难以复制的product? 想起在08-11年硅谷超级火的独角兽之一dropbox， 当时其实在乔布斯还在的时候， 曾在得知dropbox的产品后马上透露收购的意愿， 当时他的解释是“it’s more like a feature than a product”。最终dropbox拒绝了来自apple的收购， 现在面对来自google drive，icloud， 各种云服务， 国内的比如七牛等等的威胁， dropbox的魅力已早不复之前。</p>
<p>参考的原文阅读如下， 和大家分享。</p>
<p>余舜哲</p>
<p>2015.12.28</p>
<h2 id="Startups:_Why_Google/_Facebook/_Apple/_SalesForce_(probably)_won’t_steal_your_lunch_money">Startups: Why Google/ Facebook/ Apple/ SalesForce (probably) won’t steal your lunch money</h2><p>It’s the one question which always gets asked of a startup - why won’t (insert market leader here) simply implement your great idea themselves, wiping you out in the process?</p>
<p>A reasonable enough question given the billions of dollars and thousands of engineers available to them, as compared to the typical startup’s resources. </p>
<p>It’s worth outlining the reasons why in fact Goliath has fewer advantages than you might think as compared to David.</p>
<h3 id="Innovation_is_a_Crap_Shoot">Innovation is a Crap Shoot</h3><p>No one really knows that your great idea is great. That’s only found out when the revenue comes in, and by that stage, you’re well on the way to becoming the next generation incumbent. VC’s don’t invest in companies. VC’s invest in markets, and people (specifically CEO’s). They understand that in a hot market, they have a shot at the unicorn which will become the market leader, and a very good chance of a 2nd to 5th place player that will deliver the returns needed to keep the limited partners in order. If the market is hot enough, you won’t loose your shirt even on the also-rans. Failures are buried, and history rewritten to emphasize the foresight of picking the 1-2 mega hits which pay the returns and the 20-30 “failures” (and remember some may still be pretty successful by most people’s reckoning) simply forgotten. </p>
<p>It’s a portfolio business (the technical term for “crap shoot”), and one which most VC’s only play with a fund size of $100-$500M. You can’t “just” invest $10M in Facebook circa 2004 and be done - it’s not that easy - you need to invest in a wide portfolio, and that takes serious amounts of money that even market leaders baulk at when trying to run their own innovation program.</p>
<p>This model also requires darwinian culling - something VC’s can do easily since all they have to do is simply stop returning calls when the cash runs out. It’s much harder for a large company psychologically or practically to fire an under-performing R&amp;D team. Google is often quoted as a counter example, and certainly they end-of-life projects with impressive regularity, but even Google have shown far more patience with Google+ than any VC would. Large companies are like mammals with their young. VC’s parent like fish, and whilst it’s cold-blooded (no pun intended), it’s more effective. </p>
<p>Large companies are not competing with one 5 million startup, they are competing against a $B ecosystem, which is why so often it’s the startup that comes out on top. Large companies cannot run projects as portfolios like VC’s can.</p>
<h3 id="Everbody_is_Loss-averse">Everbody is Loss-averse</h3><p>Nobody wants to cannibalize revenue. Start-ups don’t have any revenue, ergo, they don’t worry about cannibalization. It’s not easy to walk away from stable, predictable (even if declining) revenues. By comparison, this latest new fangled widget may or may not deliver in the market. Better to invest in an upgraded line of mainframes…</p>
<h3 id="Large_Companies_are_Process-bound">Large Companies are Process-bound</h3><p>Everyone can say no, and no one can say yes. Or more charitably, there is a need to get “buy-in” across the corporation, where “across” can be departments scattered over the globe. There is an inherent inertia, built around middle management more focused on managing their own pension trajectory. Upper management is often too distant from the market realities to identify up-and-comers. And people at the bottom just do as they are told. Or go and form their own startup…</p>
<h3 id="Large_Companies_need_Large_Projects">Large Companies need Large Projects</h3><p>All large companies fundamentally become conglomerates. When you are the market leader, the only place to grow is another market. If you are delivering several billion per quarter, then only large projects can move the needle. Sure, a startup growing at 100% pa looks impressive, but the additional $1M revenue would be just a rounding error. </p>
<p>Where large companies do focus in innovating is in the area of large capital intensive bets - think Google StreetView, something which would be hard for a startup to compete with.</p>
<p>This also impacts growth strategy. From the early 90’s Oracle stopped being a database company, transitioning to a full-suite enterprise IT provider today - hardware, software, and services. People often confuse the fact that SalesForce is the incumbent market leader in CRM with the belief that SalesForce is still a CRM company. Salesforce today is a Platform-as- a-Service company looking to expand out their footprint with big data and everything else. They want to be Oracle for Cloud. With 85% of IT spending coming from enterprise customers, Marc Benioff could not care less about smaller customers nor the CRM startups earning their stripes with them, any more than Oracle gives a monkey about MongoDB.</p>
<h3 id="Not_Invented_Here">Not Invented Here</h3><p>Google offered themselves to Excite in 1999 for the princely sum of $1M - but Excite pooh-poohed the idea, since it was so simple to implement themselves. The funny thing is, they were right, but they just never got around to doing it. The rest, as they say, is history. Excite Turns Down Google Acquisition - In Photos: 6 Business Deal Disasters</p>
<p>It’s hard as a big company product manager with access to hundreds of developers to accept they could have missed something a couple a geeks with barely a pot noodle between them have managed. So usually they don’t.</p>
<h3 id="Large_Companies_aren’t_Large">Large Companies aren’t Large</h3><p>Large companies have lots of departments. Each of which may or may not be that big. “But they still have lots of resources”. Yes, but there are all doing things, and in terms of the actual skill sets needed, no, they don’t. </p>
<p>I joined Sybase (1500 employees at the time) from IBM (300,000 employees) in the 90’s and was surprised that up-and-coming Sybase (which only did databases) had twice the number of database focused staff than IBM (which did everything including project manage the delivery of military helicopters). I wasn’t surprised then when joining the startup Illustra (&lt; 80 staff) that we still had more web database expertise than Informix, Oracle and Sybase put together. Informix eventually coughed up $400M for Illustra.</p>
<h3 id="Time_is_Money">Time is Money</h3><p>Why, on earth, did Facebook not simply reproduce the 24 man-month effort that Instagram represented, rather than pay an eye-popping $1B???</p>
<p>It wasn’t an acqui-hire for 13 staff. Nor was it really about market share, since almost every one of Instagram’s 30M customers would already be using Facebook (845M at that time). And it certainly wasn’t about acquiring revenue - Instagram had none, nada, zero, zilch, $0.00.</p>
<p>The reason was that Facebook was convinced that this was the future of photo-sharing and would put their own business at risk (since Facebook, reduced, is really about photos). For all the reasons outlined above, they knew that it would take at least 12 months to replicate that, and in that time there could have been a significant reversal of fortunes between the incumbent and the startup. Buying rather than building means additional revenue, but at levels commensurate with the acquiring company’s existing sales and marketing channels - not the startup’s. This can easily justify apparently silly revenue multiples, since the comparison point is not what Instagram is currently doing, but rather what Facebook would be missing out on, were it not. With Facebook doing almost $3B in 3Q14, then paying just one month’s revenue for Instagram now looks like a bargain given its importance to the Facebook value proposition.</p>
<p>Focus on the Customers, not the Competition</p>
<p>You can’t reliably grow an oak tree by relying on just one acorn. You need a full tray of seedlings, thinning some out and nurturing the rest, and hopefully at least one will turn out well. It’s actually the entire premise of the VC model, and it’s also the reason big companies don’t typically stamp on startups, since they don’t know which seedling will be the one to finally overtake them, and there are too many to snuff them all out. </p>
<p>Like all generalizations in business there are exceptions. Developing a feature for a market leader typically does not end well, but these should be clear to identify. The general rule though, is clear. Few startups are actually at risk from the incumbents they seek to displace. The greater risk is does any part of the market actually want what you offer?</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ActionCable in Rail5 实战笔记]]></title>
      <url>http://chocoluffy.com/2015/12/26/ActionCable-in-Rail5-%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>rails5 ActionCable in chatroom, 为之后开发狼人多人游戏做准备</p>
<a id="more"></a>
<ul>
<li>整个流程<br>After <code>rails new chat</code> and <code>bundle install</code>, we add some related in Gemfile, so now it will look like this:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">source &apos;https://rubygems.org&apos;</span><br><span class="line"></span><br><span class="line">gem &apos;rails&apos;, &apos;4.2.3&apos;</span><br><span class="line">gem &apos;actioncable&apos;, github: &apos;rails/actioncable&apos;</span><br><span class="line"></span><br><span class="line">gem &apos;sqlite3&apos;</span><br><span class="line">gem &apos;coffee-rails&apos;, &apos;~&gt; 4.1.0&apos;</span><br><span class="line">gem &apos;jquery-rails&apos;</span><br><span class="line">gem &apos;turbolinks&apos;</span><br><span class="line">gem &apos;puma&apos;</span><br><span class="line">gem &apos;uglifier&apos;, &apos;&gt;= 1.3.0&apos;</span><br><span class="line"></span><br><span class="line">group :development, :test do</span><br><span class="line">  gem &apos;byebug&apos;</span><br><span class="line">  gem &apos;spring&apos;</span><br><span class="line">  gem &apos;web-console&apos;, &apos;~&gt; 2.0&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>[1] in routes.rb, we set the root page to be<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root ‘sessions#new’</span><br></pre></td></tr></table></figure></p>
<p>which means that it will first find the SessionsController’s new method and implement it. We know in rails that when it runs a controller method, it will also render the corresponding views html.erb in view folder. Thus the <code>views/sessions/new.html.erb</code> will be first rendered. </p>
<p>Further observing in routes.rb:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Rails.application.routes.draw do</span><br><span class="line">  resources :messages, only: [:index, :create]</span><br><span class="line">  resources :sessions, only: [:new, :create]</span><br><span class="line">  root &apos;sessions#new&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<p>we find the use of <code>resources</code>, which means we treat those objects as RESTFUL as we could, those objects in their controllers will have all seven methods like new, create, update, destroy and so on which corresponds to the Http Verbs like post, get and so on.</p>
<h2 id="Then,_we_look_at_the_new-html-erb">Then, we look at the new.html.erb</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= form_for :session, url: sessions_path do |f| %&gt;</span><br><span class="line">	&lt;%= f.label :username, &apos;Enter a name&apos; %&gt;&lt;br/&gt;</span><br><span class="line">	&lt;%= f.text_field :username %&gt; &lt;br&gt;</span><br><span class="line">	&lt;%= f.submit &apos;Start chatting&apos; %&gt;</span><br><span class="line">&lt;% end %&gt;</span><br></pre></td></tr></table></figure>
<p>where <code>:session</code> is the name for this form, when in use in SessionsController, we obtain the information in this form by<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookies.signed[:username] = params[:session][:username]</span><br></pre></td></tr></table></figure></p>
<p>And <code>url: sessions_path</code> is for directing the action to SessionsController#create.</p>
<h2 id="In_MessagesController-rb">In MessagesController.rb</h2><p>we use index to render the view<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Signed in as @&lt;%= cookies.signed[:username] %&gt;.</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;messages&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;%= form_for :message, url: messages_path, remote: true, id: messages-form do |f| %&gt;</span><br><span class="line">	&lt;%= f.label :body, &apos;Enter a message:&apos; %&gt; &lt;br&gt;</span><br><span class="line">	&lt;%= f.text_field :body %&gt; &lt;br&gt;</span><br><span class="line">	&lt;%= f.submit &apos;Send message&apos; %&gt;</span><br><span class="line">&lt;% end %&gt;</span><br></pre></td></tr></table></figure></p>
<p>where the cookies are carrying the parameters we need in another controller, while the empty <code>div</code> will eventually be filled with previous content. As for the form, it will pretty similar as the SessionsController#new.</p>
<ul>
<li>here we use <code>remote: true</code>, which is calling with Ajax. In usual case, we will need to specify the partial js file we want to implement in MessagesContrller#create method. * But, here we just want it to reload again without refreshing the page.</li>
</ul>
<h2 id="ActionCable">ActionCable</h2><p>ActionCable uses Redis for publishihng and subscribing to the messages, so we need to configure Redis in config/redis/cable.yml. You will need Redis installed and running for ActionCable to work.</p>
<h2 id="Redis">Redis</h2><p>reds is a key-value store, often referred to as a NoSQL database. Key features are that: [1] the data can be retrieved by key later in use. [2] the key-value will be stored permanently.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SET server:name “fido”</span><br><span class="line">GET server:name</span><br><span class="line">DEL server:name</span><br><span class="line">INCR count</span><br></pre></td></tr></table></figure>
<p>Compared with<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = GET count</span><br><span class="line">x = x + 1</span><br><span class="line">SET count x</span><br></pre></td></tr></table></figure></p>
<p>we choose to use INCR because it is a atomic operation which will work as expected if multiple users want to access this value.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPIRE server:name 120 //after 120s this value will vanish</span><br><span class="line">TTL server:name // obtain after how long it will vanish</span><br></pre></td></tr></table></figure></p>
<h3 id="List_operation">List operation</h3><p><code>RPUSH, LPUSH, LLEN, LRANGE, LPOP, RPOP</code></p>
<h3 id="Set_operation">Set operation</h3><p><code>SADD, SREM, SISMEMBER, SMEMBERS, SUNION</code><br>where <code>SMEMBERS</code> returns a list of all members of this set.</p>
<h3 id="Sorted_Set">Sorted Set</h3><p><code>ZADD, ZRANGE</code></p>
<h3 id="Hashes">Hashes</h3><p><code>HSET, HGETALL, HMSET, HGET, HINCRBY, HDEL</code> like</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HMSET user:1001 name &quot;Mary Jones&quot; password &quot;hidden&quot; email &quot;mjones@example.com&quot;</span><br><span class="line">HGETALL user:1001</span><br></pre></td></tr></table></figure>
<h2 id="Adding_our_MessagesChannel">Adding our MessagesChannel</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># app/channels/messages_channel.rb</span><br><span class="line">class MessagesChannel &lt; ApplicationCable::Channel</span><br><span class="line">  def subscribed</span><br><span class="line">    stream_from &apos;messages&apos;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>whenever a client subscribes to MessageChannel, the <code>#subscribed</code> method will be called, which starts streaming anything you broadcast to the “messages” stream.</p>
<h2 id="Future_learning">Future learning</h2><ul>
<li><a href="https://gorails.com/episodes/rails-5-actioncable-websockets" target="_blank" rel="noopener">Rails 5’s ActionCable and Websockets Introduction</a></li>
<li><a href="https://github.com/rails/actioncable-examples" target="_blank" rel="noopener">Action Cable Examples</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[优化hexo博客]]></title>
      <url>http://chocoluffy.com/2015/12/25/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E6%9C%80%E6%A3%92%E7%9A%84%E7%B4%A0%E6%9D%90%E5%92%8C%E6%95%99%E7%A8%8B%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>在搭建hexo博客的时候遇到的各种坑， 留下一些最棒的博文和大家分享!</p>
<a id="more"></a>
<h2 id="常用功能">常用功能</h2><h3 id="添加豆瓣读书插件">添加豆瓣读书插件</h3><blockquote>
<p>每一次如果<code>hexo g</code>会报错，通常都是因为我系统的node的版本不对；需要用<code>nvm use system</code>来改成node 4.5来运行操作。</p>
</blockquote>
<p><a href="https://github.com/ForbesLindesay/sync-request" target="_blank" rel="noopener">GitHub - ForbesLindesay/sync-request: Make synchronous web requests with cross platform support.</a> 用sync-request来修改hexo-douban，实现爬去书籍消息的功能。</p>
<p>demo: <a href="https://blog.mythsman.com/books/" target="_blank" rel="noopener">https://blog.mythsman.com/books/</a></p>
<p>开发的组件博客 <a href="https://blog.mythsman.com/" target="_blank" rel="noopener">https://blog.mythsman.com/</a><br>github： <a href="https://github.com/mythsman/hexo-douban/blob/master/lib/templates/book.ejs" target="_blank" rel="noopener">hexo-douban/book.ejs at master · mythsman/hexo-douban · GitHub</a></p>
<p>类似的但是样式上差一点的另一个组件 <a href="https://github.com/Yikun/hexo-generator-douban" target="_blank" rel="noopener">GitHub - Yikun/hexo-generator-douban: Douban page generator plugin for Hexo.</a></p>
<h3 id="添加微博组件">添加微博组件</h3><p><a href="http://kuangqi.me/tricks/add-weibo-show-in-hexo/" target="_blank" rel="noopener">在Hexo博客中添加微博秀 | The Bloom of Youth | 锦瑟华年</a></p>
<p><a href="https://suarezzz.github.io/2016/07/02/hexo-useful-tools/" target="_blank" rel="noopener">Hexo有用的工具和插件汇总 | suarezzz’s blog</a></p>
<h3 id="怎样使用七牛云服务来存储静态资源">怎样使用七牛云服务来存储静态资源</h3><ul>
<li><a href="https://linux.cn/article-2311-1.html" target="_blank" rel="noopener">Linux中国采用“七牛”云存储支撑图片访问</a></li>
<li><a href="https://blog.blahgeek.com/qiniu-cdn-serve-static/" target="_blank" rel="noopener">使用七牛CDN加速博客静态文件访问</a></li>
</ul>
<p>个人的话， 我其实用的是微博图床， 也很方便。 类似的服务还有dropbox, google drive等等。</p>
<p>Edit: 16.3.12更新， 现在我自己通过自己写的scripts来自动化将博文中的image上传的任务了， 所有的图片都将上传到leancloud然后得到一个external url可以在md博客中直接展示， 这样做更加的自动化和节省我的时间!! 具体操作方法看下面的介绍。</p>
<h3 id="关于hexo__config文件的配置细节">关于hexo _config文件的配置细节</h3><p>推荐博文：</p>
<ul>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">hexo你的博客</a></li>
<li><a href="https://gist.github.com/mabrasil/dc245da48a757b91b777" target="_blank" rel="noopener">给hexo添加disqus的评论框</a></li>
<li><a href="http://ibruce.info/2013/12/22/count-views-of-hexo/" target="_blank" rel="noopener">给hexo博文添加访问次数统计-不蒜子统计</a></li>
</ul>
<h3 id="关于hexo基础的command">关于hexo基础的command</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;article name&quot;</span><br><span class="line">hexo new page &quot;about&quot; # 给blog添加一个新的main entry endpoint. 比如/about等</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>可以利用这个<code>hexo new page &quot;about&quot;</code>这个想法来收集很多的放在collection里面的东西， 比如自己的photography, 自己的bookreview等等， 就是那些不适合放在单独的博客文章中的东西， 都可以尝试整理在这里面， 然后在一个portal里面留下入口， 比如在”/life”里面留下我的”/photography”和”/bookreview”等等， 这样会更加的organized。</p>
<h3 id="在hexo博客里面内嵌html静态网页">在hexo博客里面内嵌html静态网页</h3><p>我们有将静态网页展示出来作为example的需求， 尤其是在介绍新技术的时候，首先将该静态网站部署在服务器上， 无论是github上利用gh-pages的静态前端网页， 还是elastic beanstalk的后端serve的前端(利用express的<code>app.use(express.static(__dirname + &#39;/public&#39;));</code>可以将public文件夹下面的html文件都serve出来!!!!)， 这么做的好处是我们可以得到external URL， 可以将这个URL插入在iframe里面， 然后在md文章里面直接使用!!!! 比如下面这个例子亲测成功， 注意就是要将插入的网页居中就是了!!</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">'text-align:center'</span> <span class="attr">markdown</span>=<span class="string">'1'</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://mdn-samples.mozilla.org/snippets/html/iframe-simple-contents.html"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>Your browser does not support iframes.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="居中文本\图片样式">居中文本\图片样式</h3><p>具体效果参考<a href="http://chocoluffy.com/2015/03/30/%E4%BC%AF%E5%85%8B%E5%88%A9%E7%9A%84%E7%A7%98%E5%AF%86-%E4%B8%8A-%E6%A2%A6%E6%83%B3%E7%9A%84%E7%81%AB%E5%85%89/">这篇博文</a>的样式， 其中在第一段添加了居中文本作为开头。 特别适合在段落间插入， 作为章节的小结， 很优雅~</p>
<p>使用方法<code>&lt;blockquote class=&quot;blockquote-center&quot;&gt;blah blah blah&lt;/blockquote&gt;</code></p>
<p>将图片居中方法<code>&lt;img src=&quot;http://ac-TC2Vc5Tu.clouddn.com/6ceefbf6929babac.png&quot; style=&quot;display: block; margin: 0 auto;&quot;&gt;</code>， 直接添加inline styling， 在markdown中插入html image tag。</p>
<p>将图片突破通常边际大小的样式<code>&lt;img src=&quot;/image-url&quot; class=&quot;full-image&quot; /&gt;</code>。</p>
<h3 id="关于怎样自动化博文图片上传">关于怎样自动化博文图片上传</h3><p>参考<a href="http://laobie.github.io/python/2016/04/24/replace-image-file-in-markdown.html" target="_blank" rel="noopener">自动化替换 Markdown 中的本地图片引用</a>。 我已经在我的.zshrc文件里面配置好了， 之后写一些多图的博客文章的时候， 可以先放一个<code>img/demo.jpg</code>这样的路径占位， 之后在从quiver export出md文件后在那个文件夹目录下创建img文件夹和要用的图片执行<code>lzmd source.md target.md</code>即可。<a href="https://github.com/chocoluffy/lazy-markdown" target="_blank" rel="noopener">github链接</a></p>
<p>参考<a href="http://www.denizoguz.com/2013/08/07/how-to-align-images-in-markdown/" target="_blank" rel="noopener">将markdown文章中的图片居中</a>。 还需要做的事是， 把这个做法加入到lzmd的scripts里面， 做到一起的自动化。<a href="https://github.com/chocoluffy/lazy-screen-capture" target="_blank" rel="noopener">github链接</a></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replace_img</span><span class="params">(source_md, target_md, conn)</span>:</span></span><br><span class="line">    image_list = get_image_list_from_md(source_md)</span><br><span class="line">    md_content = open(source_md).read()</span><br><span class="line">    fb = open(target_md, <span class="string">'w'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'start &gt;&gt;&gt;&gt;&gt;\n'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> image <span class="keyword">in</span> image_list:</span><br><span class="line">        source_img = os.path.join(os.path.split(source_md)[<span class="number">0</span>], image[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(source_img):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        db_data = find_in_db(conn, calc_hash(source_img))</span><br><span class="line">        <span class="keyword">if</span> db_data:</span><br><span class="line">            print(<span class="string">"[%s] &gt;&gt;&gt; url: %s"</span> % (os.path.split(source_img)[<span class="number">1</span>], db_data[<span class="number">1</span>]))</span><br><span class="line">            url = db_data[<span class="number">1</span>]</span><br><span class="line">            // 重点在添加一个子元素align的div wrapper</span><br><span class="line">            md_content = md_content.replace(image[<span class="number">0</span>], <span class="string">"&lt;div style='text-align:center' markdown='1'&gt;"</span> + image[<span class="number">0</span>].replace(image[<span class="number">1</span>], str(url)) + <span class="string">"&lt;/div&gt;"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> os.path.isfile(source_img):</span><br><span class="line">            compressed_img = os.path.join(os.path.split(source_img)[<span class="number">0</span>], <span class="string">'cp_'</span> + os.path.split(source_img)[<span class="number">1</span>])</span><br><span class="line">            compress(source_img, compressed_img)</span><br><span class="line">            url = upload(compressed_img)</span><br><span class="line">            // 重点在添加一个子元素align的div wrapper</span><br><span class="line">            md_content = md_content.replace(image[<span class="number">0</span>], <span class="string">"&lt;div style='text-align:center' markdown='1'&gt;"</span> + image[<span class="number">0</span>].replace(image[<span class="number">1</span>], str(url)) + <span class="string">"&lt;/div&gt;"</span>)</span><br><span class="line">            write_db(conn, calc_hash(source_img), url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> source_img + <span class="string">"is not exit or not a file"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'\n&lt;&lt;&lt;&lt;&lt; end'</span></span><br><span class="line"></span><br><span class="line">    fb.write(md_content)</span><br><span class="line">    fb.close()</span><br></pre></td></tr></table></figure>
<h2 id="Further_Reading_(more_useful_links)">Further Reading (more useful links)</h2><ul>
<li><p><a href="https://gist.github.com/andyferra/2554919" target="_blank" rel="noopener">github markdown css standard</a> 如果希望自己tweak一下自己博客的样式， 尤其是markdown渲染出来的效果， 可以参考下github的markdown样式， 我就自己对着修改了一些</p>
</li>
<li><p><a href="http://designshack.net/articles/css/5-simple-and-practical-css-list-styles-you-can-copy-and-paste/" target="_blank" rel="noopener">添加styling for html list(ordered or unordered)</a></p>
</li>
<li><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">hexo next主题官方配置文档</a></p>
</li>
<li><p><a href="https://css-tricks.com/snippets/css/simple-and-nice-blockquote-styling/" target="_blank" rel="noopener">Simple and nice blockquote styling</a> </p>
</li>
<li><p><a href="http://www.smashingmagazine.com/2014/08/build-blog-jekyll-github-pages/" target="_blank" rel="noopener">Build A Blog With Jekyll And GitHub Pages</a></p>
</li>
<li><p><a href="http://jinyanhuan.github.io/2015/03/16/hexo-bulid-three/" target="_blank" rel="noopener">更换另一个hexo主题</a></p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="noopener">搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门</a></p>
</li>
<li><p><a href="http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype.html" target="_blank" rel="noopener">给Hexo博客添加站内搜索</a></p>
</li>
<li><p><a href="http://starsky.gitcafe.io/2015/05/05/Hexo%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E3%80%81%E9%9F%B3%E4%B9%90%E5%92%8C%E8%A7%86%E9%A2%91/" target="_blank" rel="noopener">在Hexo博文里面添加音乐\gif\视频等的教程</a></p>
</li>
<li><p><a href="http://blog.sunnyxx.com/2014/03/07/hexo_customize/" target="_blank" rel="noopener">私人定制hexo主题，添加横幅logo</a></p>
</li>
<li><p><a href="https://github.com/unhealthy/hexo-all-minifier" target="_blank" rel="noopener">A plugin for Hexo that optimizes HTML, CSS, JS and images(Minify)</a></p>
</li>
<li><p><a href="http://www.jeyzhang.com/hexo-website-seo.html" target="_blank" rel="noopener">给Hexo网站添加sitemap和robots.txt</a></p>
</li>
<li><p><a href="https://moral.im/%E4%B8%BAHexo%E6%B7%BB%E5%8A%A0meta%20Keyword/" target="_blank" rel="noopener">给Hexo网站添加meta tag提高SEO</a></p>
<ul>
<li><p><a href="https://www.google.com/webmasters/tools/home?hl=en&amp;authuser=0" target="_blank" rel="noopener">去goole search console管理property</a></p>
</li>
<li><p><a href="https://www.google.com/webmasters/tools/sitemap-list?hl=en&amp;authuser=0&amp;siteUrl=http%3A%2F%2Fchocoluffy.com%2F#MAIN_TAB=0&amp;CARD_TAB=-1" target="_blank" rel="noopener">google search console sitemap dashboard</a></p>
</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[用reveal.js制作生日礼物]]></title>
      <url>http://chocoluffy.com/2015/12/24/%E7%94%A8reveal-js%E5%88%B6%E4%BD%9C%E7%94%9F%E6%97%A5%E6%B4%BE%E5%AF%B9%E7%A4%BC%E7%89%A9/</url>
      <content type="html"><![CDATA[<p>这篇笔记作为revealjs的学习记录 &amp; 网页制作的迭代</p>
<a id="more"></a>
<ol>
<li><p>首先理清楚每天需要做的东西<br>在tracy换头像的时候保存头像， 最后还需要大家帮忙把头像收集好；<br>需要整理关于他们最爱的东西的问题：<br>[1] 最喜欢的颜色？<br>tracy: 黄色<br>xth:<br>[2] 最喜欢的场景？<br>tracy: 雪天的时候在房间里面看雪景,  喝着热巧， 吃cookie，看雪景。<br>用飘雪的效果<br>xth: 萤火虫的效果</p>
<p>[3] </p>
</li>
<li>网上一些很棒的资源<br><a href="http://htmlcheats.com/reveal-js/reveal-js-tutorial-reveal-js-for-beginners/" target="_blank" rel="noopener">Reveal.js Tutorial-Reveal.js for Beginners</a></li>
</ol>
<p><a href="http://codepen.io/aamirafridi/pen/sfgGA" target="_blank" rel="noopener">很美的萤火虫的特效scrolling</a><br><a href="http://codepen.io/rikschennink/pen/eNbXMP" target="_blank" rel="noopener">萤火虫闪光</a></p>
<p>找css background gradient的一个好地方：<br><a href="http://uigradients.com/#" target="_blank" rel="noopener">http://uigradients.com/#</a></p>
<h3 id="开场特效：">开场特效：</h3><p>参考<a href="http://codepen.io/andreasstorm/pen/rHDjf" target="_blank" rel="noopener">click anywhere to start an animation!</a><br>use:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(html).on(‘mousedown’, function(e))</span><br></pre></td></tr></table></figure></p>
<p>然后给中心的图标添加一个火箭发射的动效</p>
<p>关于reveal.js的在section的部分添加视频</p>
<section data-background-video="https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm" data-background-video-loop="">

<p>使用长图片做parallax scrolling effect:<br><a href="https://github.com/hakimel/reveal.js/" target="_blank" rel="noopener">https://github.com/hakimel/reveal.js/</a><br>的parallax background部分！！</p>
</section>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Agile web developing in rails 第一期]]></title>
      <url>http://chocoluffy.com/2015/12/24/agile-web-developing-in-rails-%E7%AC%AC%E4%B8%80%E6%9C%9F/</url>
      <content type="html"><![CDATA[<p>目的： 将agile rails web application一书里面的精华概括下来， 为之后运用rails开发打基础</p>
<a id="more"></a> 
<h2 id="The_details_you_should_know_about_in_rails:">The details you should know about in rails:</h2><ul>
<li><p>link_to | button_to<br>在link_to 和 button_to的情况下， 因为浏览器已经知道他们调用的是http的什么方法， 因此我们只需要将他们导流到对应controller<br>的位置就可以了；rails会根据http的动作调用相应的方法， 然后用一下shortcut path, 也就是 line_item_path;<br>为了创建一个LineItem obeject， 我们需要product_id和cart_id， cart_id可以在session中得到， product_id则需要用参数传入；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &apos;Add to Cart&apos;, line_item_path(product_id: product) % &gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Http verb<br>create(post), new(get)等等</p>
</li>
<li><p>写法区别</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &quot;delete&quot;, @cart, :method =&gt; :delete % &gt; </span><br><span class="line">&lt;%= button_to &quot;delete&quot;, &#123;:controller =&gt; :carts, :action =&gt; :destroy, :id =&gt; cart.id&#125;, :method =&gt; :delete % &gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>ajax in rails<br>add Ajax to cart 目的: 在store页面实现将cart的show展示在sidebar里面， 然后添加user interface<br>注意： 在每一个partial template里面都有一个和template file同名的变量来指代当前变量；</p>
</li>
</ul>
<p>首先， 在发送请求的时候， 将请求改正为ajax请求：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &quot;Add to cart&quot;, line_items_path(product_id: product), remote: true % &gt;</span><br></pre></td></tr></table></figure></p>
<p>然后， 由于button_to默认http请求动作是post， 在line_items_controller里面找到create这个方法， 然后在response_to里面添加<br>一个format.js; 在create这个line_items的method处理了ajax的请求后， 就会去渲染一个同名的file： create.js.erb； 由于rails<br>自动gemfile里面加载了jquery的gem, 所以我们可以直接使用；</p>
<p>重点： format.js 里面也就是create.js.erb里面渲染的js代码是给format.html里面调用使用的， 也就是在重新渲染store/index.html.erb<br>的时候， 重点不在于index.html.erb， 因为使用ajax的目标之一是只去更新那些改变了的东西， 也就是在sidebar区域的&lt;%= render @cart % &gt;<br>利用ajax， 我们只希望重新渲染&lt;%= render @cart % &gt;, 其他部分保留；</p>
<p>具体实现的方法： 由于在application.html.erb里面包裹住&lt;%= render @cart % &gt;部分的div是id是cart， 所以我们只需要通过jquery选择<br>到那个div， 然后修改里面的html使之成为更新后的版本就可以了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#cart&quot;).html(&quot;&lt;%= escape_javascript render(@cart) %&gt;&quot;)</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Add a member route<br>To add a member route, just add a member block into the resource block:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resources :photos do</span><br><span class="line">  member do</span><br><span class="line">    get &apos;preview&apos;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>This will recognize /photos/1/preview with GET, and route to the preview action of PhotosController, with the resource<br>id value passed in params[:id]. It will also create the preview_photo_url and preview_photo_path helpers.<br>在我们这个网站里面， 通过增加下面这几行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resources :line_items do</span><br><span class="line">  member do</span><br><span class="line">    put &apos;decrement&apos;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<p>我们实现的是， 首先能够识别出 /line_items/1/decrement这个路由， 和http里面的put联系起来， 然后去调用line_items controller里面的decrement这个方法<br>同时也将resource的id传入进来, params[:id], 然后创建 decrement_lin_item_url和 decrement_line_item_path;</p>
<p><strong>注意： 一直困扰我的， 在点击decrement这个按钮的时候， 会出现internet error 505, unable to load the resources; 然后还看到的是关于line_item_controller里面的各种nil class, 其实这就是一个启示， 表示在那个时候使用的@line_item是没有被赋值的； 因此追根溯源找到的赋值的地方是set_line_item， 我们使用hook, before_action限制了使用这个hook的范围， 因此每一次我们新引进一个method的时候， 我们都需要记得在controller最前面的hook看看有没有限制；</strong></p>
<blockquote>
<p>总结一下8.16号犯的一些错误：<br>[1]在touch file的时候注意不要放错位置！_line_item.html.erb这个文件的错放导致了很多的问题；<br>[2]添加了member route之后创建的新方法已开始被hook before_action限制住了， 要记得添加他们的使用范围；<br>[3]灵通一点， 在decrement.js.erb中， 通过调换其中一些code的顺序也可以达到同样的效果；</p>
</blockquote>
<ul>
<li>Modify the model<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails generate scaffold Order name address:text email pay_type</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>在rails里面， 没有标明type的属性默认： string<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails generate migration add_order_to_line_item order:references</span><br></pre></td></tr></table></figure></p>
<p>在已经存在的line_item model里面添加一个column， order_id；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake db:migrate</span><br></pre></td></tr></table></figure></p>
<p>然后在_cart.html.erb里面增加一个button_to按钮来链接到对应的创建order的操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &quot;Checkout&quot;, new_order_path, method: :get % &gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># GET /orders/new</span><br><span class="line">def new</span><br><span class="line">  if @cart.line_items.empty?</span><br><span class="line">    redirect_to store_url, notice: &quot;Your cart is empty!&quot;</span><br><span class="line">    return </span><br><span class="line">    # 提前终止程序， 防止double render， 不仅渲染了notice而且还渲染了下面的@order;</span><br><span class="line">  end</span><br><span class="line">  @order = Order.new</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p><strong>  再补充一遍， new只是得到一个form的页面， 真正的create操作是由create来完成的， 通过http的verb也可以看出来；</strong></p>
<p>在修改了new的方法之后， 尤其是改变了redirect的方向之后， 需要同时去修改test里面的文件；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">test &quot;should redirect to store_url because of empty cart when checkout&quot; do</span><br><span class="line">  get :new</span><br><span class="line">  assert_redirected_to store_url</span><br><span class="line">  assert_equal flash[:notice], &quot;Your cart is empty!&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">test &quot;should get new&quot; do</span><br><span class="line">  item = LineItem.new</span><br><span class="line">  item.build_cart</span><br><span class="line">  item.product = products(:one)</span><br><span class="line">  item.save!</span><br><span class="line">  session[:cart_id] = item.cart.id</span><br><span class="line">  get :new</span><br><span class="line">  assert_response :success</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第一期]-读书是赴会一场缺席的对话]]></title>
      <url>http://chocoluffy.com/2015/11/24/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80/</url>
      <content type="html"><![CDATA[<p>一场缺席的对话，一场没有观众的戏剧。</p>
<a id="more"></a>
<p>事情的缘由是这样的，有时候觉得，自由、独立、道德等等等的这些抽象词语其实都是我们自己给自己定义的，我们的经历给我们如何填充这些词语以素材和方向，如果没有经历过奴役之苦，我们很难想象自由physically\mentally的那种意义和美妙；没有自觉到束缚或依赖于人的经历，也很难体会独立，在精神上不诉求于人的客观。这些诠释，都其实是自己对自己过往的一次总结和反思。</p>
<p>于是想起了，高中有时候的读书节，总有一些代表们在台上说，我们为什么要读书的演讲稿，各种引经据典，恨不得把各朝代的祖爷爷们搬来个遍。 我于是也想了，如果是我，我会怎么讲？</p>
<p>这就是原稿的来由，思维混乱，一派胡言：</p>
<p>===============================</p>
<p>我们从小都在什么‘黄金书’（哦不，是什么书里自有黄金屋）的宣告下长大，或者说我们中国的学生，特别容易在自己还没有亲自体验之前就被 塞满一大堆的so called 经验之谈。</p>
<p>去体验，不要去嚼别人嚼剩下的槟榔，在你自己真正去看书，去独立地思考之前，不要去听别人什么：读书是好的，读书是有意义的的，这些都是bullshit。什么是意义，意义是非常私人的，是你想到什么，对自己的生活有什么的思考和收获，别人不能帮你生活。</p>
<p>我不喜欢那种举着大旗的宣称，那种读书强国的腔调，我真正体验到的，是读书，或者说读书的那一段时光，是非常孤独的，是平静的外人看来甚至有点呆的。 我甚至不能向你保证，你会收获什么，这听起来也挺残忍，而且不是特别值得的不是吗。</p>
<p>读书，是一种传递，是一种跨越时空的对话。</p>
<p>那些作家的死掉，并不是结束，没有什么人，什么作品是不朽的，甚至艺术，包括人们创造出来的任何文明都会消失，我们能做到的，就一下下把它传递下去；可怕的是，遗忘；遗忘，等同于那件事，那个人，从来不曾出现过一样。 1984里面，大洋国的人们最经常做的一件事就是去篡改历史，按照老大哥的想法和意志，去忘记，去创造一个过去；</p>
<p>一场缺席的对话，一场没有观众的戏剧；说它神圣，是因为这或许是唯一的一个途径，让他曾经思考过的想法去传递下去；而说它充满期待，则是因为，你永远也不知道，你会在这个对话里面看见，听见什么，或者想到什么；你体会到了悲凉，伤感，读书就传给了这个时代多一个悲凉、伤感的想法；你体会到了荒谬与残酷，读书就让这个时代多一个思考过荒谬和残酷的想法。</p>
<p>是你自己，决定了这本书所能达到的高度！</p>
<p>也是你自己，决定了作者将以什么样的形式在我们这个时代延续，延续他曾经饱含着热情和感动创造、打造的作品！</p>
<p>===============================</p>
<p>感觉讲成了鸡汤…哎也没看几本书的人在这里痴人说梦</p>
<p>余舜哲</p>
<p>2015.7.16</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[辩手说]人们有没有权利来决定他们的税收将会被用在什么地方？]]></title>
      <url>http://chocoluffy.com/2015/11/20/%E8%BE%A9%E6%89%8B%E8%AF%B4-%E4%BA%BA%E4%BB%AC%E6%9C%89%E6%B2%A1%E6%9C%89%E6%9D%83%E5%88%A9%E6%9D%A5%E5%86%B3%E5%AE%9A%E4%BB%96%E4%BB%AC%E7%9A%84%E7%A8%8E%E6%94%B6%E5%B0%86%E4%BC%9A%E8%A2%AB%E7%94%A8%E5%9C%A8%E4%BB%80%E4%B9%88%E5%9C%B0%E6%96%B9%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>出于本能和直觉。</p>
<a id="more"></a>
<p>观点1: 关于“公地悲剧”<br>这里面会不会出现free rider的问题呢， 就是我们比较熟悉的“公地悲剧”和“搭便车“的问题。 思路是这样的， 如果每个个体可以根据自己的意志选择税收将要被使用在什么地方的话， 我们会觉得， 自己交的税在其中的一个项目中占比微不足道， 比如：公路马路的建设，认为其他人的税收足以支持这些项目，然后将自己的税转移到其他地方。一个显然的结果是， 如果每个人都这么想， 很多并不引起公众注意的社会福利设施将会失去资金支撑， 可以sense到一点“公地悲剧”的味道了。</p>
<p>观点2: 关于选择的成本<br>如果每个人都被要求做出基于自己的税收想要支出在什么项目的话， 有考虑过决策的成本吗？ 有考虑到因为信息的不对称导致的盲目选择吗？ 这样的系统在决策层面会不会效率太低了一点。不同的选择之间的说服和凝聚都是需要时间和谈判的， 就像我们知道民主是一个缓慢的决策过程， 多方的角力和冲突宣传， 民主低效的体现之一。而这样的过程的最终结果， 感觉又回在不同人的个人选择， 逐渐演变到， 出现了中间人代表人， 然后由代表人之间的胜负决定。 注意， 这种演变， 只是基于谈判效率优化的演变， 和专制暴政无关， 但仔细想想， 这不就是一开始的情景吗？绕了一圈结果回到了原点。</p>
<p>观点3: 关于社会分工和信息不对称<br>这一点本质上和第二点有交叠。 我们不能指望每一个人都对这个社会的运作有一个百分之百的了解和知识， 实际上， 这也不可能. 这就会导致每个人手上的选票（这里是他们自己的税收）最终流去他们自己关注的地方。 注意， 这里是他们自己关注的地方， 并不是真正需要， 有需求的， 自下往上的地方［嗯嗯嗅到了“专制”的味道］。后果可想而知， 不详述。这里一个比较常用的论点是， ［关于媒体的思考， 很多都和这个有关］， “Being emotional is more impressive, attractive and easier than being rational.” 这就是为什么我们需要可信赖的knowledgable的代表替我们做出决定， 我们也让渡这个决策的权利给政府。</p>
<p>后记：<br>很希望自己的公众号里面可以积累一些有质感的文字（可惜这篇就不是）， 无奈自己平时很难挤出完整的时间来洗濯文字和质地， 大部分的空闲时间， 还是在自己的开发项目和运动场上。最近刚好处于期中后节奏比较缓的时期， 决定将平时刷牙， 走路， 吃早餐时候注意到或者灵光一闪过的有趣的观点收集下来， 和大家分享。 也是以一名辩手的本能， 去学习去思考（辩题类型偏英辩， 毕竟自己也有积累挺多的英辩参赛经验和认识一堆有趣的辩手可以讨论）。这一系列不会更新的太频繁， 但每一个观点都是出于本能和直觉， 不作过多的修饰， 也希望给喜欢辩论的伙伴们一个思路。</p>
<p>最后一点， 不是特别擅长文字， 只是特别喜欢， 会有点慢热。 如果你也有关于辩题出于直觉的有趣的观点， 特别欢迎回复我!! 我会在后一次的公众号更新中发布跟进的讨论和亮点哦~嘿嘿^_^</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[【转载】我的ISIS男友：一个记者与恐怖分子的秘密生活]]></title>
      <url>http://chocoluffy.com/2015/11/16/%E4%B8%80%E4%B8%AA%E8%AE%B0%E8%80%85%E5%92%8C%E6%81%90%E6%80%96%E5%88%86%E5%AD%90%E7%9A%84%E7%A7%98%E5%AF%86%E7%94%9F%E6%B4%BB/</url>
      <content type="html"><![CDATA[<p>什么才是真正难以摧毁的。</p>
<a id="more"></a>
<p>最近大家想必都会关注到许多关于恐怖主义，关于ISIS和宗教教旨的解读文章。 我个人的想法是，如果能够从生活现实层面看到关于ISIS的一点纪实的文字，那样会让我更好的理解并思考现在正在传播的或完整或偏颇的观点。 我想知道ISIS他们的心理状态，他们的生活日常，他们的童年经历，究竟为什么会有这么一群人，愿意把杀戮(圣战)当成荣耀，而究竟战争与反抗能争取到什么，而什么才是真正难以摧毁的。</p>
<p>本意在一些纪实小说、记者报告中找到这些绳索的源头，偶然发现这个知乎上面的一篇观点，翻译自《伦敦星期日时报》的一篇调研文章，来自一个女记者冒着生命危险取得的第一手资料。里面的一些细节让我对ISIS这个组织有了更多一点的印象。决定转载在这里，分享给大家。在后记里我写上了一些个人想法。</p>
<p>余舜哲</p>
<p>2015.11.16</p>
<p><strong>我的ISIS男友：一个记者与恐怖分子的秘密生活</strong></p>
<p>一个年轻女子坐在一间巴黎的咖啡店里等着和她朋友共进午餐。她穿着一件紫色的贴身上衣，有着深色的头发和一双睿智的眼睛，手上戴着戒指。</p>
<p>她非常频繁地看向窗外，但是她并不是在看她的朋友是否到了，而是在紧张地看那个被派来保护她的警察，希望那个警察不要离她太远。</p>
<p>Anna Erelle生活在恐惧中。</p>
<p>这份恐惧是来自于一个叫做ISIS, 又称为伊斯兰国的组织。她收到了死亡威胁，来自网上不计其数的辱骂，以及一个关于她的视频，里面用阿拉伯语循环着“全世界的兄弟们，如果你们见到了她，杀了她”</p>
<p>在Erelle的手机里，有一张从监控录像截图下来三个英国女孩子的照片，分别是 Shamima Begum, 15岁, Kadiza Sultana, 16岁, 和 Amira Abase, 15岁。2个星期以前，照片中她们围着围巾，穿着牛仔裤，正在经过英国格域机场（Gatwick Airport)，去往叙利亚加入ISIS.</p>
<p>“看看她们，她们多么美好,” 她一边说，一边用她修剪得很整齐的指甲指着屏幕，“她们看起来既开心又放松。她们看起来就像仅仅是去土耳其的海滩度两周假而已。如果三个女孩子都穿黑色罩衫，她们一定会在机场引起人们的注意。可是，如果就像这样穿着普通的衣服，谁会注意到她们呢？”</p>
<p>“当他们让我去叙利亚时，也让我这么做。不要穿那种蒙住全身上下只露出眼睛的黑色罩衫Niqab，穿得像个普通女孩子就好了。最后一天在家的时候，对家人就像平常那样，家人们就不会怀疑了。不要留任何纸条或短信给家人们，不要试图向家人们解释，不然的话，家里人会跟着你的。待完了最后一天，直接消失就是了”。</p>
<p>成为“小旋律”（Melodie)</p>
<p>其实，并不是Erelle本人要去叙利亚旅行，而是她在网上创建的一个叫“小旋律”的虚拟的20岁女孩要去。这个20岁的虚拟姑娘将要成为圣战分子的新娘。而Erelle本人已经32岁，在巴黎的一家新闻周刊做记者，专门负责做关于中东的分析和报道。</p>
<p>2年前，Erelle在巴黎的一个乡下地区对当地的一些青少年做了一个采访。住在那里的人们大多在贫困中挣扎，而且她发现，那个地区已经成为一个滋生极端主义的沃土。这引起了她的兴趣，她很想调查清楚，到底有多少生活在那个地区的年轻穆斯林变成激进主义者了？</p>
<p>“他们其实对他们的宗教了解得非常少。他们很少读书，而且，他们是先了解了圣战再了解宗教的。”Erelle说，“他们曾经告诉我，‘你用你的大脑思考，而我们用心灵思考’。在他们眼中，激进主义有一种浪漫的情怀。我很想知道，这是怎么发生的？”</p>
<p>更令人费解的是一种被称作 “caliphettes”的人，指的是从小生活在一个自由的社会，却痴迷于圣战战士的年轻女孩子。 “对她们来说，圣战战士就像布拉德·皮特，甚至比他更迷人，因为布拉德·皮特不是宗教信仰。”</p>
<p>她决定加入年轻的穆斯林网上社区。并且在Facebook和Twitter上创建了虚拟资料的人物。很少有人知道，极端分子和穆斯林青少年之间的联系已经越来越多。即使是现在，这个规模已经让人惊讶了：苏丹娜，一个已经失踪的英国女孩，据信已经越过边境到达了叙利亚，在Twitter上是70多个极端分子的粉丝，而且她自己也已经积累了超过11000的粉丝。</p>
<p>Erelle本来只是想观察他们在网上的交流，弄清楚在法国的青少年是怎样变得激进的。然而意想不到的是，“小旋律”吸引了Abou-Bilel的注意，而Abou-Bilel是一个 ISIS的高级指挥官。他爱上了她，向她求婚，并邀请她去加入他的哈里发国。</p>
<p><strong>我的ISIS男朋友</strong></p>
<p>Erelle第一次收到Bilel的消息，是在去年四月一个有些暖和的晚上，大约10点左右。在她结束了一天的工作后，Erelle在沙发上观看小旋律的“朋友们”在干些什么：“姐妹，我见你看过了我的视频。全世界的人们都看了这个视频，这太疯狂了！你是穆斯林吗？你怎么看待圣战者呢？你要不要考虑来叙利亚？”</p>
<p>Erelle感到很惊讶。Bilel是一个出生在法国的阿尔及利亚后裔。他在伊拉克的时候，和ISIS的领袖阿布·贝克尔·巴格达迪结盟，后来和他一起搬到了叙利亚。</p>
<p>小旋律虽然在网上只有几天，但她已经有了一个很大的朋友圈，互相分享视频，经常讨论关于圣战的话题。网上的其他人都认为，她是一个在法国南方的贫困地区出生和长大的少女，母亲每天要工作很长的时间，她没有父亲，也没有兄弟。</p>
<p>小旋律试探性地回复他，她是一个皈依者，而且想学着做一个好穆斯林。她的文字里有很多的微笑表情符号，对他而言，这是一种鼓励。甚至比鼓励更多。</p>
<p>接下来的几天，他发给了她很多照片，照片中的他，坐在他的4X4吉普车里，还拿着他的枪。很快的，Bilel告诉小旋律，他爱上她了，她必须来叙利亚。</p>
<p>“如果你来这里，你会得到公主一样待遇。”他许诺。</p>
<p>“这就是那些女孩子们去那里的原因，”Erelle说。 “这是一个能拥有美好生活的美梦。她们相信，那是一个天堂，她们在英国或法国不会有任何美好的未来，她们不能找到好丈夫，而且被异教徒包围着，永远不能成为一个好穆斯林。 Bilel告诉小旋律，如果来到哈里发国，她就能有一个美好的人生，一间大大的公寓，还能有很多孩子。”</p>
<p>很快地，Bilel开始就和她在Skype上聊天。</p>
<p>“我从来没有见过一个杀过人的男人的脸。而他曾经自夸说，他已经杀死了几十个异教徒。开始的那几秒钟让人非常难忘。他盯着我看，而当我看他的时候，我从他的眼睛里什么也看不见，没有信仰，没有感情。他不是一个好人”</p>
<p>她不知道她是否能成功地冒充一个比自己的真实年龄年轻10岁的女孩，但Erelle身材小巧玲珑，一旦她穿上了带面罩的黑罩衫，尽量化最少的妆，这样似乎是可行的。</p>
<p>“去装作与恐怖分子交好是一件很奇怪的事。你要表现得很可爱，跟他说，‘嗨，你可不可以告诉我你今天干了什么？’我曾经以为我穿上黑罩衫会很不舒服，但是这个道具很有用，每当我穿上它，我就感觉我不是我自己了。”</p>
<p>Bilel很高兴：“你总是逗我笑！”因为他越来越相信她，他开始更多地说起他的生活。</p>
<p>他讲述了2013年伊斯兰国和叙利亚政府军为了争夺Raqqa地区控制权的血战。也讲了他是怎样参加了战斗，怎样砍头，怎样折磨囚犯。</p>
<p>“他是一个喜欢自吹自擂的人。说的什么全是他自己。但是他也是一个真正的残忍的人。最开始的时候，我想试着从他身上去寻找人性中光辉的一面，因为我以前总是相信，不管什么样的人，都应该有一点美好的东西在人性里。可是他完全没有人性。</p>
<p><strong>冒险生涯</strong></p>
<p>Bilel的真名是拉希德，他从小生活在在法国北部一个叫鲁贝的地方。 Erelle得知了他在法国有一连串犯罪指控，并且放弃保释，潜逃去了伊拉克。那时是2000年，也正是那时，他变成了一个激进分子。作为巴格达迪的左右手之一，他在叙利亚主要负责三项工作：招募新人，收税和在部队担任指挥官。</p>
<p>“每天都有新人从欧洲来到这里。”他告诉她，“他们上午学习阿拉伯语，下午进行射击练习。新人住在集体宿舍里，晚上有精神引导的课程。”</p>
<p>“两周后，他们会进行评估，聪明的新人会被挑选出来的给予特殊的任务，例如反间谍活动。”</p>
<p>Erelle把他告诉她的所有事情都与叙利亚联络人和法国的安全局共享和核实。 “跟所有的骗子一样，有时他忘了他以前说过什么，然后讲一个完全不同的故事，所以我不得不核实一切，但更可怕的事情是，那些他曾经告诉过我的关于战争和杀戮的故事，全都是真实的。”</p>
<p>他谈到他对自杀式袭击者的钦佩 - “在这里，我们评价实力有两个标准——信心和勇气。自杀式袭击者是我们所有人中最强大的。并且开玩笑说他是如何偏爱小旋律这样的皈依者，因为他们“宗教中严格，生活中开放”。</p>
<p>“你可以看到一个像小旋律这样的女孩是怎样被迷住的，”Erelle说。 “她自己本是一个无名小卒，但是生命中突然出现了一个38岁的男人，年龄快比她大一倍，而且还拥有这些令人难以置信的冒险经历，并且对她这么好，告诉她，他爱她，想每天亲口说爱她千万遍。”</p>
<p>然后小旋律被称为Bilel的未婚妻，她在她的网上的伊斯兰朋友间变得小有名气。</p>
<p>“这一切在那些英国女孩子失踪之前应该也上演过，”她说。 “那些去叙利亚的女孩子知道她们会成为报纸和互联网上的新闻，人们会议论她们。这些女孩们还是义无反顾地追随那些已经离开英国去往叙利亚的朋友。她们早就知道这会造成她们的家庭的痛苦，尽管如此还是没能阻止她们离去的脚步。”</p>
<p>起初，每当Bilel都劝她去叙利亚时，她都拒绝了。她说她不能离开她的母亲，她说，她害怕走这么远的路。</p>
<p>“他不会把你的拒绝当做答案。他会说：‘当你到了这里，你可以帮助照看孤儿，直到你有你自己的孩子，或探访伤兵。</p>
<p>“他想当然地认为我会服从。他想知道我有没有足够的钱买飞机票。他告诉我，他和他的组织非常有钱，可以报销我的开支”</p>
<p><strong>暗度陈仓到叙利亚</strong></p>
<p>法国警方从去年夏天就开始对女孩子们离开法国前往叙利亚有所戒备。所以Bilel说，她应该先前往阿姆斯特丹，甩掉法国当局的追踪。小旋律终于同意前往叙利亚，如果她能带她（虚构的）15岁的朋友优思敏同行。</p>
<p>“他说，‘告诉你家人，你今晚在优思敏家里过夜，让她说告诉她家人今晚在你家。’当我到阿姆斯特丹，我扔掉我的手机，买一个新的，用新号码打了电话给他，告诉他我们什么时候会从阿姆斯特丹飞往伊斯坦布尔。”</p>
<p>在伊斯坦布尔，小旋律和优思敏将通过ISIS派来的一个“嫲嫲”陪她们到叙利亚。 Erelle决定将继续做戏到这一步。</p>
<p>“我想见见这个‘嫲嫲’。”她说，“我是一个女人，我不能理解为什么这些女人能让这么年轻的女孩去和那些男人结婚。所以这是私人的问题。我就想看看她的脸。”</p>
<p>还有一个进一步的指令：Bilel让小旋律在机场免税店给他买一些礼物，包括须后水。他告诉她，他喜欢用的香奈儿的Egoiste。</p>
<p>“关于这些人，还有一些事情值得一提，”Erelle说。 “他们说，他们反对西方，他们反资本主义，但他们喜欢奢侈品和设计师品牌，他们的军队制服里包括了耐克和雷朋太阳镜。这是对青少年们另一种方式的引诱：“我曾经和你一样穷，但看看现在的我吧。’”</p>
<p>在阿姆斯特丹，又有了一个问题。 Bilel说，她和“优思敏”将不得不独自前往，因为”嫲嫲”们旅行不方便。一旦到了伊斯坦布尔，她们就转乘一辆土耳其境内航班飞往一个在土耳其东南部叫乌尔法的地方，和之前一样，用现金支付，并等待下一步指示。小旋律回复他说，她很害怕。</p>
<p>“你是个大姑娘了，”Bilel安慰她。 “每个星期都有好几十个欧洲人这样过来加入我们的行列。 来吧，我的狮子！”</p>
<p>但小旋律拒绝让步，说这里到处都是警察，她想回家。</p>
<p>“这是我第一次开始与他争辩。他很不喜欢这样，“Erelle说。 “他就开始嚷嚷，他很可怕。他因为我的拒绝非常生气，他说，‘你都到了这一步了，现在是在耍我吗？’那是很难被原谅的。”</p>
<p>是时候断绝所有联系了，但是这并不是一件容易的事。Bilel仍然相信小旋律的存在，打来电话说：“我知道你是谁，我可以分分钟找到你，杀了你”</p>
<p><strong>ISIS的敌人</strong></p>
<p>Erelle回到巴黎，去年五月给她的杂志写了一篇关于小旋律的故事。她现在已经写了一本书，“在圣战者的外围”</p>
<p>这篇文章是化名书写。 “Erelle”是她的第二个化名。一旦这篇文章出版，小旋律的背叛行为变得很明显，Erelle成为目标。</p>
<p>她不得不好几次改变她的电话号码，并且搬家。令人担忧的是，在小旋律断绝和BIlel的联系后不久，Bilel用法国的电话号码打给她。而在小旋律的Skype帐号里，有无数的死亡威胁。</p>
<p>她写了一本书，但是她不能承认那是她写的，而1月7日发生查理周刊大屠杀后，开始有警察保护她。</p>
<p>“他们坚持要这么做。有人看着我住的房子。他们看着我。我从来不知道他们在或者不在，”她说，“我很孤独，因为查理周刊事件吓得所有人和朋友们都害怕和我在一起。警方甚至把我的狗带走了。以前每当我觉得情绪低落的时候，我就抱着我的狗。但它是一个很特别的品种，警察认为它让我太容易被辨认出来。 或更糟的是，恐怖分子可能会错误地杀掉和我有相同的品种的狗的人”</p>
<p>几个月前，据报道，Bilel已被击毙。</p>
<p>“我不知道这个消息是不是真的，或者他是否知道我的真实身份。”她只知道的是，尽管发生了这一切，如果再来一次，她还是会这样做。 “这是肯定的。”她说。</p>
<blockquote>
<p>后记：我之前有想过，感觉关于伊斯兰教和其他的宗教信仰相对比有一个特点是，他们的信徒愿意并会主动地将教义强制在其他信教徒的身上。当被问到伊斯兰教对生命的看法的时候，一名穆斯林uber司机引述了《古兰经》里面的一句话，if you kill a single soul it’s like killing the soul of all humanity. if you save a single soul, you save all humanity.</p>
<p>这也是会有“圣战”这么一个仪式的原因吧，任何异端的与伊斯兰教旨不符的行为，哪怕是他们生活中再平常不过的事，都会成为暴力、自以为是的英雄主义的发泄地，有了宗教这一个坚强的借口，或许暴力也可以被包装成一种忠诚和信仰。</p>
<p>当我从这一篇纪实报道中发现那些组成ISIS组织的人的背景经历之后，许多想法感觉都被justified了。 如果本身就是一个被社会边缘化了的群体，那么，他们所做的任何抵抗，在某种程度上，可以理解是对自我存在的证明，对现实生活的反击。而归属感，这个或温暖或危险的力量，会让这些还没真正找到反击方式的人们，做出不理性的行为。</p>
<p>归属感，或许就是我想说的，是战争，是恐惧，都摧毁不掉的事情了。相反的，越是恐惧，身子就越会蜷缩去更为强大的方向。 我们曾经在留守儿童的议题上看见归属感这个不可避免的根源。 而在宗教信仰的背后，归属与虔诚，又将成为许多暴力滋生更为牢固且不容分说的根基。</p>
<p>祈祷巴黎，祈祷ISIS组织心里那个无依无靠的小孩。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[rails开发笔记-instagram]]></title>
      <url>http://chocoluffy.com/2015/08/31/rails%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-instagram-1/</url>
      <content type="html"><![CDATA[<p>用了一天的时间完成了这个网站的开发，SearchInsta， 也算是一个阶段性的总结。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qp26GB1Mm409ZKPy3NRDqbD6xeG6hgdjfyN9ic3bEQtwQGsArZ53PxmQ/0?wx_fmt=jpeg" alt="image"><br>用了一天的时间完成了这个网站的开发，SearchInsta， 也算是一个阶段性的总结。<br><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qB5xCWEgEH979oIdDSpPMiaW1oLIHtpVECbY3ZQxNBXnKw33rFBh2gMQ/0?wx_fmt=png" alt="image">  </p>
<p>当鼠标hover其中一个照片时：  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qzKjPRxEFgZdPbcicyDcSxaRCAh34H7EKK5O2Na5gIEwlZbYjXchB3rQ/0?wx_fmt=png" alt="image">  </p>
<p>网站的功能：输入一个image tag或者用户名， 可以看到这个类别下面最新发布的post， 鼠标hover的时候可以看到用户的post原文。  </p>
<p>原理：其实这个很简单的， 就是调用了instagram的api，然后做的一个数据抓取和呈现而已。 不过在改进方向上面有很多可能。 我也会继续在功能上做出完善。比如：   </p>
<ol>
<li>我可以通过api得到用户之间的follow关系， 那么利用d3.js里面的一些三维模型函数库， 也就可以做出一张动态的关系网出来， (这种社交网络结构在商业ppt上可能比较常见吧)； 还记得大一去MIT决赛的时候， 中科大的那个结构网的作品， 结合图论上的一些shortest path, maximum flow的原理还可以找到最高效的关系连通path。在这个instagram的情景中，这个“最高效的”仍然需要人们定义， 比如可以定义成获得的点赞数最多， 社区声誉最好？购买力最高， 广告转化率最高等的指标。  </li>
<li>通过获得的geolocation的数据， 可以结合一些数据处理包完成地图上tag发布热点区域的绘制， 用户发布的地点时间的集合，（现在吐槽最多的不就是O2O startup，现在都可以拿个google map的地图和一些头像就去融资了不是吗)。   </li>
<li>获得某一个tag当前最新的， 或者最热的图片， 那其实也可以变相给用户推荐图片， 像feed一样， 不过这个时候用户看到的不就只是自己follow的人, 而是门户filter后的资源， 这个方向走下去基本就是社交媒体了， 那种编辑、发布的， 控制资源的channel。   </li>
<li>对用户的描述做语义分析， 然后利用统计手段得到某个特定用户的发布资源的特点， 或者某个特定群体的common tag\interests。 实现方式也不算复杂， ruby里面的nokogiri gem可以parse掉html结构， 得到的json数据再去统计整合处理。 但就像我前几天做得一个小项目中遇到的问题。 英文可以很方面的根据词语出现过的频率来统计， 然后去掉预设的meaningless的词语后得到， 然后筛选可以得到概括； 但是对于中文， 毕竟parse之后只能得到单个的字， 而不是一个个完整意义的词语， 所以给后期过滤中心主体带来了很多困难， （为什么不能得到词语？ 答：技术上只能得到一个个单个字， 就像英文一个个单词一样， 你必须定义怎样算一个中文词语的规则， 以及怎样才是原文里面的那个词语搭配规则才能得到一个完整的意群）这也是当时困扰我的一个问题， 或许互联网上有很多人、企业遇到过这个问题， 我会继续去关注。  </li>
<li>根据用户发布的post的点赞数或者是转发数量的一个统计分析、排序， 做出一个类似facebook的 the best of the years， 虽然在隐私上仍然有着一些抵触的情绪， 但是当用户看到这些曾经很棒的、很希望分享的照片不都挺惊讶和开心的吗。  </li>
<li>打通twiiter \ weibo \ facebook api之间的联系？ 可以做到站内的消息多平台的发布和浏览。  </li>
</ol>
<p>等等…  </p>
<p>这些基本都是我debug之后挺高兴地走去吃饭路上想到的一些延伸， 能写出来的都是大概心里有个想法知道方向在哪里的， 可以做出来的。 那些有些天马行空的就自己留着暂时不分享了。 其实这一天的时间里面我在前端设计上花的功夫比我在后端请求数据和处理的功夫多太多了， 而问题都基本都出在一些动效和细节上面， 不过一仔细起来， 真的很多地方的设计都学到了东西；  </p>
<p> 比如怎样做出这样类似纸张微微隆起的漂亮阴影效果：  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qzW0y2WJqB8oJXFdxXE3ZqCYcFvywrnXT97u69vUWvvTg93VxiaP9rNw/0?wx_fmt=png" alt="image">  </p>
<p> 一些优雅的google fonts的收集、bootstrap里面超级flexible的grid system。还有很多很多， 之后的优化应该要集中在抽象上面了， 做到真正orthogonal \ extensible的模块真的不简单， 我函数里面hard-coding还是太多了。   </p>
<p> 其实刚刚在一边写这些extensions的时候， 就感觉， 数据的意义和价值都是设计者思维的体现。 一场惊艳的交互， 一个有商业价值的发现， 都离不开设计者的融会贯通。  </p>
<p> 希望能在全栈工程师的路上可以走的更远。  </p>
<p>今天看到的一句很喜欢的话， 和大家分享：  </p>
<p>孤独被抬举和神化， 寂寞也并不可耻。多数时候， 我们只是寂寞， 不必用孤独为自己加冕。  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ruby Nokogiri使用笔记[第一天]]]></title>
      <url>http://chocoluffy.com/2015/08/27/ruby-Nokogiri%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      <content type="html"><![CDATA[<p>将wikipedia上面表格中的信息的一个整合， 重点：掌握关于筛选和array manipulation的技巧</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">require &apos;nokogiri&apos;</span><br><span class="line">require &apos;open-uri&apos;</span><br><span class="line"></span><br><span class="line">BASE_WIKIPEDIA_URL = &quot;http://en.wikipedia.org&quot;</span><br><span class="line">LIST_URL = &quot;#&#123;BASE_WIKIPEDIA_URL&#125;/wiki/List_of_Nobel_laureates&quot;</span><br><span class="line">page = Nokogiri::HTML(open(LIST_URL))</span><br><span class="line">rows = page.css(&apos;div.mw-content-ltr table.wikitable tr&apos;)       </span><br><span class="line"></span><br><span class="line">rows[1..-2].each do |row|</span><br><span class="line">  hrefs = row.css(&quot;td a&quot;).map&#123; |a| </span><br><span class="line">    a[&apos;href&apos;] if a[&apos;href&apos;].match(&quot;/wiki/&quot;)</span><br><span class="line">  &#125;.compact.uniq</span><br><span class="line">  # 对每一个row里面将不同的cell里面的link收集起来，然后filter</span><br><span class="line">  # 同样长度的array在filter之后不符合要求的得到nil然后在compact方法的时候被删掉</span><br><span class="line">  # 然后uniq是删去那些相同的link url</span><br><span class="line"></span><br><span class="line">  hrefs.each do |href|</span><br><span class="line">   puts href</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[【转载】告别卢安克]]></title>
      <url>http://chocoluffy.com/2015/08/27/%E5%91%8A%E5%88%AB%E5%8D%A2%E5%AE%89%E5%85%8B/</url>
      <content type="html"><![CDATA[<p>某天接到小手的微信，问我对《看见》里面卢安克的看法。我重新去博客上回顾了一下那篇文章，也将我们之间的对话摘录下来。由于只是对话，行文逻辑较松散，但都是第一感觉，未删改。柴静原文《告别卢安克》附在对话最后。</p>
<a id="more"></a>
<p>我：</p>
<p>刚刚重新再看了一下那篇文章： 告别卢安克，我记得我第一次看的时候是有想过挺多东西的，有积极的也有消极的。 可能有些关联的不是很大吧，<br>比如当时有想过，究竟怎样才是解决留守儿童的最好的办法，解决偏远地区的贫困等等的。然后就会联想起很多啦，之前韵琦推荐过一本的《how to change the world》 虽然标题很鸡汤，但是里面确实有很多干货，关于ashoka这些等等的组织怎样调用当地的闲置人力资源，或者是如何思考出让当地政府愿意投资的策略的方法和过程； 感觉其中一个重点就是如何去align different party’s interest。 像另一本书《穷人的银行家》，感觉都是讲如何在资源稀缺上做文章，挖掘利用闲置的人力啦，资助人们去做点什么啦等等；</p>
<p>现在想想，其实这些行动都并不高效。他们之所以轰动，只是因为他们是pioneer, 是那种从零到一去尝试改变的热心的人； 但如果我们现在从后面往前看，帮助他们连接上互联网或许是一个更加有实质作用的选择。（这里的从零到一和商业上的zero to one有差异）； 就像卢安克说的，留守儿童需要的归属感； 然而，归属感这种东西和你的眼界有很大关系，如果你什么都没有听说过，尝试过，你能感兴趣的东西不过就只能是你身边的柴米油盐罢了，而那些尝试去通过柴米油盐去改善他们生活的人，的确可能可以做出一些东西，但本质上他们就漏过一个更加根本高效的路径。</p>
<p>说实话，虽然说，教育这个行业里耐心和利他心比你的技术来的更加重要。 但是，这也很容易给人们一种思考的倾向，就是教育业需要富有同情和耐心的人来改变。 这是一种思维上的限制，在我的心目中，facebook的创始人mark zukerberd和rss feed的创始人aaron swarstz（我是rss的重度使用者），他们对消除信息垄断上的作用远远大于其他任何个人。而消除信息垄断，意识到自己的世界的局限，思维的局限，产生了期待和好奇，是所有改变的开始和根本吧。</p>
<p>感觉想的东西挺乱的。 刚刚重看的时候，觉得他对归属感，秩序和责任的看法都挺干练的，对我来说很persuasive。 对于一个非技术的教育事业的人，不能用同一个matrix，我尊敬他的insight和所作的贡献。 不过对我来说，aggression和tension可能对我更有吸引力。</p>
<p>小手：</p>
<p>首先很感动你这么用心写，其中很多观点我都赞同。作为亲历过农民工子弟扶持教育人我觉得很多说到点子上。</p>
<p>关于热情，想起了暑假在巴黎上法语文学课读Ionesco的La Cantatrice Chauve, 是部著名的荒诞剧，里面的对话杂碎,无逻辑，可笑甚至荒谬，用传统眼光看荒诞剧，会觉得云里雾里不知所云。但作者愿意就是想说，生活本身就是这样杂乱无章，无序无义的，很多时候是人们故意赋予了很多意义。那这样岂不是虚无主义？又未必。罗曼罗兰说，世界上唯一一种英雄主义，就是看清了现实然后热爱它。那么荒诞剧就是提醒我们，生活本身并不一定有我们原来设想的那么多意义。即使发现了这个稍微令人失望的现实，我们也要义无返顾的热爱它。</p>
<p>绕了一大圈，我觉得卢安克身上就有这种热爱这个世界的热情。</p>
<p>高效，改变，成功…这些字眼是社会约定俗成的“意义”，我们习以为常，并以此为真理。但有多重的意义就有可能有多重的失望、冲突甚至仇恨。</p>
<p>没有多少人能去结构自己的思维和所被赋予的意义，而能如此坦然地“与众不同”，即是热情，也是勇气。</p>
<p>想起卢安克日日夜夜简简单单跟孩子们的陪伴，又想起我们以前做夏令营的时候想着如何处心积虑地想把知识和经历高效输出，其实在卢安克那种热情面前，都是有点虚伪与渺小的。</p>
<p>不会说谁对谁错，能从对方真诚的回答中受到一些触动，看出自己观点的一些局限，就挺好的不是吗</p>
<p>余舜哲</p>
<p>2015.8.28</p>
<p>以下附上原文《告别卢安克》</p>
<p>告别卢安克</p>
<p>——教育，是人与人之间，也是自己与自己之间发生的事，它永不停止，就像一棵树摇动另一棵树，一朵云触碰另一朵云，一个灵魂唤醒另一个灵魂，只要这样的传递和唤醒不停止，我们就不会告别卢安克.</p>
<p>三年前我在广西访问在深山板烈当教育志愿者的德国人卢安克，今年八月，我收到他的信件，他寄给我一份跟孩子一起拍的电视剧样本，说“我可能没有机会继续跟我的学生做事”。</p>
<p>我们在板烈再见时，卢安克穿着跨栏背心，晃晃荡荡从稻田边上走过来，瘦了些，有点佝偻了，笑起来眼纹深了，淡金的眉毛已经淡白，整张脸上几乎只有浅蓝的眼睛有颜色。我问“你还好吗”，他说“也好，也不好”。</p>
<p>四面人多，不好说话，他带我去了山上一个学生家，是班上最沉默寡言的小孩，叫小罗，与一个智障的哥哥同班，父母打工，他们相依为命。小罗一进门，先找盆淘米，拿一把扳手，在电饭锅坏的按钮处拧了几把，把饭做上了，山里人家来了客都是这样。</p>
<p>猪圏旁有一丛小西红柿，才成人指甲盖大，他俩往下摘，我问：‘这么小能吃了就？”卢安克说：“这更有味道。”递给我滚圆鲜红的一个，我在衣服袖子上擦了擦，溅在嘴里的味儿还不错。家里没有别的菜，只有桌上放着一些扁豆，有些日子了，我们把卷边的角摘了，打算跟小西红柿炒在一起。卢安克与上次我见到时有些不同，满腹心事，把豆角一只只掰断，我埋头摘了一会儿，说：“我一路上想着你这次恐怕跟以前心情不太一样。”</p>
<p>他“是的，有一些压抑的”。</p>
<p>“难道有可能这是你最后一次回来吗？”</p>
<p>他攒了满满一手豆角不撒“我担心有这种可能。”</p>
<p>我抬起眼，“记得上次采访的时候，你说这个地方有你的命，你要是离开你的命就没了？”</p>
<p>“从心里来理解是这样的。”</p>
<p>他问我：“但我怎么处理？”</p>
<p>我怔住了，没回答，也没说不知道。我从没想到过他会问别人他内心的困惑，我被这个困惑之深惊住了。</p>
<p>他左手扶着柴火，右手小铁斧一下一下劈开缝子，嵌进去的斧子拉起木头来再用力剁下去，我蹲在附近捡木柴碎片，拢起来放在火堆里。老范说看回放的时候，很长时间，都只有劈柴在火里烧裂时毕剥的声音，和溅出来的几星火烬。</p>
<p>这次的采访全部是卢安克的安排，他挑选的地点、时间，他让我们拍烈日下刚收割完的稻子，拍小罗家边上的晚霞，我们想选择更好的光线，他坚持：“不拍天要黑了。”他甚至写了采访的提纲，手里攥着一张字条，上面写着中文和德文交织密密的字，“我怕我自己忘了什么。”</p>
<p>我没见过他这么失稳，也没见过他这样在意。</p>
<p>我采访的孩子中，韩运一个扮演电视剧主角容承，其他老师说他在班上最调皮，常带着男孩们闹事，被称为“老大”，接受采访时有些紧张，拿着饭盒的勺子僵坐在桌边，要求卢安克一定要在边上。</p>
<p>我问了几个问题“你为什么演容承？””“觉得他性格是怎么样的？”……他都说“不知道”，几个问题下来，我看他是真不知道，带了一点放弃的感觉，转头对卢安克说“可以了”。</p>
<p>孩子突然嚎啕大哭起来，捂着肚子倒在桌子上。我说怎么了这是，赶紧看他，他说肚子疼。疼得枕在胳膊上，一只拳头按着自己胃。</p>
<p>我以为他是吃饭时说话着凉了。倒杯热水给他，他不喝，问他要药吗，他摇头。</p>
<p>卢安克蹲在他身边，抚摸他的背，对他并不说什么，跟我说了一句“我做德语口语翻译的时候，也会肚子疼”。</p>
<p>我明白他指什么，但不确定，俯身对孩子说：‘是因为我的问题给你压力了吗？如果是，那我真的对不起了，韩运。”</p>
<p>他埋在胳臂里摇头，“不是”，挣扎起来，脸上还挂着泪水一脸毅然“你问吧”。</p>
<p>是他这一句话，让我觉得，卢安克说的是真的。他蹲在孩子身边，不看我，轻声谈：“这里是农村，自然的力量很强，教他爬山，他什么山都爬，但叫他反思自己的一些问题他会很痛苦的。”</p>
<p>卢安克陪他回了宿舍，老范看我的神色，知道不理我为好，带着大家去拍外景，我一个人坐在空荡荡的六年级教室里，气恼不已，“三年了，三年了我还在犯错，我怎么这么蠢，我又问错了。”我心里知道，是我心里那点放弃他的想法，流露在了脸上，男孩觉察了。</p>
<p>坐了半个小时，我绞着手，下去吃饭，小潘老师杀了一只鸭子熬了个热气腾腾的火锅，大家都坐定了，卢安克在他旁边给我留了把竹椅子。吃了几口热的，我缓过来点儿了，背地里我问他：“我怎么老没办法改变我的弱点？”</p>
<p>他说：“如果那么容易的话，还要这么漫长的人生干什么呢。”</p>
<p>有半天的时间，卢安克带着我们组和韩运走了三个小时山路，去爬山，在刚下过雨的小山涧里捉螃蟹，躺在草地上，一直到日快落。他说不用去安抚和沟通什么：“跟他沟通没有用，跟他一起行动有用。创作就是这个道理，一起做某一件事，自然就融合在一起了。”</p>
<p>孩子家里每人都有一张自己参与的电视剧DVD，看过了无数遍，还是嘻嘻哈哈又看一遍，遇到同学再看一遍，说起一起偷吃大米或者烂泥巴埋到下巴的细节，是真快乐。我们被招待吃了三顿饭，杀了一只鸡，孩子在水龙头底下洗内脏，卢安克蹲给他打着伞。临走时韩运又拿出中午剩下的饭和碗筷继续留人，他只为了想拖延点时间和卢安克多待一会。</p>
<p>卢安克说不吃了，孩子不吭声，坐在了门口凳子上。卢安克走过去，摸了摸他的背，柔声说“再见”。</p>
<p>韩运没抬头，卢安克出了门。</p>
<p>小纪和蚂蚁收拾完东西，出门的时候对孩子说：“再见”，他还是没有抬头，也没说话，只是摆了摆手，小潘老师说他哭了。</p>
<p>拐过一个弯，卢安克站在那里，看着夕阳快下的山，一动不动地站着，事后他告诉过我，离开孩子时他也哭了。</p>
<p>我知道了他为什么要写信给我，在离开之前他要交托于人，留下一样东西来替代他：“创作可以成为他们的权威，可以给他们归属。”</p>
<p>他在信中提到一本非洲塞拉利昂参加内战的12岁小孩写的书，当时这个小孩扼杀了无数同年龄的孩子，为了能做到这一点，为了避免受不了的感觉，他天天吸毒。后来这个孩子在联合国的会议上是这样解释的： “我们加入部队的原因是，我们找不到可吃的，失去了自己的家，但同时盼望着安全，盼望着自己属于什么，在这个所有归属都垮下来的时代。“ 这跟留守儿童的情况是相似的，只不过极端得多，夸张得多。为了找回归属，他们什么都愿意做，都没看清楚对方是同胞还是敌人。</p>
<p>卢安克说：‘中国的社会没有那样的背景情况，但中国的留守儿童将也会成为一个失去控制的因素，除非我们能给他们带来归属感。”</p>
<p>他当年我们采访的他的学生，一半上了初三，一半去了外地打工，打工的孩子往往加入了帮派，卢安克说这是一种归属的需要，这也是当下的中国人最强烈的感受。在这样一个快速变化的时期里，空虚会导致消费和破坏，只有当人们创作时，感到创建自己世界的满足，不会在与别人的比较和外界的压力下感到被抛弃，这才是真正的归属。</p>
<p>在通信中，我们曾谈到，“创作”，这个词现在常常被当成是一种“手段”——用来吸引孩子学习更多知道的手段，或者一种学习之外的调节。好象生活中总有一个伟大庄严的目的，一切都为这个目的服务，这个目的是什么呢？为了服务于一种意志吧，当这个意志让你去改造世界时，你要具有这个改造需要的知识。<br>而创作在卢安克的理解里，就建立归属的方式。青春期的孩子通过行动得到感受，从感受中才慢慢反思，反思又再指导行动，所以他说，靠说话是没有用的，只有与创作，让他们一起进入和完成那个“强大的人不是征服什么，而是能承受什么”的故事中，感受会象淋雨一样浸透他们，在未来的人生里再来滋养一个人。培养了基础的行为和感受力再来解放他们的思想，“否则会乱”。<br>纪律可以带来秩序，但是是被动的，只有一个人归属于一个事情，一群人，一个社会，才会有认同，和发自内心去照顾它的愿望。</p>
<p>采访结束后，卢安克说他已经满足，现在可以去承受别的责任了。</p>
<p>我说这句话里面有一种很沉重的意味。</p>
<p>他说：“我也不知道我生活在这个世界上是为了什么，有什么使命，这个只能是慢慢摸索的，所以只能慢慢看有什么结果，也许过了几年我明白，为什么要这样。”</p>
<p>“你想检验自己？”</p>
<p>他好像触动了一下，说对。</p>
<p>我说那你害怕那些对你有期待的人会失望吗。</p>
<p>他说：“把希望放在别人的身上是虚拟的，所以无用。如果自己不去做，那就不会有希望。”</p>
<p>当时暴雨初晴，强光照透了天地，我说：“人生的变化很多，也许三年后我们会再见，再谈一次，谢谢你。”</p>
<p>他微笑，说：“也谢谢你。”</p>
<p>采访完第二天，卢安克离开板烈，去了杭州，一个星期后他辞职，因为手续问题，去往越南。他不伤害谁，也不违背自己，他自己来承受命运加诸于身的全部后果，他只说：“别人对我佩服的地方其实是我的无能，我无能争取利益，无能作判断，无能去策划目的，无能去要求别人，无法建立期待。也许有人以为那是超能，这个误会就造成了我现在的结果。还可以用另一种表达：人类大部分的苦都是因为期待的存在。其实，在人生中不存在任何必须的事情，只存在不必要的期待。没有任何期待和面子的人生是最美好和自由的，因为这样，人才能听到自己的心。”</p>
<p>在我写到这里时，他仍然在越南，身处在语言不通，无法工作的边境。除了保持与他的通信，我也没有更多能做的事。</p>
<p>板烈那场最后的采访，是在山间高处一片梯田里的水泥储水台上，开始之前下了雨，幸好土地里有一把破旧的大遮阳伞，是前几天收麦子的农民留下来，卢安克把它张了起来，足够我们几个，加五六个小孩子，还有一个看热闹的老农民容身。小罗站在我身边，帮我拿着本子，两手抱在胸前。雨下了好一会儿，从伞檐上穿了线，山明一会儿，暗一会儿，大家紧靠着，面向各方自看暴雨里青绿的田野，很久，有一点金光从东山破过来，乌青的云滚动奔跑，相互推移，雨就要过去了</p>
<p>是此时的感受，让我说出节目结尾的话，教育，是人与人之间，也是自己与自己之间发生的事，它永不停止，“就像一棵树摇动另一棵树，一朵云触碰另一朵云，一个灵魂唤醒另一个灵魂，只要这样的传递和唤醒不停止，我们就不会告别卢安克”</p>
<p>（附注：卢安克博客：<a href="http://jiaoyu.org/luanke/" target="_blank" rel="noopener">http://jiaoyu.org/luanke/</a></p>
<p>卢安克《农村支教指南》<a href="http://www.jiaoyu.org/liushou/zhinan.htm" target="_blank" rel="noopener">http://www.jiaoyu.org/liushou/zhinan.htm</a></p>
<p>老范博客《暂别卢安克》<a href="http://blog.sina.com.cn/fanfan1120" target="_blank" rel="noopener">http://blog.sina.com.cn/fanfan1120</a></p>
<p>结束语中“一棵树……灵魂”此句引自德国哲学家雅斯贝尔斯，节目中不便直接标注，在这里说明一下。）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[【转载】Here’s What A Coder Learned After Losing Internship at Facebook]]></title>
      <url>http://chocoluffy.com/2015/08/24/Here%E2%80%99s-What-A-Coder-Learned-After-Losing-Internship-at-Facebook/</url>
      <content type="html"><![CDATA[<p>Again, size breeds chaos.</p>
<a id="more"></a>
<p><strong>again, size breeds chaos. 当公司需要对所有消费者服务的时候，对不确定性的恐惧很容易击败对未知的尝试，正如本文中的主人公的这次事件一样，他只不过是利用了原本就在facebook网站上公布的geo数据而已，不过将地理数据可视化出来很容易引起公众对隐私权的反击，这也是为什么facebook会采取如此行动，就像曾经Zuckerberd曾经威胁收购snapchat一样，这是保护创意的做法吗，还是不过就是为了公司商业利益？鸡汤，只是用来安慰公众扶持股票的，毕竟大众的心理处境太容易受各种暗示影响从而引发不可估量的蝴蝶效应了。 具体的cons，可以参考一本描述大众心理学的书《乌合之众》。</strong><br> <strong>余舜哲</strong><br> <strong>2015.8.24</strong><br> <strong>多伦多凌晨5点，倒时差中</strong>   </p>
<p>Short Bytes: You must have read the story of Aran Khanna, the Harvard student, who lost his internship at Facebook after he brought the privacy issues with Facebook out in the open. After losing his summer internship at Facebook, he has written an article in Time telling his views regarding the whole internship at Facebook episode. A ran Khanna lost his Facebook internship 10 weeks ago, when he launched his Marauders Map extension that used the location data from Facebook Messenger and pltotted the same on a map. Stating the reasons, Facebook said that Aran didn’t meet the high ethical standards expected from the interns who intend to work at Facebook.  </p>
<p>Writing for Time, Aran mentions about his days as a rising senior at Harvard, the same place where Facebook founder and CEO Mark Zuckerberd made the world’s most popular social network. He writes that he drew inspiration from the prospects of joining the “hacker culture” of Facebook where “code wins arguments.”  </p>
<p>He says: That forward-thinking “hacker culture” is how Facebook started. Can you imagine if Zuckerberg had gone to the school administration to ask permission to build Facebook in his dorm room? Luckily, he didn’t need permission. He built it, and his code won. </p>
<p>Talking about his intership, he mentions that earlier he had taken a class in Privacy and Technology, where he learned to question technology and its impact on people’s lives. The learnings of this class and his interest in Facebook’s products, inspired him to make Marauder’s Map extension- that allowed users to see the geolocations of the people on Messenger. It should be noted that Facebook’s Android Messenger app automatically shared the geolocations along with the texts. </p>
<p>He stresses on the fact that he didn’t exploit any trade secret- or broke into anything. His app did nothing but read the already available data and displayed it on a map. However, Facebook disagreed and blamed him for violating the site’s user agreement by utilizing data taken from website in his app. He says: An employee from the company asked me not speak with the press and to deactivate the extension, which I did. I was both shocked and disappointed when a Facebook HR representative called the day before I was supposed to start my summer internship, after I had already moved to California, to inform me that my offer was being rescinded.  </p>
<p>After this episode, Facebook issued an update that changed the way Facebook shared geolocations. Now, your geolocation is only shared if you elect to do it.  </p>
<p>Talking about the learnings from this lost internship at Facebook, he said that it was an “incredible learning opportunity” teaching him how big tech giants response to the privacy issues and how they end up hurting their uses.  </p>
<p>Talking to the Indo-Asian News Service, he said that his intentions were never malicious and he simply sought to draw the attention of people and Facebook. He says:   Moving forward, will companies like Facebook be more aware of privacy concerns and more proactive in patching them? Or must we continue to rely on privacy guardians affecting change from the outside?  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[【转载】最幸福创业者，25岁的新移动社交之王]]></title>
      <url>http://chocoluffy.com/2015/08/20/%E6%9C%80%E5%B9%B8%E7%A6%8F%E5%88%9B%E4%B8%9A%E8%80%85%EF%BC%8C25%E5%B2%81%E7%9A%84%E6%96%B0%E7%A7%BB%E5%8A%A8%E7%A4%BE%E4%BA%A4%E4%B9%8B%E7%8E%8B/</url>
      <content type="html"><![CDATA[<p>很多时候，我都相信，在我们创造软件、网站的交互方式的时候，我们同样的，在创造一种文化。</p>
<a id="more"></a>
<p>关于snapchat，我以前关注的点：</p>
<p>1、snapchat其实是standford的一个class-project;</p>
<p>2、起初的用户量引爆点不在大人，是埃文的表妹将这款软件带去她所在的初中还是高中之后传开的；</p>
<p>3、因为阅读浏览后图片(snapchat上大部分是图片)会不留痕迹，这种价值观对用户行为的影响。 我始终相信一个网站或者app背后那个核心的行为和思想就是一种社会文化模式，snapchat允许我们阅后即焚，也就允许了真实、不加修饰、“冲动”地去分享，甚至阅后即焚的暗示，让很多分享更加的偏激，毕竟你的观点和照片，你的portrait又回落入一片黑暗(仔细想想，snapchat还正戳中了微信的弱点)；facebook的宗旨是”connect everything”，所以它希望沉淀下你所有的关系网，一天给你推荐十几个新朋友，不仅仅是因为增加点击率可以提高广告收入，而且也提供你一个源源不断的feed, 让你更持久的停留在facebook的世界；</p>
<p>以前还对reddit信息聚合网站(我男神Aaron Swortz互联网之子一起co-found的)的feed algorithm有留意过，其实你新feed出现的速度\用户支持和不支持的限制\ 旧feed的gravity等等的细节 也构建出了一个对trending内容充分尊重和扩散的文化，可以设想的是，不同的参数设定将会引导出另一种文化。</p>
<p>很多时候，我都相信，在我们创造软件、网站的交互方式的时候，我们同样的，在创造一种文化。</p>
<p>这一点可能很显而易见，但是能够用自己的双手，把自己笃信的价值观模拟实践出来，又何尝不是一种理想主义。</p>
<p>最后一点谈的稍微有点多了，以后有机会我会继续分享我对各种商业模式的思考，回到正题，在下面的文字中去看看新社交独角兽snapchat创始人的另一面。</p>
<p>余舜哲</p>
<p>2015.8.8</p>
<p>埃文•斯皮格尔(Evan Spiegel)坐在自己创办的Snapchat公司办公室里，他穿着运动鞋，一只脚搭在伊姆斯椅(Eames chair)上，身体往后倚靠，开口就承认自己现在跟媒体不怎么打交道。“我真的是好久不接受采访了。”他说着，小啜了一口所谓的“幸福果汁”——用菠萝、梨、生姜和薄荷调配的饮料。在被问及原因时，他字斟句酌地回答。“因为我一直忙着工作啊，”他说，“太xx辛苦了！”24岁的斯皮格尔是Snapchat的联合创始人、首席执行官，因顽劣鲁莽而备受争议。这家初创企业是规模最大、发展最快的社交网络公司之一，拥有330名雇员，估值超过150亿美元，声称拥有超过1亿用户，其中绝大多数是年轻人。此外，他对于自己的商业计划讳莫如深，在硅谷和好莱坞错综复杂的八卦小圈子里，他始终是个让人感到陌生（而且可以说是没有受到重视）的角色。而现在，他已经做好准备，要谈谈公司面临的重大转折。</p>
<p>在斯坦福大学跟现年26岁的兄弟会老友鲍比•默菲(Bobby Murphy)创建Snapchat3年多后，他开始尝试将它发展为一门真正的生意。今年早些时候，Snapchat先是播放了一系列精选的视频广告，之后打算开始游说其他大型广告主，他们还拿出了一些全新的数字，力图表明它的用户比电视广告的受众群规模更大、年龄更轻，而且迷恋程度更深。5月它向广告公司发放了一份23页厚的销售推广材料，介绍称美国13-34岁的智能手机用户中，有超过六成是Snapchat的活跃用户，每天浏览视频次数超过20亿次。这已经约是Facebook用户观看视频数的一半，而后者不仅公司历史比其长了7年，而且用户数也比其多了9倍。“Snapchat刚出来的时候，我觉得就是在小打小闹，这个想法确实大错特错。”Facebook前高管、现在是高科技产业投资人的查马斯•帕里哈皮提亚(Chamath Palihapitiya)说。他并未向Snapchat投资，但正在密切关注这家公司。“我觉得谁都没看出来他们将会取得怎样的成就。搞得不好，他们将是下一代的MTV音乐台。搞得好的话，他们将是下一代的维亚康姆(Viacom)。”Snapchat的上升道路经历了种种坎坷。这家公司创造性地推出了一种在打开几秒后就会消失的新型在线消息。</p>
<p>讽刺的是，它遭受的一系列公关危机都是跟内部磋商和令人难堪的旧电子邮件被公之于众有关——这些恰恰属于永远不可能自行消失的信息。2013年晚些时候，商业内幕(Business Insider)发布了斯皮格尔和默菲在一次诉讼案中本应保密的口供录像，这起案件的原告是他们的一位斯坦福前同学，他声称自己率先想出了可以消失的信息这个点子，但却被排除在公司之外，遭受了不公正的待遇，此后案件达成庭外和解。接下来，去年5月，斯皮格尔在读大学期间给他兄弟会同学发去的含有猥亵内容的电子邮件被传到了八卦网站Gawker，并被悉数刊登出来。到了去年12月，黑客攻击了索尼的电脑系统并公布了大量电子邮件，其中就有斯皮格尔和Snapchat几位董事，包括索尼娱乐首席执行官迈克尔•林顿(Michael Lynton)通过电邮开展商业策略磋商的机密内容。</p>
<p>凡此种种，给人们留下了一种印象，觉得斯皮格尔是个自大、歧视女性的洛杉矶富二代。不仅如此，在2013年年底，当Snapchat还没有分文进账时，他竟然拒绝了Facebook超过30亿美元的现金并购要约，这更是让人们觉得此人又傲慢又愚蠢。不过，正如今年5月15日斯皮格尔在南加州大学毕业典礼致辞中所说的那样：“不管怎样，总会有人对你有意见。不管你怎么做，总会有人觉得你做得还不够。所以，你要找到对自己重要的东西，找到你热爱做的事情。”现在，斯皮格尔希望纠正外界对自己的误解。在90分钟的采访中，他谈到了自己读的书、商业策略、千禧一代的心态，以及这家备受瞩目的公司的未来。这一次，他想要传递的是一个独立思考者的形象，他走上了与很多竞争者截然相反的道路，原因不仅仅在于他忠于自我，更因为他相信年轻的互联网用户并没有从其他营利性社交网站得到优质服务。他在决策中回避数据，在App中忽略了传统设计，并将他的公司总部设在因施瓦辛格(Arnold Schwarzenegger)等一众肌肉男而在上世纪70年代名声大噪的加州健美海滩附近。他不落俗套的态度还延伸到了广告业。</p>
<p>“很多人认为互联网广告给原有体系增加了重负，如果你在乎的是创造新的产品，这一点还蛮让人泄气的，如果你感觉自己能够解决问题，这一点就更让人沮丧。”斯皮格尔本人跟他做的产品有不少相似之处：热切、质朴、莫测。在他说到激动处时，不是说下面的话“不能发表”，而是“不能xxx发表”。他有时态度很谦逊（“这里的每个人都比我聪明得多了”），不过也常常说漏了嘴，显得自命不凡（“我真的是刚刚灵机一动，想到了这一点咧。”他一边说着，一边在纸上画了个图表来说明服务的基本要素）。而且他很容易动脾气。如果一位采访者提出了一个蹩脚的问题，就好比：你们公司的长期愿景是什么？就只能求老天显灵了。因为斯皮格尔会直接说：“我讨厌这种问题，哥儿们。”</p>
<p>他的朋友和投资人说，在这样的态度后面，隐藏的是一个正在崭露头角的商业人才。尽管在硅谷的科技界，斯皮格尔仍然是个无名小卒，但他已经悄无声息地跟一群大佬搭上了关系，比如谷歌执行董事长埃里克•施密特(Eric Schmidt)和软银(SoftBank)副董事长尼科什•阿罗拉(Nikesh Arora)。“我最感兴趣的是埃文学习的速度，”米奇•拉斯基(Mitch Lasky)是Snapchat公司董事兼投资人，通过风投公司Benchmark投资，“这一点才最让竞争者闻风丧胆。在能让他成为伟大的CEO的那些方面，他已经表现得越来越出色，而且速度远超出任何人的认识或者预期。”斯皮格尔说，Snapchat起初的重点并不是转瞬即逝的自拍照，而更多关乎让人们将捕捉到的某一刻跟想要的任何人随意在线分享，而不必担心因此产生的更为深远的后果。在当今世界，你在Facebook或者Twitter上说的任何一句话都可以成为你永久的互联网身份的一部分，因此对于年轻用户来说，不确定性是有价值的。“在此之前，绝大多数社交媒体所做的就是上传照片，地球上所有人都能看到”，他解释说，“而我们不想做得那么宏大。我们想的很简单，就是尝试重新讲述拍摄某张照片时的幕后故事”，并且在线跟朋友们分享。接下来，斯皮格尔和他的同事们定下了基本理念，在此基础上添加其他功能。用户可以给他们的“快照”配上搞笑的图说，按时间顺序上传后就成了每天的视觉“日记”，并能跟群组的朋友分享。</p>
<p>Snapchat还对这些日记进行遴选加工，做出大学校园和全球主要城市的快照汇编——所有图片都会在24小时后消失。这样一来，当Facebook和Twitter用户为了避免日后的尴尬而需要精心编写自己的帖子时，Snapchat的用户受到了怂恿，敢于上传冒着傻气、毫无顾忌或者色情猥亵的想法（以及图片），坚持自己的本色。这并不是Snapchat唯一与众不同的地方。这项服务无法在传统的网站，而只能在智能手机上使用，而且这家公司的一大核心信条是相信视频和照片应当撑满智能手机的整个屏幕。“他相信自己的受众都是年轻的手机用户，而且相信这些受众并没有从现有的硅谷一流公司那里得到应有的服务。”拉斯基说。斯皮格尔反感绝大多数类型的在线广告。他觉得精准投放广告让人毛骨悚然，尤其是有时候你在一个网站买了某件商品，结果过了一会儿就在另一家网站上看到了这种商品的广告。“上网的时候感觉身后有台吸尘器一直跟着，这让人直起鸡皮疙瘩。”他说。他也不愿意在Snapchat用户一对一的私聊页面上放广告，认为这样太招人厌。</p>
<p>Snapchat代之以全屏视频广告，这些广告会在媒体频道或者来自不同城市和大学校园的“故事”页面中出现，广告主目前包括可口可乐、麦当劳和三星等。这些广告时长10秒左右，更像是传统的电视广告而非新奇的互联网广告。它们最不同寻常的特点在于，当用户垂直握持智能手机时，视频可以在不改成横握的情况下填充整个屏幕，公司认为这个特性非常重要。在向广告主提供的销售文件中，Snapchat声称相较普通广告，用户有9倍的可能性看完在他们的应用上发布的整辑广告，因为他们不必把手机转一个方向。而在另一项独立的研究中，谷歌也发现用户更有可能看完尺寸更大的视频广告。根据谷歌下属DoubleClick部门今年5月的一份报告，在网页和智能手机上最常出现的是于页面一侧发布的垂直小尺幅视频广告，访客浏览这种广告的比例仅有区区19.8%。Snapchat需要发布垂直方向的视频广告，这也意味着广告主不能将已有的、用于YouTube和Facebook上的水平格式广告直接改了就用。广告主表示要为此付出不菲的代价，但斯皮格尔并不怎么操心。</p>
<p>“我们运气不错，因为拥有令人叹服、数量惊人的受众群，大家都会为了做出更好的产品而专门修改自己的视频广告。”他说。在过去这几个月，斯皮格尔先后前往伦敦、洛杉矶和纽约拜访大型广告机构和品牌，介绍Snapchat的广告方案。互联网公司的CEO亲自进行商业推介，这不太平常。“他早就开始接触公司的商务层面，从这方面说，他已经成为一种新型的社交创业家，”在线广告机构Akqa公司的董事长汤姆•贝德凯尔(Tom Bedecarre)今年年初跟斯皮格尔会面，他说，“其他大部分这类创业家都会找一个人替自己出面去投标。”伊姆兰•汉(Imran Khan)曾在瑞士信贷集团(Credit Suisse)投资银行部门任职，去年12月加盟Snapchat担任首席策略官，他说“埃文将广告视为产品，而大部分互联网创始人是将广告看成必要的‘作恶’”。目前伊姆兰•汉负责监督公司广告投放效果，与此同时公司正在物色广告总监。Snapchat或许高估了它对广告主的吸引力。它刚启动广告计划时，要价是每1000次浏览约100美元，这比YouTube或Hulu的开价高了一倍多。5月Snapchat宣布将把每1000次浏览费用降至20美元，这个开价仍然高于一些竞争对手，而且广告业的部分人士认为Snapchat尚未让广告主信服。“我觉得用户使用Snapchat，为的不是在那里寻找内容，他们是把它当成跟朋友们沟通的平台。所以，除非它能把信息交流功能整合起来，否则对于品牌并没有多大的价值。”</p>
<p>广告公司IPG Media Lab的创意总监斯科特•瓦兰德(Scott Varland)说。他认为Snapchat应该寻找各种方式帮助广告主进一步延伸触角，更准确地瞄准特定的用户群。斯皮格尔除了要应对在消息服务平台上发布广告的质疑，还需要跟人们对他领导能力盘桓不去的疑问作战。一个从前犯过好几次错的24岁小伙子，能领导一家炙手可热的社交初创公司走过发展的下一个阶段，甚至向IPO跃进吗？批评人士忙不迭地指出斯皮格尔近期犯过的错。去年，他从Facebook这类公司挖到了几位高管，其中一位名叫埃米莉•怀特(Emily White)的高管在任职COO仅15个月后离职。与Snapchat关系密切的人士说，斯皮格尔想做一个凡事亲力亲为的老板，这让传统型的COO很难有发挥作用的空间。斯皮格尔不愿探讨此事，只是宽泛地说，“我们想把事情做对的决心出乎大家的意料。”所以，说他是个变幻无常的老板“反而更简单”。</p>
<p>怀特未回应置评请求。还有些用户批评斯皮格尔开发的服务很难使用，看起来对于任何1985年出生的人来说，拿到它都有种无从下手的感觉。（“用户界面和设计看起来是将诡异的日本动漫和1980年代情景喜剧片混到一块儿。”《纽约时报》如此评价）比方说，在这个应用软件上找不到直观的按键，只能通过隐藏的图标和滑屏手势来调用别的功能。而且如果你不知道其他用户的Snapchat账号或者手机号码，几乎不可能搜索到别人。“我知道它看起来蛮难用的，看起来难用是因为它是新事物。”斯皮格尔说。他说公司将简化服务，并开发诸如用户目录这类功能，但他对于创新更感兴趣——公司的七成工程师都是在研发新产品。他自然不愿对新产品做过多阐释，但这不难猜：那应该是任何年轻人想要分享、互动和交流的事情，比如在玩的游戏，想要的产品，以及音乐和电影这一类的媒介。在去年12月索尼电子邮件泄露事件中，斯皮格尔在与索尼公司林顿的电邮中谈到了想与像Vevo和Spotify这类音乐服务供应商建立合作，甚至对购买一家唱片公司流露了兴趣，这样一来他就可以在Snapchat上推广唱片公司旗下艺人。在这些邮件曝光后，斯皮格尔给公司员工们写了封备忘录，贴在了Twitter上。备忘录表达了他对泄密事件的看法（“极度生气，极度震惊”），但同时也像是某种公司使命声明，意欲创造新一波的私密沟通工具。“保持高度机密能为你留下改变心意的空间，除非你已经确定自己做的事情没错。”他写道。他以一句类似战斗口号的话作为结语：“我们将改变这个世界，因为这不是我们想要生活的地方。”在被问及这句话究竟指的是什么时，斯皮格尔进行了一番“不得xxx发表”的长篇大论，谴责媒体未考虑到个人信息遭到曝光的索尼员工的利益，公开私人通信内容。不过他最终并没有承认Snapchat的使命是改变一种看似要拼命曝光一切事物的文化。</p>
<p>“我们目前还没有解决它的能力，”他说，“我现在24岁，我们已经为这个产品投入了4年。我不会站出来发表如此荒谬的宣言。我们就是没有解决它的能力。对不起，我们现在只能帮大家分享照片。”对于你至今所取得的成就，你引以为荣吗？我问斯皮格尔。“我为我们的团队而骄傲，”他顿了一顿回答说，“我也为在我看来他们将要做出的事业而骄傲。”</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如果暑假没有尽头]]></title>
      <url>http://chocoluffy.com/2015/08/18/%E5%A6%82%E6%9E%9C%E6%9A%91%E5%81%87%E6%B2%A1%E6%9C%89%E5%B0%BD%E5%A4%B4/</url>
      <content type="html"><![CDATA[<p>当我在电脑上敲下暑假的时候，我心里的第一声念想，便是作品。</p>
<a id="more"></a>
<p>我想起的，有暑假期间我自行开发的几个rails网站作品，还有，依稀记忆中的深圳中学校长王占宝的一袭文字——每一天都是作品。 其实，暑假不过就是拉长了的业余时间，而我们在平时的业余时间里想着什么，在做什么，也就是我们的整个暑假。</p>
<p>他的一句话我很喜欢：“因为专注与纯粹，所以作品珍贵而久远。专注，是简单的深刻；纯粹，是深刻的简单。”</p>
<p>伯克利的交换仿佛刚刚结束，眼里的自己仿佛还是那个一拍照就剪刀手的青稚少年，而心里，却对一些更长远的事情有了点稍稍深刻的想法。 我到底喜欢什么，我想要做成什么，以及，能坚持多久。 </p>
<p>我觉得我一定不会忘记伯克利给我的震撼，那个在review session上和我说她很喜欢pure math的女生，那个hacker meeting上“煽动”我们build some cool shit的大二辍学生，那些当我拖着疲惫的身躯正夜12点走出教学楼的时候身后的热闹与喧嚣。 我并不试图把我的经历写成鸡汤，不过总有一些人，当我试图靠近他们的时候，我不自觉屏住的呼吸，诉说着一种崇敬与尊重。 当我回到现实的土壤，开始一个人的旅途时，虽说少了点热血，但我心里明白地知道，这才是我大多数的生活。 </p>
<p>桌面上，我留下了几张写满书名的便签纸，也开始了我为期3个月暑假的修炼。 </p>
<p>现在看回去的这3个月，几乎连续的代码提交，叠起来估计能到我肚子这么高的技术书和哲学书，几个能拿得出手的动画和网站，以及认识的一些有着相似爱好的伙伴，也让我有了些许的满足感。不说其他虚的，也不谈技术[感兴趣的欢迎私聊我], 我想说说给我留下深刻印象的一些东西。</p>
<p>第一个是程序员的思维，当我自己真正开始封装一些函数库，整理一些模块的时候，能体验到重构代码，用更加整洁、行数少的代码做到同样功能的乐趣，说得通俗一点，就好比每个人自己的武器库，那种拿起来就可以直接用的武器，以前都是找别人借的，都没有试过自己去理解那些武器，现在终于等到自己去造小武器了，自己也有了对更快更强的期待和去深入了解的需求，虽然现在大多数时候还都是上网调用强力武器，不过能够自己去仔细打磨创造武器，整理好自己的武器库，在有需求的时候能够很快抓准对应的架构和使用局限，还是很兴奋的不是吗。 </p>
<p>其实每一个行业都有体现的，不过程序界体现的最明显的一种想法，封装和抽象。 如果每一次要搭建一栋楼房的时候，都要从去研究怎样把一个砖制造出来，效率就很低了。 所以我需要直接的整块砖的封装，需要楼房架构设计的抽象，需要各种工具拿来就用而不是想要的时候才去制造的效率，我们才能更快更好的创造更多东西。 类似的理念还有很多，《大教堂与集市》里面提到的开发模式是偏向按功能蓝图建造出严谨大规模的大教堂，还是偏向开源的集市，其实就和社会科学里面蜘蛛形的中心控制体制，还是海星形的分布式控制的讨论相似。 《松本行弘的程序世界》里面关于编程语言特质的比较，像ruby这种动态性的语言，它甚至赋予你去动态按需更改kernel模块的能力，赋予程序员的自由度很高，危险度很高，但也因此可以创建出极简的模块和flexible的反应机制，我阅读时体会到的，这还是一种哲学。</p>
<p>说实话，其实理论的发展大都来自实践的需要或者启发。 起初科技发展的动力是军用，在军事领域创造了这个技术后，才有往大众市场推广的需要和努力，以至后面的各种渠道建设，都是这种推广的一部分。前几年大热的大数据，不过是10年前谷歌搜索技术中摸索出来的一种处理数据的方法。现在什么都在沾边的“分布式”“众筹”“UGC”“开源”哇，都不过是在个人参与的门槛降低后(或者应该说成中心控制的垄断被逐渐打破)时的一种协作体现方式，当人们贡献的不是想法点子，不是资本内容，而是选票的时候，这些名字多了另一个标签，民主。标签只是标签，也只能起到标签的作用，既然是“民主”为核心的变式协作，也会沾上民主的不满和缺陷，什么多数暴政，质量版本控制，应急处理反应等等，不仅仅在编程的世界，我们现实的社会管理的讨论中也有他们的位置。 </p>
<p>我想说的，就是对程序员思维中对“重用”的重视，以及程序界讨论的一些想法和其他领域的联系和启示。 当然如何改进这种协作、创作方式的效率，如何改进民主，是大家都关注的问题，其实我们去看看那些科技发展中效率最高的地方，也许就会成为其他领域突破发展的关键，我在这里不细说，在之后的文章中再仔细讨论这个问题，比如： 曾经诞生多少辉煌诺奖的贝尔实验室。呵护创意想法的皮克斯工作室，现在作为商业公司却开源200多个项目的facebook内部工程师社区，谷歌转变为alphabet背后对谷歌实验室等更多个创意想象的想法的重视。当我们拿事实历史而不是媒体擅长的戏剧式的故事去审视这些机制，这些人的时候，或许对怎样去诞生最有效率、最有质量的意见，怎样去迭代有了更深层次的思考，而民主何去何从，或许也会有更加有说服力的答案。 </p>
<p>给我印象深刻的东西的第二个是哈耶克和巴斯夏。虽然不是经济系的学生，但是啃完了哈耶克的部分文集，和巴斯夏的一些论文，让我不能不向他们发出我最诚挚的尊敬。他们的很多关于自由主义的观点，虽然不是第一个提出的，但是他们的透彻思考带给我很多启发。 在这里并不详细写出那些观点，感兴趣的人关注我的其他文章，我只说一点，其实有大部分我们现在争论的，或者不自觉形成的观点，都已经有很多伟大的头脑进行了详细的阐述和讨论，只不过人们选择忽略他们，而这种选择性遗忘，比那些观点从没有存在过还危险。 我只是希望不要浪费了那些伟大的头脑苦苦思冥出的结晶。 </p>
<p>有一个角度，在理解现代经济体制上面很有帮助，就是充分理解到每一次选举口号里面，对失业率降低的承诺，对社会福利的承诺，都不是凭空变出来的，这一次选举的结果不会凭空增加国民财富和就业机会，它不过是以选举人的意志重新分配了财富，而分配，意味着你在一份的花销多了，势必对另一部分的花销有影响。理解到这一或许其实很明显的想法，再去看看一个医疗保障已经占去GDP20%的国度实行的全民奥巴马医改制度会有的其他影响。去考虑一下真的有可能在不改变其他社会的结构就能完成充分就业吗，应该补贴艺术吗，以及究竟节俭和节制究竟触动了人的哪根神经以致于人们都认为这不是自己的事而是国家的事(请看希腊为首的福利国家的诅咒)。<br>或许这些问题在社会学或者经济学专业的同学里面有抑或没有一个令自己信服的答案，但是如果已经存在非常棒的想法，(我并不是说只是某几个人的想法，也并不认为他们的想法一定都对)，令人信服的解释和实践，那么让他们的思考在我们这个时代延续下去，或许具有一定的意义吧。 我喜欢效率，希望听见、参与思考，而不是一个大众围观地产大亨去总统选举转一圈到处撕来让自己和喜欢冲突的观众爽的娱乐至死的时代。</p>
<p>给我印象深刻的第三个东西，则是准备留学带来的感觉。为了让这篇“散”文更像鸡汤的点睛的段落。</p>
<p>这是每一个即将出国的同学都将面对或者曾经思考过的一个问题—留学的意义。这是关乎你一生的重大的选择，逼迫你不得不去面对自己，去倾听你内心的声音，你到底想要什么，你到底热爱些什么，你想怎样去改变你周围的世界；有些人觉得，出国就是镀金，出国就是找一个老外嫁了促进国共外交关系，有些人觉得出国就是创业，在商业金融的楼宇之间穿梭；其实，这些都是选择，这些都是personal choice，都是一些很关乎个人的事情，也因此，并没有说哪个选择会比哪个选择更加高贵或者更加值得去做。<br>或者说，其实选择并不重要，重要的是，你在做选择背后是抱着怎么样的心态，你未来做事情又有怎么样的倾向；<br>试想想，抱着，出国是一条捷径的想法的人们，在国外，会怎样去生活；那些想着出国是一条捷径的人们，会不会在国外就真的放轻松和自在，觉得自己走了捷径呢。那些想着出国就是准备大干一场的，努力去寻找思考交流机会的人，或许他们的生活在旁人眼里显得难以坚持，但却带给他们自己最大的愉悦和成长。</p>
<p>留学这个思考，还是关乎于你的工作，学习和生活的。而留学的意义，也有其关于友谊和家庭的一面；其实，留学的意义，意义，说起来，好像我们得到了什么一样，但其实，留学，是一个逐渐失去的过程，你将不得不离开你最熟悉的朋友，最亲你呵护你照顾你的家庭，孑然一身，奔赴异国他乡，你就像一个洋葱，一层一层被剥开，到最后只剩下你自己。</p>
<p>或许，留学 ，在于友情和亲情，就是失去，不过，也因为失去，你会懂得倍加珍惜和感恩。每当你在异国他乡拨通家里的电话，看到父母亲在镜头下乐呵呵的样子，你能不能想到，你的家人，无论生活都么平凡与枯燥，都会为了这30分钟挤破了头般对你笑，让你听见你最熟悉不过的唠叨。每当你下了飞机，一大波朋友约饭的约饭，运动的运动，就想他们从来没有离开你一样，你有没有想过，他们在他们的记忆中，也有你不可缺少的身影和留恋，他们很在乎你，当然，也在乎你的纪念品。<br>留学，是一个不断失去的过程，但在这个过程中，你懂的更加的珍惜和感恩。在你未来准备出国的日子里，去努力记住你最亲最爱的人的音容笑貌，去感谢和陪伴值得你感谢和陪伴的人们，因为，他们，是对上帝对你的最好的恩赐。</p>
<p>这些文字，全部都是我自己所想所经历，虽然有些段落有鸡汤的嫌疑，但是鸡汤不一定就是坏的不是吗。它们串联起来构成了我这个暑假的一大部分，当然，还有其他很多东西，那些回响着腹肌撕裂者的早晨，那个洒满汗水的篮球场，以及每一天和家人的粗茶淡饭。</p>
<p>可能我的暑假并没有那些旅行者的暑假那样在景色中寻找初心，也少了点公益人在实践中回馈社会的勇气，但是，就像我像以前的文章里写道的，意义本身就是一个很私人的东西，我有幸能够接触到那些优秀的作者和想法，拥有珍惜我爱护我的家庭和朋友们，这本身已经很让我满足了。<br>如果暑假没有尽头，那就是我们的整个人生。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[【转载】为什么要读闲书？]]></title>
      <url>http://chocoluffy.com/2015/08/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%AF%BB%E9%97%B2%E4%B9%A6%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>只有曾经去思考什么是自由，才有去挣脱的冲动。</p>
<a id="more"></a>
<p>先说中国一般人的理解，闲书就是“没 有用的书”，对吧?跟工作没有关的书，不 能够给我们带来实际利益的书就是闲书。 我过去教哲学的时候，被学生问到最多的 一个问题就是，哲学有什么用?我说什么 用也没有，哲学就是一门“没有用的学问”，所有人文学科方面的书，在某种意义上，都没有什么用。</p>
<p>比如说，我读一本小说，既不能拿它 去评职称，也不能通过它挣钱，为什么还 要读它呢?—理由是我们要休息，要读 一些能够让我们放松的书，在这个意义上，读闲书是很有道理的。小说为什么不叫大说 呢，就因为小说是一个没有用的东西。所以 呢，读小说的人还蛮有超越性的，蛮能享 受生活中闲适的这一部分。</p>
<p>闲暇是用来“沉思”而不是放松的</p>
<p>不过，我主要想介绍的不是中国人的理解，而是一位德国天主教哲学家约瑟夫·皮珀 (Josef Pieper ) 的书《闲暇：文化的基础》。 这本书里面分两个部分，前一部分讲的是 闲暇与崇拜，后一部分讲的是闲暇与哲思。 西方对闲暇的理解和我们不一样，我们会 把休闲的那一部分叫做闲暇，但是他们刚 好反对这样。皮珀把一个人的生命分为三 种状态：一是工作，二是休闲，三是闲暇。 闲暇是用来“沉思”而不是放松自己的— 这是西方很重要的传统。</p>
<p>在西方的文化传统中，把认识这个世界 的本质，看作是一个人最重要的一件事情，这跟中国人非常不一样。中国人很多时候，会欣赏世界，会把世界看作可以跟人融为 一体的对象。但西方不是这样的，他们认 为这个世界的本质是由精神和物质两个部 分构成，人可以通过观察和沉思，把握到 世界的本质，这是闲暇非常重要的一个作 用。闲暇还有一个功能是崇拜：人们通过 崇拜的仪式，来跟上帝融为一体，从而把 握这个世界的本质。</p>
<p>就像亚里斯多德很早的时候所说，我 们之所以不能闲下来，就是为了我们最终 的闲暇，因为闲暇是人的本质追求。我们 为什么要工作呢，工作本身不是我们的目的，工作是为了让我们有时间来闲暇，在闲暇中 思考世界的背后是什么。</p>
<p>闲人三枚：杜尚、维特根斯坦、千利休</p>
<p>在西方现代艺术史上，有一个很重要的人 物，也许是排在第一号的人物—马塞尔 ·杜尚(Marcel Duchamp)。在他很年轻的 时候，在他的画已经可以卖大价钱的时候，放弃了绘画，进到了一个无所事事的生活状 态里。他用了三十年的时间，在家里找人下 国际象棋，还写了一本跟国际象棋有关的书。 作为达达主义的创始人，他认为虽然很多 人都热爱艺术，但这其实是一个非常无聊 的事情—很多艺术家，他们从事艺术活动就是为了挣钱，挣很多很多的钱，买个 豪宅、豪车，去国外旅游。</p>
<p>杜尚对这一切都是不以为然的，他觉 得一个人为了挣钱去画画，是他非常看不起 的一种行为。所以有人把买画的定金放在 他面前，他是不要的。他宁可高兴了，随便 做一幅作品拿出来，比如他把小便池挂出 来，上面给一个标签：泉。这就是他著名 的一个艺术品，达达主义讲的就是没有艺 术，没有什么可以解释。他用这样一个行为，批判也嘲讽了所有跟他同时代的艺术家。</p>
<p>杜尚说，人可以不要很多东西，可以 不要房子、车子、妻子、票子……他说“我 热爱呼吸胜过一切”。他所有讲过的这些 话，其实都在讲一种已经被现代人所淡忘 的，西方文化中最高贵的一种坚持—人的 目的性。人的目的性不是艺术，也不是读书，人的目的就是自身。为了强烈地呈现这样的 理解，他把生活过成了艺术品。他放弃财富、 地位等去捍卫人的自由。</p>
<p>在杜尚那个时代，还有一个跟他同样 的，也是对西方文化中的“高贵精神”心领 神会的人，那就是路德维希· 维特根斯坦 (Ludwig Wittgenstein)。</p>
<p>维特根斯坦是一个非常有哲学天赋的 人。前几年全世界哲学家投票，选一个他 们心目中最好的哲学家，结果第一位就是 维特根斯坦—他的名字排在亚里斯多德 前面。维特根斯坦30 岁的时候，先是到 一个学校里面去做小学老师，教学生认字，后来他觉得这种行为还太功利，干脆辞职，到花圃里面给园丁去做助手，很卑微的、没 有价值的一个角色。但他愿意让自己有这 样一个身份，为什么呢，因为他觉得哲学家、 教授，那些看起来很光彩的身份，对于作 为一个人的他来说，都是一种约束。</p>
<p>不仅在西方，东方也有这样做的，比 如说日本茶道创始人，茶圣千利休。</p>
<p>现在很多人喝茶、品红酒，都会讲出 处是哪里，产量多么少，制作多么精良，茶壶多么名贵，茶杯多么地了不起—在千利 休那个时候也会这样，表现得争奇斗艳，可能用金子做的茶具来喝茶，把喝茶变 成了炫富的方式。</p>
<p>千利休对这样一种行为非常 地鄙夷，他认为喝茶的本质在 于要喝出什么是好茶，要回到 茶本身。他的茶具是非常随便 的，拿一个碗，只要想喝，端上 这个碗就可以了。喝茶的地方也是非常简陋 的，而且茶室的门，从下面开一点点，进去 的时候必须跪下来，钻进去—为什么要钻 进去呢?就是说你没有什么不得了，没什么 好骄傲的，你只是一个喝茶的人，应该谦卑。</p>
<p>杜尚、千利休、维特根斯坦，所有这 样一些善于哲学思考的人，总是能够非常直 接地进到这个世界最核心的部分。这样一种 哲学精神的获取，与拿出一些时间来闲暇很 有关系。这个意义上的闲暇，就是在用我们 天生具有的直觉，来观察这个世界的本质。</p>
<p>中了工作的毒</p>
<p>很多在海外生活过的人，发现国外的小店 到星期天就关门，不关门的都是中国人的 店。西方人为什么星期天要关门呢?原因之 一是基督教说第七天是要休息的。这一天 不是用来放松，而是用来精神紧张的，这 一天你必须要跟你的本质融为一体。</p>
<p>中国人现在基本上都是工作的机器，我们中了很深很深的工作的毒，我们觉得 劳动才是美丽的。你问一个人，为什么要拼 命工作呢?因为要挣很多钱。为什么要挣很 多钱?因为要买房子。为什么要买房子呢? 因为我的房子还不够大—所以就不停地工 作下去，成了“异化的人”。异化的人就是 没有目的的人，碎片化的人。</p>
<p>今天的我们不知道，如何把人的内在 精神活出来。尤其不知道，人最重要的就 是要自由。读闲书最重要的目的，就是要重 新恢复人的自由本性，找到一个自由的世界。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第四期]-知识分子的福与祸]]></title>
      <url>http://chocoluffy.com/2015/07/29/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80-%E7%AC%AC%E5%9B%9B%E6%9C%9F-%E7%9F%A5%E8%AF%86%E5%88%86%E5%AD%90%E7%9A%84%E7%A6%8F%E4%B8%8E%E7%A5%B8/</url>
      <content type="html"><![CDATA[<p>必须承认，越是受到良好的愿望和道德的引导，他就越有可能为某种声音所绑架却不自知地用引起共鸣的情感做外衣。</p>
<a id="more"></a>
<p>前言：</p>
<p>最近的生活用来概括一下比较像：白天乖乖地作个程序猿，晚上就来冒充哲学家了哈哈；这篇文章的缘由是因为我被两个人所打动，并也希望在此送上我真挚的敬佩： 哈耶克和巴斯夏。</p>
<p>前者可能经济专业的同学们会比较熟悉，著作有《通往奴役之路》等，是全面支持自由市场，反对社会主义的殿堂级经济学家，而后者呢，虽然常常不被外人所认识，但是他是哈耶克的启蒙导师，哈耶克曾公开自己的思想受到巴斯夏的启发。</p>
<p>这些来头不是重点，重点是他们愿意把他们锐敏的思维之光远远照耀到了他们的专业之外。是的，他们在世人眼中是伟大的经济学家，但是在我眼里，在我从他们的文字中寻觅到的、感受到的，他们还是睿智的哲学家，社会学家…或许只有弱者才在意顶在头上的头衔与标签，更准确地，我想说他们都是他们那个时代伟大的problem-solver. 一个不随波逐流的，真正拥有独立想法的philosopher. 或许生活也许不分哲学，有思维火花，有愿意思考的地方，就有哲学。</p>
<p>以下文字部分是我的思考，部分是阅读笔记，和大家分享，关于这个社会的信息传播体制，去观察这个时代知识分子的局限和使命，同时麦克卢汉和尼尔波斯曼都著作对信息传播的重要著作，大家也可以来参考，如果喜欢这篇文章，欢迎转载或和作者讨论</p>
<p>余舜哲</p>
<p>2015.7.29</p>
<p>我们其实可以粗略地把我们的社会在知识的传播上粗略地划分出3类，专家，知识分子，和普通人，专家正是那些掌握着第一手数据和事实的人，知识分子并不接触到这些真实数据，但是他们占据着影响力，是信息接触到普通人的一个过滤器，而普通人也是社会上的大多数，其实每一个专家在他们自己的领域之外也是普通人，通过知识分子获得相关信息。这里需要注意的是，知识分子经常会根据一些时髦的观念去判断一些问题，而且他们不需要对他们所评论的事情承担具体事务的责任。然而，他们的判断，大大决定着不太遥远的未来这个社会据以采取行动的观点。</p>
<p>知识分子的特征关键</p>
<p>1、根据时髦观念去判断一些问题</p>
<p>2、不需要对具体事务担负责任</p>
<p>3、决定他们发出声音的，不是自私的利益，更不是罪恶的动机，而是一些最为真诚的信念和良好的意图。必须承认，越是受到良好的愿望和道德的引导，他就越有可能为某种声音所绑架却不自知地用引起共鸣的情感做外衣。</p>
<p>4、搬出“世界观”，根据他们本人的一般观念，与他视为现代的或进步的那幅世界画面是否相互配合，在没有真正理解问题所在时，就打算赞成某种结论，拒绝另一些结论。</p>
<p>作为专家对知识分子的态度：</p>
<p>必须承认是他们的传播让信息抵达普通公众，为了最后的目标，即使是反对某些知识分子的观点，我们不能对他们嗤之以鼻却没有顾及到他们的影响力，我们对待这些人的态度，很可能使后者在反对某些观点的路上走的更远。</p>
<p>5、他们必须是“务实的”、“敏感的”、“现实主义的”，只要他关心的是眼前的问题，他就会得到影响力、切实的成功的回报。在更具智慧的专家群体里他们会是沉寂的、哑口无言的、对他们来说远没有和普通人打交道容易。</p>
<p>6、通过普遍的谴责和反驳来保护自己不受这样的责难。</p>
<p>问：从这个角度说，为什么一个点子不会持续辉煌特别久就会被反对甚至被取代？</p>
<p>答：不仅仅因为在实践中可能发现的一些缺点会被时间放大，而且，由于之前的点子获得的重大胜利之后，留下的想象空间并比不上去反对它的方向，社会主义思想对年轻人的号召力，原因是一是因为它满足了一种合理的愿望，对技术细节和实际困难并不感兴趣（距离远），能够打动他们的是广阔的眼光，是貌似有理地把社会秩序理解成一个为计划体制提供了前景的整体。</p>
<p>对于自由主义来说，与那些知道失去自由意味着什么的国家相比，在美国这样的国家，自由的理想对今天的年轻人已经没有多少真正的感召力了。所以我们不禁会想，只有失去自由的时候，自由才会收到尊重，因此为了让自由的势力重新聚集起来，我们是不是要去经历一个黑暗的社会主义集权制度的阶段呢？答：我们要提供一种能够激发想象力的自由主义新方案。 我们要再次把建立自由社会的任务当作一次知识探险，从社会主义的成功中学习到教训，让自由主义成为一个充满活力的问题，去赢得知识分子的支持 和对公众舆论的影响力。</p>
<p>社会经济学的研究模式总结：</p>
<p>1、大麻理论，福利制度。</p>
<p>2、滑绳子理论： 你一旦开了这个头，就不可避免地走向极端。如果为了某些群体的利益而对市场进行干预的要求一旦经常得到认可，民主政府变无法拒绝它依靠其选票的任何群体的类似要求。一旦为了公众的公正观开始控制价格，这个政府会逐步走向控制所有的价格。</p>
<p>问：反对者的声音？</p>
<p>答：当你发现反对者关心的是诋毁作者而不是反驳他的论点，在做着价值判断而不是科学分析的时候，你会知道他的立场有多么的虚弱。</p>
<p>问： 为什么政治家在大多数情况下很无能？</p>
<p>答： 在现行的安排下，有地位的领袖或许敢于说“不”，而普通的代表，不能对他的大量选民的要求说“不”，无论它们多么不公正。目前的趋势是这样的，出现了越来越多这样的人，政府为他们的福利和地位承担起了无法履行的责任，当她们没有得到足够的补偿，或要求他们做的工作超过了他们的意愿的时，他们便起而反叛。 者必然会引来皮鞭和机关枪的镇压，而实行镇压的人，也正是那些曾真诚地想要满足他们的一切愿望的人。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[【转载】为什么我们要探索宇宙? 明明还有那么多人挨饿]]></title>
      <url>http://chocoluffy.com/2015/07/26/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E8%A6%81%E6%8E%A2%E7%B4%A2%E5%AE%87%E5%AE%99-%E6%98%8E%E6%98%8E%E8%BF%98%E6%9C%89%E9%82%A3%E4%B9%88%E5%A4%9A%E4%BA%BA%E6%8C%A8%E9%A5%BF/</url>
      <content type="html"><![CDATA[<p>随着NASA的研究越来越不受重视的今天，每一次的项目上报，都是一次对探索可能性的割舍，都是一次对民主残暴一面的体现。 或许正如文章结尾所述，我放眼探索宇宙，正因我深深地爱着这个星球。</p>
<a id="more"></a>
<p>我还记得在初中的时候有一期译文杂志上刊登了一篇文章，主要讲的正是我们为什么要去探索宇宙的问题，明明我们还有那么多的贫穷没有解决，我们地球的环境那么糟，为什么我们要放眼其他星球？现在，接着地球大表哥的发现，这篇文章也应该再次回到人们的视线中，随着NASA的研究越来越不受重视的今天，每一次的项目上报，都是一次对探索可能性的割舍，都是一次对民主残暴一面的体现。 或许正如文章结尾所述，我放眼探索宇宙，正因我深深地爱着这个星球。</p>
<p>文章总结起来几点：<br>1、太空探索通过技术极限的创新来对人民大众造福</p>
<p>2、通过改善大国之间的关系</p>
<p>我还记得两年前参加的中国地区的英辩赛决赛上，辩题大概是“government believe we should go outer space to establish permanent living spave” 记得不太清了，就是在外太空找一个永久居住地的辩题，冠军队伍的解读让我印象特别深刻，有机会我会在之后的笔记中阐述。</p>
<p>余舜哲</p>
<p>2015.7.26</p>
<p>1970年，赞比亚——这是非洲一个兵荒马乱的穷苦国家——的一名修女玛丽·尤肯达写信给NASA。善良的修女无法理解，地球上还有很多孩子需要忍受饥饿煎熬，为什么美国还要耗费数十亿美元尝试把人送到宇宙里去？</p>
<p>NASA的一名科学家恩斯特·史都林格给她回信，全文如下：</p>
<p>尊敬的玛丽·尤肯达修女：</p>
<p>你的来信收到了。我每天都会收到很多信，这一封对我的触动最大，因为它让我看到了一个富有探求精神的灵魂，一颗仁慈怜悯之心。我会尽我所能回答你提出的问题。首先，我要向你以及和你一样的勇敢修女们表达深深的敬意，因为你们将毕生精力献身于人类最高尚的事业——帮助所有需要帮助的人。</p>
<p>你在信中问我，为何我会在地球上仍有很多儿童面临饿死威胁之时建议投入数十亿美元实施火星探索计划？我想你一定不希望我给出这样一种回答——“哦，我并不知道很多孩子正因为饥饿走向死亡，从这一刻起，我会停止任何太空方面的研究，直到人类解决这个问题。”实际上，在我意识到火星之旅在技术上具有可行性前很久，我就已经知道很多孩子正在挨饿。然而，我以及我的很多同伴仍然坚信前往月球、火星以及其他行星是一种在当下值得进行的冒险，我甚至认为这项探索计划与其他很多潜在的援助计划相比能够在更大程度上帮助解决我们面临的各种严峻问题。援助计划每年都在讨论和争论，但所产生的效果却远远没有达到令人满意的程度。</p>
<p>在解释太空探索计划如何帮助我们解决地球上的各种问题之前，我想先给你讲一个真实的故事，这个故事也许有助于你了解我的观点。故事发生在大约400年前德国的一个小镇。这个小镇有一位非常仁慈的伯爵，把自己的大部分收入都用来救济镇上的穷苦百姓。这份仁慈令人非常感动，因为在中世纪，穷苦百姓实在是太多了并且经常出现全国性瘟疫。</p>
<p>有一天，伯爵遇到一个奇怪的男人。他的家里有一个工作台和一个小实验室。他白天辛勤劳作，每天晚上都会拿出几个小时在自己的实验室搞研究。他将一块块玻璃打磨成小镜片，而后将镜片安装到镜筒上，利用这种装置观察非常微小的物体。放大数倍的微小生灵尤其让伯爵感动不可思议，深深着迷，因为这是他此前从没有见过的。伯爵邀请这名男子带着他的实验设备搬到自己的城堡，成为他的一名“特殊员工”。从此，这个怪人将自己的全部精力都用来研制和改进他的光学仪器上。</p>
<p>镇上的人认为这个怪人是在研究一些没用的东西，伯爵在他身上浪费了太多钱，都感到很愤怒。他们抱怨说：“我们还在忍受瘟疫的折磨，而他却拿钱让这个男人搞一些没有用的爱好。”听到这样的抱怨，伯爵并没有因此动摇，仍坚持自己的做法。他说：“我会尽我所能帮助你们，但我仍会支持他的研究，因为我坚信他的研究终有一天会得到回报。”</p>
<p>事实证明，伯爵的话是对的。这个怪人最后研制出我们现在熟知的显微镜。在促进医学进步方面，其他任何发明都无法与显微镜相提并论。它的问世帮助人类消除世界上大部分地区的瘟疫以及其他很多种接触性传染病。如果没有显微镜，人类无法取得这些成就。在显微镜诞生过程中，伯爵投入的钱显然发挥了重要作用。在帮助减轻人类遭受的苦难方面，花钱支持研制显微镜所能做出的贡献显然远远超过单纯地救济遭受瘟疫侵袭的不幸者。</p>
<p>从很大程度上说，我们面临着类似的情况。美国总统每年的年度预算大约在2000亿美元左右，这笔预算最终花在医疗、教育、福利、城市建设、高速公路、交通运输、外国援助、国防、环境保护、科学研究、农业以及美国国内和国外的很多机构上。今年的预算有大约1.6%划拨给太空探索计划。太空探索计划包括阿波罗登月计划，很多涉及到天体物理学、空间天文学和空间生物学的小规模计划，行星探索计划以及与地球资源和太空工程学有关的计划。为了实施这些探索计划，每个年收入1万美元的美国纳税人每年需拿出30美元，余下的9970美元用于各种生活开支、休闲娱乐、储蓄、其他花销以及其他税赋。</p>
<p>你也许会问：“为什么不从每个美国纳税人缴纳的30‘太空美元’中拨出5美元、3美元或者1美元，援助忍受饥饿的儿童呢？”为了回答这个问题，我必须向你简要解释一下美国的国库如何运作。美国的情况与其他国家类似。美国政府由很多部门和机构构成，例如内政部、司法部、卫生教育与福利部、交通部、国防部、国家科学基金会、国家航空航天局（宇航局）。所有这些部门和机构都要根据自身承担的任务制定年度预算，每一笔预算都要受到国会委员会的严格监管，都要承受来自预算局和总统的压力。国会划拨后，各部门和机构的预算只能用于预算案上列出和政府批准的项目。</p>
<p>宇航局的预算只能用于与航空航天有关的探索计划。如果国会没有批准这笔预算，宇航局便无法从其他渠道获得所需的资金。他们不可能直接从纳税人那里筹集资金，唯一的方式就是其他预算提出追加请求并获得批准，宇航局方可获得这笔并非用于太空计划的资金。听完我的介绍，你应该已经意识到援助遭遇饥荒的儿童或者美国的其他对外援助项目都必须递交用于这些项目的预算请求，经国会批准后方可拿到资金。</p>
<p>你如果问我，我个人是否赞同政府采取援助措施，我的答案无疑是“赞同”。我完全不介意每年多交一些税，用于帮助忍受饥饿煎熬的孩子，不管他们身处何地。我相信我的所有朋友也是相同的态度。不过，我们不会为了实施这样的援助项目而停止火星探索计划。我甚至认为通过实施太空探索计划，我们能够为解决地球上的饥荒和贫困等严峻问题做出更大贡献，最终帮助找到这些问题的解决方案。</p>
<p>解决饥荒问题首先要着眼于两件事情，一个是粮食生产，一个是粮食分配。在世界上的一些地区，农业种植、畜牧业、海洋捕捞以及其他大规模食品生产活动都拥有很高的效率，但其他很多地区的效率都很低。如果在流域治理、肥料使用、天气预报、土壤肥力评估、作物种植规划、农田选择、种植方式、耕种时机选择、作物调查以及收割计划等方面采取更为有效的技术和举措，我们便可大幅提高粮食产量，进而帮助解决饥荒问题。</p>
<p>毫无疑问，改进粮食生产的最理想工具就是人造地球卫星。人造卫星在高空环绕地球飞行，能够在很短的时间内对面积巨大的陆地区域进行研究，观测大量能够揭示农作物、土壤、干旱、降雨、积雪情况的因素，而后将数据传给地面站。据估计，即使一颗最为简单的地球卫星也能为一项改进全球农业生产的计划做出不小贡献，让作物的年产量大幅提高，带来数十亿美元的收入增长。</p>
<p>与粮食生产相比，将粮食分发给贫困地区是一个完全不同的问题，这个问题不仅涉及到交通运输，同时也涉及到国际合作。在接受大国提供的大批粮食援助时，小国的领导人可能产生担忧情绪，担心大国在提供援助的同时也对外输出了他们的影响力。在我看来，在减少国与国之间的隔阂前，我们不可能实现有效的粮食援助计划。同时，我也不认为太空探索计划能够在一夜时间取得这一成就。不过，太空探索计划却是最有效的方式之一，帮助解决这个问题。</p>
<p>还记得当年死里逃生的“阿波罗13”号飞船吗？在“阿波罗13”号即将重返地球大气层时，苏联关闭了境内所有与阿波罗计划频带相同的无线电通讯，以防止出现任何可能的干扰，同时派遣船只前往太平洋和大西洋海域，必要的时候执行紧急救援行动。如果搭载宇航员的返回舱在一艘苏联船只附近溅落，苏联人一定会像对待本国宇航员一样，对他们提供帮助。如果苏联宇航员也遇到类似的紧急情况，美国人也会出手相助，这一点毋庸置疑。</p>
<p>通过卫星监测和评估提高粮食产量，通过改善国际关系改进粮食分配，这还只是太空探索计划如何对人类生活产生深远影响的两个例证罢了。除此之外还有两个具有代表性的例证——促进技术进步和提高一代人的科学素养。登月飞船需要拥有极高的精确性和可靠性，在工程学发展史上，登月计划在这两方面取得的成就都是空前的。为满足这些要求，科学家研发了相关系统，这些系统为我们研发新材料和新技术提供了一个前所未有的机会，允许我们发明出更出色的技术系统和制造工艺，延长科学仪器的寿命，发现此前未知的自然定律。</p>
<p>实施阿波罗登月计划过程中掌握的科学知识同样也可用于研发在地球上使用的技术。太空探索计划每年孕育出大约1000项技术革新。这些技术革新大幅提高了人类的生活质量，帮助我们研制出性能更卓越的厨房设备、农场设备、缝纫机、无线电设备、船舶、飞机、天气预报和风暴预警系统、通讯设备、医疗设备以及其他日常生活用品。你可能会问，我们为何首先为登月宇航员研发生命支持系统，而后才为心脏病患者研制远程体征监测设备？答案很简单。在解决技术难题过程中取得的重大进步往往不是通过一种直接的方式，而是首先设定一个具有高度挑战性的目标，通过激发强大的动力促进技术革新，点燃科学家的想象力，促使他们尽自己最大可能完成设定的目标。这种方式就像是一个催化剂，催化出连锁反应。</p>
<p>太空飞行无疑扮演着这样的角色。火星之旅虽然不能直接帮助解决饥荒问题，但这项探索计划孕育出的很多新技术和新方法所能给人类带来的益处将远远超过所付出的成本。如果我们希望改善人类的生活质量，我们就需要研发各种新技术，需要继续进行科学研究，了解和掌握我们尚未获得的知识。我们需要进一步研究物理学、化学、生物学和生理学，需要在医药研究的道路上继续前进，战胜各种威胁人类生存的挑战，例如饥荒、疾病、食品和水污染以及环境污染。</p>
<p>我们需要更多的年轻人将科学研究作为毕生的事业。我们需要为科学家提供各种帮助，让他们充分发挥自己的聪明才智，在研究过程中取得丰硕成果。我们必须设定富有挑战性的研究目标并为研究计划提供充分支持。太空探索计划涉及到一系列引人注目的研究，例如对卫星和行星进行研究，对高深的物理学和天文学以及生物学和医学进行研究。它就像是一个完美的催化剂，能够在极大程度上促进科技进步。通过实施太空探索计划，我们得以拥有一系列令人兴奋的机会，观察神秘莫测的自然现象，研发各种新技术和新材料。</p>
<p>在美国政府指导、监管和提供资金的所有活动中，太空探索无疑是最引人注目同时也最能引起讨论的活动，虽然它的预算只占美国总预算的1.6%，GDP的3‰。太空探索是孕育新技术和促进基础科学研究的催化剂，所能起到的作用是其他任何活动无法比拟的。从某种程度上说，太空探索对人类社会产生的深远影响甚至超过几千年来的战争。如果国与国之间不再进行研制轰炸机、火箭等武器的军备竞赛，而是在太空探索领域展开竞争，人类便可免遭很多苦难。这种竞争能够孕育出各种令人兴奋的成就，失败者也不必遭受痛苦命运，更不会制造仇恨和新的战争。</p>
<p>我们实施的太空探索计划虽然让我们远离地球，将目光投向月球、太阳、其他行星和恒星，但太空科学家最关注的仍旧是我们的地球，而不是这些天体。太空探索的终极目标是建设更完美的人类家园，探索过程中获得的所有科学知识以及所研发的所有新技术都将用于改善人类的生活质量。</p>
<p>随信寄出的照片是1968年圣诞节期间由“阿波罗8”号宇航员在环绕月球飞行时拍摄的，展示了我们的地球家园。在太空探索计划迄今为止取得的众多成就中，这幅照片可能最具有象征意义。它让我们意识到地球是怎样一颗美丽的星球。如果将无边无际的宇宙比作一个海洋，地球就是这个海洋中最美丽最宝贵的一座岛屿，是我们唯一的家园。在此之前，很多人并没有意识到地球的美丽与脆弱，更没有意识到肆意破坏生态平衡将给地球带来怎样的危害。在这幅照片第一次对外公布之后，号召人们警惕人类面临的各种严峻问题和挑战的呼声越来越高，例如污染、饥荒、贫困、城市生活、粮食生产、水资源管理和人口过度增长。拍摄这幅照片时，人类刚刚进步太空时代，也是第一次从太空观察我们的星球。公众对上述问题关注度的提高显然与太空探索计划有关，而非一种偶然。</p>
<p>太空探索为人类提供了一面审视自己的镜子，同时也孕育出一系列新技术。太空探索取得的成就增强了人类的信心和进取精神，让人类相信自己有能力解决面临的各种严峻考验和挑战。在我看来，人类通过太空探索取得的成就充分印证了“非洲圣人”阿尔贝特·施韦泽的那句名言——“我忧心忡忡地看待未来，但仍满怀美好的希望。”</p>
<p>献上我最真挚的祝福，永远祝福你和你的孩子们。</p>
<p>随信一并寄出的，还有当时新鲜出炉的、由阿波罗8号在月球轨道拍摄的第一张地球照片，也就是你所看到的本文题图，美国天文学家将之称为“一粒悬于阳光底下的蔚蓝微尘”，而乔布斯的人生格言“Stay Hungry，Stay Foolish”也源于此。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第二期]-关于功利主义]]></title>
      <url>http://chocoluffy.com/2015/07/18/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80-%E7%AC%AC%E4%BA%8C%E6%9C%9F-%E5%85%B3%E4%BA%8E%E5%8A%9F%E5%88%A9%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>一个人的感官感受究竟是不是人生最重要最根本的东西？</p>
<a id="more"></a>
<p>💣诺奇克反对 “功利主义” 所提出来的例子：经验机器， 如果进入这个机器可以满足我们任何的欲望，那么效益主义者会毫不犹豫地跳进去； 重点： 一个人的感官感受究竟是不是人生最重要最根本的东西？</p>
<p>进去这个机器其实是一个价值判断， 看出我们对待生命的立场。问题在于， 效益主义者中看待人的方式， 是否最有效的反应了我们对生命的体会， 是否值得我们去追求。这其实和政治经济学很相关， 每一种理论， 都希望提供一个立足点去平谷我们的制度和实践， 从这个立足点的角度看， 得出的制度便是合理公正的， 但问题在于， 这个立足点在哪里？是否站得住脚？读政治的人， 管政治的人， 总会问什么是理想的政治安排， 而这种政治， 又须重视一种什么价值？有人会说， 重视人权， 但一旦重视人权， 就似乎变回去到一个非后果论的模式；这种重视又会带来什么结构。政治哲学困难的地方， 就是在于它要求我们对人和社会有相当深入的了解和反省。</p>
<p>adaptive preference, 也就是说， 人们的喜好也是受到环境的影响的；就像这个论点可以应用在那些认为国家权利比人民权利还要重要的地方， 原因是因为统治者不给人民权利； 而在这种情况下， 我们怎么样看清真的喜好还是adaptive preference；</p>
<p>💣反驳功利主义的观点</p>
<ul>
<li>康德： 人为目的本身， 而不是手段</li>
<li>除了整体效益， 还有独立于后果的价值， 而这些价值不能也不应该简单地化约到单一的价值（一元价值伦）， 追求效益和欲望的满足， 并非人生的全部</li>
<li>后果论式的观点</li>
<li>选择进入机器， 某种程度上， 意味着接受机器安排给你的生活， 但这样一来， 还可以说， “命运在你手”吗？世界上还有很多你没有挖掘过的经验， 你不曾知道的结果， 一些美妙的意外。</li>
</ul>
<p>你想去做这件事， 但不能马上去经历它； 因为经验机器的核心， 也正是很多人误解的部分就是， 你想去做这件事， 就能去体验它。但是很多人误解为简单的快乐和囚禁， 这样子的定义在语言指向上也分出了高低。所以我认为最贴切原文的反方是， 你想去做这件事， 但不能马上去经历它。  你只有给出了这个论点的理由也能说明为什么你不想进去经验机器。而理由之一是， ？</p>
<p>或者为了避免偷换概念的倾向， 如果我们说， 你已经在了经验机器里面， 你可以经历任何你希望经历的事情， 那么在这个时候， 你是否愿意回到一个更加痛苦的世界？</p>
<p>💣不同的价值， 不能化简为一， 也没有一个公共比较的尺度。期望以一条公式， 去简化生命中种种的复杂境况， 是理论的傲慢， 而不是现实的错。</p>
<p>💣效益主义和民主制度的区别： 在效益主义者眼里， 符合多数人利益的选择也具有道德上的正确性， 但是民主制度并没有这么要求</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[祝福大圣归来]]></title>
      <url>http://chocoluffy.com/2015/07/14/%E7%A5%9D%E7%A6%8F%E5%A4%A7%E5%9C%A3%E5%BD%92%E6%9D%A5/</url>
      <content type="html"><![CDATA[<p>懂得去欣赏赞同一样作品， 也懂得去冷静地反思公然的狂热。</p>
<a id="more"></a>
<p>懂得去欣赏赞同一样作品， 也懂得去冷静地反思公然的狂热。 大圣归来口碑的持续发酵过程中一个密不可分的因素， 是国人心底对国产动画压抑很久了的自尊心和英雄情结。</p>
<p>如果你能理解在广州恒大踢进了某某决赛时身着红衣， 高举红旗， 今夜我们都是广州人口号的感觉； 如果你能理解当母校在某某国际比赛某某高考上赢得荣誉声誉时那刷遍社交圈的感觉…那么你或许就可以多少感受到， 在一部燃血的， 情绪化的英雄身上， 一击击倒暗势力， 满屏荣光是有多值得骄傲； 并不是说这种情结是褒是贬， 而是这种或许带着浪漫眼睛去审视一个作品的时候， 在多大程度上会高估这个作品而忽视作品本身的细节意图和用心。</p>
<p>暂且不讨论，或者往后再讨论如何展现一个英雄主题的作品， 毕竟， 以少儿动画、合家欢动画为主打消费市场并制作的动画， 评判标准和以故事情节制胜的作品又不一样， 考虑到导演还因为时间约束被迫剪去30分钟的故事， 也应对情节紧凑方面多宽容相待。</p>
<p>我觉得我们更多地去看到， 这部电影在动画设计细节上， 在配乐情景和谐上取得的成功。 我还记得我在看到时候， 有几个场景的冷暖色调配得真的好看， 时不时加进来的古筝音和一些唱戏的部分都有让我觉得惊喜。其实难不是因为导演如何去使用去添加这些中国古典元素， 而是难在你这么做了之后怎样让消费市场买单。</p>
<p>祝福大圣归来， 也祝福所有几年磨一剑， 那些已经“稀罕”但是无比珍贵的中国动画制作者！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[公众号[海贼梦]的诞生日记]]></title>
      <url>http://chocoluffy.com/2015/07/03/%E5%85%AC%E4%BC%97%E5%8F%B7-%E6%B5%B7%E8%B4%BC%E6%A2%A6-%E7%9A%84%E8%AF%9E%E7%94%9F%E6%97%A5%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>The world is made up by the people who are not smarter than you.</p>
<a id="more"></a>
<p>我也有想过， 究竟我为什么要去申请个公众号。是为了好玩吗？有可能， 毕竟我也是一个贪玩的人； 我最近自己搭建的一个网站也准备上线了， 是一个模仿twitter式的平台， 我的本意其实是想在这个公众号里面和平台一起互动， 满足移动端的需求。但是当我认认真真地做在电脑前， 看着申请公众号的界面， 准备给自己的公众号起一个名字的时候，<br>我犹豫了。</p>
<p>我希望取一个好听的名字，至少是有那么点意义的名字。</p>
<p>我不希望对这个公众号太肤浅， 渐渐地， 我觉得， 我对这个地方有了期待， 一种你说不出的沉甸甸的感觉。我觉得自己挺感性的虽然身为一个cs学生，喜欢海贼王， 那种与伙伴并肩战斗的感觉， 喜欢新闻编辑室， 传统媒体在面对各种改变和挑战时那种高贵的英雄主义， 喜欢巴萨， 血统里优雅的足球艺术， 喜欢唐吉柯德， 没有从梦中醒来的骑士…</p>
<p>好吧， 这一次公众号又给我了一次装文艺的机会是吗？一直以来， 我觉得我看过挺多很优秀的文章， 因为它们的反驳的观点， 因为它们思考的犀利与与众不同， 我有一种想分享的冲动…但其实在现在这个环境， 分享这个词， 更多的是一种娱乐， 一种自尊心攀比的竞赛， 一种用喜怒哀乐装点自己的情绪化的世界。但其实仔细想一想， 微博微信这种平台本身传播信息的形式也在很大程度上决定了这个平台上的内容呢…不过这有点离题了， 我所期待的分享， 和我所见识到的有效率的分享， 是， 有点像知乎、豆瓣我觉得这些都挺好的， 的确知乎和豆瓣都在做商业过渡用户也都良莠不齐， 但我必须承认的是， 我见过在这些平台上面很认真的回答， 很有态度的教程和文章， 在之后有些什么问题的时候也都去这些地方找过。其实并不是说我在看到这分享的时候真正学到了什么， 而是我在看他们的某些回答或是讨论的时候， 被某些观点启发到了， 让我有了另一种角度思考的可能。</p>
<p>或许是希望加入讨论， 或许仅仅是因为他们讨论的东西是我感兴趣的， 我会在这些角度去看更多的文章， 去做更多的准备和思考， 也因此得以有所进步。</p>
<p>你愿意去做，比你真正做了什么， 重要而且可贵了太多。</p>
<p>也就这样， 我给我这个公众号起了一个很俗气的名字哈哈， 海贼梦， 因为这个公众号的诞生和现实， 和实际没什么关系， 我想要达到的， 就和我在内容简介里面写的一样： 因为大家在一起， 为了各自的梦想， 努力着…</p>
<p>我希望能够真正成为一个problem solver， 一个能够解决问题， 思考问题的人，在我这方面，我会为大家收集我认为有价值的评论， 或者我自己写的文章；当然如果你有任何对文章的观点， 我都希望知道， 联系我， 无论通过微博还是微信平台。</p>
<p>最后留下对我很有意义的一句话， 原句的意思我记得可能不太清楚了， 来自 steve jobs:</p>
<p>The world is made up by the people who are not smarter than you.</p>
<p>一起加油!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我们需要什么样子的理想主义?]]></title>
      <url>http://chocoluffy.com/2015/04/16/%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%E7%9A%84%E7%90%86%E6%83%B3%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>任何话语都需要一套非话语的机制支撑才能得以运转。</p>
<a id="more"></a>
<p>1、或许是因为稀缺和依赖，人们才会关心资源的分配和归属，才出现各种所有制，和与此相关的规则。而令我感到好奇的是我接下来的联想，如果，社会的资源达到一定的富足，(也正如我们一直发展的方向一样)，我们会不会不需要法制这种规则了呢，就像一个生活在热带雨林里的人没有对“雪”的依赖，也因此没有必要有“雪”的概念一样。</p>
<p>［可是此处暴露出一个问题，法律到底是指向：应该是怎样，还是描述是怎样的呢？就我的个人观点而言，法律是应该是怎样的体现，是展示一种历理想的社会状态，而不是必然在描述现实，因此上述的陈述有偏颇］</p>
<p>2、福柯曾指出：任何话语都需要一套非话语的机制支撑才能得以运转。而我对这句话的理解是：因为这些非话语的，实物的，institutions 的存在并被广泛认可，使得基于此的话语有了现实的基础，才因此有了意义。就像作为一个法律概念，首先要凝聚一种社会共识，并在这个意义上达成一个具体的“社会契约”，这种社会建制是任何基于该现实的话语，或者说人们商讨的规则，的一个基础。中国法学界有人反对法律移植这样一个命题，但其实很多时候，这是一个纯粹虚无的命题，一个社会的生产，生活，组织和治理方式的改变，会要求新的社会规则，也会因此产生新的法律。 举个例子，如果一个社会的生产方式还是牧业，那么很可能不动产就不那么重要； 如果是自给自足的农业经济，没有也不需要商品交易，那么合同法很可能就不会产生，就不会有现代意义上的消费者，就不会需要有产品责任法 ，或者是消费者权益保护法，银行法，金融法等等，如果中国社会的构成还是以家庭为主的小型社区，就很难真正出现普遍的公民权利。</p>
<p>3、同时还有一个隐含的问题： 当法律移植，或者用另一种方式说依照社会的变革来翻新并扩充法律，成为时代的期望，也就是成为社会大多数人的选择，这非常容易导致一个结果，我在这里称之为slippery rope theory, 对这个理想的追求就很容易排斥对理想可能性的探讨，而这个理想，也很容易变成一种意识形态话语的喧嚣。 只要过河的目标呗明确了，被认为是正确的，那么如果你还要谈“桥”和“船”的问题，指出其中的问题和难度，那么你就可能是在变相反对或者是被认为反对过河，有可能给革命人民的热情泼了冷水，就是保守派，就是危险思潮，这也就是为什么我想称之为slippery rope的原因，就像一根很滑的绳子，当你非常用力的拉，暗示着社会上大多数人的认可和热情，时，非常容易发生的事情就是，你拉去了绳子的另一边，反而达到了反效果而不自知，你非常努力，却不知道办了与预料不同的事。这也让我想到不久前柴静姐姐发布的关于雾霾的调查，我还清晰的记得，在看完那个发布会后，我是真心的热血沸腾，但我也马上意识到了这种一股脑的冲动，我很快就在我的日记本上写下：</p>
<p>越情绪激动就越不能做决定。</p>
<p>我也有跟踪之后发生的事情，真的其实网络上的争论就实在是偏的太过了，我个人的观点是：一、我不希望接下来的两会被公众的舆论绑架，然后一股脑的聚焦在雾霾而忽略了其他同样值得关注的议题； 二、我希望那些喜欢和支持柴静姐姐的人也要冷静地接受质疑柴静的声音，不然和那些一股脑就反柴静，就人身攻击柴静的人有什么区别。或者换句话说，我们需要的是看清事实的理想主义者，脚踏实地的理想主义者； 那种被热血绑架，选择性忽略，自我强化和膨胀的“理想主义”，只不过像slippery rope一样，滑去绳子的另一端罢了。</p>
<p>哈哈我联想的东西有点多哈，不过这些都是我真心的想法，我本人也挺喜欢和支持柴静姐姐的，从她的发布会中，我们可以很清楚的看到，她并没有仅仅止步于布道者的角色，仅仅讨论雾霾治理的必要性，而且她还深入分析了治理的可能性和一系列技术实操的问题，这是很打动我的地方。</p>
<p>今天就写到这吧，睡前40分钟读书有感，一个工程狗的文科感化之旅吖哈哈，未完待续，其实一直有一种潜意识，感觉各个领域的思维结构好相似，如果没有信息不对等，如果人脑的处理速度能再快一点，(不过很快就会了)，会不会我们可以推导出另一个领域的布局？哈哈，世界晚安</p>
<p>余舜哲</p>
<p>2015.4.15</p>
<p>伯克利</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[伯克利的秘密[上]-梦想的火光]]></title>
      <url>http://chocoluffy.com/2015/03/30/%E4%BC%AF%E5%85%8B%E5%88%A9%E7%9A%84%E7%A7%98%E5%AF%86-%E4%B8%8A-%E6%A2%A6%E6%83%B3%E7%9A%84%E7%81%AB%E5%85%89/</url>
      <content type="html"><![CDATA[<p>我觉得我应该也必须记录下我在这里的每一次受触动的时刻。</p>
<a id="more"></a>
<p><img src="https://d13pix9kaak6wt.cloudfront.net/background/ucberkeley_1354055417_39.jpg" alt="Berkeley"></p>
 <blockquote class="blockquote-center">只是有些人把它当作废话，有些人把它当作整个世界。</blockquote>

<p>为什么伯克利是伯克利：</p>
<p>1、megan 纯数学 纯数学很美</p>
<p>在cs61a的课程上，我的一个搭档叫megan，一个很阳光的，有点胖嘟嘟的美国女生，在小组讨论的时候，我们提前做完了就开始聊天。她问我是什么专业的，我说：应用数学。 她很兴奋地告诉我说她是学纯理论数学的pure math，她痴痴地说着，pure math is amazing 她那眼神像是发光一样。 那一刻我怔了一下。 毕竟我也曾经修过好几门数学分析类的课程，我清楚虽然从最终成绩上来看我是擅长这几门课程的，可是我自己心里清楚，我并不喜欢，那一刻，我不知觉地回答她：i am fed up with it. 我至今仍可以清晰地记得，megan她当时嘟起来的嘴，然后不是很开心地和我说：don’t say it, come on, you can feel it, it’s beautiful. 我陷入了沉默。 或许我体会不到她对纯数学的热情，但是我很清楚那种一团火焰积在胸口，对每一个任务充满力量的那种感觉，梦想的激情会让人专注，而专注让我们更加接近创作的本源，让我们诞下我们的作品。几年之后，我或许会忘记她说的这些话，但是她那个坚定的表情，我那时恍然的时刻，我一定会记住，那一刻，好神圣。</p>
<p>2、warehouse 技术就是信仰</p>
<p>我最近参加了一场facebook赞助的hacker meeting，虽说是hacker，但实际上都是从伯克利走出去的学生，其中有些还是大二就辍学去创业的师兄。 其中最引人瞩目的就是warehouse，一个由就是上面提到的那个，大二辍学生创办的公司，制作社交化的耳机，用于更方便地分享音乐和记录音乐，实现方式仅仅是在耳机上敲击几下，［注：我最近注意到国内的山寨品igene也在京东上众筹］。他分享他做社交耳机的故事，他特别喜欢硬件设计，他和我们分享他这个想法的由来，特别认真，去追随心中的声音，去梦想，去创造。我能感受的到在场是那么那么的安静，我想到了一个地方，是的，那是教堂。经常接触到所谓鸡汤式成功式的文字很容易让我们武装，失去了对这些微小而神圣的声音的感触，你会发现，创造，去让你擅长的技术改善你周围的世界是那样的唾手可得。那一晚，我第一次看见并亲自试了虚拟现实的头盔，体验用来开车的无线手套，轻敲一下耳机就能知道周围人听什么歌的warehouse。 一个仅仅只比我大2岁的师兄，在台上好像一个小孩子一样说着it’s so cool… do some cool shit!!…follow your passion… 在我最喜欢的领域，我看到了我同龄人的专注和努力，看见了他们的思考和付出，再一次，我看见了被攥紧的梦想。是的，或许梦想这个东西真的很简单，就是那个在你口里酷炫屌炸，让你无比兴奋和快乐，而在别人看来可能只是说：哦 的一句话，一个震撼感动的场景，一个连接世界的使命，一个想让世界向好的那面改变一点点的愿望。 只是有些把它当作废话，有些人把它当作整个世界。</p>
<p>[未完待续]</p>
<p>2015.3.29春假最后一天</p>
<p>余舜哲</p>
<p>伯克利</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[光荣与梦想－寄陈虻]]></title>
      <url>http://chocoluffy.com/2015/03/26/%E5%85%89%E8%8D%A3%E4%B8%8E%E6%A2%A6%E6%83%B3%EF%BC%8D%E5%AF%84%E9%99%88%E8%99%BB/</url>
      <content type="html"><![CDATA[<p>创造是一个很浪漫的事情， 但大多数人忘记了下一句， 创造也是很具体的事情， 一个团队不仅仅要灵异奔放，还要勤勉老实。陈虻很反感媒体人利用自己手中的媒体来行公众表白自己的辛苦， 我认为干什么都不容易， 选择了一种工作，实际上就选择了一种生活方式。 因为热爱我们选择的这种职业。</p>
<a id="more"></a>
<p>1、一个完全不同的结果， 一定有一个完全不同的过程，你不改变这个过程就改变不了这个结果。</p>
<p>2、采用新的结构方式， 把最新的新闻时事镜头与过去的历史镜头平行剪接；</p>
<p>3、陈虻笔记里密密麻麻纪录的不是论点， 也不是论据， 而是从论点到论据的过渡段。我认为，其中一个很好的方法是， 记录下抽象的从论点到论据的推演过程。</p>
<p>4、人必须增加一个往回看的坐标， 人快死的时候最重要的是什么呢， 每个人也许都不一样，可能是年轻的时候喜欢的一个姑娘， 这都没关系， 反正是特个人， 特情感的东西。社会化的评价标准到那个时候就不起作用了。</p>
<p>5、东方之子， 焦点时刻， 之间的生活空间。 东方之子偏重的是名人的访谈，而焦点时刻偏重的是大事。生活空间以纪实的手法跟拍老百姓的故事， 纪录片的手法，</p>
<p>6、生活空间的目标曾经改变过， 从之前的“人文教化”到之后的“在飞速变化的社会背景下， 实现人文关怀，为未来留下一步由小人物构成的历史。”但是遇到的困境是， 人文教化的主题很狭窄， 在有限多次的实践和总结之后会到达一个极限。对平凡人生活的观察和提炼最终不过那几点， 在拍摄一个普通人的时候， 我们总希望在这个普通人身上看到有价值的东西，这个有价值的东西提炼升华起来无非就是人生的哲学， 生存的哲学， 拍不同普通人的生活虽然不一样， 任务不一样， 但人们的困境是相似的，结论是相似的。 其实我们对生活态度和生活哲理的认识是有限的， 尽管它锁承载的人和生活不一样，但是它最终表达和传递出来的东西是相同的或者相似的， 是在重复已经做过的事情， 只不过是越做越精细，从这个人换到另一个人身上，这个节目再这么做下去， 就没有存在的意义了。 在我们讲述了上千个故事以后，我们的这些“道理”正在逐渐演化成为一种抽象的讲话的教条， 脚镣。</p>
<p>再说了， 这些被先入为主的“道理”， “价值”， “意义”， 是不是从另一个角度来说， 也是一种教条呢。而我们一直去刻意追求， 去模仿这种形式，是不是在另一种意义下是加深这种刻意的影响。</p>
<p>7、一个有深刻见解的人， 不仅仅是因为他敏锐的思维方式， 还是因为， 他的体验。因为一个人对一件事的深入了解，会让他看见困境， 而他面对这个困境的处理方式， 就是他的哲学， 那些聪明的， 有创意的解决办法，我们称之为智慧。</p>
<p>8、如何解决6所提出的问题呢？ 去寻找一个变化的点， 因为人文关怀总是有一个限度的，但是如果我们能找到那个一直在变化的那个点， 我们就会一直遇到新的问题， 看见新的挑战， 也因此得到生生不息的力量。陈虻给出的方式是：在飞速变化的社会背景下， 实现人文关怀， 为未来留下一部由小人物构成的历史。 “结合社会背景，纪录历史”，这是他的答案， 纪录历史， 要求更进一步的客观， 要求更少个人价值观的强加， 在因为社会变化的动态为节目的出路给出了一个持续的方案。“去反应这个社会的风气， 去反应这个时代的风貌”， 其实我认为，在难度实现上， 会比需要强调人文价值抒发的版本简单，但这个方式的难度在于：你想怎样去纪录历史， 为什么采用这个素材， 生活的多面性，社会的多层解读注定了这种叙事方式不会是chronical那样的， 更多的是平行的， 是发散的， 而在这个逐步筛选素材， 聚焦的时刻，又是怎样主观的力量加以介入呢。 感觉又回到那个经典的问题：为什么我们要纪录历史？ 以及怎样才算最真实？ 最正确的历史？什么才是客观？</p>
<p>［我和王雁泽：客观是大部分人认可的主观想法］</p>
<p>9、我和陈虻还挺默契的， 他接着回答了我在8中提到的问题， 他的解决方案是， “目击者的态度”，“关怀的态度”， “对历史的态度”，也是拍摄者本人的应具备并传达感染给观众的一种生活态度。</p>
<p>10、 伴随着危险一起出现的是，巨大的机会。</p>
<p>我们说专制的领导很容易发生独裁，但其实， 更准确的表达应该是， 更容易发生独裁而已， 因为专制的各种特点，使得它更容易滑向独裁的方向， 但其实， 这不是绝对的， 专制同样意味着高度的集中力， 以及与之而来的高度的执行力，所以我其实倾向的还是， “开明的专制主义”－ 可能是受苹果的感染吧， 哈哈。 只是民主的社会更容易趋向大部分人的幸福， 而已，依靠每一个人对自己利益的发出诉求， 比依靠一个开明的君主， 区依靠一个持续不变的高尚灵魂好像更可靠一点。 而这，也就是它们之间唯一的区别。 在更多情况下， 民主和专制更多时候， 只是标签而已， 而标签也只是起到标签的作用。 不要相信人性，要去具体的环境， 去到具体的利益纠纷中去观察，那里才有我们赖以生存的真相。</p>
<p>11、接着就继续讲陈虻的“目击者的态度”， 以一个亲人的角度去读着一本书， 放弃所谓的责任感，放弃对文化的深层思考， 像朋友和亲人一样， 去关心你的拍摄对象， 你也因此可以看到最真挚的责任和最深刻的批判。“无为而无所不为”</p>
<p>12、创造是一个很浪漫的事情， 但大多数人忘记了下一句， 创造也是很具体的事情， 一个团队不仅仅要灵异奔放，还要勤勉老实。陈虻很反感媒体人利用自己手中的媒体来行公众表白自己的辛苦， 我认为干什么都不容易， 选择了一种工作，实际上就选择了一种生活方式。 因为热爱我们选择的这种职业。</p>
<p>13、电视纪录片要利用观众的感性到场， 达到理性到场。</p>
<p>余舜哲</p>
<p>2015.3.26</p>
<p>伯克利</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[On Vision]]></title>
      <url>http://chocoluffy.com/2014/11/27/On-Vision/</url>
      <content type="html"><![CDATA[<p>I have been haunted with the question that what defines the gap between visions and reality. </p>
<a id="more"></a>
<p>recently, there is an internet forum host in China and a lot of celebrity have attended such as Ma Huateng, Jack Ma, Li Yanhong and as on. they are the leaders of the most successful internet companies in China-BAT and they arrest the world’s attention. in the forum, they share their views on the future of technology and internet. some say there will be no internet at all in the future, for every items around you can exchange data and display information through electric wave and therefore “internet” as a word specifically for the place to load into the internet becomes pointless because everything is already in it. some say we will embrace a multi-screen world, the curved, pliable ones will reign popularity. some points out the privacy…</p>
<p>we witness a lot of insights and opinions and what on earth is the right one, or to be more generally, which is more likely to be the future?</p>
<p>vision is the kind of thing that everyone has access to despite identity, age and even knowledge. the illiteracy can also raise they voices on other things and to some extent we can say they are uttering they visions. but what distinct the vision from the ordinary and extraordinary is that the extraordinary is obsessed with what he expressed. he is totally allured by the world he depicted in his mind, and he would therefore promote, spread and try it. </p>
<p>such passion and the attempt to make it happen are the difference.</p>
<p>those who are separate from the area may possibly raise some innovative points because of the unconstraint mind but the what eventually determined whether or not it is really possible is the people inside the area. one must have professional insight to create professional product. we cannot expect a chef to craft a ten-storey castle unless it is made of chocolate:) rather, an real amazing work can be made from the architect who is also skilful in cooking and thoughtful enough to apply cooking skills. the ability to express one’s passion and vision and the ability to arrest the similar minds are the two pillars for successful leadership.</p>
<p>it also dawned on me that in the last of steve jobs’ life, he said to tim cook: from now on, do not think what jobs would do if he is alive, but lead the company as you think… it is a touching sentence and is filled with wisdom. steve jobs indeed is the most honourable and outstanding leader in out times- a truly maverick mind. but what disgusts me is the disbeliefs and rumours that the apple empire no longer exists and those investors who claimed to short apple’s share. and unfortunately, the apple’s share plunged by 20 billions. i am upset about the steve’s death but i also know for sure that the success of apple company is never the result of steve’s own efforts, but the mass innovative mind power from its creative employees. and one of the best things steve did is that he focus all the remarks and labels on himself. not letting outsiders know who create the ipod or iPhone or iPad but only know the steve jobs isolate and protect his innovative employees from ferocious criticism. after all, what thwarts the brightest is the disbeliefs. and steve determined to undertake all criticism on his shoulder(indeed with praise but steve is not the kind of person who brag on one’s achievements right). he believe in his vision and persuade others to believe in it and eventually it become our’s. </p>
<p>“to the genius” is, if i remember correctly, one of the advertising apply company used to promote iPod. steve said: those who are crazy enough to think that they can change the world are the ones who do.</p>
<p>O’capital, My capital!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[想你的第一天]]></title>
      <url>http://chocoluffy.com/2014/11/15/%E6%83%B3%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      <content type="html"><![CDATA[<p>Be mature, but interesting!</p>
<a id="more"></a>
<p>很多时候明明要求自己写日记，却总是可以被各种理由来搅局……</p>
<p>现在好怀念当时在高一的时候，可以全身心投入的那种感觉，我直到现在还没有再有过。</p>
<p>昨天，让我遇见了你……其实我们认识很久了吧……不过我发现我会留意你的一切，你的lofter，你的微博和微信……</p>
<p>我希望成为一个成熟而有趣的男生，在我下定决心的那天，去香港找你。</p>
<p>最近发生了好多好多的事呢，刚刚结束的igem大赛终于如愿拿到了国际金奖，不过回来就傻眼了哈，一大吨的作业等着你……下周就要期中考试了，加油！</p>
<p>一直以来，我发现有一个规律和适合我，越是专注，就越幸运。</p>
<p>感觉最近被身外事骚扰的有点多了，每一个被荒废的时刻都会成为未来的缘因，be a interesting man， 其实是很高的要求呢！</p>
<p>我不擅长的事：</p>
<ul>
<li><p>时间管理，永远不要让自己的欲望代替理性做选择；还有还有啊，为了追上她，为了那个圣地，动力啊啊啊；</p>
</li>
<li><p>情绪管理，爱憎分明是我很突出的一个特点哈，喜欢厌恶的部分能被理性稀释掉；</p>
</li>
<li><p>执行力，我永远擅长说而不是把它做出来；</p>
</li>
</ul>
<p>现在也有点背水一战的感觉呢……呵呵……突然发现……我喜欢上你了……</p>
<p>余舜哲，加油！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[What would be the next attack]]></title>
      <url>http://chocoluffy.com/2014/09/06/What-would-be-the-next-attack/</url>
      <content type="html"><![CDATA[<p>Terrorism is not something that comes from nowhere. </p>
<a id="more"></a>
<p>The fact that the United States is haunted by the attack from Islamic fundamentalists seething with hatred for it proves to some extent that the seeds of terrorism are not stifled at the begins and can pose a detrimental effect to the America’s prosperity. When boosting the liberalism, the ultimate democracy and so-called free speeches from the Constitution, the United States founding fathers envision a society full of political participation, with everyone’s voice being heard, in order that all the decisions about where this country is heading for are in the hands of its people, instead of the legislators, jurists and executives who may or may not reflect the volitions of them. However, just like the fact that free market can default in somewhere, is there someplace where such freedom is not as effective as it was thought to be and the forces of governments should intervene. And in my opinion, terrorism lies in such place. </p>
<p>Let’ s see what Chinese government would react when terrorism attack happens. Since the violence in the capital last fall, the country has been rocked by brutal attacks at railway stations in the cities of Kunming and Urumqi. The unrest is orchestrated by overseas Islamic terrorists groups. After attack, entire cities are sealed off by checkpoints, and there are growing limits on people’s right to travel, worship and dress as they please. It must seem to American people that such reaction is unbearable as it violates most of the Constitution. And I am not requiring American government to imitate such response, but from the result, we can see during such special time, people there are content and satisfied with what governments did and demanded because government lets people know that national armies and forces are behind them. Even though the freedom is squeezed at that time, people and government are united and deem that trade-off is worthwhile and reasonable. </p>
<p>Maybe next time we joke at communist or the Big Brother, we are to reminded that there is no absolute ideology or even absolute freedom. Freedom takes on different forms at different times and this time- the violence period- freedom is in incarnation of the will of being alive and not fearful, which far outweighs any other rights. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2014年我来了]]></title>
      <url>http://chocoluffy.com/2014/02/12/2014%E5%B9%B4%E6%88%91%E6%9D%A5%E4%BA%86/</url>
      <content type="html"><![CDATA[<p>每个人的答案都不一样。</p>
<a id="more"></a>
<p>这一年发生了好多事呢。</p>
<p>很多时候，根本不是自己做不做得到，而是自己想不想去做。</p>
<p>身边总有人关注着学霸的生活，总有人评论着优秀者的姿态。而我，总是静静地看着他们可笑的样子。我不是学霸，我更不喜欢被别人评论。因为他们毕竟不是我，他们看到的结果永远只是我生活的一面，当人们争相用生活几千万分之一的碎片比较着，叫嚣着甚至依次作为生活的全部，他们感受不到生活真正的乐趣，那种沉浸在充实而有意义的事业中超越的快感。</p>
<p>人在世界上，总会问自己，到底活在世界上有什么意义，到底为了什么？</p>
<p>为了父母买一套房子？找到一个自己喜欢并喜欢自己的伴侣？还是说想乔布斯一样改变世界？</p>
<p>每个人的答案都不一样，但无一例外的，这些都是有重量的、高贵答案。</p>
<p>的确有些人追名逐利。的确有些人把羞辱别人，贬低别人看作是自己的目标和快感。可是，然后呢？当他们真地重复着这些话语和动作，当他们真正达到目的，那会是什么感觉？</p>
<p>喜欢攀登的人都仔细分享着攀登过程中的每一点喜悦，珍惜每一次突破极限的感觉，在到达顶峰以后，他们收获了最大最圆满的自豪与成就，却也面临最大最空阔的虚无。结果的后面是另一段旅程，目的地只是下一个所在地的起点而已。</p>
<p>我不喜欢成功。不喜欢用这个词，更不喜欢把自己的成就描述为成功。一个看重成功的国家是有问题的，就像一个满口成功的规划家，一个永远只会谈论别人的自卑的人。梦想，不会因为它描绘了更恢弘的成就而变得更容易实现；汗水与泪水，也不会因为那是为哪怕再卑微的梦想而流而失去他们的重量与意义。</p>
<p>或许，这种充实与超越的喜欢是更为持久的快乐；</p>
<p>而快乐，is what we stay alive for.</p>
<p>我只是一个学生，永远也是。</p>
<p>哲</p>
]]></content>
    </entry>
    
  
  
</search>
