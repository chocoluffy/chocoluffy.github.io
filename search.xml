<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[碎语 2018 Sep.]]></title>
      <url>http://chocoluffy.com/2018/09/04/%E7%A2%8E%E8%AF%AD-2018-Sep/</url>
      <content type="html"><![CDATA[<h2 id="18-9-4"><a href="#18-9-4" class="headerlink" title="18.9.4"></a>18.9.4</h2><ul>
<li>翘掉课，去饭堂随机和一个不那么熟的人坐下来吃饭，听听他们的愿景。</li>
</ul>
<p>今天和来自和前腾讯的mba对话：<br>远程控制是完整无人车逻辑的一步。解决的是无人车离开高速路之后情景。<br>toB，最终变成富士康为代表的流水线工厂。<br>无人车最终会消除品牌溢价。<br>双边市场，增长是相辅相成的。<br>中国的5g，是领先于世界的。<br>无人车，区块链。未来世界的挑战越来越是跨学科的。</p>
<ul>
<li><p>我真的属于由对话推动思考的人。</p>
</li>
<li><p>微博：这里没有我的熟人，却成为了我很亲近的地方。<br>微信朋友圈：我很在意你，于是我选择了沉默。</p>
</li>
<li><p>今日份的梦境：<br>Amazon的AR游戏，点阵游戏，我走在车水马龙之间。身边很多隐形的警察，谁办了坏事，谁成为红点，于是离它最近的普通点就会变成警察来追捕红点。</p>
</li>
<li><p>睡前的梦：<br>我在很认真的和猫粮说关于她的秘密。我花光了今世的所有幸运来和你说一句话。</p>
</li>
</ul>
<h2 id="18-9-1"><a href="#18-9-1" class="headerlink" title="18.9.1"></a>18.9.1</h2><p>都是有原因的。<br>有些动作，你看得出它背后的所有阳光与祈祷。<br>有些坏，其实是所有曾经饱受的戾气，浮夸和嘲讽在那一瞬间借由那个人表达而已。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 月总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Aug.]]></title>
      <url>http://chocoluffy.com/2018/09/01/%E7%A2%8E%E8%AF%AD-2018-Aug/</url>
      <content type="html"><![CDATA[<h2 id="18-8-30"><a href="#18-8-30" class="headerlink" title="18.8.30"></a>18.8.30</h2><p>未来人们不需要做什么创造性的工作。只需要更正机器人创造的事物。我们不需要美与丑，我们只需要正确和错误。</p>
<p>于是人变得越来越像机器人。而机器人越来越有人性。</p>
<p>[18.9.10更新:] 在Behance看到这样一幅画。<br><img src="https://mir-s3-cdn-cf.behance.net/project_modules/fs/e7be6c66472289.5b174556777b5.png" alt="CUDA"><br>作者Manolo Gamboa Naon，一幅只由圆形和三角形组成的画，AI生成的，很可能是利用了GAN的技术。我在想这幅画诞生的过程，其实没有了对颜料的敬畏，那些小心翼翼托起画板的动作，好像并不会妨碍我们认为这不是一幅堪称杰作的画。它其实也精致漂亮，让我们觉得它也有灵魂。而它的高贵气质背后是不需要沉淀的，灵魂不需要凝聚和起承转合，创造发生在电路的一瞬间，电光石火。</p>
<p>我们会学会怜惜这份魅力吗，它的美完全不惧怕毁灭。它也不稀有。它打破了我所有能惋惜的伦理和道德。我们为什么会想要珍惜一些东西，而打破另一些。当我想到这些美好没有任何理由地出现了，而且毫无畏惧，那些敏感的细腻的发明者被精致而麻利的挑选工人取代。我突然有点伤心了。</p>
<h2 id="18-8-29"><a href="#18-8-29" class="headerlink" title="18.8.29"></a>18.8.29</h2><p>怎么说呢，感觉自己突然喜欢上康奈尔的一个时刻：</p>
<p>刚刚大概快十点的时候吧，我从洗手间回来，一个穿着褐黄色职工衣服的人静静地靠在图书角里，捧着一本书，我经过的时候他抬起头来，我们相互点了点头。没有什么寒暄，我走远了悄悄回过头多看了一眼。<br>耳机里的音乐恰好随机到一首现场的交响曲。曲终。响起了很长很长的掌声。仿佛磅礴大雨。</p>
<p>突然感觉挺美的。嗯，有点喜欢这个地方了。</p>
<h2 id="18-8-28"><a href="#18-8-28" class="headerlink" title="18.8.28"></a>18.8.28</h2><ul>
<li><p>电视没有消失，它移到了人们的手机上。当人们的欲望被越来越容易的满足。容易有更多的欲望。</p>
</li>
<li><p>关于责任心<br>为什么要做一个社会责任心的人。<br>这个社会很少为你准备灯光和奖状。但你要知道，你仍然在发光，你依然重要。<br>你在发光，给了别人发光的允许。</p>
</li>
<li><p>研究生开学第一课<br>那么宝贵的一小时，director会讲些什么呢，她选择的话题是脆弱和信任。<br>we make ourselves vulnerable, then we build trust.<br>和团队分享你成长的故事，不要讲任何职业path的东西。<br>early form of listening.</p>
</li>
<li><p>很多内容已经不适合再谈了 或者说谈厌了 但并不代表它不再作用。为了质疑的质疑，削弱了质疑的力度。</p>
</li>
<li><p>真正的区分永远在人。有的人可以拿着终极答案而无所知，有人可以从果壳里破译宇宙。</p>
</li>
<li><p>“沉浸感的本质，在于孤独。”</p>
</li>
</ul>
<h2 id="18-8-14"><a href="#18-8-14" class="headerlink" title="18.8.14"></a>18.8.14</h2><ul>
<li>正直的人没有犯错的机会，在他们那里，善良也被看作有三六九等之分。而一个虚伪的人，却可以随心所欲地做好事。真讽刺。</li>
</ul>
<p><strong>可以尝试去记录，去描述生命中发生的事，而不下结论：</strong></p>
<ul>
<li>[8.15]飞机落地迎接。一个老爷爷带着魔术师般的黑色礼帽；两个孩子钻出围栏冲向一个中年男人。</li>
<li>[8.10] 书店二楼商业圈的角落，美容店开始做清晨动员，柜员们站成一排，和大堂经理喊口号：“相信自己，我们是最棒的，我们能行…”，重复了三遍。这家书店位于广州的中心。</li>
</ul>
<h2 id="18-8-13"><a href="#18-8-13" class="headerlink" title="18.8.13"></a>18.8.13</h2><ul>
<li>关于选择</li>
</ul>
<p>聪明是一种本能，而善良是一种选择。</p>
<p>你们很优秀，也希望你们承受起来优秀的重量。</p>
<ul>
<li><p>准备和猫粮的晚餐，准备一份回忆。</p>
</li>
<li><p>商业创意的趋势是：不要让你去找资讯或者商品，让他们来找你。准确分类好那一部分是逛的，哪一部分是你准确想要的。特定是二手这个市场，做一个工具，比如chrome extension结合桌面提醒，当想要的东西出现的时候提醒我。</p>
<blockquote>
<p>延伸：每次用豆瓣移动端版都会看到一些自己感兴趣的文章：因为那些文章是我收藏的书或者电影的比较好的点评。</p>
</blockquote>
</li>
</ul>
<h2 id="18-8-10"><a href="#18-8-10" class="headerlink" title="18.8.10"></a>18.8.10</h2><ul>
<li><p>早晨晨走：关于北极圈的事情，关于公益。一个关于直播的项目，你的钱投入的每一棵树苗可以直播看到它的情况。</p>
</li>
<li><p>连接性究竟意味着什么？</p>
<blockquote>
<p>twitter\weibo究竟带来了什么？<br>理想主义。堂吉柯德。TNR（the news room，去观察一个时代是如何对待英雄的离去）。酷与不酷。</p>
</blockquote>
</li>
</ul>
<h2 id="18-8-9"><a href="#18-8-9" class="headerlink" title="18.8.9"></a>18.8.9</h2><h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><ul>
<li>不要对自己亲近的人那么任性。</li>
<li>不要总是想证明自己比别人更优越。</li>
<li><p>时刻清楚，什么才是最重要的！！无论是对家里人，还是对创业伙伴，还是对朋友。</p>
</li>
<li><p>虚构最大的胜利，就是当我们有了迟疑：“真实不值得”。</p>
</li>
<li><p>警惕那种科技，它什么也没有创造，却带来繁华纸醉的幻觉。</p>
</li>
</ul>
<p>它仅有的功勋是连接那些早已存在的东西。<br>我期待的empathy并没有出现。<br>被推到了世界繁华纸醉的边缘。不，应当是我要走向那些角落，我不喜欢，我有我自己的方向。</p>
<h2 id="18-8-4"><a href="#18-8-4" class="headerlink" title="18.8.4"></a>18.8.4</h2><p>夜晚走在家乡的大海边。<br>若隐的海岸线，瓷黄灯光，和微咸的空气。<br>如果。</p>
<p>看昆德拉写托马斯与萨宾娜交换的礼帽。<br>感觉，时间流逝，就是在和时间交换一些东西。<br>爵服，灯光，交杯和心碎。<br>这真像浮士德的契约。<br>我好奇，令我身上法术失效的那一刻，咒语是什么。</p>
<h2 id="18-8-3"><a href="#18-8-3" class="headerlink" title="18.8.3"></a>18.8.3</h2><ul>
<li>连接一千位铁杆粉丝。小密圈。</li>
</ul>
<p>一个艺术工作者只需要一千个铁杆粉丝就可以自由地创作。</p>
<p>而其实小密圈现在只是局限于图文瀑布流 连创始人都是这么定位的 是一个付费分组朋友圈。</p>
<p>其实小密圈仍然没有解决内容水化这个问题。</p>
<p>取代的是，豆瓣小组。</p>
<p>时间点很好，在微信公众号，知乎等出现一部分专业人士。对现有的变现效率不满意。尤其是微信公众号打赏，知乎live。</p>
<ul>
<li><p>后续。资讯的后续更新和报道。</p>
</li>
<li><p>在你没有一个核心想法的时候，你看似可以接受所有东西，好像整个世界都是给你开放的，但实际上不是。你想想，你会凭借什么做选择？你对不同机会的感受力是否一样，你是否容易收到裹挟？</p>
<blockquote>
<p>美学感受越丰富，兴趣就越坚定，道德选择就越准确，他也就越自由，也可能越不幸。</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 月总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[写在微软Imageine Cup决赛圈之后]]></title>
      <url>http://chocoluffy.com/2018/07/26/%E5%86%99%E5%9C%A8%E5%BE%AE%E8%BD%AFImageine-Cup%E5%86%B3%E8%B5%9B%E5%9C%88%E4%B9%8B%E5%90%8E/</url>
      <content type="html"><![CDATA[<p>Imagine Cup全球决赛圈刚刚在西雅图结束，恭喜smartARM代表加拿大赛区赢下了冠军<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。有点遗憾因为个人签证原因没能在队员身边参与决赛全程，但在五月底去温哥华的加拿大赛区比赛仍然让我记忆犹新。从一个side project起步，到因为学院孵化器负责人推荐参与微软的比赛，再到在温哥华展示拿下加拿大赛区第二名<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>进入全球决赛圈，这期间认识了很多很有意思的队伍，和他们的故事。有一些感想记录在这里。</p>
<h2 id="关于动机"><a href="#关于动机" class="headerlink" title="关于动机"></a>关于动机</h2><p>我感觉这次Imagine Cup一行给我感触最大的就是“动机”。几乎针对每一个队伍，裁判都很感兴趣去倾听团队背后的故事，为什么你们会做这个，为什么你们会组成一队。这也是很一脉相承的story-telling。毕竟整个人类文明，人与人之间的交流，都是story-telling的一种。而越有感染力的故事，越容易凝聚力量成就伟业。</p>
<p>可是这同时也让我警惕。</p>
<p>就在我给故事添加上一个修饰词：富有感染力，的时候，是不是有一种危险是我贬低了故事的维度，而把丈量标准的价值观强加在了这件事物上。容易落得的一个境地是，如果一个故事没有感染力，是不是它就没有价值。我们只是说在某个公认的测量标准上它处于劣势，而不能够去斥责其整体的价值。</p>
<h2 id="关于价值溢出"><a href="#关于价值溢出" class="headerlink" title="关于价值溢出"></a>关于价值溢出</h2><p>这越来越证实了一句话。科技所应用的场景会给这项科技本身带来更大的价值叠加。这既是优势也是风险。优势是你找到了一个更适用的市场场景，而风险是外行人会关注于那个市场本身的情绪和舆论而大于科技本身。</p>
<p>这一次获胜的队伍smartARM是一个关注义肢市场的机械臂项目。其利用嵌入机械手掌心的raspberry pi和camera pi实现近距离的物体识别，然后根据预先映射好的动作流程来指导机械手指的运动，实现对物体的抓握等操作。与此同时我注意到一个细节，操作者佩戴了myo，一个用于捕捉手臂肌肉信号的可穿戴设备。基于其硬件基础，这个队伍有意思的地方还在于其模仿苹果等公司的商业理念：我们卖硬件，但我们是一个软件服务商。他们允许用户自定义抓握的操作，上传云端服务器，分享以及获取他人的操作recipe。</p>
<p>他们的项目本身有很多很有价值的地方，但仅从现场演示的效果来看他们仅仅展示了最基础的功能就戛然而止，也令我感到很遗憾。但对于对科技稍陌生的观众来说，这最基础的演示也远已足够震撼。</p>
<p>令我印象更加深刻的是这只队伍展示的市场调查。目前义肢市场上充斥着良莠不齐的手臂模具样品，某些几百刀的商品其能够实现的功能却近似只是装饰。能够利用硬件和计算机视觉帮助这类人群实现哪怕是仅有的抓握操作，将会是很宝贵的进步。更何况基于raspberry和myo的硬件组合成本可以压在250刀以内，如果进一步自主实现肌肉电流信号追踪，成本可以压得更低。</p>
<p>这也再一次令我想起那个观点：未来已来，只是还没有扩散开。我们其实已经拥有了足以改变许多领域的科技能力和成果，只是他们还没有普及开来。</p>
<p>这其实也昭示现在科技和资本转向的方向。相比近15年来基于互联网和移动设备等基础设施发展起来的各式服务，我们会迎来越来越多基础建设上的创新，譬如AR/VR平台，区块链应用。而我们也将以此获得很宝贵的一段缓冲期，来围绕新的基础设施来构造面向大众市场的服务，找到更匹配的用户场景。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://techcrunch.com/2018/07/25/smartarms-ai-powered-prosthesis-takes-the-prize-at-microsofts-imagine-cup/" target="_blank" rel="noopener">Techcrunch报道Imagine Cup决赛优胜队伍</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;"><a href="http://web.cs.toronto.edu/news/current/U_of_T_wins_at_the_Canadian_Finals_of_Imagine_Cup_2018.htm" target="_blank" rel="noopener">加拿大赛区结果</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 创业 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 科技 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[碎语 2018 Jul.]]></title>
      <url>http://chocoluffy.com/2018/07/24/%E7%A2%8E%E8%AF%AD-2018-Jul/</url>
      <content type="html"><![CDATA[<h2 id="18-7-28"><a href="#18-7-28" class="headerlink" title="18.7.28"></a>18.7.28</h2><ul>
<li><p>越强大的过滤工具，只会让你发现分散更多的注意力。因为你都在看到你感兴趣的东西，这比糟糕的内容更诱惑而分散注意力。比如曾经的电视和现在的手机。都是看剧的时间。</p>
</li>
<li><p>下一次有人问我，为什么我喜欢创作。因为我觉得，“生活和创作并不是两种天分，而是同样的能力。”</p>
</li>
<li><p>“喜欢一些违背直觉的东西，比如这束玫瑰，瞒着夏天开放了。”</p>
</li>
<li><p>来自山谷里冰蓝清澈的小溪<br>来自一盏仍然温热的酒杯<br>最不在意出身的 是雨 </p>
</li>
<li><p>每个下雨天，在大地行走的人们都成了提线木偶。</p>
</li>
</ul>
<h2 id="18-7-27-《声名狼藉者的生活》"><a href="#18-7-27-《声名狼藉者的生活》" class="headerlink" title="18.7.27 《声名狼藉者的生活》"></a>18.7.27 《声名狼藉者的生活》</h2><p>福柯的文字里能感受到的发力点在“演出”和“权力”。他喜欢观察权力冲突的时候发生交替的东西，譬如曾经默默无闻的底层群体以主流的方式成为永恒的讽刺…p307</p>
<p>权力是一种合谋关系。</p>
<p>当一种权力的影响范围越来越大，譬如一类技术，一种群众思潮，某些主义，我们所警惕的东西不应只是这种力量是否会被所有者滥用，还有，当每个人都可以让这种强大的力量为他所用，满足自己的目的，反对别人。p308</p>
<p>权力，为人望而生畏，却同时被人们所深深包容。因为悲剧是轮回的。</p>
<ul>
<li><p>【剧本】会不会迎来这样一个时代，我们明明说着相同的语言，却无法相互理解，宛如呼叫与仪式之别。</p>
</li>
<li><p>去想象他们经历的来由，去追溯发生在凶手身上的悲剧。</p>
</li>
</ul>
<h2 id="18-7-25"><a href="#18-7-25" class="headerlink" title="18.7.25"></a>18.7.25</h2><p>VR、AR是参与感。对内容行业。<br>区块链是信用。参与进支付行业。</p>
<p>去中心化的意思是，以前中心化面临的风险和失控，现在每一个节点都摊上了。</p>
<h2 id="18-7-23"><a href="#18-7-23" class="headerlink" title="18.7.23"></a>18.7.23</h2><p>你凭什么认为，最美好的东西，靠所有人投投票就可以投出来了。不，不是的。以前我们听过一些童话故事，其中一个是在海边捡石子的小男孩，他渴望捡到一个如金子般温暖的石子。但为什么，美，可以被随随便便的看到。</p>
<h2 id="18-7-17"><a href="#18-7-17" class="headerlink" title="18.7.17"></a>18.7.17</h2><p>分清楚主次，读纸质书是在创造。读kindle是在收集总结。</p>
<h2 id="18-7-15"><a href="#18-7-15" class="headerlink" title="18.7.15"></a>18.7.15</h2><ul>
<li><p>有一种蛇 很长很长 反应很慢很慢 直到你忘记了我 我还爱着你</p>
</li>
<li><p>是要有多大的信任，我才愿意把我最柔软的一面留给你。是下雪。</p>
</li>
<li><p>好像什么在燃烧。好像又有什么扑灭了。扑通扑通。机场分别。终于我的脸上拥有了下雪的痕迹。</p>
</li>
<li><p>越来越感觉，区块链还缺少一个真正的底层支持。其应用层的创新还没有到时候。以太坊大部分的是dapp项目，能活跃超越4个月的都不多。</p>
</li>
</ul>
<h2 id="18-7-9-区块链解决公地悲剧问题"><a href="#18-7-9-区块链解决公地悲剧问题" class="headerlink" title="18.7.9 区块链解决公地悲剧问题"></a>18.7.9 区块链解决公地悲剧问题</h2><p>和朋友闲聊，突然感觉到其实区块链很好地解决了公地悲剧（tragedy of the commons）问题。</p>
<p>解决公地悲剧的方式之一，除了极端的私有化，还可以是collective rules，也即所有权的明确划分。而所有权的界定是基于共识的。</p>
<p>而恰好，区块链所解决的去中心化的信任问题本质上就是撮合了共识。通过保证智能合约的执行，使加入网络的人遵守约定的规则，而token的持有和流通，体现了个人对集体的贡献值。市场会奖励为扩大共识做出贡献的人，从而使得个人利益与集体利益的捆绑，解决公地悲剧。</p>
<p>打个比方。股票，是对公司的所有权进行了划分。而某种意义上，区块链的token分发，像是拓展了股票的操作范围，不仅是公司的所有权，还有私人财产，抽象知识，个人隐私的所有权都可被界定和流通。这其中存在着很多价值压榨（非正义）的空间这里暂不讨论。但有意思的是，用另一种说法，这种持用token的方式是相较于公司更为非正式但同样高效的生产关系。这是区块链的一项很有价值的发明。</p>
<p>抛开技术层面聊区块链其实仅仅只是服务于好奇心罢了，要说真正投项目还是做基础建设（跨链、闪电网络等）的方向比较靠谱。也时刻警惕国内现在盛行的价值观洗脑。短期内不要碰ICO。</p>
<h2 id="18-7-8"><a href="#18-7-8" class="headerlink" title="18.7.8"></a>18.7.8</h2><ul>
<li><p>AI做regression和prediction，本身不带有市场。</p>
</li>
<li><p>在加拿大all in小程序。可以用有赞商城！基本就打通了商业的闭环。</p>
</li>
</ul>
<blockquote>
<p>注意观察生活中一些人气高涨的地方。不需要特别的措施就有人气。那意味着机会和需求。例子：享物说，一开始发现只要是送东西，反应都特别快。<br>很多时候看那些创业访谈。很关键的一环，xx时候获得了xx的天使投资。你把自己准备好了，所有事情都水到渠成。</p>
</blockquote>
<h2 id="18-7-5"><a href="#18-7-5" class="headerlink" title="18.7.5"></a>18.7.5</h2><ul>
<li>海贼王教会我的 世界上总有人在为你的幸福祈祷。</li>
</ul>
<p>价值投资看best。忽悠，看散户。</p>
<blockquote>
<p>人的价值是最重要的。YMCA。创造一个社区。礼橙是不是可以沿着这个思路来做，找到你的专职司机。建立与客户的联系。但同时离不开平台这个工具。</p>
</blockquote>
<p>一个陌生人正推开玻璃门。<br>像拨开一片云彩。</p>
<ul>
<li><p>任何因科技进步淘汰的，只会换一种方式再次出现。因为人性不变。<br>电视被淘汰了吗？只不过转移到手机里了。</p>
</li>
<li><p>马车被淘汰了。人偷懒的欲望不变。</p>
</li>
</ul>
<h2 id="18-7-1"><a href="#18-7-1" class="headerlink" title="18.7.1"></a>18.7.1</h2><p>订阅盒子。把消费选择的空间提前到家门口。</p>
<p>这种定价策略也可以模仿在信息消费里。根据使用阅读来收费。</p>
<p>GAN -&gt; 个性化定制。你选择概念，我生成样本，然后你来选择。我通过GAN来取代设计师的这个过程。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 月总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[谈“破窗理论”下弱势群体的保护主义]]></title>
      <url>http://chocoluffy.com/2018/07/01/%E8%B0%88%E2%80%9C%E7%A0%B4%E7%AA%97%E7%90%86%E8%AE%BA%E2%80%9D%E4%B8%8B%E5%BC%B1%E5%8A%BF%E7%BE%A4%E4%BD%93%E7%9A%84%E4%BF%9D%E6%8A%A4%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>书本会被一页一页地撕去。《华氏451》</p>
<a id="more"></a>
<p>“破窗理论”在不同的领域有着不同的定义，在可能更为人所知的心理学领域，“破窗理论”表示的是公众场合下曝光的不良现象会诱使产生更多的负面行为，譬如，“一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西”<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。</p>
<p>而在经济学领域，“破窗理论”主要是在论证“损害有益”这个观点。一个典型的例子，巴斯夏曾提到<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，“店主粗心的儿子不小心砸破了一扇窗户玻璃。而每个看到这种局面的人，都会不约而同地如此这般地安慰这位不幸的店主：‘不论发生什么不幸的事，天下总有人会得到好处。人人都得过日子呀，如果玻璃老是不破，要玻璃工干什么呀’”。</p>
<p>听似有理。甚至可以联系起凯恩斯的“宏观调控”理论，罗斯福新政等在经济萧条时名噪一时的经济调节策略。这些政策都相似地利用“销毁”来创造新的需求。这个方向再极端的观点，或许是曾经一些学者提出的，发动战争来增长经济维持社会和平的荒谬观点<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>
<p>而值得思考的是，为什么每当经济萧条的特殊时期，凯恩斯主义都会重新盛行？</p>
<p>下面是我的思路。</p>
<p>“打破窗户以加速资金运转”的说法之所以错误是因为这个本质在于控制了资金运转的方向。</p>
<p>这个事件的支持者会提到玻璃厂得以因此存在，补窗工人也得以存在的理由。同样的事情也发生在战争复兴制造业的说法，因为战争的发生，使得工业制造业得以进一步地发展。这个论点忽略的是资金运转的机会成本，原本将会被自由交易的金钱被强制印加在了某一特定方向上<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>。</p>
<p>而我们认为这个方案较为劣等的假设是，我们认为人们自由交易得到的价值高于某一强制性交易。</p>
<p>这个假设是关键的。这意味着两点，一是以下的思路都基于这个假设的成立，自由比管控能带来更多的价值。而二则是暗示着，这个假设是可变的，它只在它适用的场景下成立，如果我们能找出“管控带来更多价值”的场景，我们可以推理出截然不同的结果。</p>
<p>首先，一个更符合自由主义经济学家观点的思路是，认为假设是成立的，自由交易比管控经济可以带来更多的价值。</p>
<p>他们会指出历史上的反面例子，罗斯福新政里面的，政府强制倾倒牛奶，为了维持牛奶价格的稳定和农民工人的生计。之所以需要政府介入并强制性地创造稀缺，是因为政府在短期内着手保护的是农民这个群体。因为他们在自由贸易中是暂时受害的一方，也是因为短期大众对奶制品的需求并不那么受价格因素波动而波动。</p>
<p>-&gt; 弱势群体是需要保护性政策的。而尤其当弱势群体成为了当前政体下的主要诉求者。</p>
<p>-&gt; 一个有意思的问题是，什么样的社会会创造更多的弱势群体？我们可以将逐渐碎片化且小众的群体比作弱势群体吗，如果可以，互联网是不是在加速这种保护性政策普及的过程？类似的，社会的现代化，如果我特指的是人群的专业化(specialization)，是不是也在加速这个过程？</p>
<p>如果弱势群体的存在证实了政府经济管控的必要性。这同时也意味着，他们更容易接受政府在政治层面实施管控的合理性。</p>
<p>于是我们得到一个结论<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>。<br>-&gt; 一个创造出更多碎片化群体的社会，更容易接受政府管制的行为。</p>
<p>联想起在雷布拉德伯里在《华氏451》里描述的一种社会现象。书本会被一页一页地撕去，因为来自少数族群的压力。</p>
<p>以上<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://baike.baidu.com/item/%E7%A0%B4%E7%AA%97%E7%90%86%E8%AE%BA" target="_blank" rel="noopener">破窗理论，来自百度百科</a>。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">巴斯夏《看得见的与看不见的》。 以面向大众的亲切口吻阐述了自由主义的好处。简单概述主旨，所有来自上级的强制调控本质上都意味着一种财富转移，而不是财富创造。譬如税收，补贴等等政府行为。自由贸易，意味着一种对未知信息的探索和反馈机制，以“看不见”的方式调节市场行为。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">想起了乔治奥威尔《1984》里的观点，“战争即和平”。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;">同样可以论证“税收”这一行为。</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline; vertical-align: top;">马东曾经说过。被误解，是表达者的宿命。结论或许是争议的，但重要的是，我们抵达的方式。</span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline; vertical-align: top;">这篇博客是由我阅读巴斯夏《财产、法律与政府》一书的笔记拓展开来。 我觉得还可以拓展的点有，分析我们现在大数据、人工智能以及分布化技术所指向的未来的经济体系。</span><a href="#fnref:6" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
            <tag> 读书笔记 </tag>
            
            <tag> 经济学 </tag>
            
            <tag> 自由主义 </tag>
            
            <tag> 政治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Leetcode题目解析]]></title>
      <url>http://chocoluffy.com/2018/07/01/Leetcode%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>My Leetcode solution collection. </p>
<a id="more"></a>
<h1 id="milestone"><a href="#milestone" class="headerlink" title="milestone"></a>milestone</h1><table>
<thead>
<tr>
<th>Title</th>
<th>Description</th>
<th>Solution</th>
<th>Speed &amp; Percentile</th>
</tr>
</thead>
<tbody>
<tr>
<td>1. Two Sum</td>
<td>find a pair summing to target value.</td>
<td>hashmap with early stop.</td>
<td>7ms, 98%</td>
</tr>
<tr>
<td>2. Add Two Numbers in Linked List</td>
<td>doing addition and curry.</td>
<td>dummy node for linked list.</td>
<td>41ms, 98%</td>
</tr>
<tr>
<td>3. Longest Substring Without Repeating Characters</td>
<td>as title.</td>
<td>bitmap in replace of &lt;char, int&gt; hashmap recording most recent position. if there is a collision then found a repeated character.</td>
<td>19ms, 98%</td>
</tr>
<tr>
<td>4. Median of Two Sorted Arrays</td>
<td>find median number from two sorted arrays.</td>
<td>do binary search on the shorter array between nums1 and nums2, compare the max\min number of left\right hand side. Median is a position that the number of elements at two sides are equal.</td>
<td>42 ms. 98%</td>
</tr>
<tr>
<td>5. Longest Palindromic Substring</td>
<td>as title.</td>
<td>straightforward: for loop each element and expand at both side; best: only expand at right and jump through repeated elements as repeated one no matter how long it is will definitely be a valid palindrome string</td>
<td>4ms, 100%</td>
</tr>
<tr>
<td>6. ZigZag Conversion</td>
<td>given a string, and place it in a zigzag way, then collect them row by row to form a new string.</td>
<td>create zigzag moving iterator that follows the pattern of the normal for loop iterator. Essentially, to have a direction indicator that will change the zigzag iterator’s moving direction.</td>
<td>21 ms, 98.44%</td>
</tr>
<tr>
<td>7. Reverse Integer</td>
<td>as title.</td>
<td>check integer overflow before potential operations, trick is to check if applying reverse operation can yield original result.</td>
<td>16 ms, 99.17%</td>
</tr>
<tr>
<td>8. String to Integer (atoi)</td>
<td>as title, with some edge cases.</td>
<td>convert each character to integer, check if overflow before any further operations.</td>
<td>4ms, 100%</td>
</tr>
<tr>
<td>11. Container With Most Water</td>
<td>an array of integer, as vertical lines on coordinates, together with x-axis forms a container, find the one holds most water.</td>
<td>two pointer at two ends moving inwards. we can prove that moving the longer line inward is always worse than the current result. Thus we move the shorter line inward.</td>
<td>4ms, 100%</td>
</tr>
</tbody>
</table>
<h2 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h2><ul>
<li><p>summarize common modular operations and helpful algorithm functions, with their time complexity, such as “longest common substring\subsequence”, “check if integer overflow”. </p>
</li>
<li><p>summarize common data structure implementation, such as trie tree. put the above two section on <a href="http://chocoluffy.com/2018/06/30/Leetcode%E7%AE%97%E6%B3%95%E6%80%9D%E8%B7%AF/">Leetcode算法思路</a>.</p>
</li>
<li><p>also recording each solution’s time &amp; space complexity. </p>
</li>
<li><p>check “Discussion” tab for smart tricks.</p>
</li>
</ul>
<h1 id="1-two-sum"><a href="#1-two-sum" class="headerlink" title="1 two sum"></a>1 two sum</h1><ul>
<li>最快的算法里对std::sort的使用。</li>
</ul>
<p>虽然理论上sort是nlogn，但是在实用中sort可以在某些情况下提高速度。尤其当c++的library function对其添加的优化。</p>
<h1 id="2-add-two-numbers"><a href="#2-add-two-numbers" class="headerlink" title="2 add two numbers"></a>2 add two numbers</h1><ul>
<li>想清楚什么时候需要引入dummy node。</li>
</ul>
<p>常见的原因是为了更简便地处理while loop里面的edge case，比如这里的第一个node的初始化。我们创建新node是依赖while loop的逻辑的，如果为NULL，在loop使用node-&gt;next会seg fault。所以通过创建dummy node使得可以直接在loop里使用node-&gt;next。然后最后用dummy-&gt;next返回整个链的head。</p>
<h1 id="3-longest-substring-without-repeating-characters"><a href="#3-longest-substring-without-repeating-characters" class="headerlink" title="3 longest substring without repeating characters"></a>3 longest substring without repeating characters</h1><ul>
<li>map&lt;char, int&gt;</li>
</ul>
<p>优化这个结构的时候，可以考虑bitmap的使用。类似bucketsort的原理。如果是字符则是默认256长度的bitmap，然后对应的位置放置其value。</p>
<h1 id="14-longest-common-prefix"><a href="#14-longest-common-prefix" class="headerlink" title="14 longest common prefix"></a>14 longest common prefix</h1><p>problem: as title.</p>
<h2 id="ideas"><a href="#ideas" class="headerlink" title="ideas"></a>ideas</h2><ul>
<li>[me] vertical scanning. time complexity: O(S), where S is the sum of all characters in all string. space complexity: O(1).</li>
<li>divide and conquer. because LCP satisfies the associative property, that LCP(1,…, n) = LCP(LCP(1,…, n/2), LCP(n/2+1,…, n)). as like in finding min or max. time complexity is O(S), space complexity is O(mlogn), n is the number of string, m is the average length, since divide and conquer requires to store intermediate results.</li>
<li>binary search. an improvement on the vertical scanning. apply the binary search on the shortest string and do the vertical scanning to validate if it’s LCP. time complexity is O(S * log(min string length)), space complexity is O(1).</li>
</ul>
<h1 id="866-prime-palindrome"><a href="#866-prime-palindrome" class="headerlink" title="866 prime palindrome"></a>866 prime palindrome</h1><p>problem: find a prime number that is also a palindromd over N.</p>
<h2 id="ideas-1"><a href="#ideas-1" class="headerlink" title="ideas"></a>ideas</h2><ul>
<li>find palindrome then check if prime. </li>
</ul>
<p>the set of palindrome is smaller, and for each palindrome, we can test whether it is prime in O(N^1/2).</p>
<p>-&gt; find the set of palindrome number over N.</p>
<p>-&gt; how to find the next palindrome number.</p>
<p>from the center move outward, find the critical digit to add 1.</p>
<h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><p>define the palindrome root. say 121 is 12. thus we can use palindrome root to construct palindrome number by increase it by 1 at a time. </p>
<ul>
<li><a href="https://leetcode.com/articles/prime-palindrome/" target="_blank" rel="noopener">https://leetcode.com/articles/prime-palindrome/</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
            <tag> interview </tag>
            
            <tag> C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Leetcode算法思路]]></title>
      <url>http://chocoluffy.com/2018/06/30/Leetcode%E7%AE%97%E6%B3%95%E6%80%9D%E8%B7%AF/</url>
      <content type="html"><![CDATA[<h2 id="algorithm-summary"><a href="#algorithm-summary" class="headerlink" title="algorithm summary"></a>algorithm summary</h2><h3 id="median"><a href="#median" class="headerlink" title="median"></a>median</h3><p>A position that the number of elements at two sides is the same.</p>
<p>Problems: NO.4</p>
<h3 id="two-pointer"><a href="#two-pointer" class="headerlink" title="two pointer"></a>two pointer</h3><p>Essentially a way of searching. find the direction of keeping the sub-structure optimality. keep the optimality and explore\compare.</p>
<p>Problems: NO.11</p>
<h2 id="data-structure-summary"><a href="#data-structure-summary" class="headerlink" title="data structure summary"></a>data structure summary</h2><h3 id="trie-prefix-tree"><a href="#trie-prefix-tree" class="headerlink" title="trie(prefix tree)"></a>trie(prefix tree)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// trie node</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span> *<span class="title">children</span>[<span class="title">ALPHABET_SIZE</span>];</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// isEndOfWord is true if the node represents</span></span><br><span class="line">    <span class="comment">// end of a word</span></span><br><span class="line">    <span class="keyword">bool</span> isEndOfWord;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns new trie node (initialized to NULLs)</span></span><br><span class="line"><span class="function">struct TrieNode *<span class="title">getNode</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span> *<span class="title">pNode</span> =  <span class="title">new</span> <span class="title">TrieNode</span>;</span></span><br><span class="line">    pNode-&gt;isEndOfWord = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ALPHABET_SIZE; i++)</span><br><span class="line">        pNode-&gt;children[i] = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If not present, inserts key into trie</span></span><br><span class="line"><span class="comment">// If the key is prefix of trie node, just</span></span><br><span class="line"><span class="comment">// marks leaf node</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(struct TrieNode *root, <span class="built_in">string</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span> *<span class="title">pCrawl</span> = <span class="title">root</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; key.length(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> index = key[i] - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!pCrawl-&gt;children[index])</span><br><span class="line">            pCrawl-&gt;children[index] = getNode();</span><br><span class="line"></span><br><span class="line">        pCrawl = pCrawl-&gt;children[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mark last node as leaf</span></span><br><span class="line">    pCrawl-&gt;isEndOfWord = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note the coding way in method <code>insert()</code>, we use a new variable <code>struct TrieNode *pCrawl</code> to iterate through the <code>key</code>, so that it doesn’t change the position of <code>*root</code>.</p>
</blockquote>
<ul>
<li><a href="https://www.geeksforgeeks.org/trie-insert-and-search/" target="_blank" rel="noopener">https://www.geeksforgeeks.org/trie-insert-and-search/</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
            <tag> interview </tag>
            
            <tag> C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《加缪手记第二卷》阅读批注]]></title>
      <url>http://chocoluffy.com/2018/06/29/%E3%80%8A%E5%8A%A0%E7%BC%AA%E6%89%8B%E8%AE%B0%E7%AC%AC%E4%BA%8C%E5%8D%B7%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%B9%E6%B3%A8/</url>
      <content type="html"><![CDATA[<p>我只想静静地描述眼前的世界。这是我生命的美好，我的存在主义。</p>
<a id="more"></a>
<p>昨晚登机回国，和小伙伴们告别，哭得稀里哗啦。候机的时候，想看会儿书，本来在kindle里昆德拉的《不朽》开了个头，但最后还是认输地从背包里掏出来加缪的这本手记。没别的，心情不好的时候无意走出洞穴<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。而加缪的文字，是我任性凝视烛影的秘密。</p>
<p>我很难解释清楚这个秘密。我想起他总提到的反抗。这意味着在一个分崩离析的世界里保持清醒，却也不依赖理性来获得希望。</p>
<p>凭什么说真实更美。要我说，是想象。</p>
<p>以下的文字是我在飞机上重读《手记》第二卷时写下的零碎批注。附上了所在的页码以便日后回溯。引号内的文字为原文的引用。</p>
<ul>
<li><p>准备添一本杂文集，那些不凭借理性获得希望的人。</p>
<blockquote>
<p>由理性出发的，终由理性解构。<br>加缪：由疯狂所支使，并以理性写下的东西那么美好。p3</p>
</blockquote>
</li>
<li><p>产生敌意的另一种可能：“自己被打败了，便巴不得且卑劣地想见到那还在顽抗的也倒下去”。p5</p>
</li>
<li><p>革命合法化。和提高社会福利是一个道理。有种同样潜在卑劣的动机。解构人的冲动。p5</p>
</li>
<li><p>如果戏剧无意义，那更荒谬的是，戏剧里的情绪。p6</p>
</li>
<li><p>现在每次提起镜子，我都会想起昆德拉。他把礼帽放在她头上。他们看着镜子里赤裸的自己<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>。时间的意义，是交换礼物。p10</p>
</li>
<li><p>科塔尔。人有时候会荒谬到愿意摧毁一切来掩盖自己的一个毛病。如果来一场传染病，是不是他就不会被捕了，是不是他就可以和人群拥抱在一起<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。荒谬的点在于，他追求至美，却表现地至恶。p11</p>
</li>
<li><p>“而下坡的时候，一个人的日子即不再属于自己”。p12</p>
<blockquote>
<p>毛姆：人老去，像是在黄昏里读书。天色愈暗，直到看不清眼前的字，只剩温度。</p>
</blockquote>
</li>
<li><p>荒谬的作用，其实是造成一种混乱。“而一旦做出了荒谬的结论并愿意接受这样的人生，这意味着如何在一个分崩离析的世界里保持清醒。”</p>
<blockquote>
<p>有些人从同样的前提指引到了不同的结局，比如尼采和黑塞。从蛋里诞生新的生命，然后毁灭这个世界<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>。注：黑塞曾患有精神分裂，其在德米安中阐述的毁灭这个世界，也可能其实意味着的是自杀。</p>
<p>而教徒们的上帝，其实也是给了其中一种解决混乱的方式。归依吧。这里有所有你想知道的答案。你的幸福，你的祸害卑劣（撒旦）都有因有果。不必混乱。</p>
<p>加缪的选择不是去打破一切，而是相反，不去规避任一成因。“去建立，尘世生活规范。”</p>
</blockquote>
</li>
<li><p>“真正的艺术家，就在于他可以成为他所描述的那种人，经历他笔下写的那些事。”，理解这句话，在于理解一个前提，“经历了一件事并不让其成为谈论这件事的最佳人选”。p13</p>
</li>
<li><p>纪德。</p>
</li>
<li><p>“海涅的墓志铭: 他喜爱布伦塔河的玫瑰。” p18</p>
</li>
<li><p>“衡量对一个人的热情，就是看他愿意为这份热情付出多大的代价”。p18</p>
<blockquote>
<p>同样是来自handcash的启发而有的比特币。对于解决Spam和噪音的一种方式。</p>
</blockquote>
</li>
<li><p>“人永远都有一套哲理来解释自己为何缺乏勇气。“ p20</p>
</li>
<li><p>所有的哲学都是为了让人摆脱虚无主义。很多人看到了加缪阐述的“荒谬”的一面，但是没有看到他的“反抗”。而值得思考的是，为什么现代社会会把人引向虚无主义。还记得那篇文章，描述现代的工作。大部分都会成为bullshit。 因为人的介入再也比不上机器的效率，人变得不再不可替代，而人的道德说这个社会不是原始森林，淘汰的方式不能是生存毁灭。 我们会出现一个受圈养的阶级。这个阶级存在的意义是维持不变。<br>很多时候我们感觉到焦虑，陷入混乱。并不是因为这个世界被现代所改变（我们现在所解决的温饱，所渴望得到的幸福）。”我们感到混乱，只是因为我们跟不上这样的动荡“。p21</p>
</li>
<li><p>有时候真的蛮害怕的，失去感受的能力，像失去雨的冰凉。失去完整叙述一件事的能力。时间就像风一样流过，而我却抓不住风的尾巴。p22</p>
</li>
</ul>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;">柏拉图的“洞穴比喻”。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline; vertical-align: top;">《不能承受的生命之轻》</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline; vertical-align: top;">《鼠疫》</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline; vertical-align: top;">《德米安》</span><a href="#fnref:4" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 哲学 </tag>
            
            <tag> 加缪 </tag>
            
            <tag> 存在主义 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[该隐的印记 -《德米安》读后感]]></title>
      <url>http://chocoluffy.com/2018/06/13/%E8%AF%A5%E9%9A%90%E7%9A%84%E5%8D%B0%E8%AE%B0-%E3%80%8A%E5%BE%B7%E7%B1%B3%E5%AE%89%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>通往真正自我的小路就像毛姆笔下的刀锋。时常想起它的结尾，毛姆对读者写道，喏，书里的角色最后都各得其所，这就是你想要的完满结局。你们开心了吗。我也曾执意想找到毛姆的答案，却总是无功而返。我在猜，人们会习惯以讽刺为惆怅封笔。</p>
<a id="more"></a>
<p>我觉得，关于自我的讨论很大程度被诉求所主导。无论是选择大众理想带来的温暖，还是小径的召唤，自我的牺牲与拯救不过是同一种选择下的两种诠释。站在上帝视角这么看，人们最终得到的，无非是取决于自身的东西，而这也是他们的力量和无辜所在。</p>
<p>说实话我并没有完全被黑塞说服。从该隐的印记的重新诠释，到“天职”的表述，无不带有强烈的主动性。可这却正好击中了小说的主题所在。黑塞在奔向最真实的自己，我们在观赏他最动人的尝试和最癫狂的痴语。也慢慢理解到他在小说开头写道的话，“我的故事并不令人畅怀，也不像杜撰的故事那样甜美和谐，它味如痴语、混乱、癫狂和梦幻，就像所有那些不愿再自欺欺人的生活一样”。 </p>
<p>我也不清楚结束阅读之后我还能记得什么。只是依稀记住，他文字里符号化的梦境总让我想起昆德拉<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，他小说的主题总提醒我毛姆和一小丢的加缪。但或许就像蒲公英的种子融进了风里，总有落地扎根的那天我会终于看见方向，然后在另外一本书的文字里牵引回来，留下新的注脚。这也是我能努力做到的浪漫。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline; vertical-align: top;"><a href="https://book.douban.com/subject/1017143/" target="_blank" rel="noopener">《不能承受的生命之轻》</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 哲学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[玩具气球]]></title>
      <url>http://chocoluffy.com/2018/05/12/%E7%8E%A9%E5%85%B7%E6%B0%94%E7%90%83/</url>
      <content type="html"><![CDATA[<p>回家了。</p>
<a id="more"></a>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fr8l8cgkffj30dw0dwdre.jpg" style="display: block; margin: 0 auto; border: none"></p>
<p>回家了。在家楼下的花园里散步。</p>
<p>我贪婪地四处望着。想记住家的所有模样。</p>
<p>我直觉地觉得，未来可能有一天，我会被领到一个空阔而陌生的地方，有人会提醒我，那里会是我未来几年生活的地方，他们说那是我的家，而我会不吭声地抗议，那不是。</p>
<p>一个小女孩蹦蹦跳跳地从游乐园里跑出来，她抓着一支硕大的充气宠物玩具，用力地往前方扔去，捡起，再扔去。她跑着上了桥，接着把玩具扔出去的时候刮来了一阵风，玩具落进了湖面。她在桥上的栏杆旁趴了一会儿紧紧地瞅着，突然转过身跑开了。我在原地看着，以为她去找她爸妈搬救星来把玩具捞起来。我绕着湖面走了好久，跟着玩具缓缓漂流的方向。过去了半个多小时。我忽然意识到，她，或许不会再回来了。</p>
<p>好像，也只是一个玩具气球而已。</p>
<p>又是为什么，是旁观者更心碎。</p>
<p>……</p>
<p>会不会终于有一天，我也不小心弄丢些什么东西，我会不会哭着闹着想找回来。还是说，像这样不吭声地永远分别了，留下了身后的喧嚣与躁动，还有，无尽的风。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 心情记录 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《童年的消逝》文摘]]></title>
      <url>http://chocoluffy.com/2018/04/15/%E3%80%8A%E7%AB%A5%E5%B9%B4%E7%9A%84%E6%B6%88%E9%80%9D%E3%80%8B%E6%96%87%E6%91%98/</url>
      <content type="html"><![CDATA[<p>当一种社会产物行将被淘汰时，它就变成了人们怀旧和研究的对象。</p>
<a id="more"></a>
<p>读后感全文链接：『 <a href="http://chocoluffy.com/2018/04/15/%E7%A7%91%E6%8A%80%E7%9A%84%E7%9B%B2%E7%82%B9-%E3%80%8A%E7%AB%A5%E5%B9%B4%E7%9A%84%E6%B6%88%E9%80%9D%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/">科技的盲点</a> 』，以下为阅读文摘。</p>
<hr>
<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>童年不同于婴儿期，是一种社会产物，不属于生物学的范畴。至于谁是或不是儿童，我们的基因里并不包含明确的指令。人类生存的法则也不要求对成人世界和儿童世界进行区分。事实上，如果我们把“儿童”这个词归结为意指一类特殊的人，他们的年龄在 7岁到——比如说——17岁之间，需要特殊形式的抚育和保护，并相信他们在本质上与成人不同，那么，大量的事实可以证明儿童的存在还不到 400年的历史。的确，如果我们完全用一个普通美国人对“儿童”这个词的理解，那么童年的存在不超过 150年。且举个小小的例子：庆祝孩子生日的习俗，在 18世纪的美国大多是不存在的，而且，事实上，以任何形式准确标注孩子的年龄都是一个相对新的文化习惯，不过 200年而已。再举个更重要的例子：直到 1890年，美国的中学只招收 7%的年龄在 14岁到 17岁的人。另外 93%在和许多更加年幼的儿童一起从事着成人的劳动。一些儿童更是日出而作，日落而息，这在各大城市比比皆是。</p>
<p>它们大多是通过观察传播媒介如何影响社交过程而产生的一系列推测；尤其是印刷术如何创造了童年，电子媒介又如何使之“消逝”。</p>
<h2 id="第一部分-童年的发明"><a href="#第一部分-童年的发明" class="headerlink" title="第一部分 童年的发明"></a>第一部分 童年的发明</h2><p>马歇尔·麦克卢汉曾评论说，当一种社会产物行将被淘汰时，它就变成了人们怀旧和研究的对象。</p>
<p>引发了研究童年历史的热潮。为什么发生在现在？至少我们可以说，<strong>最好的历史往往产生于一个事件完成之后，产生于一个阶段进入尾声，而另一个新的、更强劲的阶段还不可能到来的时候。</strong>历史学家通常不是来歌功颂德，而是来埋葬历史的。不管怎样，他们发现做尸体解剖要比写进度报告来得容易。</p>
<p>最伟大的雅典哲学家柏拉图（ Plato）针对这个主题写过大量作品，光是针对如何对青年进行教育的问题就提出过不少于三个不同的方案。此外，他的一些最为难忘的谈话，是探讨诸如美德和勇气是否可以被教育出来的问题。（他相信是可以的。）因此，<strong>希腊人发明了“学校”这个概念是毫无疑问的。在希腊语中，“学校”一词的意思是“闲暇”。这反映了一种典型的雅典式的信仰：他们认为闲暇时，一个文明人自然会花时间思考和学习。</strong>就连凶悍的斯巴达人，虽不像他们的邻居一样强调思考和学习，但也建立了学校。</p>
<p>每一个受过教育的人都知道，北方蛮族入侵后，罗马帝国跟着就灭亡了，传统文化被神秘化，欧洲随后陷入所谓的愚昧黑暗时代和中世纪。学校的教科书很好地论述了时代的变迁，不过有四点经常被忽略，而它们对童年的来龙去脉关系尤深。第一点是人的读写能力的消失。第二点是教育的消失。第三点是羞耻心的消失。而第四点是前三点所导致的后果，即童年的消逝。</p>
<p>因此，欧洲人回到了一种人类交流的“自然”状态，一种以谈话为主、通过歌唱来强化的状态。纵观人类的历史，那正是人类办事和创造文化的方式。</p>
<p>在《爱弥儿》（ Emile）一书中，卢梭告诉我们：“阅读是童年的祸害，因为书本教我们谈论那些我们一无所知的东西。”</p>
<p>在文字世界里，做成人意味着有机会了解用非自然符号整理和记录下来的文化秘密。在文字世界里，儿童必须变成成人。但是，在没有文字的世界里，儿童和成人之间就没有必要明确区分，因为不存在什么秘密，文化不需要提供训练就能被人理解。</p>
<p>但是，只有在一个严格区分儿童世界与成人世界，并且有表达这种区别的社会公共机构存在的文化里，这种想法才是可行的。中世纪没有这种区分，因而也没有这样的社会公共机构。</p>
<p>印刷创造了一个新的成年定义，即成年人是指有阅读能力的人；相对地便有了一个新的童年定义，即儿童是指没有阅读能力的人。</p>
<p>印刷机是让人类卷入争夺优先权和竞争国家占有权的第一个发明。”为什么出现这种现象并非偶然？她指出，<strong>因为印刷使一个人说的话和写的著作得以万世流芳，从而创造了一个崭新的和普遍的自我观念。</strong></p>
<p>究竟是谁发明了马镫、大弓纽扣，甚至眼镜，没人知道，因为个人成就的问题在中世纪几乎不受重视。其实，在印刷机发明之前，“作家”这个概念，用现代意义来衡量是根本不存在的。</p>
<p>要理解那些影响是如何跟童年的起源和成长发生关系的，我们可以用哈罗德·英尼斯（ Harold Innis）的学说作为指导。英尼斯强调说，传播技术的变化无一例外地产生了三种结果：它们改变了人的兴趣结构（人们所考虑的事情）、符号的类型（人用以思维的工具），以及社区的本质（思想起源的地方）。简单来说，每一部机器都代表着一个想法或各种各样想法的混合物。然而，它们首先并不是那种导致发明者构想出一部机器的想法。例如，我们无法知道，当时古登堡心里在想什么，使得他把葡萄压榨机跟图书制作联系了起来，但我们可以很有把握地推断，他毫无意愿扩大个人主义，或者就此削弱天主教会的权威。</p>
<p>过去的文学传统中从未有过暴露私人生活的作品，也没有个人观点得以公开表现的既定“声音”或语气，自然也没有对想象中的、其实不存在的人群讲话的习俗。</p>
<p>但自从有了印刷的书籍之后，另一种传统便开始了：孤立的读者和他自己的眼睛。口腔无须再发声音，读者及其反应跟社会环境脱离开来，读者退回到自己的心灵世界。从 16世纪至今，大多数读者对别人只有一个要求：希望他们不在旁边；若不行，则请他们保持安静。整个阅读的过程，作者和读者仿佛达成共谋，对抗社会参与和社会意识。简而言之，阅读成为反社会的行为。</p>
<p><strong>在这种环境下，人们对个性的要求变得不可抗拒。这倒不是说印刷术创造了个人主义，而是个人主义成为一种正常的、可以接受的心理条件。</strong></p>
<p>印刷给予我们自我，使我们以独特的个体来思索和谈话。而这种强化了的自我意识便是最终导致童年开花结果的种子。</p>
<blockquote>
<p>尝试模仿这个逻辑来思考互联网。印刷带来的是永恒的机会，激发了个人主义。虽然个人主义早已存在。</p>
</blockquote>
<p>“印刷的书，比其他任何设备都更能把人从此时此地的控制中解放出来……印刷品使事件变得比它本身更有影响……印刷形式的存在才是真正的存在：其余的世界往往变得更虚无缥缈。学习变成了从书本中学习……”</p>
<p>对于这个断言，马丁·路德的一番话是令人信服的最好例证。谈到印刷，他说，印刷术是“上帝最崇高、最无限的恩典。凭借它，上帝的福音事业可以广泛传播”。</p>
<p>“一个字一旦被写下来，”苏格拉底说，“它就会四处滚动，态度冷漠地来到理解它的人中间和与它绝不相关的人中间。它并不知道该给谁看，不该给谁看。”那时苏格拉底并不知道印刷，否则这个问题又会复杂百倍。</p>
<p>自从有了印刷术，未成年人必须通过学习识字、进入印刷排版的世界，才能变成成人。为了达到这个目的，他们必须接受教育。因此，欧洲文明重新创造了学校，从而使童年的概念也变成社会必需的了。</p>
<p>童年之所以能从工业化的英国的贪婪中幸存下来，原因有几个。<strong>其中之一是英国的中上层阶级使这个概念保存下来，并精心培养和扩展它。</strong></p>
<blockquote>
<p>高跟鞋在最初流行开的秘密，那是中上层阶级免除体力劳役的象征。</p>
</blockquote>
<p>另一方面，卢梭在《爱弥儿》中写道：“植物通过耕耘获得改善，而人类则是通过教育获得进步。”在此，儿童被比作一株野生植物，几乎不能靠书本学习来获得改善。它的生长是有机的和自然的；童年只要不被文明造就的、有疾患的倾泻物所窒息已是万幸。<strong>对于卢梭，教育主要是个减少的过程；而对于洛克，这是个增加的过程。</strong>但不论这两个比喻有多少区别，它们共同关心的一点都是未来。洛克寄希望于教育带来一本丰富、多样和翔实的书；卢梭则希望教育带来一朵健康的花朵。记住这一点很重要，因为在当今有关儿童的比喻中，对未来的关心越来越少了。洛克和卢梭都毫不怀疑没有成人面向未来的指导，童年依然可以存在。</p>
<p>弗洛伊德声称，首先，儿童的头脑里有一个无可否认的结构和特殊的内容，例如，儿童具有性能力，富有各种情结和本能的心理冲动。他还声称，在努力达到成熟的成年的同时，儿童必须战胜、抛弃和升华他们本能的热情。因此，弗洛伊德驳斥洛克的论调，赞同卢梭的观点：头脑不是一张空白的书写板；儿童的头脑的确最接近“自然状态”；天性的要求必须考虑在内，否则就会造成永久的人格错乱。与此同时，弗洛伊德又驳斥了卢梭的观点，赞同洛克的说法：儿童和家长之间早期的相互影响，对于决定儿童将来成为何种成人起着决定性的作用；通过理性教育，头脑的热情可以得到控制；没有压抑和升华，文明是不可能实现的。</p>
<h2 id="第二部分-童年的消逝"><a href="#第二部分-童年的消逝" class="headerlink" title="第二部分 童年的消逝"></a>第二部分 童年的消逝</h2><p>但是，到了世纪末，童年进而被看作每个人与生俱来的权利，成为一个超越社会和经济阶级的理想。不可避免地，童年开始被定义为生物学的范畴，而不是文化的产物。因此，这是个极为有趣的讽刺，因为在同一时期，使童年概念诞生的符号环境却缓慢地、不易察觉地开始瓦解。</p>
<p>而是证实了克里斯汀·尼斯纯（ Christine Nystrom）所说的技术的“无形的形而上学”。达尔文和莫尔斯之间有一个区别：<strong>达尔文为我们提供了体现在语言上的思想。他的思想明晰、可论证、可驳斥。</strong>的确，自 1860年以来，达尔文的思想在演讲厅、课堂上甚至法庭上已经被公开地辩论过了。但是，莫尔斯为我们提供的是体现在<strong>技术上的思想，也就是说，它们是隐藏的、看不见的，因此从未被论证过。从某种意义上说，莫尔斯的思想是不可辩驳的，因为没人知道电子传播隐含着什么样的思想。</strong>就像所有的传播技术一样，人们假定电报是个中性的传播工具，它没有自己的世界观，因此不存在偏袒哪一方的问题。<strong>人们会向莫尔斯提出的唯一问题是：这台机器究竟能不能用，电报能传多远，开发这项技术，花费究竟是多少。</strong></p>
<p>梭罗是把人们的注意力转向电报所带来的心理的和社会的意义，尤其是它改变信息本质的能力，即从个人的和地区性的到非个人的和全球性的。 120年之后，马歇尔·麦克卢汉试图解决梭罗提出的问题：</p>
<p>电报把信息从个人拥有转变为一个在世界范围内有价值的商品，从而创造了“新闻事业”。</p>
<p>当美国为了寻求电子的快速而普遍使用电报时，无可避免的是，<strong>信息变得比信息来源更重要。</strong>在此我们要记住一个比喻：在古代，传送坏消息的信使常常会遭到砍头的厄运。这也就是要让说话者对所说的话负责任，这是对人的个性的最崇高的赞美。有了电报，新闻就变得具体化了，常常使用“它”或“它们”，就像是“据新闻说……”或者“据它们说……”。有了电报之后，没有具体的个人需要对新闻承担责任。如同报纸一样，电报面向的是全世界，而不是某个个人。但不同于报纸，它的信息没有可以辨认的来源。</p>
<p>在电报发明之前，由于跨越空间传播信息在技术上有困难，新闻往往是有选择的，跟人们的生活密切相关，这足以说明梭罗为什么会提那个问题。有了电报之后，新闻变得没有选择、不可用，至少以梭罗这样的人的观点来看是如此。确实，只要我们稍加引申，就可以说电报有助于创造一个新的智力的定义，因为随着整个世界信息泛滥，一个人知道多少的问题要比一个人知道如何运用已知信息的问题重要得多。</p>
<p>童年，如我努力揭示的，是一种环境的结果。在这个环境中，一些专为成人控制的、特定形式的信息，通过分阶段用儿童心理能吸收的方式提供给儿童。如何维护童年的概念，则有赖于信息管理的原则和有序的学习过程。但是，电报开始争夺原来属于家庭和学校的信息控制权。电报改变了儿童所能享用的信息的种类、信息的质量和数量、信息的先后顺序以及体验信息的环境。</p>
<p>我把轮转印刷机和照相机包括在内，是想指出，电子媒介并不是导致一个新的符号世界产生的唯一因素。与电子媒介的发展相对应，丹尼尔·布尔斯廷所说的“图像革命”也在展开，一个以图画、漫画、招贴和广告构成的符号世界正在兴起。电子革命和图像革命二者结合起来，代表了一个互不协调，却对语言和识字有着很强的攻击力，把原来的理念世界改造成为光速一样快的画像和影像的世界。</p>
<p><strong>语言是经验的抽象表述，而图像则是经验的具体再现。</strong></p>
<p><strong>语言和图画是两个不同的话语世界，因为一句话总是，也首先是一个想法，也就是说是想象中的一件事。</strong></p>
<p>因此，从这个意义上说，<strong>图画和其他图像可被看作“认识上的一个倒退”［用雷金纳德·戴姆拉尔（ Reginald Damerall）的话说］，至少跟印刷文字对比是如此。印刷文字要求读者对它的“真实内容”有积极的反应。人们也许不一定总能做出评价，但是，从理论上说，只要人们有足够的知识或经历，评价是能够做到的。但是，图画要求观画者有审美的反应。图画要求我们诉诸感情，而不是理智。它们要求我们去感觉，而不是思考。</strong>这就是为什么鲁道夫·阿恩海姆在反思图像革命和预期它在电视上的大量表现时曾经警告说，它很可能对我们的头脑有催眠作用。</p>
<p>图像广告始终是削弱文字世界各种前提条件的最具摧毁性的力量。如同罗兰·巴特（ Roland Barthes）一样，他的话是暗示大批量生产的图像会向政治界和商业界引入一个长久和普遍的非理性因素。<strong>从照片到电影，最后到电视，一个候选人的“形象”变得比他的政纲更重要，一个产品的“外形”变得比它的实际用途更重要。</strong>阿恩海姆、海尔布隆纳和巴特在做出这些结论时含蓄地指出，图像革命对童年的地位起了多么巨大的作用。因为他们探讨的是，这个新兴的符号世界其实并不能支持保证童年概念存在所需要的社会和知识的等级制度。</p>
<p>那些的确学完所有符号的人需要将其毕生精力投入到这个事业。不过，这是一件值得做的事。拥有这些独特技能的结果，使他们能够积累巨大的政治和宗教的权力。当一群人拥有一般大众所不能获得的秘密时，出现这种情况一点儿也不足为奇。</p>
<p>尤其是，电视并不是演讲堂。它是一个影像展示，是象形媒介，而不是语言媒介。正因为如此，所以像《人之上升》（ The Ascent of Man）和《宇宙》（ Cosmos）这样“阳春白雪”的节目，无论他们如何努力做成好电视节目，也必须把关注的焦点放在不断变化的视觉图像上。</p>
<p>电视节目的一个镜头，其平均长度是 3到 4秒；一个商业广告镜头，其平均长度是 2到 3秒。这意味着，看电视要求观众必须在瞬间理解画面的意义，而不是延后分析解码。<strong>它要求观众去感觉，而不是去想象。</strong></p>
<p>表现在三个方面，而它们都跟电视无法区分信息使用权密切相关：</p>
<p>鉴于我所描述的这种情况，电子媒介完全不可能保留任何秘密。如果没有秘密，童年这样的东西当然也不存在了。</p>
<p>有一个问题必须优先回答：为什么电视要强行把整个文化从壁橱里全部搬出来示众？为什么人们本应在心理学家的沙发上和忏悔室里交流的话题，要恬不知耻、堂而皇之地成为公开讨论的话题？</p>
<p><strong>电视基本上是 24小时不停地播映，它的外在形式和符号形式都使它没有必要，其实也不可能将观众加以区分。它要求不断有新鲜而有趣的信息来吸引观众。因此，电视必须发掘利用文化中每一个现存的禁忌。</strong>无论这个禁忌是在谈话节目中被揭示出来的或作为肥皂剧和情景喜剧的主题，还是在商业广告中曝光的，这些都无关紧要。电视需要素材。电视需要素材的方式不同于其他媒介。电视不单是图画的媒介，它是以当下为中心的、传播速度像光速一样快的媒介。电视的偏见，因此也包括电视的职责，是传动信息，而不是收集信息。</p>
<p>如果说电视能为这些主题做些什么的话，它只能做一次，随后转向其他话题。正因如此，电视成为丹尼尔·布尔斯廷所称的“伪事件”的主要制造者。他所说的“伪事件”，是指为了公众消费而筹划的事件。</p>
<p>这种状况最明显的结果是，它排除了世俗知识的排他性，因此，也排除了儿童和成人之间一个根本的不同。从社会结构的基本原则来看，这样的结果也会发生：一个群体主要是依据其成员所拥有的特定信息来决定的。假如人人都懂得律师所了解的一切，律师就无须存在了。假如学生知道老师所知道的一切，也就无所谓老师和学生之间的差别了。的确，假如五年级的学生知道八年级的学生所了解的知识，划分年级就完全没有意义了。<strong>萧伯纳曾经说过，一切职业都是针对外行的阴谋。我们可以扩展这个说法，说任何一个群体都是针对不在这个群体里的人的“阴谋”，因为“局外人”由于这样或那样的原因，无法获得“局内人”所拥有的信息。</strong></p>
<p>当然，并不是所有的角色差别或群体认同都依赖于信息的获取。</p>
<p>中世纪时没有童年，因为让成人单独知道某些信息的手段并不存在。在古登堡的时代，这种手段被开发出来了。在电视时代，它又消失了。</p>
<p>我们经常处在被原始的冲动所控制的危险中，包括暴力、兽欲、本能和自我。羞耻是野蛮行为得以控制的机制，如切斯特顿所认为，它的主要力量来自于围绕着各种行为的神秘感和敬畏感。这些行为包括思想和语言，由于常常被隐蔽在公众视线之外，它们变得非常神秘和令人畏惧。由于隐蔽，它们变得神秘；<strong>由于神秘，我们可以管理它们。</strong></p>
<p>然而，我要宣称，在一个不能保存秘密的社会里，羞耻不能作为社会控制和角色分辨的手段，因而不会产生任何影响。</p>
<p>如果我们把保密的手段剥夺了，那么我们也被剥夺了秘密。类似地，当维护乱伦、暴力、同性恋和精神病这些秘密的手段消失了，当这些秘密的细节变成公共话语的内容，可供在公共领域里的每一个人检查，那么对这些问题的羞耻感也会随之消失。<strong>曾经是可耻的事情现在变成了一个“社会问题”“政治问题”或“心理现象”。但在这个过程中，它一定会失去其阴暗和难以捉摸的性质，同时也会失去一些道德力量。</strong></p>
<p>不同的文化有不同的禁忌，在一种文化中被认为可耻的，在另一种文化中则不以为然。我们完全有理由希望，可耻的行为通过媒体公开揭露，然后使之合理化，从而转化为“社会问题”或者“另一种生活方式”。</p>
<p>人们必须勇敢地面对这样的现实。因为，如果成人没有阴暗和捉摸不定的谜需要瞒住儿童，然后以他们认为必需的、安全的和合适的方式向他们揭示，那么成人和儿童之间的界限一定会淡薄至危险的地步。换句话说，这是浮士德把灵魂出卖给恶魔式的交易。</p>
<p>在如今的政体中，唯一抓住了这个要害的、较有影响的群体是以“道德多数派”著称的无知的运动。正是通过他们的呼吁，这样一个问题被提了出来：<strong>坦率和真诚的代价究竟是什么？</strong></p>
<p>从定义上看，成年意味着谜解开了，秘密揭示出来了。如果从一开始儿童就了解各种各样的谜和秘密，我们又如何把他们跟成人区分开来呢？</p>
<p>这主要是因为识字文化既要求，也促进了高层次的自我控制和延迟的满足感。</p>
<p>社会礼仪要求在成人和儿童的符号世界之间保持公开的区别，这样的习俗在中世纪是闻所未闻的，但它所代表的是一个令人非常愉快的社会想象。从成人方面来看，对语言的约束反映了一个社会理想，即试图保护儿童不受粗俗、肮脏或愤世嫉俗态度的影响，因为这些态度往往隐含在污秽和残酷的语言里。从儿童方面来看，这种约束反映了他们理解自己在社会等级中的位置，尤其是理解他们还没有权利公开表达那些态度。</p>
<p>但好奇大半发生在儿童世界，和成人世界是分离的，儿童必须通过提问寻求进入成人的世界。由于媒介将两个世界合二为一，保持秘密所产生的张力在谜底被揭开时势必减弱，所以好奇的演算方法也随之发生了变化。好奇被愤世嫉俗——或者更糟——被狂妄自大所取代。于是，我们的孩子不能依靠有权威的成人，而是依赖不知从哪里来的新闻来获取知识。我们的孩子还没有提问，就被给予一大堆的答案。简言之，我们身边没有儿童了。</p>
<p>虽然电视有时候会警告家长“下面的节目包含成人内容……”，但这样做只会保证更多的而不是更少的儿童会观看。</p>
<p>我清楚地知道，“虚伪”这个词有时被用来形容公共知识和隐秘知识受到严格区分的情形。但是，从善意的一面来看，虚伪毕竟代表着某种社会理想主义。比如，拿儿童来说，保密是为了保证儿童健康有序地成长。童年的概念，理想化地来想，如果没有某种程度的虚伪是不可能存在的。我们拿暴力来说吧。</p>
<p>在《童话的用处》中所展示的，童话的重要意义在于，童话故事能够以儿童容易接受的方式揭露现实生活中存在的邪恶，并且融会贯通，使儿童不受创伤。</p>
<p>孩子知道别人所知道的一切，好的、坏的，兼收并蓄。没有什么是神秘的，没有什么是令人敬畏的，没有什么是不能在大庭广众之下展示的。</p>
<p>电视新闻节目的兴奋主要是靠速度的作用，而不是实质的内容。它是以信息流通来制造兴奋，而不是新闻本身的意义。</p>
<p>这些人只是根据他们的发现而使用电视这个资源而已，他们的动机不存在比观看者更好或更坏的问题。<strong>诚然，他们剥削电视的资源，可那是这种媒介本身的特点造就了成人化的儿童，而不是媒介使用者的特点所决定的。</strong>这是一个需要弄明白的重要问题。否则我们就可能盲目相信通过“改进”电视节目，成年有可能被保存下来。</p>
<p>表示在不久的将来， 12岁的选手会成为网球比赛的中心人物。不过，就这方面而言，网球落后于其他运动。具有世界级能力的 12岁的游泳选手、滑冰选手和体操选手不足为奇。为什么会出现这种情况？最显而易见的答案是，较好的教练和训练技巧使儿童能够达到成人水平的能力。可是，问题依然存在：成人为什么要鼓励这种做法？为什么成人要剥夺儿童自由自在、不拘礼节以及自发游戏的欢乐？为什么要儿童经受职业训练、集训、紧张和媒体大肆宣传所带来的种种辛苦？答案跟前面一模一样：<strong>传统上有关儿童的独特性的假定正在迅速消亡。我们现在有的是新兴的思想：比赛并不是为了比赛而比赛，而是为了一些外在的目的，比如名望、金钱、身体训练、社会地位的提升，以及国家的荣誉。对于成年人，比赛是件很严肃的事情。伴随着童年的消逝，儿童眼里的游戏也随之消逝。</strong></p>
<p>许多教育者情愿接受连马克思也会坚决摒弃的观点：教育是为了进入市场而做准备。假如情况的确如此，那么，成人受过教育的标志，比如历史、文学和艺术知识等，它们的重要性就大大降低了。此外，所谓学校教育对一个人未来的收入有着重要的意义，这个说法并不像许多人想象的那么站得住脚。因此，我们整个教育结构的大厦布满了危险的裂缝，而且那些干脆想拆毁这个结构的人也完全不是接受了错误的消息。其实，他们的提议有些多余。由于童年消逝了，学校也一定会消逝。</p>
<p>“第三次伟大实验”始于 20世纪初，提出了这样一个问题：一个文化如果允许现代科技全面主宰它的命运，那么它能保留原有的人道价值，同时创造新的价值吗？奥尔德斯·赫胥黎[ 2]和乔治·奥威尔[ 3]已经给出了他们的答案，那就是：“不能。”</p>
<p>说一句与宗教极端主义立场不谋而合的话，会使你遭到谴责，说你放弃了自由主义的传统。</p>
<p>唯一具备这种能力的技术是电脑。为了设计电脑编程，人们基本上必须学习一种语言。这意味着人们必须掌握复杂的分析技能，类似于一个完全有文化的人需要具备的技能。这就要求进行特殊的训练。如果人人都需要了解电脑如何运作，如何将它们的世界观强加于我们，如何改变我们对判断的定义，也就是说，如果一个全球性的电脑文化被视为必需，那么，可以想见，年轻人的教育会变得非常重要，年轻人的文化必须与成人文化不同的想法也会被保存下来。</p>
<blockquote>
<p>某种意义上我们需要一个学习成本高的媒介。可是技术的发展意味着成本只会越来越低。</p>
</blockquote>
<p>不消说，到了一定的时候，当所有的教师和行政人员自己都成了电视时代的产物时，无论抵制曾是多么有力，这时候抵制不仅会失去它的力量，而且抵制的意义将会被遗忘。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 书摘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[科技的盲点 -《童年的消逝》读后感]]></title>
      <url>http://chocoluffy.com/2018/04/15/%E7%A7%91%E6%8A%80%E7%9A%84%E7%9B%B2%E7%82%B9-%E3%80%8A%E7%AB%A5%E5%B9%B4%E7%9A%84%E6%B6%88%E9%80%9D%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>童年是一个被精心呵护着的秘密，童年也是用于区分信息阶级的社会概念。信息传播的媒介会深刻而隐秘地影响着使用者的思维，从口耳相传，到印刷，再到电视的图像革命，愈加扁平的结构也意味着信息使用权的难以区分。没有了羞耻感，也就没有了秘密。很多时候维护这种秘密会被称为虚伪。但从善意的角度来看，虚伪也代表着某种理想主义。</p>
<p>受影响的儿童是不知觉的，他们过早地失去了游戏而被卷入了成人严肃的比赛里。他们觉得他们是舞台上最闪耀的一颗，却说不清他们为什么必须站在万千宠爱的镁光灯里，又为什么只能笑。</p>
<a id="more"></a>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fqea1y6bdfj30ot0ov7va.jpg" style="display: block; margin: 0 auto; border: none"></p>
<p>看尼尔波兹曼也是部分因为来自<a href="https://blog.yitianshijie.net/2016/11/13/shiver-in-front-of-neil-postman/" target="_blank" rel="noopener">一天世界</a>的启发。我一直深信着新科技技术改变世界的力量，包括从很小的时候的个性签名都会提到“技术就是信仰”。但慢慢地我意识到新事物出现所带来的盲点，人们在大多数时候对新技术是无法选择的。资本从来不会拒绝创造出新财富的便捷方式，而能够创造价值仅此一点，掩盖了太多基于其成本和弊端的讨论空间。</p>
<p>我很欣赏谷歌一直坚持的理念：不作恶（Don’t be evil）。也看得见很多企业开始仿照着创建出自己的信条戒律，这个可以做一点那个不能做。但无论如何，在具体讨论该怎么做之前，我想先仔细思考下什么是恶（evil），哪些是被没有说全的话（the inconvenient truth）。</p>
<p>当除去人为主导的可预测的劣行，我们很少去批判一个媒介工具本身的发明。而科技不是语言，没有可供驳斥的表述与逻辑。“恶”其实也可以是一种倾向，是工具本身隐含着的影响着使用者的倾向。在这里讨论技术的中立性是一个复杂的选题，我借着阅读这本书，也想了解下分析科技发明的社会影响的思路。</p>
<p>互联网，在某种意义上成为了现代人的电视。我们发明新型的硬件，大数据技术来电子化纪录人类行为数据，也相似着曾经带给中世纪人们永恒机会的印刷术。这一切还保留着相似的语境。</p>
<h2 id="第一章-童年的发明"><a href="#第一章-童年的发明" class="headerlink" title="第一章 童年的发明"></a>第一章 童年的发明</h2><p>• 童年是一个社会概念。文明的愈加复杂，近几百年才出现，对儿童的早期时间有所保留的需求。成人世界的纷争和利益，以及某些秘密暴露给儿童是被认为不合礼仪的，甚至是不道德的。</p>
<p>如果把道德上成人对儿童的保护需求当做动机，那么现在是什么现象会导致这种需求逐渐消失呢。某种程度上，礼仪（道德）的精致程度是和文明的复杂程度相关的，而文明的初级阶段当对生命的基本物质保障都不存在的时候，是很难承担礼仪（道德）的。那为什么在文明进一步发展的今天，作为一项礼仪（道德）概念之一的童年，会消逝？是其重要性的消逝，还是其作为一个现象的消逝呢？</p>
<p>• 印刷的普及间接促成了童年的分界，成人是拥有阅读能力的人，而儿童是不具备阅读能力的人。<br>因为技术工具元素导致的一个社会概念的产生。如果印刷术代表着文字阶级的在人数上的流行，为什么在当前资讯也就是文字愈加丰富的今天，会导致同样一个社会概念的消逝。</p>
<p>• 尝试模仿分析印刷的这个角度来分析互联网。印刷带来了得以永恒的机会，激发了个人主义。个人主义早已存在。印刷实际上是一种媒介的转变，从口耳相传的暂时性的表达传递，到能够独自体察的实体媒介。这种媒介的特质之一就是允许使用者独自面对。并不是说印刷创造了个人主义，而是印刷使得个人主义成为一种正常的，可以接受的心理条件。</p>
<p>• 童年是一种区分的手段。来区别识字和不识字的人。</p>
<p>• 童年也是中上层阶级想要努力维护的一个概念，以保证不受劳役之苦，这让我想到了高跟鞋流行的原因。</p>
<h2 id="第二章-童年的消逝"><a href="#第二章-童年的消逝" class="headerlink" title="第二章 童年的消逝"></a>第二章 童年的消逝</h2><p>• 与其说是在讨论童年的消逝，其实是在讨论媒介传播对使用者的影响。</p>
<p>• 处处是对互联网的隐喻。当跨越空间传播信息在技术上又困难的时候，新闻往往是有选择的，跟人们的生活密切相关。有了互联网之后，新闻变得没有选择，不可用。</p>
<p>-&gt; 因为童年是一个精心维持的文化过渡环境，这个过程有赖于信息的有序筛选和输入。这一个论证方式可以用在其他的文化环境上，比如学校教育。</p>
<p>• 图像革命。语言是经验的抽象表述，而图像则是经验的具体再现，而且这种表现是不可反驳的 。这是两个不同的话语世界。</p>
<p>• 审美。说到底是一种感情而不是理智。图画要求观画者有审美的反应。而感情，是难以分逻辑和缜密阶级的。童年是因为缜密逻辑的分层所需要做出的区别，而图像世界并不能支持保证童年概念存在所需要的社会和知识的等级制度。［审美是不硬性要求逻辑的］举个例子，法律、宪法是纸张上的法律，不会出现根据一幅图画来判罚。</p>
<p>• 电视会侵犯童年，是因为它无法区分信息使用权。</p>
<p>-&gt; the world is flat的弊端。不存在阶级，去中心化有什么坏处呢？有没有发现在竞争的环境下，终点是成就一个庞大的能够抵达任何终端的垄断组织。在把信息使用权让渡给人的时候，而人还没有能力和意识能够承担起这份礼物的时候，混乱就出现了。在人还不懂得克制与好奇之前就拥有了的自由，只会受成为情欲和审美冲动支配。<br>而本身教育的存在就是一个信息过滤和中心化的媒介。你拥有导师根据他们的经验和社会的俗成见解过滤和形成抵达学生的文化环境。而现在互联网、终端设备的普及将极大地打破很多精心营造的社会环境。<br>-&gt; 信息的不加选择和不分层级却必须保证面向所有观众的一个直接后果是，信息的调性由市场的底部水平所确定。<br>…<br>-&gt; 而我们最终会拒绝分级却更有效率的社交网络的原因，或许是尊严。</p>
<p>［由于电视在同一时间向所有观看的人传递的是同样的信息，因此完全不可能保留任何秘密，童年因此不复存在］</p>
<p>• 社交媒体的偏见，也是其职责之一，是传动信息，而不是收集信息。它要求能够吸引注意力的素材，因此突破刮搜各类生活中的禁忌和盲点，放大情绪和窥视自然成为了最好的随从。</p>
<p>• 羞耻感和秘密，隐秘是相关联的。</p>
<p>我们很多时候能够克制住自己的欲望，暴力，部分是因为羞耻感。因为我们所羞耻的对象是隐秘的，在处在黑暗之下的。而当这种对象被要求维持在白天的常态的时候，随之的羞耻感也会消失。譬如丛林里的文化从来不觉得裸体是任何的失态。而从前的电视，现在的互联网，所主导的正是将一切容易挑逗的，怂恿的，曾经被我们束之高阁，揶揄着不敢公开讨论的内容大白于天下。审美，情感主导的行为容易导致个人主义的泛滥，容易使人狭隘，因为个人的情感不接受反驳而显得足够支撑起行为的逻辑。而个人主义泛滥的地方，羞耻感很难存在，因为一切的从前令人揶揄的理由现在都被当做了个人主义口中的保守和传统。<br>-&gt; 曾经我们仔细押守的暴力，色情，乱伦，以各种形态出现在公共场合的每一个人的语境里，而这些人对这些问题的羞耻感也会随之消失。会不会有利益相关着在黑暗的边缘刺绣？当这些可耻的问题失去了其阴暗的特质，会不会有口齿伶俐的人为了注意力而颠倒黑白，口若悬河？最可怕的是，那些仍旧坚持打击黑暗的勇士，被认为失去了一些道德的力量。</p>
<p>• 未来分阶级的主要原因或许不再是垄断抑或同谋，而是因为存在于扁平化结构里的事实：不是所有人都有能力，能够理解他们所处在的位置和他们手中的权力。但同时引导他们的方式不应当是强制拒绝给予他们改变的机会和手段，能够动态地因材施教将会成为一致的道德诉求。而成就所谓“动态”的背后一个前提则是”接近全面的了解“，如果这种结构需要持续存在，则必然存在着足以敌对人性弱点的绝对智慧的存在，同时也要求人们的绝对顺从。流动性高的阶级结构或许是充满活力的一种方案。</p>
<p>-&gt; 而这也暗示着某种专制控制。无论在专制的世界里我们被给予了多少的“公平”与“自由”，我们最终会拒绝的原因，或许也是尊严。（类似上文的分阶级的社交网络）</p>
<p>• 维护这种秘密在很多时候被称为虚伪。但从善意的角度来看，虚伪也代表着某种理想主义。</p>
<p>• 尼尔波兹曼相信，是电视这种媒介而不是电视里播放的内容，使得童年消逝。电视这种媒介推崇着故事化，戏剧化，而不是观看者的需求。这一点也是很有意思的，科技工具的发明，人们往往提问着怎么样用的一系列问题，我怎样搜素到一些东西，我怎样下载下来。而很少考虑我用这个工具会失去什么？</p>
<p>• 童年消逝的另一个证据是，会有越来越多的儿童经受专业训练出现在成人的职业竞赛里。包括儿童明星，运动员，模特等等。比较好理解的是，因为存在着一套完善的培育体系和教练监督，但是依然存在的问题是：为什么这种做法会渐渐普遍，为什么这样的形象甚至值得鼓励。</p>
<p>-&gt; 传统上有关儿童的独特性的假设正在迅速消亡。除去比赛的乐趣之外混杂了太多无相关却极其压迫的情感，比如名望，金钱，阶级的提升，攀比。于是儿童眼里的游戏也变得成人般的严肃而非赢不可。 他们觉得他们是舞台上最闪耀的一颗，却说不清他们为什么在镜头下除了摆笑和热泪就做不了什么，却说不清为什么必须站在万千宠爱的镁光灯里，又为什么只能笑。</p>
<p>• 童年消逝了，学校也一定会消逝。它们都是精心创造出来，用于过渡到成人世界的概念。证据：越来越多的教育者开始相信，教育是给进入市场做准备的。这意味着诸如历史、文学和艺术的重要性会被不断降低。教育本身的教化和领悟的过程会不断妥协。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 书摘 </tag>
            
            <tag> 科技 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[轻与重]]></title>
      <url>http://chocoluffy.com/2018/03/19/%E8%BD%BB%E4%B8%8E%E9%87%8D/</url>
      <content type="html"><![CDATA[<p>世界是堆叠在积木上的。</p>
<a id="more"></a>
<p>后代人继续建造的方式是，越过了深不见底的基层，而在口耳相传里坐着升降机来到了他们现在的位置。或许前人纠结一生的沉重在他们那些观光者看来无非是顺其自然的轻松。</p>
<p>他们将以他们的姿态种下往下生长的根。去揣测那些看不见的浩瀚暗格，螺旋的琉璃夹层……</p>
<p>而有谁愿意继承记忆的遗产呢。来抵御生命不可承受之轻。</p>
<p>欲戴皇冠，必承其重。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 诗 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《华氏451》文摘]]></title>
      <url>http://chocoluffy.com/2018/03/16/%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E6%96%87%E6%91%98/</url>
      <content type="html"><![CDATA[<p>书名很有意思，华氏451，是纸张燃烧的温度。小说主题和乌托邦三部曲有相似之处，当人们逐渐失去了感触真实生活的敏感，失去了闲暇思考的时间，消防员的职责变为燃尽书籍来减轻人们的忧郁和恐惧。书的隐喻是什么，焚书的意义和我们熟识的历史情景有什么不同，而仅仅是消费主义最终又将带领我们走向怎样的结局……</p>
<a id="more"></a>
<p>始终觉得，科幻的作品里有着不可剥离的现实，天马行空的想象只是构建冲突，放大冲突的一种实现手段。文字里身着火蜥蜴消防服喷溅出炽热火舌的人，在真实世界里或许乔装栖身在另一个人群，手里拿着火柴在黑暗里摩拳擦掌。也总会有那么一群人，无谓时代，在消费主义窒息的麻木感中恍然醒来，想起雨的冰凉，蒲公英轻拭下巴的涵义，会想要记住所有目力所及的美好哪怕回忆如沙漏。</p>
<p>这或许就是布拉德伯里想写的故事。不同于《1984》里穿插大片政治论述的严谨有力，不同于许多乌托邦构想里阴郁森冷的气氛，作者用散文诗化的文字，记录一个人挣扎醒悟的温暖。每个人都有着悲剧轮回的身世，但总有那么几个偶然的时刻，我们得以回望身后火热的地狱。而希望是，就像当我终于赤脚走在冰冷的通往光明的铁轨上，我突然那么的相信，你也走过一样的路。</p>
<p>想起莎拉贝克韦尔在《存在主义咖啡馆》里最后一章的描述，那是“无法估量的繁盛”。</p>
<p>读后感全文链接：『 <a href="http://chocoluffy.com/2018/03/16/%E6%97%A0%E6%B3%95%E4%BC%B0%E9%87%8F%E7%9A%84%E7%B9%81%E7%9B%9B-%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/">无法估量的繁盛</a> 』，以下为阅读文摘。</p>
<hr>
<p>如果他们给了你画好线的纸，不要按着线写。 ——胡安·拉蒙·希门尼斯</p>
<h2 id="第一章-炉灶与火蜥蜴"><a href="#第一章-炉灶与火蜥蜴" class="headerlink" title="第一章 炉灶与火蜥蜴"></a>第一章 炉灶与火蜥蜴</h2><p>焚烧是一种快感。看着东西被吞噬、烧焦、变样，是一种特殊的快感。</p>
<p>“有时候我觉得，开车的人不知道什么是草、什么是花，因为他们从来没有慢慢地瞧过它们，”她说。“如果你让驾驶人看一团模糊的绿色东西，他会说，哦，对，那是草！给他看一团粉红色的模糊东西，那是玫瑰花园！白色的模糊东西是房子。褐色的是牛。有次我舅舅在公路上慢慢开车，时速四十英里，结果他们把他关了两天。这岂不好笑又可悲吗？”</p>
<p>他不快乐。他跟自己说。他承认这是实情。他拿快乐当作面具戴着，而那女孩却夺下面具奔过草坪跑开了，而且自己没法子敲她家的门，索回面具。</p>
<p>他感到群星正被黑色喷射机的巨响震得粉碎，明早大地将覆盖着星星的陨尘，就像一种奇异的雪。这就是他这么站在黑暗中发着抖，任双唇不停地蠕动、蠕动之际，脑中的白痴念头。</p>
<p>而其他房舍俱孤僻地隐藏在黑暗中，蒙塔格听到人声聊着、聊着、聊着，给予、编织、再编织着他们令人迷醉的网。</p>
<p>“有的时候两遍。”她望着她手中的一样东西。“你手里拿着什么？”他说。“我想大概是今年的最后一朵蒲公英。没想到这个时节还会在草坪上找到一朵。你有没有听说过拿它揉搓下巴的传说？瞧。”她笑着拿那朵花揉搓自己的下巴。“怎么说？” <strong>“如果它的颜色搓掉了，那就表示我在恋爱。有没有？”</strong></p>
<p>“他们想知道我怎么打发时间。我告诉他们，有时候我就那么坐着思考。可是我不告诉他们思考些什么，我让他们瞎猜。有时候，我告诉他们，我喜欢仰起头，就像这样，让雨水落在嘴里。它的味道就像酒。你有没有试过？”</p>
<p>一半挺立，两半彼此倾轧。“你还是赶紧去就诊吧。”他说。她跑开了，留下他站在雨中。过了许久，他才移动。 <strong>而后，走在雨中，他慢吞吞仰起头，有那么一下子，张开他的嘴……</strong></p>
<p>“哦，学校并不想念我，”她说，“他们说我是反社会者。我不合群。真奇怪。我其实很喜欢与人交往。这要看各人对交往两个字所下的定义了，是不？我觉得交往的意思就是跟你聊这些事。”她摇晃着一些从前院树上掉落的栗子，嘎嘎作响。“或是谈谈这世界有多奇怪。群处是很好，但是我不认为把一群人找到一块儿却不让他们交谈就是交往，你觉得呢？一小时电视课，一小时篮球或棒球或跑步，再一个小时抄写历史或是绘画，然后又上体育课，可是你知道吗，我们从来不发问，起码多数学生不发问；他们干脆把答案放映给你看，我们就坐在那儿再听上四个小时电影老师的讲课。我觉得这根本不是交往。这是一大堆漏勺，然后把大量的水从勺口倒入，从底部流出，而他们告诉我们这是酒，可它明明不是酒。一天下来，他们把我们弄得精疲力竭，只能上床睡觉，或是去游乐园欺负别人，拿着大网球到砸窗区砸碎玻璃，到砸车区砸烂汽车；或者开车上街狂飙，试试看能够开得多贴近灯柱，逞强好勇。我想我就跟他们说的一样，没错。我没有一个朋友。这应该证明我是不正常的。可是我认识的人个个不是狂嘶乱舞，就是互殴。你有没有注意到人们如今是怎么彼此相残的？”</p>
<p>有时候我在地铁上偷听别人谈话，或是在冷饮店偷听，结果你知道什么吗？”“什么？”“人们什么也不谈。”“哦，一定会谈吧！” <strong>“不，什么也不谈。他们多半举出许多汽车、衣服或游泳池的名字，然后说真棒！但是他们说的话全都一模一样，众口一致。还有在室内，他们多半时间打开笑话机，那些笑话多数一模一样，或者扭亮音乐墙，五彩缤纷的图案上下变幻，但它只是些颜色，而且全是抽象的。还有在博物馆，你有没有去过？全是抽象的展示品。如今只有这些东西了。我舅舅说以前不是这样。古早以前，绘画有时候会说故事，或甚至画人。”</strong></p>
<p>我的意思是，”他说，“从前，房屋还不是完全防火之前……”突然间，似乎有一个比他年轻许多的声音在替他说话。他张开嘴，但说话的却是克拉莉丝·麦克莱伦：“消防员救火，而不是放火的，不是吗？”</p>
<p>书籍轰击他的肩膀、胳膊、他上仰的脸孔。一本书，几乎是驯从地，像一只白鸽扑着双翼，停栖在他手中。摇曳的幽暗光线中，一张书页摊开，就像雪白的羽毛，字句精细地印在上面。匆忙和狂热中，蒙塔格只有瞬间空当看了一行字，但是那句话却在他脑中灼烧了一分钟，就仿佛被火烫的钢烙印在他的脑海里。“时间在午后的阳光下睡着了。”他扔下那本书。立刻，另一本书掉入他怀中。</p>
<p>“今天，蒙上帝的恩宠，我们将在英格兰点燃这样一支蜡烛，一支我相信永不会被吹熄的蜡烛。”比提说。斯通曼望向队长，蒙塔格亦然，骇愕。比提揉搓他的下巴。“这段话是一个姓拉提摩的人对一个名叫尼古拉斯·里德利的人说的。那是在一五五五年十月十六日，他们因异端邪说的罪名，在牛津即将被活活烧死。”[ 4]</p>
<p>他还记得当时自己心想，要是她死了，他肯定不会哭。因为死的是一个不认识的陌生人，一个报纸上的人物， <strong>然而他居然哭了起来，这一点突然显得那么的荒谬，他不是为死而哭，而是因为想到自己面对死亡居然不会哭</strong> ，一个愚昧空虚的男人陪着一个愚昧空虚的女人，而那条饥渴的蛇正使她更加空虚。</p>
<p>比提细瞧他吐出的烟雾图像。“想象一下。十九世纪的人，骑马，遛狗，驾马车，一切是慢动作。接着，到了二十世纪，摄影机的速度加快。书的内容缩水了，浓缩本，简明版。文少图多的小报。所有东西都缩简得只剩下插科打诨，仓促结局。”“仓促结局。”米尔德里德点头应道。“经典作品删简，好配合十五分钟的收音机节目，然后再删简，好填塞两分钟的书评节目，到最后只剩下十来行的词典式摘要。当然，我言过其实了。词典是参考用的。但是许多人对《哈姆雷特》的认识——你必定知道这个书名，蒙塔格；你大概只是略有耳闻，蒙塔格太太——如我所说，他们对《哈姆雷特》的认识只是某一本书中的一页简介，这本书上称：这下子你终于可以读到所有经典作品；赶上你的邻居了。你明白吧？从幼儿园进步到大学程度，然后又回到幼儿园；这就是过去这起码五世纪以来的知识模式。”</p>
<p>“ <strong>拉链取代了纽扣</strong> ，人们清早更衣的时候，就缺少那么一点儿思考的时间，一段哲思的时刻，然而也是忧郁的时刻。”米尔德里德说，“起来一下。”“走开。”蒙塔格说。“ <strong>生命成了一场洋相</strong> ，蒙塔格；一切都是砰，哈，噢！”</p>
<p>市场越大，蒙塔格，要处理的争议就越少，记住这一点！所有少数的少数的少数族群各有各的问题要解决。满脑子邪恶思想的作家们，关上打字机！他们真的这么做了。杂志成了一碗香草杂烩，书成了洗碗机——这是那些自以为是的书评家们说的。难怪书卖不出去了，书评家们说。但是大众知道自己要的是什么，他们欣然随波逐流，让漫画书存活下去。当然还有立体色情杂志。就是这么回事，蒙塔格。 <strong>这并不是政府规定的。没有所谓的正式公告、宣布，也没什么检查制度，没有！科技，大量剥削，还有少数族群的压力，才是始作俑者。</strong> 如今，多亏这些东西，人可以时时刻刻保持快快乐乐，可以看漫画书，也可以看商业期刊。”</p>
<p>“啊，”烟斗的轻烟中，贝蒂倾身向前。“还有什么比这更容易解释又必然的事？ <strong>学校教出越来越多的赛跑选手、跳高选手、飙车手、补锅匠、投机取巧者和游泳选手，而不是检察官、评论家、万事通和创造者，那么，‘知识分子’这个名词当然就必然成了骂人的字眼。人总是害怕不熟悉的事物。你想必还记得当年你们班上特别‘聪明’的同学，背书、答问题多半由他包办，其他同学就像一尊尊笨神像似的呆坐着，暗恨他。下了课，你们不是专找这个聪明同学碴儿，揍他，折磨他吗？当然是，大家都得一模一样才行。人人并不是生而自由平等，并不像宪法上说的那样，人人是被造成平等的。人人都是彼此的镜子；这样才会皆大欢喜，因为这样一来就没有见高山而渺小的感觉，无从怯懦、无从评断自我了。所以！隔壁人家有书，就等于有一把装满子弹的枪。烧了它。拿走弹药，瓦解人的智慧。天知道谁会是满腹经纶之人的目标？我？我一刻也不会容忍这种人。所以，等到房屋终于全部防火之后（你昨晚的推测是对的），全世界都不再需要消防员做他们原先做的工作了。他们换了新的任务，保护我们的心灵平静，免除我们对于身为劣等人的可理解而合理的恐惧。他们成了官方检察员、法官和执行者。这就是你，蒙塔格，也就是我。</strong> ”</p>
<p>“有色人种不喜欢《小黑桑波的故事》[ 7]，烧了它。白人对《汤姆叔叔的小屋》没好感，有人写了一本有关香烟与肺癌的书，吸烟的人哭了，烧了它。安宁，蒙塔格。平和，蒙塔格。到外头去争斗，最好在焚化炉里头争斗。葬礼是不快乐的，异端的仪式？除掉它。人死了才五分钟，就给送往‘大烟囱’焚化场，全国的直升机都做这项服务。人死后十分钟就成了一堆焦灰。我们别絮叨个人的成就，别理会它，烧掉一切。火是光明的，火是洁净的。”</p>
<p>“幸好，像她这样的异类并不常见。我们懂得如何在他们萌芽之初就钳掉它。盖房子不能没有钉子和木板。要是你不希望房子盖起来，那就藏起钉子和木板。要是你不希望某个人在政治上有所不满，那就别让他看见问题的两面，穷操心；只让他看见单面。最好是一面也别给他瞧见，让他忘记有战争这玩意。就算政府没效率，机构臃肿，疯狂课税，但宁可如此也别让人们为它操心。安心点，蒙塔格。 <strong>让人们比赛谁记得最多流行歌曲的歌词，或是州首府的名字，或是衣阿华州去年出产了多少玉米。给他们填满不易燃的信息，拿‘事实’喂饱他们，让他们觉得胃胀，但绝对是信息专家。这么一来，他们就会觉得自己在思考，明明停滞着却有一种动感，他们就会快乐，因为这类事实不会变化。别给他们哲学、社会学这类狡猾易变的玩意，往那方面思考就会忧郁。</strong></p>
<p>这年头，能把电视墙拆了又装合的人——多数人都有这本事——要比那些试图分析、探讨、抗衡宇宙的人快乐，想要探讨、抗衡宇宙，必会让人自觉兽性而寂寞。我知道，我试过；去它的。所以啊，尽管上夜总会，参加派对，看杂耍变魔术，鼓起你的莽勇，玩喷射汽车、直升机，纵情性欲和海洛因，只要能激发直觉反射的东西都行。要是戏不好看，电影空洞无物，那就用电子琴大声刺激我。就算它其实只是对振动的一种触觉反应，我也会认为自己是对那出戏有所反应。我不在乎。我就喜欢具体的娱乐。”</p>
<p>对街不远处，矗立着别的屋子和它们平扁单调的正立面。克拉莉丝有天下午是怎么说的来着？“没有前廊。我舅舅说，以前住屋都有前廊。到了晚上，人们有时候坐在廊台上，想聊天就聊天，摇着摇椅，不想说话就不说。有时候他们就这么坐在前廊上，想事情，思索问题。我舅舅说，建筑师说拆掉前廊是因为前廊不美观。但是我舅舅说，这种解说只是为自圆其说；真正潜藏的原因，可能是他们不希望人们那样坐在廊上，什么也不做，只摇着椅子，聊天；这是不正确的社交生活。人们话说得太多，而且有闲暇思考，所以他们就拆掉前廊，还有花园。如今没有几座花园可以闲坐了。还有，看看现在的家具，也没有摇椅了，摇椅太舒适。让人们打起劲儿来穷忙。我舅舅说……我舅舅……还有……我舅舅……”她的声音渐渐消失。</p>
<h2 id="第二章-筛子与沙子"><a href="#第二章-筛子与沙子" class="headerlink" title="第二章 筛子与沙子"></a>第二章 筛子与沙子</h2><p>他们看了一下午的书，外头，十一月的寒雨自天际绵绵落在寂静的屋顶上。他俩坐在玄关内，因为电视间里少了墙上橘红艳黄的彩纸和烟火，没有穿着金色丝网的女人和一身黑绒西装的男人从银色高帽里掏出一百磅重的兔子，显得空荡而灰暗。</p>
<p><strong>“我们无法确切指出友谊形成的时间。正如注水入瓶，一滴一滴注入，最后必有一滴会使它满溢；同样的，一连串的善意，最后总有那么一次会使心灵满溢。”</strong></p>
<p>他双手停在膝盖上，麻木无用。“我不谈事情，先生，”费伯说，“我谈事情的意义。我坐在这儿，知道自己活着。”</p>
<p>他可以听到比提的声音。“坐下，蒙塔格。看着。它纤弱得就像花瓣似的，点燃第一页，点燃第二页。每一页都变成一只黑蝴蝶。美吧，嗯？从第二页再点燃第三页，一页一页，一章一章，把那些字句的所有无聊的意涵，所有虚假的希望，所有二手观念和老掉牙的哲学，烧成一连串的灰烟。”比提就那么坐着，微微冒着汗，地板上散落着一堆堆死于一场风暴中的焦黑飞蛾。</p>
<p>他在地铁上。我没有知觉，他心想。我脸上，我体内的麻木究竟是几时开始的？打从我在黑暗中踢到药瓶子，就像踢中一块深埋的矿脉似的，那个晚上。</p>
<p>笔记 - 位置 870<br>就像一切故事的开始总有一个声音，那是踢到黑色瓶子的那个。</p>
<p>童年时期，一个亮蓝炙热的夏日里，他曾经坐在海边一座灰黄的沙丘上，拼命想把一个筛子装满沙子，因为有个刻薄的表哥说：“把这筛子装满，你就可以得到一毛钱！”结果他装得越快，沙子也热烫烫的唰唰漏得越快。他的手累了，而沙子烫人，筛子是空的。坐在七月中的骄阳下，他感到泪水无声淌落他的面颊。此刻，真空地铁载着他穿越城市死寂的地窖，颠簸着，他忆起了那只筛子传达的可怕逻辑，他往下望，看见自己公然拿着那本《圣经》。地铁火车上坐着一些人，他突然兴起一个愚蠢的念头，要是快速读完整本的《圣经》，或许有部分沙子会留存在筛子里。但是他读着，字句却漏过筛孔，他心想，再过几个钟头就得面对比提，我得把书交给他，所以我绝不能遗漏任何一个词句，必须牢记每一行字。要凭意志力做到。</p>
<p>费伯审视蒙塔格下巴冒着青髭的瘦长脸孔。“你怎么会清醒过来的？是什么原因让你扔下手里的火炬？”“我也不知道。我们拥有使我们快乐的一切，可我们并不快乐。少了什么东西。我环目四顾，而唯一确知少了的东西，是这十来年间我所烧掉的书。所以我想书或许有助于解决问题。”“你是个无可救药的浪漫主义者，”费伯说，“要不是事情严肃，否则你的想法真令人发噱。你需要的并不是书，而是书上曾经写过的一些东西。也是如今的‘电视家人’原本可以传达的东西。那些细枝末节和知觉意识原本可以透过收音机和电视表现出来，但是却没有。不，不， <strong>你要找的东西并不是书！你要找的东西在旧唱片、旧电影、老朋友身上才找得到；要在大自然和自己内心寻找它。</strong> <strong>书只是储存许多我们生怕自己会忘却的东西的一种容器。</strong> 书本身毫不神奇，神奇的是书上说的东西，是它们如何将宇宙的一鳞半爪缝缀成一件衣裳。当然你不可能知道这些，我说这些你当然还无法理解。你的直觉是对的，这一点才重要。我们缺少了三样东西。</p>
<p>总之，这是我的定义。 <strong>清晰的细节。崭新的细节。上等的作家经常触探生命，中等资质的作家轻描淡写它，等而下之的则是强暴它之后，任它招蚊惹蝇。</strong></p>
<p>“现在你明白为什么书遭人憎恨畏惧了吧？它们呈现出生命真相的毛孔。耽逸恶劳的人只要看蜡制的圆脸，没有毛孔，没有毛发，没有表情。我们生存的这个时代是花朵赖花朵维生，而不是靠丰沛的雨水和黑色的沃土生长。就算是烟火，尽管美丽，也来自土壤中的化学物。然而，不知怎的，我们却以为自己可以靠花朵和烟火来成长，无需完成真实的轮回。你知道赫拉克勒斯和安泰俄斯的神话吗？就是那个巨大的摔跤手安泰俄斯，只要他的脚牢牢踩在地上，他就力大无穷。可是等他被赫拉克勒斯举到半空中，双脚离地，他就轻而易举被消灭了。如果这个神话对于今天，这个城市，这个时代的我们不具任何启示，那么我真要疯了。喔，这就是我所说我们需要的第一样东西。质，信息的肌理。”</p>
<p>“那第二样呢？”“闲暇。”“哦，可我们有的是空暇。”“空暇，没错。可是思考的时间呢？你要不是以时速一百英里飙车，快得让人只想得到危险，无法思索其他，就是在玩什么游戏或是坐在房间里，无法跟四面电视墙争论。为什么？因为电视是‘真实的’。它是眼前的，它有维度。它告诉你要想些什么，而且强行灌输。它一定是对的。它看起来对极了。 <strong>它催迫你朝它的结论去思考，你的脑子根本无暇反驳：‘胡扯八道！’”</strong></p>
<p>第三样： <strong>依照前两样的互动所获得的知识来行为的权利。</strong></p>
<p>蒙塔格，回家去吧。睡觉。何苦浪费你残余的时光在笼子里奔窜，否认自己是只松鼠？”</p>
<p>你明白吧？那情形多么像一座美丽的冰雕，在阳光下融化。</p>
<p>老头儿点头。“ <strong>不事建设的人必定破坏</strong> 。这就跟历史和少年犯一样，自古皆然。”</p>
<p>“这是，”隔着城市，自远远的另一端传来细微的翻页声。“《约伯记》。”</p>
<p>蒙塔格一声不吭，就那么兀立望着这几个女人的脸孔，就像童年有次他走进一座陌生的教堂，望着教堂内圣徒们的面孔。那些个搪瓷雕像的脸孔对他而言毫无意义，不过他跟他们说话， <strong>而且在那间教堂里站了好久，想要信仰那个宗教，想知道那是什么宗教，想尽量把教堂内呛鼻的香烛和特殊的尘灰吸入肺部，进入他的血液，好让自己觉得被那些有着瓷眼珠、血红色嘴唇的各色各样男男女女所代表的涵意感动。但是没有，什么感觉也没有；那就像是闲逛一家商店，而他的钱币在那儿是陌生的，派不上用场，他的热情是冷漠的，即使他触摸那木材、灰泥和黏土时也一样。</strong></p>
<p>信心之海曾经，也是盈满的，环绕大地之岸像一条亮丽腰带的皱褶，卷起。而如今只听得它忧郁、悠长、退却的涛声，随着夜风的气息，退向无垠的苍凉边际，和世界赤裸的屋宇。椅子在三个女人的身体下吱呀作响。蒙塔格把诗念完。啊，爱，让我们真诚相待！因为这世界，看似一块梦土，横陈眼前，这般多样，这般美丽，这般新奇，而其实，既无喜悦，亦无爱或光明，没有确信，祥和或救助，可治疗痛苦；我们俨如置身一片黑暗平原，处处挣扎和奔逃的凄惶惊恐，而无知的军队夤夜遭遇。</p>
<p>房门砰的甩上，屋子里空荡无人。蒙塔格独个儿兀立在冬寒中，只有颜色如脏污的雪的电视墙陪着他。</p>
<p>进城的路上，他因为犯下了严重错误感到孤单无靠，觉得需要那夜里熟悉而温文的说话声所带来的陌生的温暖和善意。</p>
<p>“蒙塔格，我们这些窝在家里，害怕、照料一身弱不禁风的老骨头的老头子，无权批评，然而你差点儿一开始就搞砸了事情。要小心！我在你身边，记住这一点。我了解那是怎么发生的。我必须承认你盲目的发怒鼓舞了我。噢，我觉得自己好年轻！不过，现在——我要你觉得自己苍老，我希望我的怯懦今晚能感染你一些。往后这几个钟头，等你见到比提队长之后，我要你对他小心翼翼，让我替你听他说什么，让我来感觉状况。生存是我们的饭票，别去想那些个可怜愚昧的女人……”</p>
<p>要是你掩饰自己的无知，没有人会修理你，你永远学不到教训。</p>
<p><strong>魔鬼也能引《圣经》为己用。</strong></p>
<p>“哦，你在梦里吓傻啦！”比提说，“因为我是运用你依仗的那些书来反驳你，每一招，每一句！书才真是叛徒！你以为它在支持你，结果它却背叛你。旁人也能引用它，而你呢，迷失在旷野中，迷失在名词、动词和形容词的纠结中。梦境结束时，我坐着‘火蜥蜴’抵达，说：‘跟我走吧？’你坐上车，我们在愉快的沉默中返回消防队，一切归于平静。”比提放开蒙塔格的手腕，任那只手颓然无力落在桌面上。“最后一切圆满无恙。”</p>
<h2 id="第三章-烈焰炽亮"><a href="#第三章-烈焰炽亮" class="headerlink" title="第三章 烈焰炽亮"></a>第三章 烈焰炽亮</h2><p>科学家给我们一堆官样名词，什么摩擦，什么分子。可他们其实并不知道，它之所以美丽，是因为它销毁责任和后果。问题太累赘，那就扔进火炉。如今，蒙塔格，你成了累赘。火会把你从我的肩头卸下，干净利落，又稳靠；不会留下任何烂疮。它是抗生素，是美学的，是实际的。”</p>
<p>而照旧，焚烧的感觉是痛快的，他感到自己进入火中，随着火焰掠夺，撕扯，裂成两半，摆脱那愚蠢的问题。假如根本没有解答，那，这下子也没有问题了。</p>
<p>叫嚷。他走到后院和巷弄中。比提，他心想，这下子你不是问题了。你总是说，别面对问题，烧了它。唔，此刻我两样都做到了。别了，队长。</p>
<p>他想把一切拼回原样，恢复数天前的正常生活模式，回到筛子和沙子、丹汉牙膏、飞蛾呢喃、火星、警报和任务之前的生活，短短数日之间发生了太多事件，就算以一辈子而言，也太多了。</p>
<p>大马路干干净净，就像在无名的受害者和无名的杀人者出场之前两分钟的竞技场。辽阔的混凝土河道上方的空气因蒙塔格一个人的体热而颤悸；</p>
<p>蒙塔格在黑暗中移动。前方，他可以瞧见直升机飘落、飘落，就像即将来临的漫漫寒冬的一片片初雪……</p>
<p>只有冰冷的河水和蒙塔格在漂流，漂离城市、光亮和追捕，漂离一切。</p>
<p>上方是一座古老的风车，霍霍转动有如逝水年华的声音。</p>
<p>但她的脸蛋就像如今已属于久远、久远的过去的那个女孩，那个了解四季变换而且从未被萤火虫灼烧过的女孩，那个懂得蒲公英揉搓下巴的涵意的女孩。</p>
<p>粉红色的晨曦中，他小心翼翼跨下楼梯，全神留意着他所害怕的世界，然后站在那小小的奇迹前，久久终于弯腰触碰它。</p>
<p>此刻他想要的只有这个。某些征兆，显示出这无限的世界肯接纳他，肯给予他所需要的长时间去思索一切必须思考的事物。</p>
<p><strong>他走在铁道上。走着，走着，他愕然发现自己突然间如此肯定一件他无法证明的事实。曾经，许久以前，克拉莉丝曾经走过这儿，此刻他正走过的地方。</strong></p>
<p>一种静谧凝聚在火的周围，静谧写在那些人的脸上，还有时间，充裕的时间可坐在这生锈的铁道旁，林木下，用眼睛观望，思索这世界， <strong>仿佛世界就系在篝火的中央，是这些人正在铸造的一块钢铁。</strong> 迥异的不仅是那团火，还有那静谧。蒙塔格挨向这关注全世界的特殊的静谧。</p>
<p>人声无所不谈，无所不能谈，他知道，从人声里的抑扬顿挫，它的动静，还有不断颤动的好奇和惊叹，他知道。</p>
<p>“他们在装模作样。你在河边就甩脱了他们，他们不能承认。他们知道能留住观众的时间只有那么长，节目必须有个干脆利落的收场，要快！要是他们着手搜索整条河，也许得花上一整夜的工夫。所以他们正在找个替罪羔羊，让事情有个精彩的结局。注意看，他们会在五分钟内捕获蒙塔格。”</p>
<p>“今晚就有几千人在流浪，露宿废弃的铁道旁， <strong>外表是流浪汉，内在是图书馆。</strong> 起初这并不是有计划的。每个人都有一本他想记住的书，他就记住了。而后，在二十年左右的流浪生涯中，我们彼此相遇，才渐渐建立了一个松散的网络，设定了一项计划。我们必须灌输给自己最重要的一点就是，我们并不重要，千万不能做个腐儒；我们不可以自觉优于世上任何人。我们只不过是蒙尘的书本封套，除此而外没什么了不起。</p>
<p>人类绝不会消沉厌弃到放弃从头来过的地步，因为他非常明白这样做是重要的，值得的。”</p>
<p>蒙塔格极力想看清楚这些人的脸孔，他记忆中火光下的一张张布满皱纹、疲惫的脸庞。他是在寻找一线光明、一股决心、一种战胜那似乎并不存在的明天的得意。或许他原本预期他们的脸孔灼灼闪烁着他们所携带的知识，散发出如灯笼般的内在光辉。但是所有的光辉均来自营火，而这些人似乎跟普通人没有两样，就像是跑完了一段长跑，经过漫长的寻觅，见过美好的事物被毁，到如今垂垂老矣，聚在一起等待曲终人散，灯枯油尽。 <strong>他们并不肯定自己脑中携带的东西会使未来每一个日出散发出较纯净的光辉，他们毫无把握，除了确知那些书贮存在他们平静的眼眸内，那些书完好无缺地等待着，等待来年可能会出现的那些指头或干净或脏污的顾客。</strong></p>
<p>“听我说，”格兰杰说，拉着他的胳膊与他并肩而行，一面拨开树丛让他过去。“小时候我爷爷就去世了，他是个雕刻师傅。他非常仁厚，非常博爱，他帮忙清扫我们镇上的贫民窟，还做玩具给我们，他一辈子做了数不清的事，他的手从没停歇过。 <strong>他去世后，我突然明白自己根本不是为他而哭，而是为他做过的那一切而哭。</strong> 我哭，因为他再也不会做那些事了，他再也不会雕刻木头，再不会帮我们在后院养鸽子，或是像他原来那样拉小提琴、说笑话给我们听了。他是我们的一部分，他死了，一切动作也死了，而没有人像他那样做那些动作。他是个个体，是个重要的人，我始终忘不了他的死。 <strong>我常想，因为他死了，多少美妙的雕刻永远不会诞生了。这世界少了多少笑话，多少自家养的鸽子不再被他的手抚摸。他塑造了世界，他贡献了世界。他去世的那一夜，世界损失了千万个仁善的动作。”</strong></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>你的手触碰过某样东西，那么死后你的灵魂就有地方可去，人们看见你栽种的那棵树或那盆花，而你就在那儿。做什么事并不重要， <strong>他说，只要在你的手拿开之后，你触碰过的东西从原样变成了一件像你的东西。</strong> 一个剪草工和一个真正的园丁之间的差异就在于触碰，他说，剪草工可以说根本不存在；园丁却会留存一辈子。”</p>
<p>她紧挨着电视墙，好似这样渴切地盯着就会找出她无眠不安的秘密。米尔德里德急切、紧张地凑近，仿佛要投入、坠落那无垠的色彩中，沉溺在它鲜丽的快乐里。</p>
<p>将来有一天，等它在我们心中尘封一段长时间之后，它会从我们的手，我们的口中传递出去。其中有许多会是错的，但也会有刚好足够的部分是对的。我们今天就开始上路，观看这世界和它的言谈举止，观看它的真面貌。 <strong>如今我要饱览一切。而尽管它进入我脑中时无一属于我，但过一阵子它会在我脑中凑拢，就会成为我。</strong> 看看外面的世界，我的天，我的天，看看外面，我的外面，我的脸孔外面的世界，而唯一能真正触摸它的法子，就是把它搁在它最后会成为我的地方，在血脉中，在它每天悸动千万次的地方。我抓住它，它就永远不会溜走。总有一天我会紧紧抓住世界。此刻我已有一根指头勾住它；这是个起头。</p>
<p>“在基督诞生之前，有一种笨鸟名叫凤凰，每隔几百年它就筑起一堆柴火自焚。它一定是人类的一等表亲。但是每回它自焚之后，又会从灰烬中跳出来，让自己重生。看来我们也在做同样的事，一遍又一遍，但是我们有一样要命的本事，是凤凰所没有的。我们知道自己做过的蠢事。 <strong>我们知道自己千年来做过的所有蠢事，而只要我们知道这一点，并且随时把它搁在我们看得见的地方，总有一天我们会停止堆筑柴薪，停止跳入火中。我们会偶然找到几个记得每一个世代的人。</strong> ”</p>
<p><strong>还有，牢记一个念头：你并不重要。你什么也不是。将来有一天，我们荷载的东西也许能帮助某个人。但即使是许久之前，我们手头有书的时候，也并没有运用书中得来的知识。</strong> 我们一味侮蔑先人，一味唾骂所有可怜的故哲。往后这一星期、一个月、一年，我们会遇见许多孑然孤零的人。等他们问我们在做什么，你们可以说：我们在记忆。这样我们才会终究获胜。将来有一天，我们会记住太多东西，因此制造出有史以来最大的铲子，挖出旷古绝今的大坟墓，把战争铲入墓中，封起墓穴。走吧，我们先去建造一间镜子工厂，往后一年只生产镜子，对镜好好审视自己。”</p>
<p><strong>但眼前有一段漫长的路，要从清晨直走到中午，而若说这一行人沉默无言，那是因为有太多的东西要思索，太多东西要记住。或许稍晚，待日上三竿，温暖了他们之后，他们会交谈，或只说些他们记得的东西，好确定它们存在，确定那些东西安然存放在他们心中</strong> 。蒙塔格感觉到字句缓缓颤动，徐徐酝酿。一旦轮到他开口时，他能说什么？在这样的一个日子里，他能贡献什么使此行轻松些？凡事都有定期，天下万务都有定时。对了。拆毁有时，建造有时。对了。静默有时，言语有时。对了，就这些。但还有什么。还有什么？有什么，什么……</p>
<p>蒙塔格怂恿道：“而后怎样？”“啊，我体会了人生。”消防队长闭目回忆，“人生，寻常的人生，就那么回事。不怎么完美的爱情，破灭的梦想，堕落的性生活，不该死的朋友猝死，有人被杀，亲近的人神经失常，某个母亲缠绵病榻，某个父亲突然自杀——象群惊逃，疾病蔓延。可无论是暗譬或明喻，怎么也找不到一本适合的书可以适时塞住崩闸的倾壁，挡住泛滥的洪水。等到年过三十，逼近三十一岁之际，我振作自己，并拢每一根断裂的骨头，每一公分擦伤、瘀伤、留下疤痕的肌肤。我揽镜自望，却发现一个老头儿躲藏在一个年轻人的惊恐脸庞后头，看见一股对万事万物的憎恨，于是我打开我那一整间图书室里的书，结果发现什么，什么，什么？” <strong>蒙塔格猜测：“书页是空白的？”“没错！空白的！哦，书页上是有文字，没错，但那些字就像热油洒过我的眼睛。毫无意义。没给我任何帮助、慰藉、安宁、庇护，没有真爱，没有休息，没有光明！”</strong></p>
<p><strong>可就在前不久，我浏览这本小说，才发觉蒙塔格的名字是随一家纸业公司取的。而费伯，当然，是一家铅笔制造商！我的潜意识可真狡猾，居然给他们取了这样的名字。而且不告诉我！</strong></p>
<p>在我的故事中，我曾描述一座灯塔，它深夜投射出的光亮是一种“神光”。以任何一种海洋生物的观点仰望它，会觉得是“显灵”。编辑们删去了“神光”和“显灵”。约莫五年前，编纂另一本学校读物的编辑们将四百篇（且数数看）短篇小说搜罗在一本文选中。你怎么把四百篇马克·吐温、欧文、爱伦·坡、莫泊桑和比尔斯的短篇小说，挤在同一本集子里？简化嘛。剥皮，去骨，剔髓，融解，沥脂和销毁。每一个重要的形容词，每一个会动的动词，每一个重于蚊子的暗譬——删掉！每一个会扯动低能儿嘴角的明喻——拿掉！任何解释一位一流作家那么一点儿哲思的旁白——扔掉！</p>
<p>道理很明显。 <strong>焚书的方法不止一种。而这世界充斥着手拿火柴的人。每一个少数族群，随他是浸信教徒或一神论者，爱尔兰人或意大利人或八十岁耄耋或佛教徒，犹太复国主义者或耶稣再临论者，妇女解放运动者或共和党人，还是四方福音教徒，都觉得他有意愿、权利、义务去泼洒煤油，点燃引信。凡是自认是所有苍白如乳冻的、平凡如麦片粥的、不发酵的文学的祖师爷的弱智编辑，个个舔他的断头斧，盯着任何敢稍微哼一声，或是写些超出童谣程度文章的作家的脖子。在我的小说《华氏451》中，消防队长比提描述了书本最初是怎么被少数族群焚烧的，他们各自撕下这本书里的一页或是一段文字，接着撕扯另一本书，最后终于有一天书本成了空白的，心智是封闭的，而图书馆永久关门。</strong></p>
<p>这儿记述一段对约伯二世的最后考验：一个月之前，我寄了一份舞台剧剧本，《巨大海兽九九》，给一所大学剧场。我的剧本是以《白鲸》为蓝本，献给梅尔维尔，内容是谈一组火箭成员和一名瞽目太空队长，他们出发探险，遭遇一艘“巨大白色彗星”，结果毁灭了毁灭者。这出戏今年秋天将在巴黎以歌剧方式重演。但眼前，那所大学回函称他们实在不敢演出我的戏——戏里头没有女性！要是戏剧系胆敢一试，校园里“紧急救援小组”的小姐们会拿着球棒上门！我把虎牙咬成粉末，心想，这大概意味着今后再也不会制作“乐队男孩”（没有女性），或是“女人”（没有男性）。或者，要是数数人头，算算男性女性的人数，莎士比亚的戏剧有不少将再也见不着了，尤其如果数数对白，发现所有精彩句子全给了男性！我回函表示或许他们该演出我的戏一个星期，下个星期再演出“女人”。他们大概以为我在开玩笑，我自个儿也没把握说我不是开玩笑。因为这是个疯狂的世界，要是我们任凭少数族群干预美学，随他们是侏儒还是巨人，是婆罗州巨猿还是海豚，是核子弹头派还是漫谈派，是前计算机学家还是新反机器主义者，是呆子还是贤哲，这世界都会更加疯狂。 <strong>真实的世界是每一个群体的游乐场，任由他们立法或废法。可是我的书、故事或诗的尖端，却正是他们权利终止之处，也是我的疆域诫令颁布、执行、治理之处。假如摩门教徒不喜欢我的戏剧，让他们自己去写自己的。假如爱尔兰人不喜欢我的都柏林小说，让他们去租打字机。</strong> 假如教员和初级编辑认为我这种正中下巴式的文句害得他们奶昔似的牙齿打哆嗦，那就让他们拿自个儿做的陈年蛋糕浸在稀淡的茶里果腹。假如墨西哥裔知识分子想把我的《奇妙冰淇淋装》重新剪裁成新潮的“阻特装”[1]，那么但愿皮带松脱，裤子滑落。</p>
<p><strong>你们这些裁判，回到看台上。主审，去淋浴。这是我的独角戏。我投球，我打击，我接球，我跑垒。到了日落，我赢球或输球。次日天亮，我再度上阵，再玩它一场。而没有人能助我一臂。连你也一样。</strong></p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 书摘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[无法估量的繁盛 - 《华氏451》读后感]]></title>
      <url>http://chocoluffy.com/2018/03/16/%E6%97%A0%E6%B3%95%E4%BC%B0%E9%87%8F%E7%9A%84%E7%B9%81%E7%9B%9B-%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>这一次想记录下来的书是雷·布拉德伯里的《华氏451》。</p>
<a id="more"></a>
<p><img src="https://ww3.sinaimg.cn/large/006tKfTcgy1fpf32cotamj30sg0ee1jm.jpg" style="display: block; margin: 0 auto; border: none"></p>
<p>书名很有意思，华氏451，是纸张燃烧的温度。小说主题和乌托邦三部曲有相似之处，当人们逐渐失去了感触真实生活的敏感，失去了闲暇思考的时间，消防员的职责变为燃尽书籍来减轻人们的忧郁和恐惧。书的隐喻是什么，焚书的意义和我们熟识的历史情景有什么不同，而仅仅是消费主义最终又将带领我们走向怎样的结局……</p>
<p>始终觉得，科幻的作品里有着不可剥离的现实，天马行空的想象只是构建冲突，放大冲突的一种实现手段。文字里身着火蜥蜴消防服喷溅出炽热火舌的人，在真实世界里或许乔装栖身在另一个人群，手里拿着火柴在黑暗里摩拳擦掌。也总会有那么一群人，无谓时代，在消费主义窒息的麻木感中恍然醒来，想起雨的冰凉，蒲公英轻拭下巴的涵义，会想要记住所有目力所及的美好哪怕回忆如沙漏。</p>
<p>这或许就是布拉德伯里想写的故事。不同于《1984》里穿插大片政治论述的严谨有力，不同于许多乌托邦构想里阴郁森冷的气氛，作者用散文诗化的文字，记录一个人挣扎醒悟的温暖。每个人都有着悲剧轮回的身世，但总有那么几个偶然的时刻，我们得以回望身后火热的地狱。而希望是，就像当我终于赤脚走在冰冷的通往光明的铁轨上，我突然那么的相信，你也走过一样的路。</p>
<h2 id="当拉链取代了纽扣"><a href="#当拉链取代了纽扣" class="headerlink" title="当拉链取代了纽扣"></a>当拉链取代了纽扣</h2><p>第一章。</p>
<p>华氏451，预示着的，是相比专制离我们更加接近的未来。“上学的时间缩短了，纪律松弛了，哲学、历史、语言课程删掉了，英文和拼字也渐渐、渐渐被忽略了，最后几乎完全弃置。生命就是眼前，工作才重要，下了班处处是享乐。除了按按钮、拉开关，装螺丝，何苦去学什么“。很典型的消费主义乌托邦场景。但相比《娱乐至死》等文着重于在过量娱乐中丧失思考的能力和主动，《华氏451》还突出了一个很有现实意义的点，关于来自社会上少数族群的压力。</p>
<p>在小说的后记里，布拉德伯里写道，“焚书的方法不止一种。而这世界充斥着手拿火柴的人。每一个少数族群，随他是浸信教徒或一神论者，爱尔兰人或意大利人或八十岁耄耋或佛教徒，犹太复国主义者或耶稣再临论者，妇女解放运动者或共和党人，还是四方福音教徒，都觉得他有意愿、权利、义务去泼洒煤油，点燃引信。凡是自认是所有苍白如乳冻的、平凡如麦片粥的、不发酵的文学的祖师爷的弱智编辑，个个舔他的断头斧，盯着任何敢稍微哼一声，或是写些超出童谣程度文章的作家的脖子。在我的小说《华氏451》中，消防队长比提描述了书本最初是怎么被少数族群焚烧的，他们各自撕下这本书里的一页或是一段文字，接着撕扯另一本书，最后终于有一天书本成了空白的，心智是封闭的，而图书馆永久关门。”</p>
<p>想起近几年以各种形式出现的平权运动。与占据道德优势的对象对话是不平等的，而仪式越依赖社会认可，姿态就屈从得越低。随着批判的手段愈加精致，出版自由乃至言论自由会不会终将趋向沉默。社交媒体渐渐有能力承载人们记忆的作用，而这种趋于永恒的记忆不会随时光散去，而是永远刻上始作者的名字。黑暗擅长在历史的暗礁里寻找黑暗，于是每一个留下的文字都成为了审判罪证的自白。尼采笔下的永劫轮回，怕会是所有创作者心里最沉重的负担。</p>
<p>于是消防员换了新的任务，用一把火烧去心灵的所有沉重。</p>
<p>“全世界都不再需要消防员做他们原先做的工作了。他们换了新的任务，保护我们的心灵平静，免除我们对于身为劣等人的可理解而合理的恐惧。他们成了官方检察员、法官和执行者。这就是你，蒙塔格，也就是我。”</p>
<p>《华氏451》有些接近《娱乐至死》的后续，当来自少数族群的压力可以代替现有的审查制度的时候，或许根本不需要政府的任何规定，来自人群的默许就将创造消防员这个职位。</p>
<p>直到第一章的末尾，《华氏451》可以说在阐述着类似消费主义乌托邦所讨论的问题，人群的冷漠暴力，生命的洋相。而让我感觉到真正精彩的，是从第二章开始作者慢慢跳开了对普遍现象的描述，开始给小说里被烧掉的“书”带来了更丰富的隐喻。</p>
<h2 id="颠簸的沙漏"><a href="#颠簸的沙漏" class="headerlink" title="颠簸的沙漏"></a>颠簸的沙漏</h2><p>如果沙漏里最后能留下沙子。</p>
<p>布拉德伯里用沙漏比喻看书的过程。”结果他装得越快，沙子也热烫烫的唰唰漏得越快。他的手累了，而沙子烫人，筛子是空的。坐在七月中的骄阳下，他感到泪水无声淌落他的面颊……他突然兴起一个愚蠢的念头，要是快速读完整本的《圣经》，或许有部分沙子会留存在筛子里。”</p>
<p>这其实是一个关于记忆与遗忘很有意思的话题。</p>
<p>当一件事不需要被记住的时候，它就不值得被记住了吗。</p>
<p>小说的世界里，人们“不需要”记住他们生活的细节而只顾沉浸在更直接的娱乐刺激里，房屋甚至都没有前廊，因为人们不必有闲暇的时间聊天与思考。人们烧毁了忧郁的书，却拥有了纵情的快乐，也没有看得出的阶级统治，人人都宛如自己的镜子，世代可以就这样繁衍下去。</p>
<p>现实的世界里，人们也不那么需要记住许多东西。科技是直达结论的，也在驯服着除创造者以外人群的惰性。如果取两个极限，貌似是永恒和心如死水的并存。有趣的是，尽管我们还处在各种科幻故事里天马行空想象力的起点，但总有一小部分的未来是可以预见的，尤其是对永恒的需求。今年硅谷的投资热门是，区块链应用和生物医药。它们对应的电子信息的永恒存储，化学物质的永恒控制，谁也不敢说以上的总和会不会成为一个永恒的我和你。或许我们终将迎来我们梦寐以求的永恒，无论以什么形式，只是现在的我们还配不上。</p>
<p>本期待布拉德伯里做更多的讨论，可惜的是，作者最终也都避开了讨论记忆的问题。小说里讨巧地创造了一种技艺能够过目不忘地记住所看过的文字，让逃去森林的学者们成为一个个“行走的图书馆”，这给世界的真实留下了延续的可能。书里写得很美，这些学者们”似乎跟普通人没有两样，就像是跑完了一段长跑，经过漫长的寻觅，见过美好的事物被毁，到如今垂垂老矣，聚在一起等待曲终人散，灯枯油尽。 他们并不肯定自己脑中携带的东西会使未来每一个日出散发出较纯净的光辉，他们毫无把握，除了确知那些书贮存在他们平静的眼眸内，那些书完好无缺地等待着，等待来年可能会出现的那些指头或干净或脏污的顾客。“</p>
<p>我想或许只要还有人愿意捧起沙子就好，他们筛起炽热如火的流沙像金色的蔷薇粉末。</p>
<p>也像在抛下不为这个世界所动的锚。</p>
<h2 id="无法估量的繁盛"><a href="#无法估量的繁盛" class="headerlink" title="无法估量的繁盛"></a>无法估量的繁盛</h2><p>蒲公英轻拭下巴的涵义。如果它的颜色掉了，那就表示我有了喜欢的人。</p>
<p>当小说里的费伯教授第一次提到，“书”是这个世界“清晰的，崭新的细节”的时候，我心里的第一下反应就是加缪的存在主义。他很关心这个世界呈现的样子，他在热忱而自由地成为着他想成为的人。</p>
<p>这是我喜欢的风度。</p>
<p>当初为加缪的文字所着迷，或许并不是因为他的任何教诲，而是他文字里鲜活的美学生命力。总是会惊讶于他对生命细节的敏感笔触。那些宛若透过水族箱的光线，那个广袤而忧郁的黄昏，阿尔及利亚的冬天那场沾湿了每一片花瓣的雨……原谅我这么幼稚地进入你的世界。</p>
<p>这些是小说里却被烧烬的美。终于，人类在道德和生活的对抗里，选择了生活。</p>
<p>而如果说审美的存在有任何私心，那或许是稍许的不甘心，不甘于生活。</p>
<p>这是被一直低估着的力量。</p>
<p>很喜欢莎拉贝克韦尔在《存在主义咖啡馆》里最后一章的描述，她觉得科技终究无法模拟真实的细节。她固然短视了科技发展的野心，但她也是对的，那些眼里饱含的滚烫冲动，人们的粉色邂逅与回眸，那些生命的细节，是人类的秘密，是“无法估量的繁盛”。</p>
<p>好像终于懂了，让小说第一章里那个粗粝而麻木的世界崩塌，或许只需要一个对的温度。当身经百炼而面色赤红的蒙塔格看着克拉莉丝的背影在雨夜里远去，他仿佛想到了什么，柔软的像一个新世界的起点。</p>
<p>“过了许久，他才移动。而后，走在雨幕下，他慢吞吞地仰起头，有那么一下子，张开他的嘴……”</p>
<p>对蓝色冰冷的雨，有了第一次的想象。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>一些有趣的伏笔，仅供文学参考啦。</p>
<p>1.很多次在危险的想法出现的时候，都有提及关于轰炸机的描写，让人颤抖的战斗机的引擎声。一直以为是政府的巡逻机之类的，主要作烘托情景之用。到最后发现是一个伏笔，作者引入战争的发生来毁灭这个古老的争议的世界。</p>
<p>2.蒙塔格那天下午在家翻书的时候，偶然翻到的第二本书里的话，“我们无法确切指出友谊形成的时间。正如注水入瓶，一滴一滴注入，最后必有一滴会使它满溢；同样的，一连串的善意，最后总有那么一次会使心灵满溢”，伏笔，以后文与费伯的友谊及森林里学者的善意来呼应。</p>
<p>3.第三章。关于凤凰浴火的寓意。从火里来，回到火里。“我们知道自己千年来做过的所有蠢事，而只要我们知道这一点，并且随时把它搁在我们看得见的地方，总有一天我们会停止堆筑柴薪，停止跳入火中。我们会偶然找到几个记得每一个世代的人 ”，也是对比蒙塔格，身为消防员从火中来回到火里，只到一天醒悟，停止跳入火中。</p>
<p>4.摘自后记的一小节。“可就在前不久，我浏览这本小说，才发觉蒙塔格的名字是随一家纸业公司取的。而费伯，当然，是一家铅笔制造商！我的潜意识可真狡猾，居然给他们取了这样的名字。而且不告诉我！”，哈哈好可爱。</p>
<p>文摘链接：『 <a href="http://chocoluffy.com/2018/03/16/%E3%80%8A%E5%8D%8E%E6%B0%8F451%E3%80%8B%E6%96%87%E6%91%98/">《华氏451》文摘</a> 』</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 读书笔记 </tag>
            
            <tag> 存在主义 </tag>
            
            <tag> 书摘 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《风沙星辰 & 夜间飞行》文摘]]></title>
      <url>http://chocoluffy.com/2018/01/22/%E3%80%8A%E9%A3%8E%E6%B2%99%E6%98%9F%E8%BE%B0-%E5%A4%9C%E9%97%B4%E9%A3%9E%E8%A1%8C%E3%80%8B%E6%96%87%E6%91%98/</url>
      <content type="html"><![CDATA[<p>《夜间飞行》不如《风沙星辰》惊艳，但依旧较完整地呈现了“自由”与“责任”的矛盾。“这些也许哪一天会失去生命的人，他们本可以幸福地生活着。”，而里维埃，又有什么权力去阻止一个人追求幸福生活，而人又为什么渴望永恒。仅仅表现法比安的妻子和里维埃的冲突，矛盾的张力还不够激烈，角色的观念以一致的坚定为主。这是一个很深刻的主题，和加缪的《鼠疫》对比阅读。</p>
<a id="more"></a>
<p>以下为阅读文摘。</p>
<hr>
<h1 id="风沙星辰-Terre-Des-Hommes"><a href="#风沙星辰-Terre-Des-Hommes" class="headerlink" title="风沙星辰 Terre Des Hommes"></a>风沙星辰 Terre Des Hommes</h1><p>农民在耕作中，总能借助着他手里的工具，一点一点地挖掘到那属于自然的各种秘密。</p>
<p>昏暗的夜晚，平原上微弱的光线，好像 <strong>空中零落的星光</strong> 。</p>
<p>那一刻，也许有的人正在阅读思考，互相倾诉着各自的心声；也许有的人正全神贯注地探索着宇宙的奥秘，计算着仙女座离我们究竟有多远；还有的人，在某一个角落，相爱着。远处乡间闪动的火焰，是人们在等待食物的信号。这些人里面，有诗人，老师和木匠。然而这片闪烁的星空下，又有多少关闭的窗户，暗去的星光，与沉睡着的人们……</p>
<p><strong>我们要试着走近这一切。和乡间那灯火阑珊处，轻轻地聊上几句。</strong></p>
<blockquote>
<p>夜很美，却敌不过我的意兴阑珊。</p>
</blockquote>
<p>月亮在一层苍白如雪的雾气中，像一堆木炭似的逐渐熄灭了。</p>
<p>那是一个充满了陷阱与圈套，四处皆是悬崖的世界。这个世界里，黑色的长龙守卫着山谷的入口，千万束的闪电好像花环一般覆盖着山顶。老飞行员们以某种近乎科学的方法，令我们维持着对他们的尊敬。然而迟早会有那么一天，他们当中的某一个，会消失在茫茫高空中，再也无法回到我们中间。</p>
<p>在这个灰色的小餐馆中，在一群群努力驱赶着白天疲惫的普通公务员中，这个肩膀沉重的同事显得如此高贵。在他缺乏细腻的外壳下，我仿佛看到了一个天使如何战胜凶猛的黑龙的场景。</p>
<p>一瞬间，这个静谧、平坦而简单的，当你从云海中浮出的那一刻探索到的世界，对我而言忽然拥有了一种完全陌生的意义。那种温柔变成了一个陷阱。我能够想象得出，在我脚下铺展的这片白色海洋，隐藏着怎样致命的骗局。那里既没有属于人的喧嚣与羁动，也没有城市中的车水马龙。占领它的，只有无边的绝对的寂静。 <strong>对我来说，这个白色的陷阱变成了一条界线。它分隔着现实与幻境，让已知的世界与未知的一切遥遥相望，无从聚首。我猜想，一出戏它本身也许是没有任何意义的。只有当某一种文化，某一种文明，或者某一种职业来诠释它的时候，它才拥有属于它的内涵。就好像那些山里人，他们也一样见过白色的云海，然而他们永远也不会发现，云海下那层无与伦比的窗帘。</strong></p>
<blockquote>
<p>原来我们习以为常的，是他人心里的浪漫，比如伦敦的雨，多伦多的雪。</p>
</blockquote>
<p>灯光下，西班牙在我的地图上，一点一点地变成一个充满童话的国度。我在地图上做了各种信号，哪里充满了陷阱，哪里将会是我的避风港。</p>
<blockquote>
<p>于是我把我所有的不安和流离画了出来，仿佛我还有重新选择的机会。</p>
</blockquote>
<p>我竖起了大衣的领子，带着一种莫名的热情，行走在陌生的人群中。与素不相识的人擦肩而过，令我因装满了秘密的内心而变得无比自豪。他们不认识我。而他们的烦恼、冲动，将在太阳升起的那一刻，一齐被装进邮包，由我来为他们传递。他们的希望与梦想，将会通过我的双手抵达目的地。 <strong>我被厚重的大衣包裹着，在人群中迈着好似保护者一般的脚步。可是，人们却是无法了解我的孤独的。</strong></p>
<blockquote>
<p>走在陌生的人群里，你听不懂我的语言，就好像我听不见你的秘密。又想起来那个上帝创造语言的这个故事。是为了让人们无法齐心协力的合作。</p>
</blockquote>
<blockquote>
<p>我来悄地保护你了</p>
</blockquote>
<p>我是这个秘密中的独行者。在战斗开始以前，我已经知道了敌人的位置……</p>
<p>飞行员混在人群中，没有人知道他是做什么的……一路上路灯林立，目的地离得越来越近。 <strong>这辆老公车，它不过是你和我，以及所有的人在变成蝴蝶飞翔在天空中以前，不得不栖息在里面的虫茧。</strong></p>
<p>所有的同伴们，都曾经在图鲁兹冬天灰色的天空下，被遗忘在栖息于公车上的人群中。但是也正是在这么一个早晨，一种属于帝王般的力量与勇气在他身上诞生了。五个小时以后，他将把属于北国冬天的雨点和雪花抛在身后。他将减缓引擎动力， <strong>在阿利坎特耀眼的阳光包围下，一路向着夏天降落而去。</strong></p>
<p>老公车早已消失不存在了。然而它的简陋和不舒适，却一直生动地留在我的记忆中。它多少象征着在飞行员的职业中，迎接坏消息到来之前，艰难却又不可或缺的准备与铺垫。</p>
<p>被那沉默寡言的司机引领着，行驶在下着雨的黎明中。</p>
<blockquote>
<p>好有画面感啊！</p>
</blockquote>
<p>坐在我身边的公务员，你从来都没有从这堵墙翻越出去的机会。这不是你的错。你只是用尽全力，搭建着那蒙住了双眼的平和生活。就像飞蛾一样，它们总是往有光亮的地方飞舞过去。你在那布尔乔维亚的、一成不变又令人窒息的外省生活方式中，舒适地将自己就这么安顿下来。 <strong>你筑起这道谦卑的墙壁，用它来抵挡狂风、海浪与星星。</strong> <strong>你不再想为那些严峻的问题而操心担忧了，因为你好不容易才摆脱了昔日沉重的生活负担。</strong> <strong>你不是生活在某一个游荡的星球上的公民，你也不会去提出没有答案的问题：你只是一个生活在图鲁兹的小布尔乔维亚。在曾经还来得及做些什么的过去，从来没有人抓住过你的肩膀，对你说些什么。如今，你自己堆砌成的黏土，早已经风干变硬。你身体里曾经沉睡着那颗音乐家、诗人或者天文学家的心灵，再也没有人能将它唤醒了。</strong></p>
<blockquote>
<p>或许有一天，我们不再想感动星辰。为什么我们追求永恒？因为尊严。</p>
</blockquote>
<p>我不再抱怨天空中飘洒的雨点。这神奇的职业即将向我打开一扇门。两个小时以后，我眼前舞动着的，将是黑色的长龙与笼罩着山顶的蓝色闪电。我一路要阅读的，则是闪烁在天上的星星。</p>
<p><strong>大部分的时候，旅行中并没有什么特别的故事。我们像职业的潜水员一样，平静地潜入深不见底的大海。这个海洋今天已经被人们掌握研究得很是详细。飞行员、机械师、通信员不再将每一次出发当做一次探险，而是走进了一个实验室。他们遵守的，是指针上显示的各种数据，而不是窗外一片接一片的风景。机舱外的山川被黑暗笼罩着。可它们已经不再是简单的山川，而是某种需要精确计算的看不见的力量。</strong></p>
<p>黄金长于虚无中：它在中途停靠站的红绿灯下闪烁着。我们也都经历过，离下一个停靠站只剩下两小时的时候，突如其来的迷航。</p>
<blockquote>
<p>一下子的过渡 精炼</p>
</blockquote>
<p>月亮在一层苍白如雪的雾气中，像一堆木炭似的逐渐熄灭了。头顶上的天空，立即被云层遮盖了起来。我们行走在云层与雾气中，一个全无光影的空洞世界。</p>
<p><strong>我们似乎是在这一个又一个的行星中迷路了。这一片你永远无法踏及的星空中，我们寻找着属于我们的那颗星星。只有它是饱含着我们所熟悉的风景与温柔的。</strong></p>
<blockquote>
<p>飞行员的星星，是停靠站，是希望。所以包含了所熟悉的风景和温柔。</p>
</blockquote>
<p>对一个年老的农妇来说，只要一幅简单的神的画像，或者一串念珠，就能让她与神相会。而我，那第一口炽热的、混合着牛奶与咖啡滋味的芬芳，就足以让我沉浸在活着的喜悦中。也正是当牛奶、咖啡与麦子在口中融合的那一刻，我能感觉到同静谧的田野、异国的植被之间的交流，同脚下的大地神奇的相知相通。 <strong>在所有的星光中，只有那么一颗，能给予我们黎明时分那顿早餐独特的温柔。</strong></p>
<p>此时航线的停靠站，却一个接着一个地醒来。阿加迪尔、卡萨布兰卡、达喀尔站，都纷纷加入到与我们的对话中。所有的无线电通信站都向当地的机场进行了报告，所有机场的负责人都通知了相关的工作人员。他们慢慢地走到我们身边，好像是围绕着一个重病的病人一样。那是一种无用的温情，但它至少是温暖的。那是一种枯萎的建议，但它至少是柔和的。</p>
<p>即使是一程令人愉快的旅途，飞行员也无法以一个观众的身份欣赏一路的风景。天空与大地的颜色，海面上风吹过留下的痕迹，黄昏时金色的云彩，他都不能潜心观赏。他好像一个开垦土地的农民，时时要分析掌握着春天的来临，霜降的危险，下雨又会给他带来些什么。</p>
<p><strong>他明白，人一旦真正地面对挑战，恐惧就消失了。令人恐惧的，恰恰是一切的未知。</strong></p>
<p>从巴黎到圣地亚哥，他们散落在世界的每一个角落，好像被隔开的哨兵。只有旅行中的偶然，才能让这个大家庭中的成员聚集在一起。也许某一个夜晚，大家围坐在一张桌子边，在卡萨布兰卡、达喀尔或者是布宜诺斯艾利斯。 <strong>经历了多年的寂静与无声后，重启不愿终止的对话，以及将我们再次融合在一起的往日的记忆。然后所有的人，将各自再次起航出发。大地是如此的荒芜，可它又同时馥郁丰饶。它小心地隐藏着自己众多的秘密花园，它们是如此难以触及。</strong> 然而，我们的职业终有一天，会引领着我们踏入这花园中。生活将我们分开，让我们少有时间与机会去牵挂自己的同伴们。可是在彼此的寂静中，同伴始终在某一个角落，忠诚于最初的友谊！如果有一天，我们在路上相遇，他们会难掩火焰般的喜悦，摇动着我们的肩膀！所以，我们早已习惯了等待……</p>
<blockquote>
<p>陶立夏，英国病人、翁达杰，安妮儿的鬼魂。一种大家都处于黑暗的静默，却相互守候着。</p>
</blockquote>
<p>生活就是这样。我们一起成长，一起播种，可是那些树木接二连三消失的岁月，终究还是来到了。同伴们一个一个地离我们而去。从今以后，我们的哀悼中还混合了迈向衰老的隐秘的悔恨。</p>
<p>也许，一种职业之所以伟大，就在于它拥有将人凝聚起来的力量。这其中最珍贵的，是那人与人之间的情谊。</p>
<p>夜间的飞行，天空中成千上万的星星，几个小时的平静与骄傲，是金钱买不到的。艰苦飞行后等待着我们的新世界，那些树木、花朵、女人，那些黎明时向我们投来的清新的笑容，还有小小的音乐会，是金钱买不到的。</p>
<p>围坐在属于我们三个人的村庄边，我们等待着。等待着黎明的拯救，也或者是在等待着摩尔人的到来。 <strong>我不知道，是什么给予了这个夜晚如同圣诞夜般的祥和气息。我们讲述着各自的回忆，嬉笑着，歌唱着。我们品尝着节日般轻快的热情与欢乐，可实际上，我们却什么都没有。陪伴我们的，只有风，沙，与星辰。</strong></p>
<p><strong>我们终于再次相遇了。肩并肩地坐着，或者各自沉默着，或者互相诉说着。我们发现，我们都属于同一个世界，自己的存在因为他人的意识而变得更为丰富。我们相视微笑，好像被释放的囚犯，面对大海的广阔而赞叹不已。</strong></p>
<blockquote>
<p>我们相视一笑，在对方的眼里看见永恒。</p>
</blockquote>
<p>他与所有这个世界上伟大的生命一样，愿意用自己的枝叶去覆盖那庞大的水平线。 <strong>人与其他所有生命的区别，在于他的责任感。在于他面对并非缘起于他的苦难时所表现出的羞愧。当同伴取得胜利时，他所体会到的骄傲。当他在脚下摆放下一块石头时，他感觉到这个手势，也许正在为世界开辟一条新的道路。</strong></p>
<p><strong>我常常觉得，那些对技术发展之所以会心存恐惧的人，是因为他们混淆了目的与手段的区别。单纯的物质上的斗争所取得的进步，并不能解决人生存本身要面对的终极问题。机器也好，飞机也好，都只是一种工具，如同农民耕种时使用的犁。</strong></p>
<blockquote>
<p>去了解为什么这个社会存在邪恶和贫穷。又为什么会有那些绝望和冷漠。好多的真相好残忍。</p>
</blockquote>
<p><strong>如果人们以为机器的发展正在损坏着人本身，也许那是因为，在面对如此迅速地改变我们生活方式的技术革新面前，我们丧失了客观审视这一切所必须具备的相对性。</strong></p>
<blockquote>
<p>技术被发明，而人们被迫去使用他。</p>
</blockquote>
<p>这一百年的技术发展，与人类一万年的漫长历史相比较，不过是沧海一粟。我们才刚刚栖身在这片风景中，我们选择要住下来的房子，甚至都还没有完全建造完毕。我们周围的一切都在迅速地改变着，人与人之间的关系，工作的条件，生活的习惯。 <strong>即使是人内心最隐秘的那个角落，也同样在经历着猛烈的冲撞。分别、离散、距离、相聚，所有的这些词汇仍然保留着它们最初的面目，只是它们所包含的意义，却已经不同于往昔了。我们依然固执地使用昔日的词汇与语言，来解释阐述今天的世界。过去似乎总是显得更美好，因为它所讲述的涵盖的一切，都是我们早已熟悉了的语境。</strong> 每一次技术的进步，都将</p>
<blockquote>
<p>我们会很容易怀念过去的日子，但那只是因为更熟悉的语境。过去总是感觉是美好的，无外乎过去比未来让我们更熟悉些。</p>
</blockquote>
<p><strong>我们如同那些蛮族部落，被崭新的玩具吸引着，痴迷着。一程又一程的空中飞行，除了追求一次比一次高，一次比一次快的纪录，再没有其他的意义。我们似乎是忘记了，究竟为了什么让飞机翱翔在天空中。飞行本身这个行动，暂时地取代了它最初的目的。如同出征打仗的将军，他们唯一的目的，就是占领那片土地。士兵们鄙视被他们征服的人民，可是这场侵略的最终目的，不正是建立与统治一个新的国度？在一切的技术进步中，我们用人力搭建铁路，创造工厂，挖掘石油。我们是否有些忘记了，这所有的建设，最初都是为了服务于人？这场战斗中，我们不知不觉地，采用了与士兵们同样的逻辑。只是，在夺取了土地以后，现在到了建立与管理这个国度的时候了。我们要把这座没有身份的房屋，交还给那些活着的人。真理对于某些人来说，矗立在不断地开垦、建造、占领中。而对于另一些人来说，它隐藏在停留与栖息中。</strong></p>
<blockquote>
<p>无论openAI也好，所有的建设，所有的争论，最初都是为了服务于人。曾经我们为了筑造一个温热的国度而诉诸冰冷的战争，我们为了人民的幸福而刺穿了一部分人的躯体。不知不觉，天堂的模样下采用了地狱的逻辑。有人说只有胜者才有和平的权利</p>
</blockquote>
<p>不久以前，人们还习惯于同构造复杂的工厂打交道。而今天，我们几乎已经忘记了某一个引擎此时正在运转着。 <strong>它终于完成了它的使命，就是像心脏一样的跳动。而你我，早已对自己的心脏习以为常，不再关注于它的搏动了。</strong> 当注意力不再集中在工具本身时，它便通过工具，让我们同园丁、航海家和诗人所共有的某种气质相聚相汇。</p>
<blockquote>
<p>之所以有对科技的恐惧，是因为它正在一点点改变着我们习惯着的生活方式。它在改变我们熟悉的语境。当新科技稳定成为了我们生活的一部分，我们接受它然后忽略它就像心脏的跳动，我们早已对心跳习以为常。而问题真正的关键在于，我们是否有权利拒绝接受新科技，它的普及又是来自谁的命令，谁的推动。一个人不应该因为选择不用手机而被拒绝其公民的权利。工具是可有可无的吗？如果拥有这个工具成为了进入这个领域的门槛呢？一个人因为工具的优越性获得的名誉和称赞，是公平的吗？比如社交网络上最热门的观点是掌握社交传播手段最熟的观点</p>
</blockquote>
<p>此时的我，一无所有。我只是一个迷失在风沙与星辰中的凡人，呼吸着天地间的温柔……</p>
<blockquote>
<p>真正温柔的作品，不要通篇写给我十次温柔，去写那些冲动和克制，那些力量和颤抖。</p>
</blockquote>
<p>真面目。 <strong>几千年来，我们一直被道路欺骗着。</strong> 人也好像一个君主，他希望一路探访他的臣民们，看看他们是否真的认同他的统治。可是围绕在君主身边的奉承者们，则欺骗着君王。 <strong>他们在他的旅途中摆上天下大吉的布景，请来歌功颂德的舞者。可怜的君主因此对自己的王国一无所知，他全然料不到那些在广阔的田野中挨饿的老百姓，此时正诅咒着他的命运。</strong></p>
<p>如同宽容的谎言，我们脚下的道路弯曲缠绕着。一路走来，我们以为遍地是馥郁的土地、果园、草地。长久以来，我们美化着自己的监狱，以为这个星球湿润而温存。</p>
<p>我在夜晚的温柔中着陆了。蓬塔阿雷纳斯！背靠着一座喷泉，我看着街上年轻的女孩们。 <strong>离她们优美的身姿如此地近，我越发感觉到人类的神秘。</strong> <strong>这个世界上，生命与生命的融合是如此地容易，花朵即使在风中也能同其他的花朵相聚，连天鹅们都彼此相识，只有人，时时刻刻搭建着属于人类的孤独。</strong></p>
<blockquote>
<p>她们那么美，那么孤独。</p>
</blockquote>
<p>友谊、爱恨、欢愉，这一切人类的游戏都是在一片如何脆弱而单薄的布景下上演！在一片熔岩流依然温热的土地上，明天也许即将受到冰雪与风沙的侵袭，究竟是什么让人类相信，长久与永恒是有可能存在的？人类的文明如同一层脆弱的镀金层，一座火山，一片大海，或者是一场风沙，都能将它从此抹去。</p>
<blockquote>
<p>我唯一担心的问题，是阶级的垄断和固化。贫富差距不再是可靠的指标了，垄断阶级大可以提高社会福利，正如现在许多资本主义国家的趋势，没有教育基础的高福利是一种诅咒。问题真正可怕的地方在于，教育不平等的受害者选择了安守于自己的困境，可以预想到的是那个社会是一个鸡汤普遍，信息分层的社会，垄断阶级会极力提供所有一切的快乐和安逸，唯独切断了他们改变自己命运的途径。机器人未来会成为服务大众，维持社会安稳的工具，而一部分大众的去向，是去服务垄断阶级，或成为垄断阶级商业生意的其中一环。</p>
<p>每个人都仿佛在讨论着一些不合时宜的问题。</p>
</blockquote>
<p>我想，这片白色的纯净，在几千几万年中，只属于那些高高在上的群星。</p>
<p>面对着苹果树铺展开的台布，落入它怀中的只有树上的苹果。面对着星空的沙滩，它所能揽入怀中的，一定是来自天空中星辰的沙粒。还从来没有哪一块陨石，用如此直白的方式向人讲述着它的来历。</p>
<p>我确定自己是被某种力量运载着， <strong>如果此时地下发出器材调整的声音，我一点都不会感到吃惊。老帆船倾斜时发出的响声，长远而苦涩。</strong> 而脚下厚重的土地里，依然是一片寂静。压在我肩头的力量，也正在平和地渐渐消失。</p>
<p>一样。只是，我的老管家，如今的我，不再是从公园深处跑回家了。 <strong>我是从世界的另一端，带着辛辣的孤独的滋味，沙漠中旋转的狂风，和热带耀眼的月光，回到了你的身边。</strong></p>
<p>老管家对于她的世界的信仰，如同一个修女对教廷的信仰一样坚固难以动摇。我感叹着她谦卑的命运，将她引领着走入这条既没有视野又没有声音的路途……</p>
<p>然而这个撒哈拉之夜，躺在风沙与星辰间，却让我明白，我对老管家有失公正。我不知道在自己身上到底发生了什么。当我被那奇怪的力量与大地连接在一起的时刻，另一种力量把我带回最真实的自我。我感觉到自己的重量，将我拉向曾经影响着我的人生的种种。我的梦比沙丘和月亮还要清晰。 <strong>是的，一幢房子的美妙不在于它能给予你温暖，给你一个躲避的屋檐；也不在于它拥有的保护你的墙壁；而在于它在不知不觉中，在点滴岁月中，慢慢地累积、存储在你心中的温柔。因为它的存在，令你心底深处那片黑暗沉重底下，有一天会一点一点地流淌出如同泉水般的，梦……</strong></p>
<blockquote>
<p>或许文字的美妙，不在于让你发泄，让你躲藏。而在于记录这个动作本身，一点点积累着你的感动和失落，见证着你的温柔和成长。</p>
</blockquote>
<p>有时候，距离并不能确切地衡量出事物的远近。花园里的一堵墙锁住的秘密，往往比遥远的中国威严耸立的城墙还要多。一个小女孩藏在寂静与沉默中的灵魂，也许比撒哈拉的绿洲和厚厚的沙漠对它的保护还要严密。</p>
<p>这两个法官能分辨出哪些动物是天真，哪些是假装单纯。她们能从狐狸的脚步里揣测出它今天的心情。她们对它内心的步伐了如指掌。</p>
<p>这个时候，一个傻瓜会走进她们的生命。有生以来第一次，那双聪慧敏锐的眼睛迷失了方向。傻瓜只要向她们吟诵一句诗歌，她们便将他当做诗人。她们以为，他能欣赏布满了洞的地板的魅力，她们以为他也会喜欢那些獾。于是她们像相信那些游走在脚下的蛇一样的，信任这个傻瓜。于是她们把自己如同绽放在野地中的花丛一般纯洁美丽的心灵，交付予他。只是他爱的，却是那精雕细琢的人造公园。从此以后，傻瓜牵着昔日公主的手，把她变成了自己的奴隶。</p>
<p>他记得深夜里每一次枕着沙粒，躺在帐篷中的情景；他记得夜晚围绕着篝火，讲述着关于敌人的一切时，那颗跳动的火热的心。</p>
<p>月光下的沙漠是玫瑰色的。</p>
<p>然而他一定会失望至极地发现，所有他拥有的财富都在这里：沙漠的骄傲，黑夜，寂静，这个风和星辰的祖国。如果有一天博纳富回来，这个消息一定会在第一个夜晚，就悄悄地传到每一个角落。在撒哈拉某处，被两百个摩尔人士兵包围着，他们知道他栖身于何地。于是他们将再次把骆驼牵到井边，储藏起大麦，准备着枪支。被一种恨，或者是一种爱，驱使着，向他走去。</p>
<p>而是人死时，随之消失的一个未知世界。我自问，和他一起离开的是何种画面？哪一种塞内加尔的植被，哪一座摩洛哥白色的小城，将一点一点陷入遗忘中？我不知道，在这一堆黑色躯体里，熄灭的是哪些悲惨的牵挂：泡茶，给牲口喝水……一个奴隶的灵魂，还是有某些记忆将在此时得到重生，令人在高贵中走向消亡。坚硬的头骨好像藏宝箱，我不知道那里面，哪些丝绸的色彩，哪些狂欢的场景，哪些对这片沙漠毫无用处的回忆，能躲过这场沉船的灾难。</p>
<p>可是当他走到街边拐角处，面对一群正在玩耍的小孩，他停了下来。他一声不吭地看着他们，然后走回犹太人的布匹店，买回一大堆东西。阿布达拉责备他：“你个白痴，把钱浪费在这些东西上做什么！”巴克不理睬他。他庄严地向小孩们做着手势，于是孩子们就将自己的小手伸向了那些玩具、手链、金色的尖头布鞋。当他们拿到了珍宝以后，立即像小动物一样，逃得远远的。阿加迪尔其他的孩子们马上就听到了消息，向他跑来：巴克给他们穿上金布鞋。接着是阿加迪尔附近的村落，小孩们叫喊着向着这个黑色的神奔跑过来。于是，巴克用完了自己身上的每一分钱。阿布达拉以为他是被幸福冲昏了头脑。而我却不这么认为，巴克是在用这种方式分享属于他的喜悦。</p>
<p><strong>拥有自由的巴克，也同时获得了被爱的权利。他可以向南走，向北走，到任何一个地方通过自己的劳动赚得属于他的面包。这些钱对他来说，又有什么用处呢？他此刻深深渴求的，是尝试着在自己与这个世界上其他人之间，串起一根绳索。阿加迪尔跳舞的女人们对他无比的温柔，但是她们不需要他。布匹店的伙计，街上过路的行人，所有的人都尊敬他作为一个自由人，与他平等地分享着阳光，但是没有一个人真正需要他</strong> 。 <strong>他无限的自由，让他无法感觉到自己在这块土地上的分量。他缺少的，是人与人之间的关联和负担，牵绊着我们脚步的泪水、分离、责备与幸福。</strong></p>
<p>好像一个天使，因为身体太轻巧而无法停留在人间，总是不经意地就要飞上天空。于是他就自欺欺人地在自己的腰带上挂上沉重的铅块，错误地以为自己从此有了扎根人世的分量。巴克艰难地向前行走着，被孩子们拉扯着，他们唯一渴望的就是他手中金色的布鞋。</p>
<p>那阴暗的公园对我们来说，驻足着各种神灵。这个没有界限的王国对小孩们来说，是永远无法触摸到它的每一个角落，将它完全掌握的。我们在那里建立了一种封闭起来的文明，每一个脚步都有它自己的滋味，每一个细节都有属于它自己的含义。然而终有那么一天，小孩会长成大人，当我们用与童年不同的标准，再次审视着昔日魔幻般冰冷又炙热的公园时，呈现在我们面前的又将是什么？我们有点绝望地停驻在栅栏外，隔着灰色石头砌成的围墙向里面望着，惊讶于它的狭小封闭。 <strong>于是我们猛然间领悟到，那个曾经让人觉得永远无法捉摸透的公园，它的无尽与神秘并不在于公园本身，而来自小孩们赋予这个游戏的色彩与含义。</strong></p>
<p>刚才那让我一下子就辨别出的“扑通”声，也许也和命运一起，将在空中等着我。</p>
<p><strong>但大部分的时间，我把自己关在黑暗里，被行星们微弱的光亮包围着。它们闪烁着神秘的光芒，讲着同一种语言。我像那些天文学家一样，阅读着一本关于天空机械的书籍。我觉得自己纯净而充满书卷气。</strong></p>
<p>引擎温柔的轰鸣中，面对着静谧的星辰，我品尝着属于自己的孤独。</p>
<p>我们正穿越着童话中的大峡谷，任何错误都既没有原谅也没有出路。我们把自己交给了谨慎的神灵。</p>
<p>火苗慢慢地升起。带着一种近乎宗教的情绪，我们看着飞机的信号灯在沙漠中燃烧着。它向黑夜传递着无声却又耀眼的消息。那是一种近乎病态的呼唤，可它又同时充满了爱意。我们在乞求水源，我们又同时在寻找与人的交流。 <strong>我多么希望此时沙漠中有其他的火焰燃起，因为只有人才拥有火，那是一种他们回答我们的方式！</strong></p>
<p>火渐渐地熄灭了。我们把身体倾向烟灰，试图温暖着自己。明亮的消息已经燃烧完毕，它是否正行走在属于它的轨道上，然后抵达它的目的地？其实我知道，这一切都是徒劳的。 <strong>如同一场没有人会听见的祈祷。</strong></p>
<p>我站在那里冥想着。想到它也许要比我晚死三十年，这丝毫不让我觉得难过。三十年，还是三天，一切都只是一个角度的问题……我所需要的，只是忘记生命中的某些画面……我继续向前走，因为极度的疲劳，身体正在发生着某些变化。即使我眼前并没有幻影，我也不停地自己创造着……</p>
<p><strong>我们再一次发现，其实遇难的不是我们。遇难的，是此刻正在等待我们的人们！</strong> 他们已经被某种可怕的错误撕扯得遍体鳞伤。我们不能不向着他们奔去。正如纪尧姆从安第斯山脉返回以后对我说的一样， <strong>他当时是向着他们走过来的！</strong> 这应该是一个普世的真理。 <strong>“如果我是只身一人活在这世界上，我就躺下不再继续前进了。”普雷沃对我说。</strong></p>
<blockquote>
<p>是羁绊，是责任，而不是绝对的自由，带来绝境时的幸福。</p>
</blockquote>
<p>飞机并不是一个终点，而只是一种手段。我们不是为了飞机本身一次又一次地冒着生命的危险。好像农民们不是为了手中的犁才耕作一样。飞机让我们离开了城市，飞到一片未知的陌生土地，探寻着关于世界的真相。</p>
<p><strong>我不怪那些喜欢沉迷于咖啡馆里简陋音乐会的人，他们不知道这世界上还有其他的歌唱与美妙的戏剧。我责怪那些用廉价娱乐来赚钱的人。我不喜欢人用这样或者那样的方式引导，腐蚀着无辜同时又无知的大众。</strong></p>
<p>了。可是那橙子被吞入口中的感觉，又渐渐在我记忆中变得模糊，好像我一点一点地在忘却属于自己的温存。</p>
<p>人究竟该怎么做，才能让自己得到这种最终的释放与平静？所有的人都知道，人是多么矛盾重重的动物。当你给了没有食物的人足够的吃的，让他们去创造属于自己的生活时，他们常常因为吃得太饱而昏睡过去。勇敢善战的人，有时候会在一夜之间变得软弱无能。当慷慨大方的人成为富翁后，吝啬立即成了他们新的特征。所有的政治理念流派，凭什么认为他们能将人从苦难中解放出来，给予他们新的希望？每一个个体所希望的期盼的都是不同的，又有哪一种政治敢说自己代表了全人类的向往？人不是被圈在一起的牲口，吃喝拉撒、生老病死都大同小异。一个穷困潦倒的帕斯卡的诞生，要比好几个不知名的有钱人的出现，有价值得多。</p>
<p><strong>我们当中的每一个人，都在最一无所有的时刻，经历了人生最温暖巨大的喜悦。</strong></p>
<p><strong>真相，常常不是那些显露在表面的一切。如果在这片土地上，而不是另一片土地，橙子树向下生长着结实的根茎，然后挂满了茂盛的果实，那么这片土地就是属于橙子树的真相。如果某种宗教、某种文化、某种价值、某种活动，能帮助人在其中找到属于他的平静与满足，让他在这一切的包围下逐渐变成一个高贵的灵魂，那么这种宗教，这种文化，这种价值与活动，就是属于人的真相。这其中的逻辑是什么？是在这个过程中，让人体会到生命的可贵与美好。</strong></p>
<blockquote>
<p>又或者说 我们又会怎么否定这不是真相</p>
</blockquote>
<p>人的志向也许起着至关重要的作用。有的人将自己关在小店铺里，有的人却向着某个方向，大步地行走着。我们以为在他们童年时的奔跑里，能看见他们人生最终方向的影子。其实儿时的疾跑冲刺，这世上大部分人都拥有过，它们不过是某种表象的错觉。在劫难中或者一场火灾中表现得格外高大的小店铺的主人，你我应该都觉得似曾相识。 <strong>他们在火灾或者灾难中表现出的英勇，让那个夜晚成为他们人生最高大的时刻。然而从此再没有其他的机会，没有造就英雄的土地出现过，于是他们在自己的高大中渐渐沉睡着。是的，高远的志向也许能将人从牢笼中解救出来。只是，大部分的时候，如何将那些志向本身，从埋没它们的沙堆中挖掘出，让它们重见天日？</strong></p>
<blockquote>
<p>加缪，为什么要反抗。人们只会得到他们乞求的东西。这也正是他们的无辜和力量所在。</p>
</blockquote>
<p>这些士兵也许永远也不会再回到这个地方。然而出于谨慎，他们都一言不发。士兵们好像是谷仓里储存着的种子，战争一打响，就有一只手将他们一把抓起，洒入田野间。</p>
<p>队长将带上他的左轮手枪，喝醉的男人也将醉意全无。然后他们会沿着这条走廊的斜坡走到月光下，简单地说几句：“又他妈的要进攻了”，或者是“天气真冷”。然后将自己投入这深沉的夜。</p>
<p>可怕的并不是死亡本身，而是浸润在鲜血的陷阱中的双手，将如何在沉重的呼吸中，一步步抬起； <strong>可怕的并不是死亡，而是这个过程中的种种不适与痛苦。</strong></p>
<p><strong>曾经让你在意的一切，正慢慢地在你眼里显得琐碎无比。你的快乐，烦恼，那些生活中的舒适，好像都变成了另一个世纪的画面。有一天你收到一个同伴死去的消息，他在马拉加附近的海岸被打死。你并没有要为同伴报仇的欲望，至于政治，它也从来没有让你特别地感兴趣过。然而这个消息，还是像一阵海风一样，吹入了你的生命。有一天早上，你的一个同伴对你说：“我们去不去？”“去。”于是，你们就这样上路了。</strong></p>
<p><strong>你无法用言语解释自己为什么会做出这样的决定，而我眼前却有一幅幅清晰的画面，它们解释着关于你这么做的真相。</strong></p>
<p>野鸭在迁徙时，总能在它们占领的土地上，引起其他动物好奇的围观。那些被人圈养的鸭子，被它们三角形的飞行路线吸引，也忍不住笨拙地想尝试着高高地跳跃起来。原始的呼唤在它们身上，不知道唤醒了哪些残留的本能。于是那一分钟里，家鸭们变成了迁移的鸟群。在它们小小的坚硬的脑袋中，那些谦卑的关于池塘、鸡窝和眼前食物的画面，变成了宽广的大陆，无边的海洋和疾风的滋味。它忽视了自己的脑袋有没有足够的地方，能储存下如此多的奇迹。它依然拍动着翅膀，鄙视眼前的吃食，想要成为飞翔在空中的野鸭。</p>
<blockquote>
<p>这也是荒谬 确实人类无辜和力量的所在。</p>
</blockquote>
<p>它们在幼年时被擒获，在人的养育下，不但能活下来，还会乖巧地在你手中吃草。它们任由人抚摸，将潮湿的鼻子伸在你的掌心中。你以为，它们从此变得和那些被养在家里的动物一样。你以为，你让它们躲过了一切未知的忧伤，即使是死亡也会显得温柔无比……可是当它们有一天背朝着围栏，面向着沙漠，顶着它们小小的鹿角，似乎被磁化了的那一刻，它们不知道它们正在逃开你为它们圈起来的世界。你给它们奶水，它们依旧乖乖地喝着。你抚摸它们的时候，它们把自己的鼻子陷得更深。但是当你准备将它们放回大自然时，在几下轻快的跳跃后，它们又重新走回围栏边。如果你不阻拦它们，它们甚至连挣扎都不挣扎，将自己靠在栅栏上，低着脖子，就这样一直到死。什么是爱情？什么是令人喘不上气的飞奔？它们都不曾经历过。当它们被擒获的时候，它的眼睛都还没有睁开。沙漠中的自由它们一无所知，正如那雄性的气味，对它们来说陌生无比。</p>
<blockquote>
<p>这个世界最后的温柔。</p>
</blockquote>
<p>中士，对于那个将你的额头轻轻抬起，为你准备着死亡的人，你有什么可抱怨的？你们互相都为对方冒着相同的危险，不是吗？这一分钟将你们连接在一起的这个世界，令你们不再需要任何的语言。我明白为什么你放弃原有的生活，来到战场。在巴塞罗那，也许你很穷，也许你只身一人，也许你连一个栖身处都没有。而在这里，你觉得自己的生命有了归宿，你的灵魂有了依托。是的，你是被爱接纳着、包围着的。</p>
<p>那些政客真诚与否的口号，是否如同一颗种子一般，在你的心中生根发芽，我对此并不感兴趣。 <strong>如果它们真的在你的心田里长出了幼苗，那是因为这些种子回应着你的需求和等待。</strong> 你是种子们唯一的法官。 <strong>因为种子的优良，只有土地才能辨别。</strong></p>
<blockquote>
<p>你伤害我 是因为我允许你这么做。</p>
</blockquote>
<p>与伙伴兄弟因为共同的目标而将彼此的命运连接在一起，这个过程中所有的经验都告诉我们，爱不是站在这片风景前，各自望着某一个地方，而是所有的人朝着同一个方向一同望去。只有彼此捆绑在一起，朝着顶峰一同攀登而去，当我们抵达目标的那一刻，我们才成了真正的灵魂上的伙伴。 <strong>否则为何在这个物质越来越舒适的时代，当我们在沙漠中分享着彼此最后的食物时，内心体会到的是一种圆满的喜悦？对于我们中间所有经历过在撒哈拉沙漠里，与同伴一起被拯救的那种喜悦与感动的人来说，人生其他各种快乐在它边上，好像都变得如此的琐碎。这也许就是为什么，我们周围今天的世界正在慢慢崩裂。每个人都围绕着承诺给予他这种圆满的宗教，兴奋着，膜拜着。然而所有的这些宗教，又以相互矛盾的言辞，在表达着同样的愿望与希冀。人们在用某种手段达到这种“圆满”前四分五裂，却又分享着同一个目标。</strong></p>
<p>人类的真相，是那些让人与动物得以区分的力量，让人真正称得上“人”的信仰。队长在他与敌人的关系中，表现出的尊严、诚实，对对方生命的尊重，将他提升到一个令人敬佩的高度。而那些平庸而充满蛊惑性，一边拍着阿拉伯人的肩膀赞美他们，一边打从心底侮辱他们、看不起他们的人，对于他们，你一定充满了同情与鄙视。</p>
<p>为了理解他的需求， <strong>为了看清楚他的本质，我们不应该把各种真相对立起来。是的，你们是有道理的，你们所有的人都是有道理的。逻辑证明了这一点。即使是那些将人类所有不幸归罪于驼背的人，也自有他的道理。如果我们现在发起一场对驼背们的战争，所有的人一定立即兴奋不已，报复驼背们曾经犯下的罪孽。是的，也许驼背们也曾经犯过罪。为了看清楚人的本质，必须暂时忘记你我之间的分歧。我们可以把人分成左派和右派，驼背的和不驼背的，法西斯的和民主的，所有这些区分都不容置疑。但是你们知道，真相是那些将世界变得简单明了的东西，而不是制造纷扰混乱的发明创造。</strong></p>
<p>为什么喋喋不休地讨论各种意识形态呢？所有的这些讨论都只有引起人们对人崇高的怀疑和绝望。所有我们周围的人们，其实他们的需要都是一样的。我们希望得到拯救。那挥动铲子的人想知道自己究竟为了什么在挥动铲子。服刑的人挥动的铲子，让服刑的人自己觉得屈辱，它不同于勘探者挥动的铲子，让勘探者变得高大。牢狱不在那铲子挥下去的地方，牢狱在于他一万次地将铲子挥下去，却依然孤独地被关闭在自己的世界中，永远无法与外面的一切相聚相知。而我们，都渴望着从这样的牢狱中逃脱出来。</p>
<p>其他一些人，干着各行各业中打杂的衔接活。那些职业的本身，禁止了你拥有属于先驱者或者博学人士们拥有的快乐。人们以为，为了让他们成长，只需要给他们衣服穿，给他们吃的，满足所有他们的需要。渐渐地，他们变成了库特利那 8笔下的小布尔乔维亚，小城里的政客，或者是工厂里的技术人员，被琐碎的生活关闭了起来。他们虽然受了教育能读书写字，却毫无学养文化。他们平庸地以为，学问无非是自己记忆中的各种公式。专业课程里的蹩脚学生们，对自然科学了解得比笛卡儿还深刻，对法律比帕斯卡还掌握得全面。但是，他们是否拥有笛卡儿与帕斯卡的思考能力？</p>
<p>所有的人，有意识无意识地，都希望自己能存在着。令他们迷失的，是以哪种方式存在，以哪种方式让生命继续。是的，我们可以用军队的制服点燃他们的灵魂，让他们唱着军歌，分享着面包。他们就此能找到自己所寻找的，那种生存在宇宙间的滋味。可是面包一分享完，等待着他们的，却是死亡。</p>
<blockquote>
<p>当烟花冷却。</p>
</blockquote>
<h1 id="夜间飞行-Vol-De-Nuit"><a href="#夜间飞行-Vol-De-Nuit" class="headerlink" title="夜间飞行 Vol De Nuit"></a>夜间飞行 Vol De Nuit</h1><p>我们也可以让古老的传说复活，古罗马帝国的传说，或者泛日耳曼主义的传说。让德国人沉浸在作为贝多芬同胞的骄傲中。可是这样的偶像与崇拜，却是一种食人的陷阱。那些为了科学的进步，拯救他人的生命而牺牲自己的人，当他们的生命消逝的那一刻，他们也同时在为其他生命的到来做着准备。为扩张自己的国土而牺牲生命，或许是一种英勇壮丽的死亡方式。但是今天的这场战争，却与它开始时宣扬的一切主张背道而驰。这场战争到了现在这个阶段，已经远远不是靠流一点血，来激活自己的民族了。一场战争，当它开始动用飞机、芥子气，它就已经不再是一场血腥的外科手术了。每个人驻扎在自己的高墙后面，在毫无出路的情况下，各自用各自的海军纵队向对方投着鱼雷，炸毁对方的作战中心，切断对方的食物供给。谁最后一个腐烂，谁就赢得了胜利。最终，那两方敌人难免同时走向毁灭。</p>
<p>战争欺骗了我们，仇恨在我们向着同一目标的道路上，并不能为我们增添任何的灵感。</p>
<p>难道牧羊人就不期盼着，某一天他沉睡的思想与意识被唤醒？在马德里的前线，我曾经参观过一所建在山坡上，离战壕只有五百米的学校。 <strong>一位下士正在给其他的士兵们上植物学的课程。当他用手一片一片撕下虞美人的花瓣，向这些被战地的泥土与灰尘掩盖着头脸的战士们展示着花朵的构造结构，他引领着他们走向一场朝圣。他们安静地坐在四周皆是炮弹尘土的座位上，手撑着下巴，仔细地倾听着。他们眉头紧皱，咬着牙齿。虽然下士讲的那些东西大部分他们都听不懂，却固执地坚持坐在那里。因为人们曾经这么对他们说：“你们好像那些刚从山洞里走出来的野蛮人，你们得赶快追赶上这个世界上的文明人！”于是他们迈着自己笨重的脚步，向前走着。只有当我们意识到自己所扮演的角色的那一刻，哪怕是最普通渺小的，我们才会感到幸福。只有那一刻的清醒，才能令我们活在平静中，死时归于安宁。因为活着的时候人生有意义，死去时生命才不显得虚无。</strong></p>
<p>我曾经亲眼见证了一场三个农民在床前与他们的母亲告别的场景。那场面无疑是令人痛彻心肺的。那是他们人生中第二次脐带被割断，两代人维系在一起的那个结就此断裂了。从此以后，这三个儿子将独自面对人生的一切，从此以后，全家团聚的那一刻将再没有了母亲的踪影。然而在这生命断裂的那一刻，我却看到了一种延续与重生。三个儿子将成为家庭的领头人，一直到他们离开的时候，再将手中指引全家的力量，交给此时正在院子里玩耍的小孩们。我看着这个年老的农妇的脸，她平静而已经僵硬的面孔慢慢地变成了一张石头的面具。在这张面具上，我看到了三个儿子的影子。老妇人用她的身体、灵魂，打造了这三具男人的躯体。现在她破碎地躺在床上歇息着，轮到她的孩子们来继续播撒这家族的血脉。母亲死了，母亲万岁。母亲走了，将她白发苍苍的脸庞刻在了儿子们的身上。一代一代的传承与消亡充满了痛楚，却也在这种蜕变中，一步一步迈向某种不可知的真相。这就是为什么，那天晚上小镇上为死者鸣起的钟声，在我听来并不充满绝望，而是带着一种隐秘的轻快与温存。它奏响的并不只是死亡的哀悼，它也为重生的喜悦轻唱着。它宣告着由一代人到另一代人的转换与过渡。当我们听到，这老妇人与大地结合在一起的歌声时，内心体味到的，是无限的平静。</p>
<p>她的坏脾气，她发黄的手套和起茧的手，她所有的慈祥和固执。</p>
<p>母亲传递的并不只是生命，她还教授着一种语言，把自己掌握的几个世纪以来的思想的遗产，交到了儿子们的手中。正是这些来自每个家族特有的概念、神话，才造就了牛顿与莎士比亚，让他们不同于一个普通的粗糙的生命而存在着。 <strong>我们内心深处感觉到一种饥饿，是这种饥饿，将西班牙的士兵推向植物课的讲台，将梅尔莫兹带到了大西洋南部。因为这种饥饿的存在，人类“创世纪”的篇章才将继续书写着，它让我们了解自己也认识宇宙。</strong></p>
<p>我对自己说，这些人其实并不对自己的命运感到苦恼。而令我痛苦的，不是这个世界缺少仁慈。这不是一个永远打开的伤口，你只需要小心轻柔地对待它，就能解决一切的问题。那些身上满是伤口的人们，他们甚至都没有感觉到它的存在。受伤的，其实是人类本身。令我痛苦的，是关于园丁的故事。 <strong>令我痛苦的，不是苦难，因为人自己把自己安置在苦难里，就像陷入一种慵懒与习惯中不愿自拔。</strong> 东方的一代又一代人生活在污垢里，他们却乐得其中。 <strong>令我痛苦的，是国家救济的粮食无法解决的。令我痛苦的，既不是驼背们，也不是眼前的丑恶。令我痛苦的，是每一个人身上，被谋杀了的莫扎特。</strong></p>
<p>全文。我非常感谢作者，向我们大家揭示了一个看似矛盾，却又是人类心灵路程中至关重要的一个真理：人生的幸福不在无拘无束的自由中，而是在承担与接受使命的责任中。小说中所有的人物，都将自己的一切献给充满危险的夜间飞行任务。一架又一架的飞机在夜空中平安地起飞与降落，才是他们渴求的幸福的归宿。</p>
<p>里维埃所讲述的，也许正是所有英雄主义的源头。“我们总是将这样那样的价值置于人宝贵的生命之上。这些价值究竟是什么？”“也许，除了个人的幸福，他们可以拯救和创造某种更持久、永恒的东西。里维埃和他的团队，也许，就是为此在日夜工作着、奋斗着。”</p>
<p>时刻冒着生命危险的飞行员，是有权力对普通人脑海中所谓的“勇气”轻轻微笑的。</p>
<p>我也终于明白了，曾经令我非常困惑的一个问题： </p>
<p>人的富有来自他的苦难与艰难，也来自他对简单生活的接纳，比如此时此刻，从这扇窗户静静地眺望着外面的风景。</p>
<p>天空中宁静的云朵少有褶皱，如同那港口平稳安详的水花。</p>
<p>所有那些让普通人的生活显得温存的细节，他们的家，手里的咖啡，散步道上的大树，在他眼前无限地扩大。他像是一个征服者，弯下腰来观察着那个即将被他征服的王国，却在无意中发现这王国中的人们谦逊简单的幸福。他需要放下武器，感觉自己身体的沉重与疼痛。人的富有来自他的苦难与艰难，也来自他对简单生活的接纳，比如此时此刻，从这扇窗户静静地眺望着外面的风景。这个小村庄接纳了他。而他，则因为它偶尔的存在而感到满足与喜爱。</p>
<p>光亮。面对黑夜，每一幢房子都点亮自己的星星，好像是对海洋般深邃的夜晚的一种回答。有人的地方，就有跳动的灯光。法比安喜欢这种进入黑夜的方式，好像慢慢驶入一个港湾，缓慢而美丽。</p>
<p>他们以为他们的台灯点亮的只是自己那张简陋的桌子，却不知远在八十公里外的高空，一个飞行员正被这闪闪灯光的呼唤深深地打动着。</p>
<p>里维埃担心，人群中那些崇拜者热情洋溢的感叹之词，会掩盖这场旅途本身的神圣性。</p>
<p>成形。他并不想企图用自己的严厉和不近人情去征服他的团队们，而是希望他们超越自己。尽管他惩罚所有误点起飞的飞机，尽管他的各种措施里充满了不公正，同时也因为这些惩罚，他令飞行员们在每一次起飞时，都拥有和停靠时一样的意志。这种意志是由他里维埃创造的。他不给他的团队们休息的快乐，而是始终用一根无形的绳索牵引着他们的毅力。</p>
<p>每天工作完毕，他都是一成不变地回到自己的房间。他关上门，从箱子里拿出一沓纸，慢慢写下“小结”的抬头，漫不经心地涂上几笔后，又把纸撕了。他希望自己能将航空公司从某种巨大的危机中解救出来。问题是，公司到目前为止，还没碰到任何严重的问题。</p>
<p>他望着人行道上的人们，寻找着和他一样，因为某种爱或者创造漫步前行的人。他想起点灯人的孤单与寂寞。</p>
<p>他的。用不了多久，当他像一个年轻的希腊神一样地带动着地上的尘土，爬起身，城市中的灯光都将因为他而显得黯淡。她</p>
<p>她躺在床上，忧伤地看着那些花朵、书和空气里的温柔。所有的一切，对他而言，都如同大海般深沉了。</p>
<p>“我把他从恐惧中拉了出来。我要攻克的并不是他本身，而是人在面对未知情况时，那种不由自主的抵制情绪。而正是这种抵制，让行动停止前进。如果我倾听他，同情他，他就真的以为自己是在某个神秘的国度经过了一场历险。而他所恐惧的，正是这种神秘与不可知。人只有在走下了那口阴暗的井，发现里面什么都没有，再重新爬上地面的时候，才能摆脱神秘带给他的恐惧。而这位飞行员，只有在走入最深厚隐秘的夜色以后，才能看清楚那未知中隐藏的一切。”</p>
<p>这个女人所讲述的一切，是属于她那个世界里的真相。夜晚餐桌上点亮的台灯，一个生命对她另一半的呼唤，那个国度里的温柔、希望与记忆。她要拿回属于她的这一切，她也完全有理由这么做。里维埃有属于他的真相，但是他没有办法也没有权力否认她所寻求的。他的真相，在家的台灯下，显得那么难以启齿，那么没有人情味。</p>
<p>“这些也许哪一天会失去生命的人，他们本可以幸福地生活着。”他仿佛看见那些在夜晚的灯火中，朝着金庙望去的人热切的脸庞。“我有什么理由把他们从那里面拉出来？”他有什么权力剥夺他们属于个人的幸福？难道他不应该保护他们享受幸福的权利？而他，却是那个粉碎这一切的人。可他又清楚地知道，个人渺小的幸福，总有一天会如同那金庙前的幻景一样，蒸发消失。衰老和死亡会以一种更残忍的方式摧毁它。也许，除了个人的幸福，他们可以拯救和创造某种更持久、永恒的东西。里维埃和他的团队们，也许就是为此在日夜工作着、奋斗着。</p>
<p>“爱，如果我们只是去爱，那会是一条没有出路的死巷子。”里维埃的内心，隐约地感觉到某种比单纯的爱更崇高的责任。那好像也是一种柔情，只是它更特殊，独一无二。他的脑海里浮现出一个句子：“我们追寻的，是一种永恒……”他是在哪里读到这个句子的？他想起自己曾经见过的那座秘鲁印加帝国时期的太阳神古庙宇，那些堆砌在山顶的巨石。如果没有了这些如同某种悔恨的隐语一般，压在今天人们灵魂上的这些石头，那么这曾经如此伟大的印加文明还剩下些什么？“昔日那些古民族的领袖，是出于一种残忍，还是出于某种深厚的爱，强迫他的人民，在这高山上堆砌这些石头，建造着某种不朽？”里维埃又想起小城里的夜晚，那些围着报亭的音乐起舞的布尔乔维亚。“他们的那种幸福……”也许，令昔日的领袖们深深同情的，不是他的人民遭受的苦难，而是他们终有一天的消亡散落。不是个人的死亡，而是这个民族终有一天将在这片沙海中不见了踪影。于是，他引领着他的人民在高山上堆起千百吨的巨石。因为至少这些石头，永远也不会被沙漠湮灭。</p>
<p>她在此地的出现，向所有人揭示着，幸福在另一个世界是多么神圣的东西。而他们所有的这些人，是如何完全没有意识地，在进行着自己的行动的同时，一手摧毁了这个女人的平静与幸福。</p>
<p>她发现，那属于她的真相，在里维埃他们的世界里，变得难以启齿。所有那些炙热的、近乎原始的爱与奉献，在这里都显得那么自私。她想立即逃离这个地方。“我一定非常打扰您……”“您不打扰我，”里维埃说，“不幸的是，女士，在这种情况下，您和我，除了等待，没有其他能做的。”</p>
<p>里维埃怀着这所有一切创始者的信念，看着他的秘书、机械师和飞行员们。所有这些人都帮助着他，在打造属于他们的作品。他想起古时候那些小村庄的村民，因为听说在某些遥远的地方有很多美丽的小岛，而一起建造出海的船只。那条船载满的是村民们的希望，是它让人们终有那么一天，可以撑开船帆，行驶在大海上。“这行动中会有人因此死去，他们最终也许什么都证明不了。而这些人，只因为那条船，坚持自己所相信的。”里维埃与死亡搏斗着。当生命重新点燃他的作品时，就如同风吹动着航行在海上的帆船一般。</p>
<p>重新开始战斗的里维埃，不愿意错过飞机隆隆的声音。他要听着它的出生、成长和壮大，如同一支行走在星辰中的军队的脚步。</p>
<p>他只要叫停一架飞机的起飞，夜间飞行所有的意义将从此丧失。他选择走在那些弱者前面，尽管也许明天早上，所有的人都将反对他的决定。</p>
<p>胜利，失败，这些字眼是没有意义的。生活超越了所有这些词汇，也早已绘制出后面的画面。一场胜利会让一个民族变得孱弱，一次失败则会唤醒另一个国家。里维埃经历的失败，也许是他赢得最终胜利所必须签署的契约。只有不停地前进，才是唯一的真理。</p>
<p>里维埃慢慢地走回自己的办公室，眼神依然严厉地看着这些工作着的秘书。伟大的里维埃，成功的里维埃。他的肩上背负着的，是胜利的沉重。</p>
<p>20世纪初，因为技术上的大量限制，令飞机的夜间飞行还只是局限在军用飞机的领域。那个年代，驾驶一架飞机和今天相比，复杂性与困难程度都是不可同日而语的。今天民航的电脑自动驾驶在当时是完全不存在的。也就是说，飞行员只能依照事先的路线设计，在空中根据地图以及飞机上各种数据的显示，来判断当前的位置是否和预计的相同。任何未知的天气变化，引擎故障，加上当时雷达技术发展的不完整，令飞行员在每一次起飞时，都面临着生死的威胁。就是在这种条件下，航空业作为运输行业的“起步者”，为了在与铁路和水运的激烈竞争中占据一席之地，拉泰克埃尔公司才投入到夜间航线的开发中。从此，对于飞行员们来说，将要面对的危险，将不仅仅是天气的突变与技术的局限，还有茫茫深不见底的黑夜。里维埃这个人物的高大之处，在于他用尽一切方法鼓动着他的飞行员们，让他们打破人自身的局限。正是这种以牺牲普通人的幸福安逸为代价的，对高远理想，对一切未知世界饥渴的探索与追求，让航空业从最初的举步维艰发展到今天，变成了最常用的交通工具之一。当第一架载着邮件的民航航班在深夜时起飞，一封邮件从欧洲大陆抵达南美洲的时间由几个月被缩短到几天，里维埃和他的团队们开启创造的，不仅仅是时间上的纪录，更是属于人类本身的奇迹。</p>
<p>“我不后悔。我认真地玩了这场游戏，虽然最后我输了……无论结果如何，大海上的清风，我是呼吸过了。”</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 书摘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[原来这一切都可以讲述 - 2017年度总结]]></title>
      <url>http://chocoluffy.com/2018/01/01/%E5%8E%9F%E6%9D%A5%E8%BF%99%E4%B8%80%E5%88%87%E9%83%BD%E5%8F%AF%E4%BB%A5%E8%AE%B2%E8%BF%B0/</url>
      <content type="html"><![CDATA[<p>嘿！你今年22岁啦，你明年就将从多伦多大学的计算系毕业了。你在今年成为了一名创业者，你想做很多很酷的事，你还记得吗。在时光的边缘回望这一年，有太多的记忆你想留住。你一点一点往回走，想跟上你的影子。</p>
<a id="more"></a>
<p><img src="https://ww4.sinaimg.cn/large/006tKfTcgy1fn1icxmdr1j31kw0zk1l0.jpg" style="display: block; margin: 0 auto; border: none"></p>
<h2 id="one" style="text-align:center;">【一】</h2>


<p>这一年，你重读了许多你特别喜欢的作家。比如加缪，比如纪德。他们无不都对这个世界体察入微以及拥有极致的想象。你想，要入世，要反抗。</p>
<p>这一年你最喜欢的还是加缪的《鼠疫》还有毛姆的《刀锋》。你在想，为什么要反抗鼠疫，以及为什么要跨越刀锋。一场灾难想要提醒你什么呢。鼠疫宛如过家家似得，就任性地走了。人们也任性地忘却了，满城烟火地庆祝。作者赐死了看得最清楚的塔鲁。塔鲁一生追求着一个没有死刑的社会，一辈子的信仰，毫不犹豫。作者让帕纳卢神父，一个传授神的旨义的人，去亲眼见证一个孩子的死，去犹豫一些自己曾经奉为圭皋的心意。作者让小说主角，坚持抵抗在第一线的里厄医生坦白自己的迷茫。作者说真正的英雄是格朗，兢兢业业在二线工作的职员，愿望是为异地的恋人创造一篇序语，却在最后一刻去掉了所有的修饰。你在想到底什么是荒谬？</p>
<p>荒谬是命运无常。是把最精美高贵的生活捣碎给你看，看，没想到吧。荒谬也是哪怕一丁点温柔的改变。是最坚硬的钢板眦裂的小缝，是曾经不可动摇的不再不可动摇。荒谬也是倔强。是我不必厘清意义，也执意反抗。</p>
<p>无常，带有微小的改变，也偶尔倔强。你发现原来加缪想写的荒谬，写下的却是我们的生活。</p>
<p>你看见了坚定地守望着地平线的眼眸，也看见了广场上震耳欲聋却空洞飘渺的烟火，他们都是快乐的，而他们的快乐有区别吗？你越来越确信着这一点，每一个人都是一座孤岛。人无法分担他未曾经历过的痛苦，一如他听得见却听不懂远方同类的呼救，哭泣与愤怒。人依旧是这个老样子，想要的正是唯一取决于他们自身的东西。你感到些许惋惜，却也想到，这也正是他们的力量和无辜所在。你说，要入世，要反抗。或许他人即地狱，亦同他人即救赎吧。 ​​​​</p>
<p>你发现，原来这就是刀锋。</p>
<p>你一定会好奇自己的答案。相比绝对的自由，你更偏爱责任与羁绊。这或许解释了为什么这一年你偏爱纪德多于毛姆吧。你想追逐一些比时间更长远一点的东西。你想带来笑容。</p>
<p>你也在寻找加缪的答案，你发现他关注活着的人的命运胜过一切，你也深受影响。你很尊敬他的态度。他写道，“为了改变天生的无动于衷的立场，我曾置身于苦难与阳光之间，苦难使我不相信阳光之下一切都是美好的，而在历史中，阳光则告诉我，历史并非一切。”</p>
<h2 id="two" style="text-align:center;">【二】</h2>

<p>这一年，你创建了自己的公司，迎来了一些新的伙伴。你做出了一些成绩，你在着手准备着更大的挑战。你遇见了很多很优秀的创业前辈，你要开拓眼界。你发现其实很多争议都因为模糊的语境，每个人都在用自己的经历和审美下定义。说服投资人也好，团队伙伴也好，不要想当然。你要有全面的把握，才能有偏执的资本。你其实不止一次在问着自己那些海贼王里没有画出的情节，你会在想路飞如果是你，你会怎么做。你要记得这一年来最享受的时光，是和你的伙伴一起打拼。</p>
<p>这一年，你搬了一次家。你临走前把房间清理地干干净净，就像刚来时那样。这一年里你在这个家里带着团队开发了大大小小的项目，也渐渐成为了公司的雏形，你要记得那些天真的想法，纯粹的热情，那些在屏幕前闪烁的蓝色的夜。这一年你和很要好的朋友一起上班，一起上课，你要记得室友起床晚，早上烧水要轻。搬走前的那天下午你在阳台上吹了很久很凉的风，你回忆并诧异着很多的幸运和巧合，你仔细地把它们藏好，不被吹散。</p>
<p>这一年，你度过了你22岁生日。或许也和生命里的其他日子没有什么不同，你遇见着自己最熟悉的人。你收到了很多卡片和祝福，你回复了更多的卡片和祝福。你其实心里很明白，成长的仪式，更多时候是自己给的。你不会因为许了一个愿望就长大一岁，但你也渐渐发现，你因为一个日子而被挂念着，你觉得很温暖，你喜欢多伦多的冬天多了一个理由。</p>
<p>这一年，你听到了一首很喜欢的钢琴曲，你买了一架电子琴开始从零学起，你想在未来有一天弹给她听。</p>
<p>这一年，你开始相信，这个世界在你心里呈现的样子，远比这个世界本身重要。</p>
<p>这一年，你中了很深的存在主义的毒。</p>
<h2 id="three" style="text-align:center;">【终】</h2>

<p>你把一年来的书稿，日记翻了遍。你有点诧异原来一个人的世界可以被这么短暂地概括，原来回忆如雪，你未曾留意的地方只会是白茫茫的一片。你像是一个在雪地里行走的人，当你现在回望着，你沿着留下的脚印一步一步，你只在你自己的角度遥望着世界。</p>
<p>你要记住，这很片面，却也是你唯一能做到的事。</p>
<p>这一年，你发现自己对这个社会还是充满希望，发现了几个特别崇敬的作家以及他们磅礴的世界，发现自己依旧喜欢着海贼王，憧憬着冒险。</p>
<p>你慢慢感觉到，你的所有回忆，所有留下的文字，不只是给你慰藉，允许你逃离。那些隐秘的不安，那些明亮又失落的沉默，你社会上同胞们的倾诉，他们的苦衷与期盼，这个光怪陆离却时常打动你的世界等等，原来这一切都可以讲述，也值得讲述。似乎是有了一种线索， 于是，波澜也好，平淡也罢，当这些痕迹再次出现在身边的时候，你一眼就认得出来。</p>
<p>分别2017年的最后这一天，恰巧是多伦多今年最冷的一天。这像极了某种远古的仪式，你捧起丰盛的回忆碎片，然后存封进冰里。</p>
<p>不是所有的心事都有出口，于是你挑了几片，紧紧护在了怀里。你期待着和别人交换碎片的那刻，你期待着被理解，像一束光簇拥着另一束光。</p>
<p>或许未来有一天你会无意间翻到这篇日记，或许你会嫌弃现在的幼稚和天真，像嫌弃画里老去的自己。你会有很多的伤口，更多的疤痕。你会摔碎很多曾经无比珍贵的东西，为了守护一些更重要的东西。</p>
<p>但无论如何，希望那时候的你，依旧坚定，依旧温柔。</p>
<p>再见了，2017。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
            <tag> 年度总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[鲸语的创业故事 - 聚焦生活服务的搜索引擎]]></title>
      <url>http://chocoluffy.com/2017/09/26/%E9%B2%B8%E8%AF%AD%E7%9A%84%E5%88%9B%E4%B8%9A%E6%95%85%E4%BA%8B-%E8%81%9A%E7%84%A6%E7%94%9F%E6%B4%BB%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</url>
      <content type="html"><![CDATA[<p>“我希望辍学一年全力开发出高质量的新功能”，这是我对鲸语下一阶段的约定。</p>
<a id="more"></a>
<p>鲸语，是一个聚焦生活品类的搜索引擎。聚合了当下媒体平台诸如：微信，微博，今日头条，知乎和Facebook等等的多伦多本地高品质资讯，并利用全自动化的自然语义处理，来推送给用户当下最值得留意的内容和服务。</p>
<p>这是我对鲸语的愿景，也是今年年初我利用圣诞假期前后三个月开发时，不断自我提醒的目标。我希望让用户高效率的获取信息，宛如在浩瀚海洋里倾听见鲸鱼的低语一般，用户不应该错过任何一条有价值的内容，这也是这款应用名字的由来。目前鲸语下载量在苹果商店多伦多搜索排行榜位列第四，多伦多攻略一类名列第一。</p>
<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fko195hcs9j30yi0lf3z6.jpg" style="display: block; margin: 0 auto; border: none"></p>
<p>这也是我就读多伦多大学的第三年。</p>
<p>直到现在我依旧印象很深的是当初我拖着行李离开机场被同系师兄接上了车，一路上我听着师兄们聊着那些校园周边的新鲜事，那些新开的餐馆和奶茶店，那些社团的纠纷和变故，乃至毕业后职场的迷茫等等。那些陌生的名字和街道，宛如一罐罐精美包装的糖果吸引着我，我听得见我内心的声音，“我希望更快地融入这个城市”。</p>
<p>在一番搜索后，我手机留下了两个App，一个是51黄页，一个是觅迷，这两个应用分别从大而全，精而细的角度提供了很棒的攻略。每当在两个应用间切换的时候，我也在思考，有没有可能提供一种折中的方式，既具备广泛的品类，又能提供精致的视觉呈现和服务呢？我的注意力慢慢转移到了微博和微信上。</p>
<p>如果有应用能够像搜索引擎一样，聚合起来各个平台的内容，以跳回原平台地址的形式保障内容生产者的利益，也提供用户高效的资讯获取方式，会不会很实用？接下来的三个月，我利用课余时间着手实现这个想法。</p>
<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fko1aqw2iej30yi0ht7c5.jpg" style="display: block; margin: 0 auto; border: none"></p>
<p>在iOS的应用上架，Android应用调试的时候，我让我一些社团朋友来试用。也很惊喜地发现，苹果应用刚上架的前两天就积累了近千名用户，曾一度出现在苹果商店新闻推荐的列表里。慢慢地，有不少社团联系上我，表达希望提供校园内活动的意愿，以及一些健身类的机构，家庭厨房和房屋租赁中介愿意达成广告合作。这些商业合作的拟定，也让我确信这是一个机会，我希望把它做得更好。</p>
<p>我之前在社交数据分析公司实习的经历，和目前在实验室和导师研究的项目都让我意识到，高质量可供分析的数据和一套支持数据产生的框架系统是多么重要。也是从第一天开发起，我也将鲸语打造成高度自动化的系统。直到目前鲸语达到近9000名用户的时候，我依然没有在运营、管理应用上有任何花销，维持在当前4人的学生团队，相应地和机构的合作也让鲸语一直处于盈利的阶段。</p>
<p>现阶段的鲸语同时结合了目前人工智能的先进成果。鲸语可以利用用户拍摄的照片，进行智能识别照片内的主体，并推荐相关的攻略，更进一步的应用场景会结合到社交圈子的背景下，更好地连接社交图片的分享和对应服务提供商。</p>
<p><img src="https://ww3.sinaimg.cn/large/006tNc79gy1fjxxpzywzhg30b40hs7wh.gif" style="display: block; margin: 0 auto; height: 500px"></p>
<p>鲸语的下一阶段，是注重接入更多的机构和服务，基于目前搜索引擎的收纳优势，实现更精准地资讯投放和广告服务，为机构提供细分到人群的用户画像和兴趣分布，推出不同价格层级的合作模式，更好地为本地服务提供宣传曝光的机会。</p>
<p>同时鲸语也将涉及更多的品类和平台，积极撮合和本地流行华人杂志的合作，为用户提供更完整的全平台阅读体验。</p>
<p>日前鲸语正在与多伦多校方孵化器取得联系，评估进驻多伦多大学创业园区的机会。同时也在接触业界的投资人，寻求25-40万种子轮投资的机会，进一步扩大团队和支持市场宣传和营销。</p>
<p>作者介绍：余舜哲，现多伦多大学计算机科学大四学生，鲸语的作者，鲸语科技公司的联合创始人。大一参加麻省理工国际遗传工程机器设计竞赛获最佳软件奖和金奖，大二赴加州伯克利交换学习，大三赴多伦多大学并在业界开始为期一年数据科学的实习，现大四结束实习返回学校实验室跟导师继续关于社交网络的研究。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> react native </tag>
            
            <tag> 创业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[鲸语 - 一名多大校园开发者的独白]]></title>
      <url>http://chocoluffy.com/2017/07/05/%E5%86%99%E5%9C%A81-0%E5%8F%91%E5%B8%83%E5%90%8E%E7%AC%AC50%E5%A4%A9-%E9%B2%B8%E8%AF%AD%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E7%8B%AC%E7%99%BD/</url>
      <content type="html"><![CDATA[<p>编者按：三人的学生团队，历时四个月，从零开始开发应用，冲进了App Store新闻资讯类榜单全球前30，并登顶“多伦多”相关应用的搜索结果。这篇长信，来自鲸语的开发作者，关于校园开发者的经历，关于鲸语诞生的初衷，以及他和伙伴之间的故事。附<a href="https://appsto.re/ca/klNuhb.i" target="_blank" rel="noopener">App Store下载链接</a>。</p>
<a id="more"></a>
<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fko195hcs9j30yi0lf3z6.jpg" style="display: block; margin: 0 auto; border: none"></p>
<p>“按下确认，鲸语就算正式发布咯”，小G把手机递给我。</p>
<p>“……”</p>
<p>我侧过头，熄灭的屏幕里映出我们三个人的剪影。思绪暗涌，或许半年前的我不会预想到这一刻。从一无所有开始，这是对我们，对鲸语，很意外而深刻的一段时光……</p>
<h2 id="一个人到一群人-鲸语的前生AirLoft"><a href="#一个人到一群人-鲸语的前生AirLoft" class="headerlink" title="一个人到一群人 - 鲸语的前生AirLoft"></a>一个人到一群人 - 鲸语的前生AirLoft</h2><p>鲸语的源头，如果硬是要追溯回去，那是在2016年4月1号上线的一个粗糙网站项目AirLoft。 </p>
<p>那是我刚接触计算机学习一年以来第一个独立完成的作品，印象蛮深刻的，因为那是学院CSC309课程的一个团队项目，可能是当时对网站技术的痴迷，一个人完成了所有的开发。想法挺简单的，每个人都可以发布自己能提供的服务，然后你可以基于地理位置的远近看到别人所能提供的服务，以促成交易。当时就连项目名字起得也是特别粗糙，loft，阁楼嘛，通常大家和朋友分享私密事的地方，前面加个Air，也是傻乎乎地致敬当时最火的平台Airbnb。</p>
<p>AirLoft或许也可以被粗译成，空中楼阁，这或许也是我所有空中楼阁想法的起点。</p>
<p>“我希望能够基于地理位置连接你和周围优质的服务”，还记得当时我在一个项目分享会上这么讲。那是华人技术社团UTADA每年都会举办的项目展示大会，不大的房间里塞满了人，宛若一场小型发布会，每一个项目的发起者依次阐释着自己的想法和进度，来吸引在场的人组建最初的团队。有希望开发桌面宠物的，有希望打造异地情侣合照App的，还有一系列从外卖到选课承包了几乎所有校园生活的想法……场下出奇的安静，我脑海里飞速地闪过想法实现的技术框架，身子却一动也不敢动生怕椅子咯吱作响。现在回想起来，那或许也是那段时间里除学习之外少有的几个笨拙而严肃的时刻。</p>
<p>从讲台上下来，逆着投影的光，台下稀稀拉拉的掌声，总给人一种谢幕的错觉。可值得庆幸的是，AirLoft成了当场分享会最受欢迎的项目，几近半屋子的人在结束后找我询问项目的开发和发展表示希望加入团队。想起这一两年来被其他厉害的师兄带领的经历，这一次我义无反顾地承担起领队的责任，欢迎着每一个人的加入。来自于社团里的20余人，这应该是AirLoft最初的开发团队构成。还记得当时，我觉得我是最幸运的领队。</p>
<p>只是……</p>
<h2 id="回到一个人的战斗-鲸语的出现"><a href="#回到一个人的战斗-鲸语的出现" class="headerlink" title="回到一个人的战斗 - 鲸语的出现"></a>回到一个人的战斗 - 鲸语的出现</h2><p>学生开发者本身其实是一个蛮尴尬的身份，一方面作为紧密的学生群体的一员，我捣鼓开发的东西可以很快被很多人了解，使用甚至因此让我获得赞誉，而另一方面我也很清楚地知道自己不过也只是业余选手，无论在能力还是经验上。</p>
<p>可即便很业余，这却是我向往的生活的一部分，一种能够真正把想法实现出来的自由感。</p>
<p>那是我正式接触计算机专业学习的第一年，我用平时的空闲时间揽下了特别多的开发任务，各种博客，网站，游戏还有VR，也慢慢认识了很多同样喜欢开发的同学，很幸运地成为项目领队，之后再成为社团技术部的负责人。可是……也渐渐地，开发涉及的领域越来越多，支持想法的技术难度越来越大，作为学生，我也越来越难去说服别人去牺牲业余时间和你一起挑战一个工程难题，去完整一个商业想法。</p>
<p>没有什么能够承诺的余地，或许正是学生开发者乃至校园创业者相似的现实。它无法承诺你的GPA抑或者履历，更多的也只是在打点好自己学习和生活之后的兴趣而已。而路越窄，越人迹罕至。志同道合绝对值得感恩，而更大多数的时候，这是一个人选择的战斗……</p>
<p>还记得那个时候在AirLoft的开发阶段，我正在研究怎么处理文本之间的相似度，为的是可以帮助用户找到更贴切相关的服务。我记得特别清楚，那天晚上在家，我正拿UT助手历史上两百多篇文章来测试算法准确度，当屏幕上突然亮出结果的时候，我心里也突然亮出一个念头—</p>
<p>“说不定我可以把整个多伦多范围的资讯和服务都串联起来而不仅仅只是校园范围的……”</p>
<p>“……”</p>
<p>我静默下去。和往常那些浴室里的胡思乱想不同，我感觉到这一次的想法远非不可实现，回想起当初自己刚来多伦多的时候大到租房，退税，小到选课，买零食却需要翻遍各个网站、论坛、公众号和微博查攻略的繁琐，如果能有一个应用把这些攻略像归档一样整理好，每一个话题都能收纳到所有相类似的实用文章，再告诉你离你远近哪里可以找到……感觉会挺实用的不是嘛。我打赌当时的我绝对不会想象到几个月后一个手机应用的上架乃至进入排行榜，更别说现在加入的人工智能，场景识别和视频一系列更复杂的技术等等。当时就是那么一霎那，我觉得这应该是AirLoft真正去实现的方向，这能够真正帮到大家，而我，可能可以把它做出来，那么我来试试吧。</p>
<p>没什么恢弘的铺陈和情节，创造鲸语的想法就那样突如其来地出现了。</p>
<p>现在回想起来，还真有点像村上在书里谈论他做出决定写小说的那个瞬间—坐在神宫球场外听见清脆的击球声，“哦对了或许我也可以写小说……”。</p>
<p>余下的那晚，和接下来那几天我或许并没有什么特别，上班，请假上课，写作业和准备考试依旧占据了我生活绝大多数的时间。只是在每天那剩下来的一小会儿时间里，我脑海持续地被这个想法占据，碰巧半年前在图书馆里看完了整场Facebook开发者直播，也了解到了最新React Native跨平台开发App的方案。拥有接近半年React开发网站经验的我决定来啃啃螃蟹，谁知道呢，反正也没什么人试过，但是这真的很酷啊。</p>
<p>当时只是觉得自己不过是做了一个很小的决定，小到就有点像是在选择晚餐是配苹果还是橙汁这样无关紧要的选择，可现在想起来，当时的那个决定或许是基于我一个从未开发过iOS应用的初学者最好的决定。熟悉的技术理念和开发语言，也让我两个月用周末业余时间把鲸语的雏形开发出来成为可能。这期间经历的困境，并不像纸面上“两个月的业余时间”这么潇洒的概括，那些因为框架方案太新导致没人处理的漏洞我不得不写出奇奇怪怪的解决方案，那些直接和陌生开发者讨论实现方案长篇累牍的邮件，还有每几周迎来的新的开发观念的消化带来的一系列项目的变动……这一切都历历在目。</p>
<p>我无法评论我未曾选择的路，但我所经历过的那些尝试起伏，那些明亮的失落的瞬间，都作为一部分成就了鲸语最初的样子。</p>
<p>当初写在鲸语1.0发布文章里的那句话依然能诚恳地回望我这一段鲸语初期的开发—</p>
<p>“谁没有些从陌生到渐渐开窍的故事呢，或许没有那么多理所当然和信手拈来，不过举重若轻罢了。”</p>
<h2 id="伙伴-记在鲸语1-0发布之后"><a href="#伙伴-记在鲸语1-0发布之后" class="headerlink" title="伙伴 - 记在鲸语1.0发布之后"></a>伙伴 - 记在鲸语1.0发布之后</h2><p>无论问我多少次，对鲸语来说最重要的部分是什么，最重要的经历是哪些，我都会毫不迟疑地回答，是伙伴，是鲸语团队里的伙伴们，是一路走来志同道合的伙伴们。</p>
<p>我特别喜欢的海贼王漫画，讲着一群人为了各自的梦想相互守候一起冒险的故事。很幸运地，在鲸语成长的路上，我也渐渐找到了值得依赖的伙伴。</p>
<p>认识小G，是在羽球场上两个左撇子相遇的意外。谁也没有想到，接下来的一年，小G以新任社长的身份带领UTADA在各个对外活动上接入正轨，为鲸语项目的产品化，商业化出谋划策。在每次鲸语的重要决策之前，我脑海里都会浮现小G的一句话，“即便是最糟糕的结果，也不过只是维持现状罢了……”。很平淡的字，却每一次给我决意的勇气。小A，很有灵性的设计师和开发者，鲸语的logo和许多样式均出自小A之手，印象特别深刻教会小A项目技术背景的那晚，他凌晨三四点发来App改进的界面图，我只能用完美来评价……他们的加入，像是静寂了很久的路上慢慢传来的烟火声，我渐渐学会把所有心事都拿出来说，好话，废话，美好的愿景，耍过的机灵都抖落出来。我曾深知孤独的必然，而所有交错的经历，共同的承担，都成为恩赐而值得深深铭记。</p>
<p>是被“驯服”过的，于是玫瑰的名字，不再重要。</p>
<p>距离鲸语1.0的发布刚走过不多不少的50天，盛大，冷却，到再出发，无意却像极了过往的这一年。我一字一句地斟酌，写不出的青涩和匆忙像留不住的沙漏，笨拙却无比真实。</p>
<p>静静地在图书馆敲下这些字的时候，也是多伦多一段绵长的雨季正式结束的时候，终于迎来的夏天，像终于等来的恋人，空气里弥漫着绵软如絮的热烈。</p>
<p>我坐在E.J.图书馆最靠窗的位置，能瞧见整个Queens Park的慵懒和喧闹。屏幕一角那三人剪影的位置，依附着午后阳光的一块。阳光很暖，温顺一如眼眸。</p>
<h2 id="写在后面的话"><a href="#写在后面的话" class="headerlink" title="写在后面的话"></a>写在后面的话</h2><p>留下上面每一字的时候，是鲸语1.0刚发布的第50天。很幸运，在它的第100天，2.0如期而至。变化的是几近所有的功能和样式，这期间我们去拜访了很多业界的前辈，去展示，去交换，去见见外面的世界，也默默低下头去记下了每一处鲸语的伤。更庆幸那些没有变化的，那些依旧会紧张的，却也依旧高涨的情绪， 那些如同记录自己成长般记录鲸语成长的坚持……</p>
<p>很感激这期间相遇的每一个帮助过鲸语的人，尤其是校园里反馈尤其积极的同学们。我们为下一步画下了更难的挑战，要更踏实地去实现呢。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> react native </tag>
            
            <tag> iOS </tag>
            
            <tag> 创业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[未选择的路 -《刀锋》读后感]]></title>
      <url>http://chocoluffy.com/2017/06/17/%E6%9C%AA%E9%80%89%E6%8B%A9%E7%9A%84%E8%B7%AF-%E3%80%8A%E5%88%80%E9%94%8B%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>对于《刀锋》还是有蛮多可以探索的主题的：</p>
<ul>
<li>为什么是刀锋。</li>
</ul>
<p>舅舅艾略特至死都崇望着上流社会的认可，他是穿着爵位的华服去世的。每个人都获得了幸福的结局，不同的人生，不同的快乐有区别吗？为什么是刀锋？为什么我要跨过去？</p>
<ul>
<li>“上帝为什么要创造邪恶呢？”拉里一生困惑的问题。这个问题重要吗？</li>
</ul>
<blockquote>
<p>[2018.7.28更新] 在看完了黑塞的《德米安》之后，发现基督教徒在真实面对这个光明和黑暗并存的世界的时候容易产生相类似的困惑，因为他们的教条尝试在掩盖邪恶的存在，并不愿意承认一个一分为二的世界。你要么相信上帝既是正义也是邪恶的，要么同样崇拜一个邪恶的神。</p>
</blockquote>
<ul>
<li>关于毛姆作家的。</li>
</ul>
<p>艺术充满力量，那通俗呢？那真实的？通俗有什么力量。“如果你志在追求艺术追求文学，那么去读一读希腊人写的东西好了。 <strong>因为要诞生真正艺术，奴隶制度是必不可少的。</strong> 而古希腊人便是这样：奴隶们耕种、烧饭、划船，而市民们则在地中海的阳光下陶醉于吟诗作赋，埋头于数学解析。所谓艺术便是这么一种玩艺。至于半夜三点在悄无声息的厨房里检查电冰箱的人，只能写出这等模样的文章而那就是我。” 来自村上的一段话。</p>
<ul>
<li>小说的细节描写。</li>
</ul>
<p>那个灯塔扫入医院的光，那个第二天凌晨腿的颤抖。以及很多来自作者本人的视角的描述。在与友人的对话中填补过去发生的事。一层层迷雾，也渐渐揭开。这个应该是悬疑小说最适合的套路吧，每找到一个新的人，对真相就颠覆一次。</p>
<p>拉里。真实感。</p>
<ul>
<li>命运的风起云涌。</li>
</ul>
<p>作者在结尾写道，这无意成为了一个成功的结局，大家各得其所。艾略特舅舅在上流社会得到认可，伊莎贝尔得到了财富和悠哉的生活，拉里也找到了他的幸福。作者整篇的语风，是非常坦率地喜欢着他们每一个人。</p>
<p><strong>每个人，都深深地陷在自己的世界里。</strong>所谓的生活不分高低贵贱，是既然每个人的出发点，每个人的方向都不同，那结果就不具有可比性。舅舅至死也没有对上流阶层的认可退让一小步。能说他们过得更可怜吗？</p>
<p>同样很值得玩味的是，所有出场的人物，伊莎贝尔，拉里，格雷，苏菲，他们在他们最开始的时候，竟是特别的相似的一群人。拉里，不过也是生活着大部分年轻人一样的生活，甚至他自己也以为他和伊莎贝尔的婚约会成真。但自从拉里经历了战争，失去了他最亲密的一个战友时，宛若一条溪流被河堤劈开两半，那份渺小感，那份茫然感注定让拉里走上了不同的方向，不能回头。</p>
<p>也想起来初中我们被要求背下的几句诗，来自弗罗斯特的未选择的路。</p>
<p>一片树林里分出两条路，<br>而我选了人迹更少的一条，<br>从此决定了我一生的道路。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 哲学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[但是你记得｜《把你交给时间》读后感]]></title>
      <url>http://chocoluffy.com/2017/03/20/%E4%BD%86%E6%98%AF%E4%BD%A0%E8%AE%B0%E5%BE%97-%E3%80%8A%E6%8A%8A%E4%BD%A0%E4%BA%A4%E7%BB%99%E6%97%B6%E9%97%B4%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>“那些微小的瞬间， 一点都不重要， 但是你记得。”</p>
<a id="more"></a>
<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fdu8fzqdduj30m80m8e3t.jpg" alt="相遇"></p>
<p>很少这么专注地一口气读完一本书了。 一次没有WIFI的航程竟成了一场恩赐， 橘黄色的阅读灯刚刚够点亮我的位置， 在周围一片睡意里， 我静静地听着陶立夏讲述的一段又一段旅行故事。 故事里一再出现的“你”的提问和陪伴， 也让我感动仿佛作者就在面前的亲切。文字很轻， 没有什么呐喊， 也不需要什么奔走相告， 或许本身孤独的心就离的很近，而邻近的人， 就不必大声了。机舱很吵， 心很静。 或许这也是我那么多次航行在万丈高空里， 最虔诚的一次。</p>
<p>突然很想去旅行， 更准确的说， 其实是很想去感受作者旅行的感受吧， 冰岛壮阔的蓝， 溯游的三文鱼， 优雅的伦敦， 名字特别好听的小岛……自己明明羡慕的很， 羡慕远行的洒脱， 羡慕每篇依旧崭新而温热的回忆。但羡慕归羡慕， 我自己也清楚得很， 世界一直都是那个样子， 不同的人怀揣着不同的心事往昔去看， 也看到的是不同的样子。挺荒谬的不是嘛， 可能一群人跋山涉水追逐着记录下的风景和绝唱， 到头来那最终的震撼却因人而居， 细腻的人窥见细腻的风景， 多情的人捕捉住多情的回忆， 人呐， 始终走不出自己这个圈子罢了。</p>
<p>无数次和旅行一起捆绑的， 还有不断追问的意义。 人们总是想知道个所以然， 摸索到潜在的利害关系是最令人信服的， 毕竟谁都难以忍受住的， 却终究被少数人克服的那刻会揭开多少人的伤疤。 人还是喜欢自我安慰， 有个答案， 总比没有答案省事多了不是吗。问题到了作者那儿， 只见她款款在结尾写道， “人们常常问我旅行的意义， 我总是答不上来……那些微小的瞬间， 一点都不重要， 但是你记得。”</p>
<p>如果说遗忘是否定了存在过， 那么记得， 或许就是最实诚而浪漫的珍惜了吧， 那些隔着时光却依旧清晰的纹理， 味道和温度， 那些仅仅一小段旋律就撩开的汹涌回忆……人类发明各种科学技术交通手段来战胜空间仿佛无所不能， 却对时间无能为力。 而那些潮水冲散开后仍一直被攥紧着的， 又是多么得幸运。</p>
<p>而关于旅行同样重要的， 还有那些在经历了不平凡的生活之后， 对平凡的思考。在尝遍酸甜苦辣之后， 对平淡的回味。 我小时候也会想象， 那些恢弘的战争故事封笔后的情节， 将军战士总有褪下铠甲的一天， 撒去的热酒总有冷却的时候。和平的一如既往， 或者说战争的消逝， 会一并带走英雄吗？</p>
<p>有没有发现，最近的好莱坞，越来越擅长英雄迟暮了。</p>
<p>印象很深刻新世相的一句话，“人们活着是注定为一些重要的事情伤心的，它提醒你曾经拥有过某种幸福。下一次再遇到时，你会一眼认出，然后紧紧抓住它”。</p>
<p>耳边响起的是小王子的呢喃。是被“驯服”过的。于是千万灿烂的玫瑰园，也认得出那独一无二的一支。</p>
<p>有一天，你恍然发现曾无比熟悉的生活里陌生而盛大的风景，“也记起这一路的奔波劳累和美丽景色。那或许会是在世界另一头的繁华都市，或许是在某个酷热的热带岛屿，又或者只是在某个赶稿的寻常春日夜晚。我想起Simbahllin，想起她吱嘎作响的老旧木地板和泛着时间光泽的咖啡桌，想起空气里华夫饼的香气，像挂念一个远方的故知。她性格沉稳又古怪，虽然并不能常见面，却让你觉得心安，因为她代表着一份遥不可及的温柔。我喜欢这种可望不可即的寄托，这就是旅行带给我们的，最长久也最真切的美好。”</p>
<p>很安静和美好。这就够了。</p>
<p>“生活即隐喻”，要学会努力感受生活。二十一岁了，这是我第一次有这种感觉。谢谢你，陶立夏。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[App首发｜鲸语 - 多伦多玩乐攻略第一入口]]></title>
      <url>http://chocoluffy.com/2017/03/20/App%E9%A6%96%E5%8F%91%EF%BD%9C%E9%B2%B8%E8%AF%AD-%E5%A4%9A%E4%BC%A6%E5%A4%9A%E7%8E%A9%E4%B9%90%E6%94%BB%E7%95%A5%E7%AC%AC%E4%B8%80%E5%85%A5%E5%8F%A3/</url>
      <content type="html"><![CDATA[<p>我想象，当我想知道在多伦多，哪里有最好吃的煎饼果子或者绵绵冰， 哪里有最好玩的酒吧和密室，鲸语能给我最好的答案。</p>
<a id="more"></a>
<p>鲸语是我过去几个月用业余时间开发出来的作品，<strong>每天推送多伦多城市生活，校园生活的最新资讯</strong>，实时追踪着主流媒体平台的本地报道，涵盖微信公众号，微博，知乎，Facebook及各大潮流杂志等等。结合全面的搜索功能，<strong>每一个话题，都可以关注到最实用和最及时的回答</strong>，从浪漫的约会地点到实惠的报税攻略……如果能省下些平时刷公众号的时间，少些急用时又搜不到的焦虑，也是我最大的愿望。</p>
<p><img src="http://chocoluffy.com/ReactNativeEverydayDemo/images/xs-whalesper-search.gif" style="display: block; margin: 0 auto; height: 500px"></p>
<p>鲸语也同步了近期多伦多周边最热门的活动，一键加入日历或者开始导航。</p>
<p><img src="http://chocoluffy.com/ReactNativeEverydayDemo/images/xs-whalesper-event.gif" style="display: block; margin: 0 auto; height: 500px"></p>
<p>同时，诞生于多伦多大学校园的鲸语，也聚合了大部分华人社团的动态，在此基础上，打通了UTADA社团旗下的UT助手平台的数据库，引入自动化聊天机器人，希望以最快捷的方式提供实时校园服务，包括各图书馆开放时间查询，期末考时间查询，课程课本乃至建筑物的查询等等等等…</p>
<p><img src="http://chocoluffy.com/ReactNativeEverydayDemo/images/xs-whalesper-campus.gif" style="display: block; margin: 0 auto; height: 500px"></p>
<p>纷乱嘈杂的媒体环境，掩盖了许多不被分享的美好。而鲸语想实现的，是想把这些优质的本土内容攻略，沉淀下来，分享出去。用最自动化的方式。</p>
<h2 id="一个没有编辑部的媒体平台-鲸语是什么"><a href="#一个没有编辑部的媒体平台-鲸语是什么" class="headerlink" title="一个没有编辑部的媒体平台 - 鲸语是什么"></a>一个没有编辑部的媒体平台 - 鲸语是什么</h2><p>曾经接触过许多优秀的学生开发者的作品，可每当发现作品的内容终止更新的时候，总会感到些许惋惜。</p>
<p>的确，作为学生，难以取舍的运营成本抑或突如其来的人情世故，太容易放弃作品背后的冲动。也或许是这样，在我有开发鲸语的计划时，自动化成为了我最重要的目标。</p>
<p>自动地收集，自动地提取分析归类，自动地推荐。这会是一个完整的媒体平台，实时追踪着多伦多最有趣的动态，由算法决定文章消息的过滤，概括，标签和分类，由用户的阅读和收藏权衡热度，由地理位置产生推荐……而唯独不依赖于我的编辑。哪怕一年之后我从多伦多大学毕业了，鲸语也可以长久地运营下去，推送本地最酷的内容，服务所有多伦多华人。</p>
<p>向今日头条和湾区日报致敬。</p>
<p>被更多人所熟知的今日头条在技术上给了我很多启发，我也尝试着按照我的理解来打造内容特征分析和协同推荐的流程。在体量上，鲸语有接近200个内容源，涵盖了诸如微信、微博、知乎、Facebook及各大本地优质杂志等等的热门媒体平台。</p>
<p>而湾区日报，则更让我亲切。一个人每天分享文章的业余项目，近3年写了近90万字的简评。阅读并收集优秀的资源是一个很好的习惯，而让我印象深刻的并不是作者这一坚持的习惯本身，而是，作为一名工程师，将整个习惯流程完全自动化的地步。而我也采用类似的技术栈为鲸语开发了自动化的审核系统，各类存在争议的文章和活动，能够在与聊天机器人的交互中完成审核，后续的发布也依旧交给程序。而近期也将开放接口给各合作社团及第三方，提供更多内容发布上的便利。</p>
<p>讲不清楚自己对自动化的执着。或许就是懒吧，但更多也是对鲸语更长远的期待。打造一个没有编辑部的媒体平台，我还想尝试更多可能。</p>
<h2 id="连接更多优质的服务与人-鲸语的下一步"><a href="#连接更多优质的服务与人-鲸语的下一步" class="headerlink" title="连接更多优质的服务与人 - 鲸语的下一步"></a>连接更多优质的服务与人 - 鲸语的下一步</h2><p>鲸语的下一步，会和许多优质的服务第三方和个人合作。会有很酷的东西更新，这里抿一下嘴哈哈。</p>
<h2 id="连点成线-记鲸语的诞生日记"><a href="#连点成线-记鲸语的诞生日记" class="headerlink" title="连点成线 - 记鲸语的诞生日记"></a>连点成线 - 记鲸语的诞生日记</h2><blockquote>
<p>生命里的每一个点都会最终连成线。乔布斯</p>
</blockquote>
<p>很难说现在回头看能望见什么，但这半年来的经历都在我计划鲸语的时候给了特别多的启发。从开发校园服务开始，集成UT助手过去几百篇文章的推荐系统，自动文本概括，聊天机器人和先后开发的四五个未上架的App原型等等等等……于是乎，鲸语的出现就仿佛是一张拼图慢慢浮现出了形状，与其说是我开发出了这个作品，不如说是我认出了它。</p>
<p>就像突然发现一条绷紧的风筝线，牵扯起背后风尘仆仆的过往。</p>
<p>以前很喜欢普鲁斯特的一句话，“每个读者只能读到已然存于他内心的东西。书籍只不过是一种光学仪器，帮助读者发现自己的内心。”。它告诉我，不同的人怀揣着不同的心事往昔，会看见不同的风景。那些被骄傲着的想法，那个在软件背后所规划的世界，都不过唯心而已；也渐渐发现，在世界兜了一大圈，最后不过和自己对话。</p>
<p>可越是如此，也想拼命问出来，自己想象里这个世界的样子，那些还没被串联起的可能。</p>
<p>镜头慢慢转回来，鲸语因为这些经历慢慢出现了雏形，开始下一个阶段更细致地规划和开发。这过程也不是一帆风顺。</p>
<p>曾经道听途说过一些创业故事，而终于轮到自己，才发现，曾经那些被争吵着的，被争分夺秒的，都是最血淋淋的事实。作为开发者，诚心而论，这个过程里最大的瓶颈却同样最大的动力就是技术。商业化作品的架构的稳定性和延展性远不同于平时随手玩玩的项目，从运算的效率改进到数据库优化，再加上跨平台的开发考量……无数个选择，都推动我去不断理解和尝试不同企业面临相似问题的时候所做出的选择。作为管理者，从产品定位到市场营销等方方面面，那些陌生的海域，是不能再真实的未知和试探。小到logo的色差，某个板块少覆盖了哪个网站，大到屏幕的布局和动画，和第三方合作的条条款款……和伙伴们一遍遍修改，拍板再推倒重来，也成为鲸语现在依旧青涩却最真实的样子。</p>
<p>谁没有些从陌生到渐渐开窍的故事呢，或许没有那么多理所当然和信手拈来，不过举重若轻罢了。</p>
<p>写了这么多，其实鲸语没有那么复杂，就是一个本地的媒体平台，实验着我自己对数据分析上的，语义分析上的很多想法。而对鲸语真正可贵的，是那些海量被标签的数据，作为媒体，对机器推荐的改进怎么都不为过不是吗。等自己空闲下来，还有很多在机器学习上更有趣的事情可以尝试!</p>
<p>在你看到这里的时候，鲸语的第一版已经稳定地发布了。看过那些关于鲸语诞生的故事，那些开发时候的尝试，翻过篇章，鲸语也将迎来新的冒险。而我，也将尝试些更多的东西，纪录下更多的故事。或许不是每个故事都有完整的起承转合，但能够想清楚写清楚那些婉转和遗憾，也很有意思。</p>
<p>就好像有一段和自己一起成长的故事，一场陪伴。</p>
<p>或许就是陶立夏笔下写到的，仿佛蜗牛与它的壳，人嘛，总想要一些熟悉的东西陪伴着去看这个世界的繁华与荒凉。也算是写给自己间隔一年的回忆吧。</p>
<p>期待下一章。</p>
<h2 id="关于伙伴和小幸运-比心"><a href="#关于伙伴和小幸运-比心" class="headerlink" title="关于伙伴和小幸运 - 比心"></a>关于伙伴和小幸运 - 比心</h2><p>来多伦多的这一年半发生了很多事情。搬了一次家，做出了全职一年的决定，第二遍去读加缪，各个打磨地或许依旧不会上架但仍然有趣的作品，以及那可能还未亲近的冬天……其中印象最深刻的，或许就是那误打误撞地加入了一个社团UTADA，误打误撞地认识了现在最要好的朋友和室友。曾经一直以为自己会单打独斗下去，但一路上的小伙伴慢慢多了起来，深感起伙伴的意义和陪伴。</p>
<p>谢谢Ajax，很天才的设计师和学习速度特别快的开发者，鲸语里很多细节都很有你的风格。谢谢Gloria，作为社长给一个年轻而懵懂的社团带来了太多的改变，产品方面特别有想法，激情和执行力。你们的加入，给鲸语带来了太多太多。</p>
<p>谢谢AirLoft的成员，去年暑假每个周末的hackerthon为社团捣鼓各种奇怪的东西，或许只有你们能陪我这么折腾。谢谢很默契的室友还有办公室里经常抱团的五小只，一起上课一起上班的各种帮忙打掩护。还有多大中文，虽然很少有交集但每每看到他们的文字总觉得很亲切，同样很酷的作品Klido和很有才艺的开发者；觅迷，很精致的作品，给了鲸语启发；还有EZ4，刚来多大时还以为是普通社团参加的破冰活动到现在已经发展得规模如此之大，虽然带有争议，但团队里有我特别尊敬的人。</p>
<p>身边有很多很有趣的伙伴，无论学术还是业界，和他们的相遇和合作本身就值得感激。也想多做点什么，对得起时光，也对得起运气。</p>
<p>最后引用多大中文一篇文章里很有感触的一句话结尾，“二十多岁的大学生绝对是迷茫、恐惧和无聊的，但却真的可以做很多事情、影响很多人。”</p>
<p>也致21岁的上半场。</p>
<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fe2ctucdesj31hc1407wi.jpg" style="display: block; margin: 0 auto;"></p>
<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fe2cv5dxurj31hc140kjl.jpg" style="display: block; margin: 0 auto;"></p>
<p><img src="https://ww3.sinaimg.cn/large/006tKfTcgy1fe2cvnecnnj31hc140kjo.jpg" style="display: block; margin: 0 auto;"></p>
<p>鲸语来自多伦多盛大而无常的生活，也希望带给大家这座城市更精致的一面。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react native </tag>
            
            <tag> iOS </tag>
            
            <tag> 创业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[浅析经典面试算法题-two pointer的运用]]></title>
      <url>http://chocoluffy.com/2016/12/04/%E6%B5%85%E6%9E%90%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E7%AE%97%E6%B3%95%E9%A2%98-two-pointer%E7%9A%84%E8%BF%90%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>前几天和朋友讨论 Google 电面的一道题， 由此启发， 总结了下 two pointer 的使用场景， 在大部分情况下， 恰当地使用 two pointer 可以使时间复杂度保持在 O(n)， 像 online judge 里部分 medium 题经常提及的子数列类型问题， two pointer 也可以提供不错的切入角度。</p>
<a id="more"></a>
<h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><p>前几天和朋友讨论 Google 电面的一道题， 由此启发， 总结了下 two pointer 的使用场景， 在大部分情况下， 恰当地使用 two pointer 可以使时间复杂度保持在 O(n)， 像 online judge 里部分 medium 题经常提及的子数列类型问题， two pointer 也可以提供不错的切入角度。</p>
<h2 id="Two-Sum"><a href="#Two-Sum" class="headerlink" title="Two Sum"></a>Two Sum</h2><h3 id="Original"><a href="#Original" class="headerlink" title="Original"></a>Original</h3><p><strong>Question</strong> [EASY] 找到两个数， 其和为指定数量。 Given an array of integers, find two numbers such that they add up to a specific target number.</p>
<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p>
<p>很典型的two sum问题。除去brute force的n方时间复杂度的算法，还有n的方法。简单来说， 用hashmap找另一个值是否存在， 典型的用空间换时间， 这里空间复杂度也是n。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hashmap implementation. O(n) runtime, O(n) space.</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">  Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (map.containsKey(target - numbers[i])) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; i + <span class="number">1</span>, map.get(target - numbers[i]) + <span class="number">1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!map.containsKey(numbers[i]))&#123; <span class="comment">// edge case: duplicate items.</span></span><br><span class="line">        map.put(numbers[i], i);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Hashmap特别要注意的地方就是对于duplicates的考虑， 题目究竟是返回true or false就可以了， 还是需要返回所有符合的index， 还是只是最小（或最大）的index， 都会有不同的实现方案。</p>
<h3 id="Sorted"><a href="#Sorted" class="headerlink" title="Sorted"></a>Sorted</h3><p>如果integer array已经排序过了的话，可以用两个pointer来实现n时间1空间复杂度的方案； 不难理解， 两个pointer从两头往中间移动， 其sum只有三种可能， 和比要求的target小， 那么起始点的pointer右移， 和比要求大， 末尾pointer左移， 直到得到和或者return没有结果为止。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Two pointer implementation. Given that array is sorted. O(n) runtime, O(1) space.</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">  <span class="keyword">int</span> p1 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> p2 = size - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (p1 &lt; p2)&#123;</span><br><span class="line">    <span class="keyword">if</span> (numbers[p1] + numbers[p2] &lt; target) &#123;</span><br><span class="line">      p1 += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (numbers[p1] + numbers[p2] &gt; target) &#123;</span><br><span class="line">      p2 -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;p1, p2&#125;;    </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>留意一下two pointer适合哪些情景? 基础的变式是通过两个移动不同步长的pointer来完成一些事情， 也在暗指， 本身iterate through的这个array必须存在一些特性使得pointer可以有不同的移动。</p>
<h3 id="Tricks"><a href="#Tricks" class="headerlink" title="Tricks"></a>Tricks</h3><p>借此稍微总结一下， 运用到two pointer的场景和技巧。</p>
<p><strong>Question</strong> [EASY]合并两个sorted array变成一个sorted array。 Given two sorted arrays A and B, each having length N and M respectively. Form a new sorted merged array having values of both the arrays in sorted format.</p>
<p>利用设置在两个sorted array开头的指针， 来达到m+n时间复杂度的效果。 比较简单。</p>
<p><strong>Question</strong> [EASY]一次循环找到链表的中间元素。How to find middle element of linked list in one pass?</p>
<p><strong>Question</strong> [EASY]判断一个链表是否存在环。 How to find if linked list has a loop ?</p>
<p><strong>Question</strong> [EASY]找到链表中倒数第三个元素。How to find 3rd element from end in a linked list in one pass?</p>
<p>以上都是关于单向链类似的问题， 利用two pointer都可以得到快速的解答。</p>
<h3 id="Example1-continuous-maximum-subarray"><a href="#Example1-continuous-maximum-subarray" class="headerlink" title="Example1 - continuous maximum subarray"></a>Example1 - continuous maximum subarray</h3><p><strong>Question</strong> [MEDIUM]找到不大于M的连续最大和子数列。 Given an array having N positive integers, find the contiguous subarray having sum as great as possible,, but not greater than M. </p>
<p>其实第二题还涉及到了另一个技巧， 就是在对于部分求和问题里， 使用cumulative sum array是一个可能的切入口。 在将原数列生成对应的cumulative sum array之后， 这个题目也就相应转换为找到两个index， 使得对于这个递增的和数列， 满足：<code>cum[endIndex] - cum[startIndex-1] &lt;= M and cum[endIndex+1] - cum[startIndex-1] &gt; M</code>的条件， 而<code>endIndex</code>和<code>startIndex</code>在原数列里对应的子数列， 就是满足要求的最大和子数列。</p>
<p>转换了题意之后， 对于这个递增数列， 可以接着用two pointer的思想来处理， 设置start和end两个pointer从头开始， 右移end指针只到不能满足需求为止，然后右移start指针来减少sum使得end指针可以继续右移。 记录下每次start指针右移是的sum， 最大的那个sum所对应的指针位置， 对应回原数列， 就是我们想要找到的连续最大和子数列。<strong>可以说， 这道题的突破口是利用cumulative sum来创造一个递增的数列， 从而使two pointer的实现方式更为简洁。</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] main(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> ceiling) &#123;</span><br><span class="line">  <span class="keyword">int</span>[] cumSum = <span class="keyword">new</span> <span class="keyword">int</span>[numbers.length() + <span class="number">1</span>]; <span class="comment">// obtain cumulative sum.</span></span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">  cumSum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length(); i++) &#123;</span><br><span class="line">    sum += numbers[i+<span class="number">1</span>];</span><br><span class="line">    cumSum[i+<span class="number">1</span>] = sum;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>; <span class="comment">// two pointers start at tip of the array.</span></span><br><span class="line">  <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span>[] ids = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">while</span> (l &lt; cumSum.length()) &#123;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; cumSum.length() &amp;&amp; cumSum[r] - cumSum[l] &lt;= M) &#123;</span><br><span class="line">      r++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cumSum[r-<span class="number">1</span>] - cumSum[l] &gt; max) &#123; <span class="comment">// since cumSum[0] = 0, thus r always &gt; 0.</span></span><br><span class="line">      max = cumSum[r-<span class="number">1</span>] - cumSum[l];</span><br><span class="line">      ids[<span class="number">0</span>] = l; ids[<span class="number">1</span>] = r;</span><br><span class="line">    &#125;</span><br><span class="line">    l++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ids;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Example2-continuous-minimum-distinct-subarray"><a href="#Example2-continuous-minimum-distinct-subarray" class="headerlink" title="Example2 - continuous minimum distinct subarray"></a>Example2 - continuous minimum distinct subarray</h3><p><strong>Question</strong> [MEDIUM]找到至少含有K个不同数字的连续最小和子数列。 Given an array containing N integers, you need to find the length of the smallest contiguous subarray that contains atleast K distinct elements in it. Output “−1−1” if no such subarray exists.</p>
<p>从题意上和上一问求连续最大和子数列很像， 其实处理方式也有共同之处， 利用cumulative sum来负责和的部分， 利用set的实现来负责distince element的部分， 和之前相比end指针移动的条件， 更换为使得set中元素至少有K个， 记录此时sum和对应得<code>end - start</code>得长度， 然后移动start指针， 更新set元素， 由此往复。n的时间复杂度。</p>
<h3 id="Example3-minimum-hustle-subsequence"><a href="#Example3-minimum-hustle-subsequence" class="headerlink" title="Example3 - minimum hustle subsequence"></a>Example3 - minimum hustle subsequence</h3><p><strong>Question</strong> [MEDIUM] 找到K个给出最小hustle值的子数列， 不要求连续。 Given an array having N integers, you need to find out a subsequence of K integers such that these K integers have the minimum hustle. Hustle of a sequence is defined as sum of pair-wise absolute differences divided by the number of pairs. </p>
<p>明确了hustle值， 也就是pair的差绝对值之和之后， 对于不要求连续的子数列找最小值， 可以利用sorting来排序， 转换为类似寻找连续最小和子数列的类型。可以稍微改变上题的方法来处理这道题。nlogn + n的时间复杂度。</p>
<h3 id="Example4-Google-phone-interview"><a href="#Example4-Google-phone-interview" class="headerlink" title="Example4 - Google phone interview"></a>Example4 - Google phone interview</h3><p>前几天看到朋友发的Google的其中一道电面的题， 和上面讨论的题型很像， 不过稍加改动之后还更简单了。</p>
<p><strong>Question</strong> [EASY] 找到number X满足最大cover。Given a set S of 10^6 doubles. Find a number X so that the [X, X+1) half-open real interval contains as many elements of S as possible.For example, given this subset:[2.7, 0.23, 8.32, 9.65, -6.55, 1.55, 1.98, 7.11, 0.49, 2.75, 2.95, -96.023, 0.14, 8.60], the value X desired is 1.98 because there are 4 values in the range 1.98 to 2.97999 (1.98, 2.7, 2.75, 2.95)</p>
<p>首先还是将数字sort一遍， 之后可以将题目转换为two pointer的类型。<code>array[end] - array[start] &lt; 1</code>， 同时使得collection的size最大。 每次end指针右移， 添加element到collection里面， 在start指针右移的时候记录下对应的<code>array[start]</code>的值和collection的size， 最后拿到当collection的size最大的时候的那个元素值就可以满足在<code>[X, X+1)</code>的区间中数列的元素最多了。 由于不需要考虑distinct element， 所以采用collection而不是set。 达到O(n)的时间复杂度， 较优的解法。</p>
<h3 id="Example5-three-pointers"><a href="#Example5-three-pointers" class="headerlink" title="Example5 - three pointers"></a>Example5 - three pointers</h3><p><strong>Question</strong> [MEDIUM] 找到最长只含有两个不同字母的子数列长度。 Given a string S, find the length of the longest substring T that contains at most two distinct characters. For example, Given S = “eceba”, T is “ece” which its length is 3.</p>
<p>仍然是two pointer的变式， 在维持two pointer的移动规则， 以及保持map的元素一直为两个的同时， 利用第三个pointer来从map中移除元素。在这种情况下不是简单的每次直接移除一个， 而是利用第三个pointer来移除移除元素到map里只剩两个元素。之所以用map而不用set的原因是， 移除一个字符并不代表后面就没有该元素重复， 而是采用<code>map&lt;char, int&gt;</code>来计数， 当int为0时才从map的key中移除该字符。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * find longest substring with at most two distinct elements.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestSubstringTwoDistinctElement</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> l = <span class="number">0</span>, m = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> maxLen = <span class="number">0</span>;</span><br><span class="line">   Map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; map = <span class="keyword">new</span> HashMap&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;();</span><br><span class="line">   <span class="keyword">while</span> (r &lt; s.length()) &#123;</span><br><span class="line">      <span class="keyword">while</span> (map.size() &lt; <span class="number">3</span>) &#123; <span class="comment">// keep the set fixed.</span></span><br><span class="line">         maxLen = max(maxLen, r - l);</span><br><span class="line">         r++;</span><br><span class="line">         <span class="keyword">if</span> (map.containsKey(s[r])) &#123;</span><br><span class="line">            map.put(s[r], map.get(s[r]) + <span class="number">1</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(s[r], <span class="number">1</span>);</span><br><span class="line">         &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      m = l; <span class="comment">// pointer m moves the from left till map becomes two.</span></span><br><span class="line">      <span class="keyword">while</span> (map.size() &gt; <span class="number">2</span>) &#123;</span><br><span class="line">         <span class="keyword">if</span> (map.get(s[m]) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            map.put(s[m], map.get(s[m]) - <span class="number">1</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123; <span class="comment">// remove that char from map.</span></span><br><span class="line">            map.remove(s[m]);</span><br><span class="line">         &#125;</span><br><span class="line">         m++;</span><br><span class="line">      &#125;</span><br><span class="line">      l = m;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   Method2: Compare with using map, if we know string only contains ASCII characters, then we can use int[256] to replace with a map&lt;char, int&gt;, since ASCII contains 127 characters, while use 8 bits leave one space for signed or unsigned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstringTwoDistinct</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">int</span>[] count = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">   <span class="keyword">int</span> i = <span class="number">0</span>, numDistinct = <span class="number">0</span>, maxLen = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; s.length(); j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (count[s.charAt(j)] == <span class="number">0</span>) numDistinct++;</span><br><span class="line">      count[s.charAt(j)]++;</span><br><span class="line">      <span class="keyword">while</span> (numDistinct &gt; <span class="number">2</span>) &#123;</span><br><span class="line">         count[s.charAt(i)]--;</span><br><span class="line">         <span class="keyword">if</span> (count[s.charAt(i)] == <span class="number">0</span>) numDistinct--;</span><br><span class="line">         i++;</span><br><span class="line">      &#125;</span><br><span class="line">      maxLen = Math.max(j - i + <span class="number">1</span>, maxLen);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Substring"><a href="#Substring" class="headerlink" title="Substring"></a>Substring</h2><p><strong>Question</strong> [EASY] 查找是否存在子字符串。Implement strstr(). Returns the index of the first occurrence of word1 in word2, or -1 if word1 is not part of word2.</p>
<p>其实典型做法就是科班的KMP算法， mn的时间复杂度， 注意的点还是在于对部分edge cases的考虑。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">strstr</span><span class="params">(String raw, String template)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; raw.length(); i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; template.length(); j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (i &gt; raw.length() - template.length()) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span> (template.charAt(j) != raw.charAt(i + j)) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (j == template.length()) <span class="keyword">return</span> i;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Reverse-Words-in-String"><a href="#Reverse-Words-in-String" class="headerlink" title="Reverse Words in String"></a>Reverse Words in String</h2><p><strong>Question</strong> [EASY] 将字符串中的单词们首位调换位置。Reverse words in string. Given an input string s, reverse the string word by word. For example, given s = “the sky is blue”, return “blue is sky the”.</p>
<p>注意的点在于使用StringBuilder而不是String concatenation， 因为StringBuilder不需要每次在赋值的时候再创建一个新的对象。 同时和这类题型特别相似的还有将某个integer array向某个方向rotate的， 存在类似的技巧。</p>
<h3 id="Original-1"><a href="#Original-1" class="headerlink" title="Original"></a>Original</h3><p>基础的做法：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// parse token, reverse them. n time, n space.</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">reverse</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">	String[] tokens = s.split(<span class="string">"\\s+"</span>);</span><br><span class="line">	String result = <span class="string">""</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tokens.length(); i++) &#123;</span><br><span class="line">		result += tokens[tokens.length() - <span class="number">1</span> - i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果不允许使用<code>split()</code>来parse token的话， 可以尝试two pointer的方式， 一个负责track单词的起始位置， 一个负责track结束位置， 然后跳过空格继续执行。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// do better with only one pass, without using split util function. By using two pointers, one tracks the word's beginning, one tracks the end. n time n space.</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">reverse</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> start = s.length() - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> end = s.length() - <span class="number">1</span>;</span><br><span class="line">	StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">	<span class="keyword">while</span> (start &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">while</span> (!s.charAt(end)) &#123; <span class="comment">// start with a non-space word.</span></span><br><span class="line">			start--;</span><br><span class="line">			end--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(s.charAt(start)) start--;</span><br><span class="line">		<span class="keyword">if</span> (result.length() != <span class="number">0</span>) &#123;</span><br><span class="line">			result.append(<span class="string">' '</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		result.append(s.substring(start + <span class="number">1</span>, end));</span><br><span class="line">		end = start;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Tricks-1"><a href="#Tricks-1" class="headerlink" title="Tricks"></a>Tricks</h3><p>以上提到的两种方法都是n时间n空间， 也就是我们都创建了一个新的array返回， 也有直接在原数列做交换的方式， 正是上文提到的关于rotate类型的技巧。由于我们观察到：如果给每一个单词都reverse一遍， 最后再整个字符串reverse一遍， 可以得到相同的结果， 比如：</p>
<ul>
<li>raw： “ab bc cd”</li>
<li>target： “cd bc ab”<ul>
<li>reverse each word from raw： “ba cb dc”</li>
<li>reverse whole string：“cd bc ab”， same as target string.</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	Reverse words in string, but do it with n time, 1 space.</span></span><br><span class="line"><span class="comment">	- one brilliant idea is, by reversing words first, then reverse the whole string. It has the same effect as reverse words in string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">char</span>[] s)</span> </span>&#123;</span><br><span class="line">	rotate(s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; j &lt;= s.length(); j++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(s[j] == <span class="string">' '</span> || j == s.length())&#123;</span><br><span class="line">			rotate(s, i, j);</span><br><span class="line">			i = j + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">char</span>[] s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (end - start) / <span class="number">2</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">char</span> temp = s[start + i];</span><br><span class="line">		s[start + i] = s[end - i - <span class="number">1</span>];</span><br><span class="line">		s[end - i - <span class="number">1</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="More"><a href="#More" class="headerlink" title="More"></a>More</h3><p>类似的还有刚刚提及的将某数列向某方向rotate的题型， Rotate an array to the right by k steps in-place without allocating extra space. For instance, with k = 3, the array [0, 1, 2, 3, 4, 5, 6] is rotated to [4, 5, 6, 0, 1, 2, 3]. </p>
<p>同样可以用到reverse的技巧。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rotateRight</span><span class="params">(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> step)</span> </span>&#123;</span><br><span class="line">	rotate(numbers, <span class="number">0</span>, numbers.length() - step);</span><br><span class="line">	rotate(numbers, numbers.length() - step + <span class="number">1</span>, numbers.length());</span><br><span class="line">	rotate(numbers, <span class="number">0</span>, numbers.length());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (end - start) / <span class="number">2</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> temp = numbers[start + i];</span><br><span class="line">		numbers[start + i] = numbers[end - i - <span class="number">1</span>];</span><br><span class="line">		numbers[end - i - <span class="number">1</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Reading"><a href="#Reading" class="headerlink" title="Reading"></a>Reading</h2><ul>
<li><a href="https://tp-iiita.quora.com/The-Two-Pointer-Algorithm" target="_blank" rel="noopener">quora-two pointer algorithm</a></li>
<li><a href="https://leetcode.com/" target="_blank" rel="noopener">leetcode</a></li>
</ul>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>刚开始用Java， 其实主要还是平时写Spring Boot的时候用的比较多， 如果上述的算法有错误或者忽略了edge cases的考虑， 欢迎在评论区指出。 同时大部分问题都存在其他或许更优的解法， 欢迎一起讨论~</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 面试总结 </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[喜欢冬天，因为可以把寒冷归咎于天气]]></title>
      <url>http://chocoluffy.com/2016/11/20/%E5%96%9C%E6%AC%A2%E5%86%AC%E5%A4%A9%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%8F%AF%E4%BB%A5%E6%8A%8A%E5%AF%92%E5%86%B7%E5%BD%92%E5%92%8E%E4%BA%8E%E5%A4%A9%E6%B0%94/</url>
      <content type="html"><![CDATA[<p>自由主义的故事，曾经是因为其经济上的优势而繁荣和扩张的。然而绝大多数的时候，这只是一小部分精英们的故事，自由和权利或许都只会是上层阶级的财产和特权。可悲的是，人们没有其他选择。选择trump，是不想听见一个一直听腻的故事，是对遥远的精英们仅剩的嘲讽罢了。</p>
<a id="more"></a>
<h2 id="11-11"><a href="#11-11" class="headerlink" title="11.11"></a>11.11</h2><h3 id="告别"><a href="#告别" class="headerlink" title="告别"></a>告别</h3><p>今天和最亲最尊敬的小老板告别，还好是冬天，可以把难受和不舍归咎给天气。 这是一个流行离开的世界，但是我们都不擅长告别。 祝愿你一切都好。</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9z8nk1m0fj31kw23ue81.jpg" style="display: block; margin: 0 auto;"><br>(这是小老板家里面的一幅挂饰，写得好好啊，好喜欢~)</p>
<h2 id="11-10"><a href="#11-10" class="headerlink" title="11.10"></a>11.10</h2><h3 id="unfamiliarity"><a href="#unfamiliarity" class="headerlink" title="unfamiliarity"></a>unfamiliarity</h3><p>真的，技术进步这种东西，真的很少有aha moment，或者突然一下子的飞跃，感觉就是不断了解和深入之后的熟悉和融会贯通罢了。 突然想起来之前看一次react europe conferrence的视频，里面的主讲人之一pitt hunt好像是，提到过这么一句话，“don’t equal unfamiliarity to difficulty”，很多时候，你觉得它intimidating，仅仅是因为你站得比较远罢了。 突然适用的，还有崇拜和美感，世界上哪有什么男神女神的，哪只是因为你还不了解他或者她，甚至不愿意去了解，真正走近之后，真正让人牵挂的，也不再是她的光环。</p>
<p>自己每天的零碎时间都拿来看文章和博客，真的很有用！真的真的，要坚持下去哦！</p>
<p>愿每一次的打磨者，都只会是自己。</p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79gw1f9z8o07uuij30go0gngml.jpg" style="display: block; margin: 0 auto;"></p>
<h2 id="11-09"><a href="#11-09" class="headerlink" title="11.09"></a>11.09</h2><h3 id="看书"><a href="#看书" class="headerlink" title="看书"></a>看书</h3><p>亚马逊的购物车里放了好几本特别想看的书，圣诞回去一定要买回来! 朱天文! 朱天文! 好喜欢看散文，没有长篇小说的负担，轻轻松松地，就像旁听一段对话或者独白。 温柔的力量，曾经看到新世相里描绘的，是轻轻拂过不用力的打扰。</p>
<p>也不知道为什么那么钟爱散文，就是那种如果几周不看些令自己满意的文字就会不舒服的毛病吧，也生怕自己再也写不出平静而诚挚的感觉了。 总是觉得，文学的这类朦胧和理学的逻辑思辨是有冲突的，就好像是距离带来的美感，是不审视带来的真实感一样，太多的想象力，轻轻一戳，就是荒谬。可尽管如此，我还是习惯性地想要体会言语间的柔软，像是一场逃离，想要能够轻轻对生活卖个萌的浪漫。</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9z8q8rskdj30dx0go40n.jpg" style="display: block; margin: 0 auto;"></p>
<h3 id="关于冬天"><a href="#关于冬天" class="headerlink" title="关于冬天"></a>关于冬天</h3><p>地铁里突然想起来，写下的一段话：</p>
<p>喜欢冬天的理由之一，是拥有一对仿佛可以塞下全世界的衣兜，喜欢那种随手一掏，就可以拿起笔记本的日子~</p>
<p>不喜欢冬天的理由之一，也源自一场轻描淡写的忧伤，看到一段字，“喜欢冬天，因为可以把寒冷归咎于天气。”</p>
<p>今天终于下定决心要开始写日记了! 最后有个周报或者月报什么的~ 给自己定下了一个死死的目标，“写博客，写项目和健身，每天三样能完成两样就已经很不错了呢”。也是受byvoid大神和小土刀师兄的启发。</p>
<h3 id="总统选举"><a href="#总统选举" class="headerlink" title="总统选举"></a>总统选举</h3><p>今天也是美国总统选举结果公布的第一天。 各个媒体渠道都在铺天盖地的报道，我所选择的我认为阐释得比较周全得文章有以下两篇，摘抄在这里学习学习：</p>
<h3 id="关键词－民粹主义和民主主义，"><a href="#关键词－民粹主义和民主主义，" class="headerlink" title="关键词－民粹主义和民主主义，"></a>关键词－民粹主义和民主主义，</h3><p>来自<a href="http://mp.weixin.qq.com/s?__biz=MzA4MjcxMDEwNQ==&amp;mid=2686252468&amp;idx=1&amp;sn=6fb3b2e145e4d8ec000df00a6401796a&amp;chksm=ba69ce828d1e47940f52ddce33eb85b570f0e2594d434b3b607ba9c5afaddb7676faaeda213e&amp;mpshare=1&amp;scene=2&amp;srcid=1107R9tLwL2xTllBCcyAXdAc&amp;from=timeline&amp;isappinstalled=0#wechat_redirect" target="_blank" rel="noopener">刘瑜：如何看待美国大选中的川普现象——论美国政治中的民粹主义</a>。</p>
<p>一个趋势是：没有政治家自称是“民粹主义”者，但是几乎人人都在给异己者贴上民粹主义标签。难道“我同意的民意”就是民主政治，“我不同意的民意”就是民粹政治？</p>
<p>本质上，自由式民主依赖精英主义和平民主义之间的平衡，而民粹政治信奉平民主义对精英主义的压倒性胜利。</p>
<p>民粹主义往往需要一种“人格化的力量”去唤起和表达。由于对“精英建制”（elite establishment）的敌视，民粹主义往往需要一个“孤胆英雄”式的人物去树立一个“反叛”的旗帜。无论是查韦斯、普京、埃尔多安、穆加贝，或美国的川普或桑德斯，都试图树立自己“孤胆英雄”的形象。因此，民粹主义的一个特点是其政治的“个人色彩”很强，这与民主政治的“机构色彩”形成鲜明对比。</p>
<p>因此，民粹政治的现实展开形式，常常是政治强人利用底层民众联手夹击社会中间层，而自由式民主固然具有精英主义色彩，但由于精英本身的多元性与分散性，却更能抵御威权主义的侵蚀。</p>
<p>但与此同时，对于民主主义来说，正因为美国政治的多元主义和精英主义成分，它也招致了许多人对美国“虚伪民主”的批评。《民主的反讽》一书认为，精英主义是美国民主得以良好运行和延续的“秘密”，而这正是美国民主的反讽之处。作者指出，由于精英往往比大众在政治上更加宽容，如果美国的政治体制镜像式地反映最主流的民意，而不是“掺入”了很多精英的理念，那么自由式民主或许早就不复存在了。</p>
<p>经济学家Caplan也指出，如果美国的底层民众投票率和中上层一样高（事实是前者低得多），那么美国的经济政策会“不理性得多”。换言之，尽管自由式民主的实践放大了精英的影响力，但是它增加了美国政治的理性程度，而这种理性是美国政治得以健康运行的“秘密”。</p>
<h3 id="关键词－自由主义的故事"><a href="#关键词－自由主义的故事" class="headerlink" title="关键词－自由主义的故事"></a>关键词－自由主义的故事</h3><p>强烈推荐这一篇，来自<a href="http://mp.weixin.qq.com/s?__biz=MzA4MTM5NTYzMA==&amp;mid=2659494084&amp;idx=1&amp;sn=051f4dad152486be3799e8b69c50b1a2&amp;chksm=84e5a205b3922b13c9b1e725a155c1e9ad4df4384709ccfb7b016bfae89a191cdce8a0995282&amp;scene=0#wechat_redirect" target="_blank" rel="noopener">《人类简史》作者分析特朗普崛起：自由主义终结了么？</a>。</p>
<p>故事是人类思考问题的中心，而非事实、数字或者表格，故事越简单越好。<strong>对这个过去几十年在我们的世界处于统领位置的故事，我们可以称之为“自由主义的故事”。</strong></p>
<p>但是，自2008年全球金融危机始，人们开始不再相信这个故事的主线。在20世纪90年代和21世纪的第一个10年里，人们相信遵守游戏规则可以让他们的地位上升以及变得富裕；2008年以后，他们突然开始害怕自己被欺骗，害怕这个系统并非对他们有利。<strong>阿拉伯之春变成了“伊斯兰之冬”；莫斯科、安卡拉、耶路撒冷的威权政府一点点放弃了自由民主的价值观，转而拥护民族沙文主义和宗教极端主义；甚至生活在自由主义占据主流位置的西欧国家的人们都开始有了悔意</strong>。如今，这股幻灭的浪潮正在涌向美国，而正是美国将这个“自由主义的故事”推行到了美国之外的许多地方，有时还是拿着枪推行。几十年来，那么多的承诺和保证令美国公民感到失望，幻想破灭后的他们可能会把特朗普选为总统，美国的精英们对此感到又惊又怕。</p>
<p>有关人们对“自由主义的故事”失去信心的另一种解释是，比较起过去的成就，人们更关心他们对未来的期望。</p>
<p>普通选民可能不理解人工智能，但他们能感觉到民主机制已经不再能够赋予他们权力。<strong>事实上，关乎普通选民和他们的孩子未来的最重要选择可能不是由欧盟的某些官僚或者华盛顿的某些游说团体做出的，而是由工程师、企业家和科学家做出的，而这些工程师、企业家和科学家并不会意识到自己所做的决定会带来怎样的影响，他们自然也不代表任何人。</strong>选民们看不到他们，也无法对他们喊话，所以他们只能猛烈抨击他们所能抨击的。英国的选民们想象自己的权力可能转移到了欧盟手上，所以他们投票支持英国脱欧。美国的选民们想象“权势集团”垄断了所有权力，所以他们决心给这个系统予以狠狠一击，以此来证明他们仍然有发言权。特朗普因而成了他们眼中下一届美国总统的最佳人选。<strong>正是因为选特朗普做美国总统令主流精英感到匪夷所思，这件事情才能成为普通选民证明自己仍然保留了一些权力的理想方式。</strong></p>
<p>事实证明，“自由主义的故事”在灵活性和发展变化上远远超过了它的任何一个对手。它战胜了传统的帝国，战胜了法西斯主义和共产主义，原因是因为它采用了自己对手的一些最好的想法和做法（比如政府出钱发展服务于民众的教育、医疗和福利事业）。</p>
<p>在社会主义者看来，为个人做自己喜欢做的事情的权利辩护便是在维护中产阶级和上层阶级的财产和特权。你是拥有居住自由，可你支付不起房租；是有学习自己感兴趣的学科的自由，可是你交不起学费；你有去你想去的地方旅行的自由，可是你买不起车；在这些时候，自由对你又有什么价值？更糟的是，自由主义鼓励人们将自己视为一个个个体，因而造成了人与人之间的分离，如此一来，人们便无法联合起来反对压迫他们的制度，不平等现象因此得以延续下去。</p>
<p>一旦人工智能在大多数认知作业上的表现优于人类，那个时候的就业市场会成为什么样子？一个由数量非常巨大、在经济上“没有用”的人所组成的新阶层会在政治上产生怎样的影响？等到纳米技术和再生医学可以延长人们的寿命——让八十岁的年纪相当于之前的五十岁，人们的关系、家庭还有养老基金到时候会受到什么影响？当生物技术发展到我们能够“设计”婴儿的水平——贫富之间的差距也会因此变得更大，人类社会会变成什么样子？对于上面这些问题，你不太可能在《圣经》或《古兰经》里找到答案。<strong>在这个被技术和经济风暴席卷的世界，激进的伊斯兰教，正统的犹太教或者基要派基督教可能会向信众许诺，他们会获得能够给他们带来确定性的船锚；然而，在这场即将到来的21世纪大海啸中，要保证不迷失方向，你还需要一张好地图，还要有结实的船舵。</strong></p>
<p>如“让美国再次强大”或者“把我们的国家还给我们”这一类口号的情况也一样：你可以建起一座墙来防止墨西哥非法移民进入美国，但是你没法建起一座墙把全球变暖挡在国门之外；你可以让英国脱离欧盟，但是你无法让伦敦脱离全球金融体系。<strong>如果人们不顾一切地抓住已经过时的民族和宗教身份不放，那么在气候变化、经济危机和技术带来的颠覆性影响面前，全球体系只会土崩瓦解；而19世纪的民族主义神话和中世纪的虔诚既不能理解这些问题，也没有能力解决它们。</strong></p>
<p>因此，<strong>当英国脱欧、特朗普崛起这样的事情发生时，主流精英们只能一脸惊恐地看着，然后希望大众会幡然悔悟，及时回到自由主义阵营里来，从而避免灾难的降临。</strong>但是，“自由主义的故事”要想从当前这场信任危机中存活下来可能会很困难，因为长期以来支撑着这个故事的根基可能已经在崩塌之中，这个根基便是：自由主义伦理和资本主义经济之间传统上的联合。在20世纪里，“自由主义的故事”非常具有吸引力，因为它告诉人们，也告诉政府，他们不用在“做正确的事”和“做精明的事情”之间做选择；保护人类的自由既是一种道义责任，也对经济的增长至关重要。英国、法国和美国之所以会蓬勃发展，据称是因为它们放宽了对经济和社会的限制，如果土耳其、巴西或者中国也想变得和英、法、美一样繁盛，它们也必须效仿这三个国家的做法。<strong>在大多数情况下，让暴君们和军政府决定实施自由化政策的不是道德上的理由，而是经济上的。</strong></p>
<p>然而，<strong>到了21世纪，对于我们所面临的两个最大挑战：全球变暖和技术发展带来的颠覆作用，“自由主义的故事”并不能提供很好的解决方案。</strong>随着人们的经济上的重要地位逐步被算法和机器人所取代，也许保护人类自由在道义上仍然具有正当性，可是光有道义上的理由就足够了吗？当重视每个人的自由和愿望不再能带来经济收益时，各国的精英们和政府还会对之继续重视吗？人们对自己的未来感到忧惧并没有错。即使特朗普输掉了即将到来的大选，数以百万计的美国人仍会有一种直觉：这个制度不再对他们有利，而且他们可能是正确的。</p>
<p><strong>自由主义曾经很繁荣的原因是一是主要因为经济上的因素，但我们所面临的挑战却不一样了。</strong></p>
<p>到那个时候，算法将拥有权威，人类则将失去权威。</p>
<hr>
<p>像这类新闻观点类带有时效性的好文章，以及文学类的文章还是很适合以这种评论的方式记录下来的~</p>
<p>自由主义的故事，曾经是因为其经济上的优势而繁荣和扩张的。然而绝大多数的时候，这只是一小部分精英们的故事，自由和权利或许都只会是上层阶级的财产和特权。可悲的是，人们没有其他选择。选择trump，是不想听见一个一直听腻的故事，是对遥远的精英们仅剩的嘲讽罢了。</p>
<h2 id="10-12"><a href="#10-12" class="headerlink" title="10.12"></a>10.12</h2><h3 id="开源产品"><a href="#开源产品" class="headerlink" title="开源产品"></a>开源产品</h3><p>V2上分享的开源代替sticker的软件，用来桌面端记录todo，用react + electron写的。 piece。</p>
<p>“只愿每一次的打磨者都只会是自己。”</p>
<p>在v2ex上遇见了很棒的人，有piece的作者，设计带给人的力量是绝对绝对不能忽略的，降低了你尝试的门槛，很多时候，你的生活里会多出另外的一些可能，有daza.io的作者，完成了类似即刻稀土的全栈开发后独自旅行，</p>
<p>“有时候，不懂如何书写自己的人生，是因为没有主动观察过这个世界。”</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 社会人物 </tag>
            
            <tag> 月总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Computer Vision - 基于图片特征匹配合成全景图]]></title>
      <url>http://chocoluffy.com/2016/11/07/Computer-Vision-%E5%9F%BA%E4%BA%8E%E5%9B%BE%E7%89%87%E7%89%B9%E5%BE%81%E5%8C%B9%E9%85%8D%E5%90%88%E6%88%90%E5%85%A8%E6%99%AF%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>这一次尝试解决的问题是: 假如你希望有一幅风景的全景图(panaroma)，但是你手头上只有一堆关于该风景不同角度的图片， 怎么利用computer vision学习到的方法来合成一张全景图。</p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这学期虽然在公司实习， 但同时我也在学校part time了一门computer vision的课程。Computer Vision，说白了就是结合image recognition和machine learning的方法来训练机器能够识别和”理解”图片等媒体资源， 也算是一个特别新兴的研究领域。 正巧大项目开始前期， 我也准备在博客里总结一下前几次作业里面涉及的概念， 感觉特别有趣和实用呢~</p>
<p>这一次尝试解决的问题是: 假如你希望有一幅风景的全景图(panaroma)，但是你手头上只有一堆关于该风景不同角度的图片， 怎么利用computer vision学习到的方法来合成一张全景图。</p>
<p>比如一个简单的例子， 家里的游泳池的照片你刚好有两张不同角度的图片(如下图), 通过计算两张图片中的feature points(特征点)并且进行匹配，得到相应空间转换的矩阵(homography)， 借此可以将不同的图片映射到同一个景观上进行叠加(stitching)， 来获取更全面的视角。</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79gw1f9k6ilaabuj30hg0eo76b.jpg" style="display: block; margin: 0 auto;"></p>
<p>在全景图中的应用如下图:</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9k6mj1jw6j30qa0h0jv5.jpg" style="display: block; margin: 0 auto;"></p>
<p>这也是这篇博文希望最后完成的目标。</p>
<h2 id="Computer-Vision"><a href="#Computer-Vision" class="headerlink" title="Computer Vision"></a>Computer Vision</h2><h3 id="特征点提取"><a href="#特征点提取" class="headerlink" title="特征点提取"></a>特征点提取</h3><p>Image features是描述一张图像的重要特征之一。 很多情况下我们分辨不同的图片的直觉之一是利用边缘的分布和形状， 也是一开始利用edge detection来处理图像的缘由， 通过把image当作一个$m*n$的矩阵， 其中每个元素为灰度图片的pixel intensity， 利用filter(box, haar)等等来简化对相邻元素的求导过程， 来得出pixel intensity上的变化速度， 大多数情况下假设边界往往意味着pixel intensity的剧烈变化， 那么将处理后数值高的来进行local maximum suppression之后可能大致得到边界点。由此而来的应用是corner detection， 比如最典型的harris corner detection。通过边角(corner)来帮助识别图片。</p>
<p>利用corner来作为图片特征是一个初步的可实现的想法， 然后有一些固有的缺点， 比如尽管corner detection是rotation invariant的， 但是不scale invariant， 这意味着， 一张被放大过的图片， 之前曾经被识别为corner的点， 在新图片中就不被识别出来了。 原理如图：</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9kfaxk3qqj311q0q4abj.jpg" style="display: block; margin: 0 auto;"></p>
<p>我们希望找到一些图片的特征， 这些特征不受旋转的干扰(rotation invariant)， 而且也不受放大缩小处理的干扰(scale invariant)。而这个也是SIFT(scale-invariant feature transform)算法所要解决的问题， 这也是这次全景组合的应用中我所用到的选取特征点的方式。 </p>
<p>大致的介绍下<a href="https://en.wikipedia.org/wiki/Scale-invariant_feature_transform" target="_blank" rel="noopener">SIFT</a>， 原理是利用Laplacian of Gaussian函数能够detect blob区域的特点， 根据不同的Gaussian sigma $\sigma$ 我们可以匹配到不同scale程度上的区域极值，而作者Lowe等人利用Difference of Guassian来替代具有相似函数属性的Laplacian of Gaussian， 从而提高计算速率(因为DoG是seperable的)， 通过这些处理， 可以得到在不同的locational and spatial都存在的local maximum， 也是我们所希望的到的特征点。</p>
<p>同时Lowe提出了将特征点描绘为一个向量的方式， 通过在其pixel区域附近的$16<em>16$的格间中， 收集每个$4</em>4$区域内关于image gradient的major magnitutude and orientation的信息形成一个histogram表， 大致分为8个bin, 从而得到的$4<em>4</em>8 = 128$维的向量作为该特征点的特征向量。</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 利用开源的matlab library vl_sift 来完成特征向量的获取</span></span><br><span class="line">I = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ;</span><br></pre></td></tr></table></figure>
<h3 id="特征点的匹配"><a href="#特征点的匹配" class="headerlink" title="特征点的匹配"></a>特征点的匹配</h3><p>在对应每一张图片分别经过SIFT等算法进行处理， 得到特征点和特征向量之后， 我们需要将这些特征点对应起来。 换句话说， 如果两张图片有特别多的相似的特征点， 我们可以以很大的机率说它们在描述同一个东西。 </p>
<p>而匹配特征向量的方法也很原始， 就是计算向量之间的距离， 如果在Eludiean distance上离得比较近的点， 我们认为可能比较相似。 同时为了降低误判的纪律， 我们还希望最接近的那个距离， 相比第二个接近的距离要小很多。 通过两个数值的比小于某个threshold可以来达到这个效果。</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 同样利用vl_sift自带的matching函数， 来比较两张图片中特征向量的匹配</span></span><br><span class="line">I = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">II = imread(<span class="string">'hotel/hotel-01.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ; </span><br><span class="line">[ff,dd] = vl_sift(single(II)) ;</span><br><span class="line">[matches, scores] = vl_ubcmatch(d, dd, <span class="number">5</span>);</span><br></pre></td></tr></table></figure>
<p>大致的结果如图：</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9kg47w4mxj31em0jejyn.jpg" style="display: block; margin: 0 auto;"></p>
<h3 id="空间转换矩阵"><a href="#空间转换矩阵" class="headerlink" title="空间转换矩阵"></a>空间转换矩阵</h3><p>具体的分析将会在另一篇博文中仔细讨论， 大致的原理是， 利用得到的feature match， 我们可以近似得到图片经过的转换， 然后用矩阵来表示。</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 通过计算homography矩阵， 将00中的特征点map到新的01图中</span></span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">close all;</span><br><span class="line">I = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">II = imread(<span class="string">'hotel/hotel-01.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ; </span><br><span class="line">[ff,dd] = vl_sift(single(II)) ;</span><br><span class="line">[matches, scores] = vl_ubcmatch(d, dd, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">[~, matchid] = sort(scores);</span><br><span class="line"></span><br><span class="line">matchid = matchid(<span class="number">1</span>, <span class="number">1</span>:<span class="keyword">end</span>);</span><br><span class="line">matches = matches(:, matchid);</span><br><span class="line">bestMatches = matches;</span><br><span class="line"></span><br><span class="line"><span class="comment">% these are matches.</span></span><br><span class="line">pSrc = f(<span class="number">1</span>:<span class="number">2</span>, bestMatches(<span class="number">1</span>, :));</span><br><span class="line">pTgt = ff(<span class="number">1</span>:<span class="number">2</span>, bestMatches(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">combs = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]; <span class="comment">% Use top 4 matches.</span></span><br><span class="line">bestMatchesID = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">A = <span class="built_in">zeros</span>(<span class="number">8</span>, <span class="number">9</span>); <span class="comment">% since for four matches, we have 8 rows.</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">4</span></span><br><span class="line">xi = pSrc(<span class="number">1</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line">yi = pSrc(<span class="number">2</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line">xiprime = pTgt(<span class="number">1</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line">yiprime = pTgt(<span class="number">2</span>, combs(bestMatchesID, <span class="built_in">i</span>));</span><br><span class="line"></span><br><span class="line">row1 = [xi yi <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> -(xiprime*xi) -(xiprime*yi) -xiprime];</span><br><span class="line">row2 = [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> xi yi <span class="number">1</span> -(yiprime*xi) -(yiprime*yi) -yiprime];</span><br><span class="line">A((<span class="number">2</span>*<span class="built_in">i</span><span class="number">-1</span>):(<span class="number">2</span>*<span class="built_in">i</span>), :) = [row1; row2];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">[V,D] = eig(A'*A);</span><br><span class="line">h = <span class="built_in">reshape</span>(V(:, <span class="number">1</span>), <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">X_hom=h'*[pSrc;ones(<span class="number">1</span>,size(pSrc, <span class="number">2</span>))];  <span class="comment">% be careful, Matlab has the matrix transposed</span></span><br><span class="line">X_hom=X_hom./<span class="built_in">repmat</span>(X_hom(<span class="number">3</span>,:),[<span class="number">3</span>,<span class="number">1</span>]);</span><br><span class="line">match_plot(I, II, pSrc', X_hom');</span><br></pre></td></tr></table></figure>
<p>上面这段代码可以得到如下的结果， 其中我用到了<code>match_plot</code>这个函数<a href="https://www.mathworks.com/matlabcentral/fileexchange/31144-match-plot" target="_blank" rel="noopener">here</a>来实现更好的可视化效果， 也就是把这些点给连线起来。可以看到的是， 这些点经过mapping之后仍然可以指向相同的位置， 尽管两张是完全不同的图片。 这个也是我们实现全景图的一个基础。</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9kg7usla1j30vs0c70y2.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww3.sinaimg.cn/large/006y8lVagw1f9fvb3funyj30vs0c7wk6.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww2.sinaimg.cn/large/006y8lVagw1f9fvbfrdxjj30vs0c7n2k.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww3.sinaimg.cn/large/006y8lVagw1f9fvbmsvkqj30vs0c77aj.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww4.sinaimg.cn/large/006y8lVagw1f9fvbs1gxuj30vs0c7dmk.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww1.sinaimg.cn/large/006y8lVagw1f9fvbzq4w6j30vs0c7wkq.jpg" style="display: block; margin: 0 auto;"><br><img src="http://ww1.sinaimg.cn/large/006y8lVagw1f9fvc7r1moj30vs0c7wk4.jpg" style="display: block; margin: 0 auto;"></p>
<p>如果假设每个图片都是一个矩形，我们希望将这些举行在空间中叠加起来： </p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 其中compute_homography是上述得到homography矩阵的算法</span></span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">close all;</span><br><span class="line">I = imread(<span class="string">'hotel/hotel-06.png'</span>);</span><br><span class="line">II = imread(<span class="string">'hotel/hotel-07.png'</span>);</span><br><span class="line">[f,d] = vl_sift(single(I)) ; </span><br><span class="line">[ff,dd] = vl_sift(single(II)) ;</span><br><span class="line">[matches, scores] = vl_ubcmatch(d, dd, <span class="number">40</span>);</span><br><span class="line">[~, id] = sort(scores);</span><br><span class="line">bestMatches = matches(:, id);</span><br><span class="line"></span><br><span class="line">h0001 = compute_homography(<span class="number">0</span>, <span class="number">1</span>, <span class="number">140</span>);</span><br><span class="line">h0102 = compute_homography(<span class="number">1</span>, <span class="number">2</span>, <span class="number">99</span>);</span><br><span class="line">h0203 = compute_homography(<span class="number">2</span>, <span class="number">3</span>, <span class="number">30</span>);</span><br><span class="line">h0403 = compute_homography(<span class="number">4</span>, <span class="number">3</span>, <span class="number">140</span>);</span><br><span class="line">h0504 = compute_homography(<span class="number">5</span>, <span class="number">4</span>, <span class="number">204.7</span>);</span><br><span class="line">h0605 = compute_homography(<span class="number">6</span>, <span class="number">5</span>, <span class="number">140</span>);</span><br><span class="line">h0706 = compute_homography(<span class="number">7</span>, <span class="number">6</span>, <span class="number">160</span>);</span><br><span class="line"></span><br><span class="line">I00 = imread(<span class="string">'hotel/hotel-00.png'</span>);</span><br><span class="line">I01 = imread(<span class="string">'hotel/hotel-01.png'</span>);</span><br><span class="line">[imgh, imgw, ~] = <span class="built_in">size</span>(I00);</span><br><span class="line"></span><br><span class="line">x = [<span class="number">0</span> <span class="number">0</span> imgw imgw];</span><br><span class="line">y = [<span class="number">0</span> imgh imgh <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">I03 = [x;y];</span><br><span class="line">I02Proj = projective_transform(h0203, x, y);</span><br><span class="line"></span><br><span class="line">I01Proj = projective_transform(h0102, x, y);</span><br><span class="line">I01Proj = projective_transform(h0203, I01Proj(<span class="number">1</span>, :), I01Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I00Proj = projective_transform(h0001, x, y);</span><br><span class="line">I00Proj = projective_transform(h0102, I00Proj(<span class="number">1</span>, :), I00Proj(<span class="number">2</span>, :));</span><br><span class="line">I00Proj = projective_transform(h0203, I00Proj(<span class="number">1</span>, :), I00Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I04Proj = projective_transform(h0403, x, y);</span><br><span class="line"></span><br><span class="line">I05Proj = projective_transform(h0504, x, y);</span><br><span class="line">I05Proj = projective_transform(h0403, I05Proj(<span class="number">1</span>, :), I05Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I06Proj = projective_transform(h0605, x, y);</span><br><span class="line">I06Proj = projective_transform(h0504, I06Proj(<span class="number">1</span>, :), I06Proj(<span class="number">2</span>, :));</span><br><span class="line">I06Proj = projective_transform(h0403, I06Proj(<span class="number">1</span>, :), I06Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">I07Proj = projective_transform(h0706, x, y);</span><br><span class="line">I07Proj = projective_transform(h0605, I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :));</span><br><span class="line">I07Proj = projective_transform(h0504, I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :));</span><br><span class="line">I07Proj = projective_transform(h0403, I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :));</span><br><span class="line"></span><br><span class="line">figure;fill(x, y, <span class="string">'r'</span>);hold on;</span><br><span class="line">fill(I02Proj(<span class="number">1</span>, :), I02Proj(<span class="number">2</span>, :), <span class="string">'g'</span>);</span><br><span class="line">fill(I01Proj(<span class="number">1</span>, :), I01Proj(<span class="number">2</span>, :), <span class="string">'b'</span>);</span><br><span class="line">fill(I00Proj(<span class="number">1</span>, :), I00Proj(<span class="number">2</span>, :), <span class="string">'y'</span>);</span><br><span class="line">fill(I04Proj(<span class="number">1</span>, :), I04Proj(<span class="number">2</span>, :), <span class="string">'k'</span>);</span><br><span class="line">fill(I05Proj(<span class="number">1</span>, :), I05Proj(<span class="number">2</span>, :), <span class="string">'w'</span>);</span><br><span class="line">fill(I06Proj(<span class="number">1</span>, :), I06Proj(<span class="number">2</span>, :), <span class="string">'c'</span>);</span><br><span class="line">fill(I07Proj(<span class="number">1</span>, :), I07Proj(<span class="number">2</span>, :), <span class="string">'m'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% projective_transform.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">proj</span> = <span class="title">projective_transform</span><span class="params">(h, x, y)</span></span></span><br><span class="line">proj = h'*[[x;y];<span class="built_in">ones</span>(<span class="number">1</span>,<span class="built_in">size</span>([x;y], <span class="number">2</span>))];  <span class="comment">% be careful, Matlab has the matrix transposed</span></span><br><span class="line">proj=proj./<span class="built_in">repmat</span>(proj(<span class="number">3</span>,:),[<span class="number">3</span>,<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>可以得到如下图所示的空间合集：</p>
<p><img src="http://ww1.sinaimg.cn/large/006y8lVagw1f9fvop5ss7j30fk0bot9k.jpg" style="display: block; margin: 0 auto;"></p>
<p>最后将所有图片的pixel都map过去， 再稍微blend一下就可以得到完整的全景图了：</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8lVagw1f9fvst75ufj30zr0dq0ut.jpg" style="display: block; margin: 0 auto;"></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>博文中部分图片示例来自课程slides <a href="http://www.teach.cs.toronto.edu/~csc420h/fall/slides/lecture9.pdf" target="_blank" rel="noopener">homography lecture slides</a></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> machine learning </tag>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[社团日记2 新生致辞]]></title>
      <url>http://chocoluffy.com/2016/10/06/%E7%A4%BE%E5%9B%A2%E6%97%A5%E8%AE%B02-%E6%96%B0%E7%94%9F%E8%87%B4%E8%BE%9E/</url>
      <content type="html"><![CDATA[<p>为什么我选择计算机。 因为它给了我自由。 和文字一样， 甚至更流行的自由。</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/801b780agw1f8jfpjll14j20j60ao3z8.jpg" style="display: block; margin: 0 auto;"></p>
<p>两周前的那个周末面试了好多小伙伴。 有来自工程系正在实习着的， 有研究生搞计算机系统的， 有一个穿着印有Amazon logo衣服的， 还有一个中文说得很溜的外国朋友。人来来往往。</p>
<p>作为技术部门的负责人， 在新生大会上也将有一段致辞。 说来也好玩， 给新生们准备的一段话， 自己准备的时候却也常常反问自己新生时的那段过往， 想起自己第一次接触计算机， 第一次参加hacker meeting的等等等等…</p>
<p>以下是当时准备时的摘要：</p>
<h3 id="新生致辞"><a href="#新生致辞" class="headerlink" title="新生致辞"></a>新生致辞</h3><p>这一段时间主要在忙招新、面试。 一直就会在想， 这到底是一个怎么样的社团， 我们想招进来什么样的人， 一个特别庞大的感觉其他社团都不太注重的tech部门， 究竟是干什么的， 为什么我要加入？</p>
<p>把我们精雕细琢的作品， 无论是程序还是海报， 分享出去。 哪怕是他们对我们的作品有异议， 但我们至少给生活的细节提供了观点。</p>
<p>特别印象深刻的是， “为什么加入ada“， 很多人的回答是， ”因为我曾经被UT助手的某些文章， 某些功能帮助过。”</p>
<p>我们特别珍惜这种感觉。</p>
<p>能够将自己的想法实现出来的自由。</p>
<p>这感觉是一个特别难回答的问题， 就好像你去问一个人， 什么是喜欢跑东跑西去摄影， 抑或什么才是旅行的意义。</p>
<p>但可能更多时候这个问题也特别简单， 因为我喜欢啊。我用照片想纪录下生活里最美最美的瞬间去留住记忆， 我想设计出别人看两眼都要抖两下的海报~</p>
<p>也因为喜欢， 你也想去找那同样饱含热情、热烈的一群人。</p>
<p>说白了，这是一群怎么样的人， 也会吸引那样子的一群人过来。</p>
<p>那我们tech部门呢， 特别特别珍重的一种感觉， 其实也恨简单， 就是好玩。</p>
<p>分享一个我们前段时间为了帮助新生更好的认识多伦多大学设计的一个简单的网页游戏-你究竟是不是一个多大学生。点进去会看到很多很美的风景， 你需要根据图片猜到这个地点的名称。蛮多新生可能猜不到几个， 所以我们在后续的小助手文章里也详细介绍了很多各个著名地点以及贴心的建议（比如：ba哪里有热水等等）。 感谢我们的lydia\jessie\gloria给我们整理的图片。最后还有一个很萌很萌的教授。</p>
<p>现在如何才能玩到这个游戏呢？很简单，在UT助手输入关键词都可以匹配到这篇文章找到这个游戏链接。</p>
<p>那这个也是一个很好玩的功能啦， 也就是上个月吧， 我给小助手的后台添加了语义理解的功能。</p>
<p>说回来， 这是一个很典型的， 也是一个我蛮喜欢的游击战合作方式啦， 短短一两天内， 从社长提出这个上一次brainstorm里joyce的想法， 到技术部水水完成基本框架， 再转移给marketing部jessie添加内容素材， 再转移给技术部我和justin来设计动效和优化加载时间。 然后就有了这份几千人在微信上玩的一个游戏。很好玩吧。</p>
<p>第二个我一直想分享的东西， 就是我们的UT助手了， 正如大家所看到的一样， 我们给UT助手添加了很多的功能。</p>
<p>那ADA和UT助手， 究竟是什么一个关系？UT助手是一个独立的媒体平台， 由ADA的市场部的伙伴运营， 想让大家听见不同的声音， 看见有态度有温度的文字。 我也非常期待今年的UT助手， 因为作者费诺、冯小姐都是我特别欣赏的人。而Tech部门的主要目标之一， 也是为这个媒体平台添加工具性的功能。</p>
<p>自动化。</p>
<p>这是今年Tech部门最最主要的使命之一。</p>
<p>从数据来源爬虫的自动采集， 到项目与slackbot、hubot的自动储存和部署。我希望今年大部分的ADA项目都可以在某个方面接受自动化的想法。 从开发环境的设置开始， 可能每次开发网页你都是在编辑器里面保存然后跑去浏览器那边刷新等新的结果， 而同样， 或者可以尝试webpack的热加载， 页面可以随时同步到最新的状态而不必你有任何操作。很多的东西都会在后续的workshop里面分享。</p>
<p>这是一个试错成本很高的时代，ADA想提供给你， 在你步入残酷的商业逻辑之前， 一次尝试的机会。</p>
<p>这里有一群我认为非常理想主义的人。</p>
<p>如果要我说， 为什么我选择计算机。 因为他给了我自由。 和文字， 设计一样。它给予了你实现你想法的自由。而自由的人， 是最快乐的。</p>
<div class="full-image" markdown="1"><br>  <iframe src="http://chocoluffy.com/ADA2016/" width="100%" height="600px"><br>    <p>Your browser does not support iframes.</p><br>  </iframe><br></div>]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 创业 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[社团日记1 重新出发]]></title>
      <url>http://chocoluffy.com/2016/09/11/%E7%A4%BE%E5%9B%A2%E6%97%A5%E8%AE%B01-%E9%87%8D%E6%96%B0%E5%87%BA%E5%8F%91/</url>
      <content type="html"><![CDATA[<p>故事的开始。</p>
<a id="more"></a>
<p>有时候觉得自己还蛮幸运的， 一年前误打误撞来了多伦多， 误打误撞地加入了一个社团， 就认识了现在的室友和绝大多数最好的朋友。 原来觉得不过是一个简单的CS开发社团， 却不知觉受到了牵绊， 一路的小伙伴慢慢多了起来， 曾经一直以为自己会单打独斗下去， 现在则深感起伙伴的意义和陪伴。 这一年， 发生了太多的事情， 宛若被卷进了一篇篇故事情节般跌宕起伏， 迎来了自己进入计算机领域的第二年， 赢来了些许成就和关注； 开启了一份为期一年的全职工作； 第一次在白板上画出技术架构； 也第一次以vice president的身份见证一个年轻社团的懵懂和交接。 想写点什么， 对得起时光， 也对得起运气。</p>
<p>还记得今年年初曾经读过一本国内的创业传记《途客圈》， 硅谷工程师作者陈天在这本书里记录了途客圈这家曾经星光熠熠的创业公司的发展， 成熟， 瓶颈和没落。 记得当时零零散散的技术和期权笔记， 还在其中一个段落的结尾天真地自嘲到和现在的自己还完全没有什么关系嘛， 而半年之后， 却仿佛日日夜夜和小伙伴讨论起书里似曾相识的商业情节： 创始人及其同僚退任， 一个技术社团的高层大换血， 孤立无助的公关和市场部门， 流行和高雅的定位矛盾， 接受赞助和保持独立的选择与站队……不过这一次， 是切肤的感情和泪水， 是我们自己的选择。</p>
<p>这是一段真实的故事。 或许无关汹涌澎湃的情节，但这却是我最真实的生活。</p>
<p>故事的开头， 定格到一次关于赞助广告的紧急会议。 愿意接受来自商业机构的赞助吗？</p>
<p>一直以来， 赞助广告都好像会触动大众敏感的神经， 作为观众，其实争议和选择并不大， 无非是偶尔可能夸张了点的标题和或者画风突变的段子， 有时候效果好的， 人们反而乐在其中自愿做起了二次传播。 但作为被赞助的一方， 这却是一个很容易被上升到自由与独立的话题。 一方面， 有人觉得失去了创作的自由与方向， 而另一面， 有人觉得有了经济来源可以支撑起更大的自由……看似相互矛盾的两个论点， 实际上都是切中了同一个问题， “到底是谁在控制着开发抑或创作的自由？”， 如果赞助方以几近收购的经济优惠来和你提出合作邀请， 对不起， 他们需要的不是你， 而是你现在拥有的市场的关注和资源， 他们有他们准备好的一全套规划和商业蓝图， 而蓝图里并没有你可以自由发挥的地方， 你可以接受合作， 但却暗含接受给他们打工的前景。 虽然现实中Facebook巨额收购的Instagram和Whatsapp都将继续保持独立经营， 但这不过是FB在对手尚未反抗时的保护性市场垄断计划罢了， 而当初没有接受FB收购提议的Snapchat倒是在其曾经的年轻人圈子里打得一片火热。 试想想， 为什么Instagram和Whatsapp的发展宛若停止， 社交功能上几近亘古不变， 毕竟这是FB母体攫取广告费的主要流量来源， 任何有阻其扩大和维持市场的举动都不会被鼓励的。</p>
<p>而说回到我们自己社团对待赞助的情况， 更多的是我们自己依旧控制着我们创作开发以及市场运营的自由， 我们需要赞助， 也得以计划在科技领域下举办更多更有影响力的活动， 而我们几近全部的成果， 从组织的workshop， 到开发的产品功能， 原创的公众号文章， 都是我们学生利用业余时间独立做出来的……放在这个具体的环境下， 也很难说， 接受赞助合作会在哪些方面方面改变我们原本自己的轨迹。 而当天晚上， 我们也最终一致地通过了合作的计划， 值得一提地的是， 我们的社长大人硬生生将赞助费用拉高了十几个百分点， 哈哈……</p>
<p>我们还是一个特别年轻的社团， 在这个阶段， 我们需要侵略性不大的经济支持。 而至于长远的计划呢， 未来的愿景里对赞助的依赖有思考过吗？</p>
<p>其实作为技术部门的负责人， 我一直一直都很想将来源于”湾区日报”的启发在自己的社团产品里实现。 什么是湾区日报？ 它是由一个湾区的工程师独立一个人维系的业余项目， 每天通过各大社交平台发出自己阅读收集转载的商业、技术文章， 非营利项目， 据说作者还拒绝了很多商业赞助和合作， 目前的收入主要来自于APP的功能内购和自主捐赠。 阅读并收集优秀的资源是一个很好的习惯， 而让我印象深刻的并不是作者这一坚持的习惯本身， 而是， 作为一名工程师， 将整个习惯流程自动化的地步。 利用hubot和slack将阅读文章的保存以及之后的发布自动化， 极大地降低了分享的成本， 而分享本身的快乐， 也更容易被感受和坚持下去。 也是惊人的相似， 社团旗下也运营着一个辐射到整个多伦多大学华人学生的微信公众号， 而我这一个月带领的主要项目， 也是基于公众号所积累的内容做机器学习的处理， 同时努力把内容获取， 归档， 预处理和语义分析这一部分给自动化。 </p>
<p>任重而道远， 不过， 自动化， 也将会是这一年， 我给社团开发定下的首要目标。 或许慢慢地， 当我们的消息获取和处理成本极大的降低之后， 我们可以在微博， Facebook上自动发布我们收集转载的有用资讯， 市场部的小伙伴们可以集中精力在原创的文章和设计上……说着说着有种BuzzFeed的即视感， 不过我们只是一群追求效率的学生罢了， 我们只想静静地做好多伦多大学助手， 然后多伦多助手？ 然后？</p>
<p>镜头慢慢转回来， 距离我们签下赞助合同已经过去将近一个月了， 第二场关于招新的战役也近了， 而我们也太年轻， 也才反应过来犯下了好些错误， 从大受欢迎的游戏忘记的数据统计， 到社团官网的不太明了的内容介绍， 到社团在学校的百团大战几近煮熟的电脑。 可也正是这些事过以后的些许遗憾， 反衬出那些我们一起圆满了的美好。 短时间内设计的精美游戏， 惊艳的官网和硕果累累的招新， 突然想起社长大人的一段话， “最坏的情况不过就是维持现状， 而维持现状， 也挺好的不是嘛”……</p>
<p>很幸运能在奔波的路上遇见最真挚的伙伴， 沿途太多风景， 想抵达太多地方， 也是你们让我看见太多的可能。 很想写下这些莫名的情绪， 哪怕是尘封在角落， 也给我未来留下去找寻的线索， 这些天， 我曾经和这样的一帮人， 一起疯过。</p>
<p>分享很喜欢的一句话， 摘自《小王子》的作者， 安东尼圣修伯里， “如果你想打造一艘船， 别忙着号召人马， 收集木材， 分配工作， 发号施令。 你该做的是， 激起人们对浩瀚海洋的渴望。” </p>
<p><img src="http://ww1.sinaimg.cn/large/72f96cbagw1f7qbwyqnsog20dc0m1u0x.gif" style="margin: 0 auto;"></p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 创业 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用ffmpeg从视频中获取图片及GIF]]></title>
      <url>http://chocoluffy.com/2016/08/27/%E7%94%A8ffmpeg%E4%BB%8E%E8%A7%86%E9%A2%91%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E5%8F%8AGIF/</url>
      <content type="html"><![CDATA[<p>最近的项目涉及比较多的视频和图片的处理， 发现了一个特别好用的linux library “ffmpeg”， 在其官网的介绍中可以发现的是convert\record\stream video和audio的功能， 但其实我只是利用这个工具来从视频中获取一张张单独的图片(frame)， 然后来做后续的机器学习(相似度匹配PCE， 人像识别等等)等处理。 </p>
<a id="more"></a>
<p>在项目的展示中， 我提出了来自youtube的启发， 我感觉也是最近这几周， youtube上的视频列表多了一个新功能是， 当你鼠标hover当前视频时， 静态图片会变成视频中其中的一段GIF， 然后过一段时间再变回来， 具体效果看这个动图：</p>
<p><img src="http://ww4.sinaimg.cn/large/7853084cgw1f78xtzb0xyg20dc08u1ky.gif" style="margin: 0 auto;"></p>
<p>当时上youtube就觉得用户体验好棒， 很快想到的一些问题是， youtube是随机攫取GIF的嘛， 是否这个GIF就是这个视频的重要scene， 是利用收集的社交数据和评论来预测重要性的， 还是仅仅通过比较frame出现的时长来比较……</p>
<p>这些都是很有趣的问题， 每一个方向展开来说都可以逐渐细分到实现的算法和数据格式。 我现在正在做的也正是我上面提到的其中一个方向哈哈， 而今天这篇博文想要探讨的， 是实现上面所有后续构想的building block， 怎样获取数据源和呈现。 ffmpeg和imagemagick这两个处理照片和视频特别方便的库也再这里介绍一下。</p>
<h2 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h2><p>安装ffmpeg的方式很简单， 在OSX里面<code>brew install ffmpeg</code>就可以了。同理也有<code>brew install imagemagick</code>。</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>下面是各种working choice，ffmpeg强大的另外一个地方是它并不需要将整个视频都下载下来然后再进行处理， 而是可以直接read from stream。 而在整个流程最花时间的步骤其实并不是获取那个frame， 而是将frame根据一定编码保存到本地这个过程。 而后续如果有充分时间， 我也满希望可以仔细去看看ffmpeg编码的格式~</p>
<p>[1]<code>ffmpeg -y -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 -ss 3 -frames:v 1 frame_3.jpg</code><br>can help extract the third frame from that url.</p>
<p>[2]<code>ffmpeg -y -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</code><br>will output images to convert them into gif.</p>
<p>[3]<code>ffmpeg -t 3 -ss 00:00:02 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 middle.gif</code><br>The snippet directs ffmpeg to create a GIF 3 seconds long starting at 2 seconds into the video.</p>
<p>[4]Thus, simply combine the [2] and [3] can convert some specific time frames into optimized gif like this <code>ffmpeg -t 3 -ss 00:00:02 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4  -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</code></p>
<p>[5]ffmpeg has its own version of converting to gif. <code>ffmpeg -t 3 -ss 1 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 output.gif</code>. However, the file size is extremely large, hard to load.</p>
<p>For now, version [4] is the best choice.</p>
<p><code>-ss</code>: follows a single number means extracting that single frame from video source; follows a specific time-format means extracting from that time. </p>
<p><code>-t</code>: follows a number means the duration of that extraction.</p>
<p>我在这里只记录了几个较为常用的parameter options。更多的option可以参看<a href="https://www.ffmpeg.org/ffmpeg.html" target="_blank" rel="noopener">官方文档</a></p>
<h2 id="Dev-Environment"><a href="#Dev-Environment" class="headerlink" title="Dev Environment"></a>Dev Environment</h2><p>接下来是一段我写的示例代码， 主要还是就怎么使用ffmpeg的问题稍微说一下， 毕竟大部分Machine Learning的工作还是在python里面写， 而当我们需要在python里面获取这些frames的时候， 我们应该怎么调用ffmpeg和imagemagick呢？</p>
<p>这里稍微补充一点， 启示ffmpeg本身也可以convert seperate images into gif， 但是相比与imagemagick还提供了图片压缩和优化的选项， 我更倾向于使用两者的结合。</p>
<h3 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h3><p>就使用ffmpeg这个方面本身并不需要提及virtualenv， 但是很多和ffmpeg相关的后续工作都会和很多python的scientific computing package一起合用， 而安装这些packages的过程是非常繁琐而容易出错的， 大家都习惯一上来就把这些library安装在全局， 而无论是安装过程还是未来的版本管理都是mess。</p>
<p>因此这里稍微提一下anaconda， 专为管理python packages而生的CLI， 为每一个项目创建一个virtualenv然后给那个项目安装不同的独立的python libraries， 用完即删。</p>
<p><code>conda create --name &lt;project-name&gt; python=2.7 opencv matplotlib</code>, use conda to install library dependencies. Also specify the python version and library needed to pre-install, say inside this project, we want  <code>import cv2</code>, thus we put those libraries right after the python version. Then <code>source activate &lt;project-name&gt;</code> can jump into that virtualenv.</p>
<h3 id="subprocess"><a href="#subprocess" class="headerlink" title="subprocess"></a>subprocess</h3><p>Since I will utilize “imagemagick” library to process images into gifs, by piping the results from “opencv”, most likely I will need to create a subprocess to do that. The command-line way to achieve that is <code>ffmpeg -t 3 -ss 00:00:02 -i &lt;video source&gt; -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</code>, which for example, will extract starting at 00:00:02 a 3-seconds short video from origin video and convert\optimize them into a smaller gif. In order to support multiple pipes as in command line, we use subprocess’s <code>PIPE</code> functions to concatenate those different parts.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_video_gif</span><span class="params">(video, t, duration, output_name)</span>:</span></span><br><span class="line">    <span class="comment"># In subprocess, save gif to local.</span></span><br><span class="line">    <span class="comment"># ffmpeg -t 3 -ss 00:00:02 -i https://video.twimg.com/ext_tw_video/712057418646052864/pu/vid/1280x720/JiR-RnnRyfQVF5ue.mp4 -vf scale=320:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -loop 0 - gif:- | convert -layers Optimize - output.gif</span></span><br><span class="line">    p1 = sp.Popen([<span class="string">'ffmpeg'</span>, <span class="string">'-t'</span>, str(duration), <span class="string">'-ss'</span>, str(t), <span class="string">'-i'</span>, video, <span class="string">'-vf'</span>, <span class="string">'scale=320:-1'</span>, <span class="string">'-r'</span>, <span class="string">'10'</span>, <span class="string">'-f'</span>, <span class="string">'image2pipe'</span>, <span class="string">'-vcodec'</span>, <span class="string">'ppm'</span>, <span class="string">'-'</span>, ], stdout=sp.PIPE)</span><br><span class="line">    p2 = sp.Popen([<span class="string">'convert'</span>, <span class="string">'-delay'</span>, <span class="string">'5'</span>, <span class="string">'-loop'</span>, <span class="string">'0'</span>, <span class="string">'-'</span>, <span class="string">'gif:-'</span>], stdin=p1.stdout, stdout=sp.PIPE)</span><br><span class="line">    p1.stdout.close()</span><br><span class="line">    p3 = sp.Popen([<span class="string">'convert'</span>, <span class="string">'-layers'</span>, <span class="string">'Optimize'</span>, <span class="string">'-'</span>, output_name], stdin=p2.stdout, stdout=sp.PIPE)</span><br><span class="line">    p2.stdout.close()</span><br><span class="line"></span><br><span class="line">    output = p3.communicate()[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<h2 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h2><ul>
<li><a href="http://superuser.com/questions/556029/how-do-i-convert-a-video-to-gif-using-ffmpeg-with-reasonable-quality" target="_blank" rel="noopener">How to convert a video to gif using ffmpeg</a></li>
<li><a href="https://davidwalsh.name/convert-video-gif" target="_blank" rel="noopener">How to convert to and from between gif and video</a></li>
<li><a href="https://www.reddit.com/r/learnprogramming/comments/44nhzp/how_to_use_youtubedl_and_ffmpeg_to_download/" target="_blank" rel="noopener">use youtube-dl and ffmpeg to download</a></li>
<li><a href="http://superuser.com/questions/680323/processing-youtube-video-in-ffmpeg" target="_blank" rel="noopener">how to process youtube video without downloading it</a> main idea is to config ffmpeg with <code>libquvi</code>!!</li>
<li><a href="https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX" target="_blank" rel="noopener">install ffmpeg through homebrew</a> with recommending configuration options like <code>brew install ffmpeg --with-fdk-aac --with-ffplay --with-freetype --with-libass --with-libquvi --with-libvorbis --with-libvpx --with-opus --with-x265</code></li>
<li><a href="https://www.binpress.com/tutorial/how-to-generate-video-previews-with-ffmpeg/138" target="_blank" rel="noopener">[recommend]how to generate video preview with ffmpeg</a></li>
<li><a href="http://www.bogotobogo.com/FFMpeg/ffmpeg_thumbnails_select_scene_iframe.php" target="_blank" rel="noopener">ffmpeg generate thumbnail from video</a> after generate the thumbnail and stitch together, here is a front end demo to over it <a href="http://jsfiddle.net/r6wz0nz6/2/" target="_blank" rel="noopener">demo</a> to see a preview.</li>
<li><a href="https://wideopenbokeh.com/AthenasFall/?p=5" target="_blank" rel="noopener">some tricks of using youtube-dl</a></li>
</ul>
<p>Inside <code>~/.bashrc</code>, set <code>alias youtubemp3=&#39;youtube-dl --extract-audio --audio-format mp3&#39;</code> to be able to create a alias and save a youtube video to mp3.</p>
<p>So basically, <code>youtube-dl -F &lt;url&gt;</code> to list all available video format, then  <code>youtube-dl -f 134 -o video.mp4 https://www.youtube.com/watch?v=v1uyQZNg2vE</code></p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>处理视频和图片对我来说是一个蛮有趣的方向。 我们每天都会查询和搜索到无数多媒体信息， 而人们对信息的处理能力和标准也越来越严苛， 从简单文本到图片分享再到视频， 现在还很火的视频直播技术不是吗。 人们越来越多地被记录下来， 从曾经一生可能只去几次的影楼， 到情绪高涨时举起的自拍杆， 再到可能无时无刻都存在的直播和拍摄。</p>
<p>而记录本身， 就孕育着还原的渴望。</p>
<p>利用文字， 图片和视频， 科学家们能会如何重构一个曾经发生的世界， 而又能怎样地拿那个世界的统计和观察来预测下一个每分每秒。 深度学习和人工智能火了， 或许也是人们在尝试还原重构这个世界的一个必经之路， 很期待未来几年的科技发展啊。</p>
<p>很幸运以一个学生和实习生的身份慢慢进入这个殿堂。 话说回来， 每次见到那些用户体验特别好的细节总是特别喜欢然后絮絮叨叨呢哈哈~</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> machine learning </tag>
            
            <tag> 用户体验 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[React/ES6 style guideline]]></title>
      <url>http://chocoluffy.com/2016/08/01/React-ES6-style-guideline/</url>
      <content type="html"><![CDATA[<p>用React完成了好几个小项目， 同时还在学习React Native开发， 记录一些ES6特别便捷的用法和guideline。持续更新…</p>
<a id="more"></a>
<h2 id="React-conventions"><a href="#React-conventions" class="headerlink" title="React conventions"></a>React conventions</h2><h3 id="propType-and-defaultProps"><a href="#propType-and-defaultProps" class="headerlink" title="propType and defaultProps"></a>propType and defaultProps</h3><p>使用propType不仅仅是检查props数据的格式， 也是提醒自己这个组件可以利用的来自母组件的数据， 方便以后开发。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Title.jsx</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Title</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123; this.props.text &#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Title.propTypes = &#123;</span><br><span class="line">  text: React.PropTypes.string</span><br><span class="line">&#125;;</span><br><span class="line">Title.defaultProps = &#123;</span><br><span class="line">  text: <span class="string">'Hello world'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Title</span> <span class="attr">text</span>=<span class="string">'Hello React'</span> /&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br></pre></td></tr></table></figure>
<h3 id="this-props-children"><a href="#this-props-children" class="headerlink" title="this.props.children"></a>this.props.children</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Title</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;h1&gt;</span><br><span class="line">        &#123; <span class="keyword">this</span>.props.text &#125;</span><br><span class="line">        &#123; <span class="keyword">this</span>.props.children &#125;</span><br><span class="line">      &lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">class App extends React.Component &#123;</span></span><br><span class="line"><span class="regexp">  render() &#123;</span></span><br><span class="line"><span class="regexp">    return (</span></span><br><span class="line"><span class="regexp">      &lt;Title text='Hello React'&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span&gt;community&lt;/</span>span&gt;</span><br><span class="line">      &lt;<span class="regexp">/Title&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br></pre></td></tr></table></figure>
<h3 id="Dependency-injection"><a href="#Dependency-injection" class="headerlink" title="Dependency injection"></a>Dependency injection</h3><p>One disadvantage of using react, is that when we need to pass down data to a deeply-nested component, which requires passing props all along the way.</p>
<h3 id="A-simple-switcher-example"><a href="#A-simple-switcher-example" class="headerlink" title="A simple switcher example"></a>A simple switcher example</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Switcher</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">flag</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">    <span class="keyword">this</span>._onButtonClick = <span class="function"><span class="params">e</span> =&gt;</span> <span class="keyword">this</span>.setState(&#123; <span class="attr">flag</span>: !<span class="keyword">this</span>.state.flag &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;button onClick=&#123; <span class="keyword">this</span>._onButtonClick &#125;&gt;</span><br><span class="line">        &#123; <span class="keyword">this</span>.state.flag ? <span class="string">'lights on'</span> : <span class="string">'lights off'</span> &#125;</span><br><span class="line">      &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ ... and we render it</span></span><br><span class="line"><span class="regexp">class App extends React.Component &#123;</span></span><br><span class="line"><span class="regexp">  render() &#123;</span></span><br><span class="line"><span class="regexp">    return &lt;Switcher /</span>&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="Data-flow"><a href="#Data-flow" class="headerlink" title="Data flow"></a>Data flow</h3><p>Basically two way of passing data down with server call. One is parent component make a server request, usually in the <code>componentDidMount</code> and <code>componentWillMount</code>, and pass down the data using props to the children components. The disadvantage of that is the verbose passing process.</p>
<p>Another way is allow children components to make request themselves, which is the way of GraphQL.</p>
<h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h3 id="Arrow-functions"><a href="#Arrow-functions" class="headerlink" title="Arrow functions"></a>Arrow functions</h3><p>what the heck is the arrow function? <strong> Unlike functions, arrows share the same lexical this as their surrounding code.</strong></p>
<h3 id="Modules"><a href="#Modules" class="headerlink" title="Modules"></a>Modules</h3><p>Language-level support for modules for component definition. Codifies patterns from popular JavaScript module loaders (AMD, CommonJS). Runtime behaviour defined by a host-defined default loader. Implicitly async model – no code executes until requested modules are available and processed.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// lib/math.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> pi = <span class="number">3.141593</span>;</span><br><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> math <span class="keyword">from</span> <span class="string">"lib/math"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"2π = "</span> + math.sum(math.pi, math.pi));</span><br><span class="line"><span class="comment">// otherApp.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;sum, pi&#125; <span class="keyword">from</span> <span class="string">"lib/math"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"2π = "</span> + sum(pi, pi));</span><br></pre></td></tr></table></figure>
<p>Some additional features include <code>export default</code> and <code>export *</code>:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib/mathplusplus.js</span></span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">"lib/math"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> e = <span class="number">2.71828182846</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.exp(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">import</span> exp, &#123;pi, e&#125; <span class="keyword">from</span> <span class="string">"lib/mathplusplus"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"e^π = "</span> + exp(pi));</span><br></pre></td></tr></table></figure>
<h3 id="Deconstructing"><a href="#Deconstructing" class="headerlink" title="Deconstructing"></a>Deconstructing</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, b] = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="comment">// a === 1</span></span><br><span class="line"><span class="comment">// b === 2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; ui, name &#125; = <span class="keyword">this</span>.props;</span><br><span class="line"><span class="comment">// ui === this.props.ui;</span></span><br><span class="line"><span class="comment">// name === this.props.name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; <span class="attr">blogpost</span>: &#123; title, slug &#125; &#125; = <span class="keyword">this</span>.props;</span><br><span class="line"><span class="comment">// title === this.props.blogpost.title;</span></span><br><span class="line"><span class="comment">// slug === this.props.blogpost.slug;</span></span><br></pre></td></tr></table></figure>
<h3 id="Functional-binding"><a href="#Functional-binding" class="headerlink" title="Functional binding"></a>Functional binding</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Link</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  click() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.props);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Clicked with scope'</span>, <span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span> <span class="attr">onClick</span>=<span class="string">&#123;</span> <span class="attr">::this.click</span> &#125;&gt;</span>Click me!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Adding the function bind syntax to ::this.click converts down to this.click.bind(this), ensuring that your callbacks in a component are called with this scoped to the component.</p>
<h3 id="Spread-operator"><a href="#Spread-operator" class="headerlink" title="Spread operator"></a>Spread operator</h3><p>尤其在React Native的redux框架里， 我们不能在reducer里修改state， 只能每次返回一个新的object， 这时候spread syntax特别方便。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> postActions <span class="keyword">from</span> <span class="string">'actions/posts'</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> userActions <span class="keyword">from</span> <span class="string">'actions/users'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> actions = <span class="function">(<span class="params">dispatch</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> bindActionCreators(&#123; ...postActions, ...userActions&#125;, dispatch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example we create a new object containing all values from postActions and userActions in one line.</p>
<h2 id="React-interview-question"><a href="#React-interview-question" class="headerlink" title="React interview question"></a>React interview question</h2><p>Check more information from <a href="https://www.codementor.io/reactjs/tutorial/5-essential-reactjs-interview-questions" target="_blank" rel="noopener">this post</a>.</p>
<ul>
<li>Under what circumstances would you choose React over (AngularJS, etc)?</li>
<li>If React only focuses on a small part of building UI components, can you explain some pitfalls one might encounter when developing a large application?</li>
<li>If you were rewriting an AngularJS application in React, how much code could you expect to re-use?</li>
</ul>
<h3 id="High-Level-Component-Lifecycle"><a href="#High-Level-Component-Lifecycle" class="headerlink" title="High-Level Component Lifecycle"></a>High-Level Component Lifecycle</h3><p>At the highest level, React components have lifecycle events that fall into three general categories:</p>
<ul>
<li>Initialization</li>
<li>State/Property Updates</li>
<li>Destruction</li>
</ul>
<p>Every React component defines these events as a mechanism for managing its properties, state, and rendered output. Some of these events only happen once, others happen more frequently; understanding these three general categories should help you clearly visualize when certain logic needs to be applied.</p>
<p>For example, components will automatically re-render themselves any time their properties or state change. However in some cases a component might not need to update — so preventing the component from re-rendering might improve the performance of our application.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// only re-render if the ID has changed!</span></span><br><span class="line">    shouldComponentUpdate(nextProps, nextState) &#123;</span><br><span class="line">        <span class="keyword">return</span> nextProps.id === <span class="keyword">this</span>.props.id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Example-interview-coding-challenge"><a href="#Example-interview-coding-challenge" class="headerlink" title="Example interview coding challenge"></a>Example interview coding challenge</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="comment">// set the default internal state</span></span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            clicks: <span class="number">0</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentDidMount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.refs.myComponentDiv.addEventListener(</span><br><span class="line">            ‘click’, </span><br><span class="line">            <span class="keyword">this</span>.clickHandler</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentWillUnmount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.refs.myComponentDiv.removeEventListener(</span><br><span class="line">            ‘click’, </span><br><span class="line">            <span class="keyword">this</span>.clickHandler</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    clickHandler() &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            clicks: <span class="keyword">this</span>.clicks + <span class="number">1</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">let</span> children = <span class="keyword">this</span>.props.children;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=”my-component” ref=”myComponentDiv”&gt;</span><br><span class="line">                &lt;h2&gt;My Component (&#123;<span class="keyword">this</span>.state.clicks&#125; clicks&#125;)&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">                &lt;h3&gt;&#123;this.props.headerText&#125;&lt;/</span>h3&gt;</span><br><span class="line">                &#123;children&#125;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<p>However, there are two problems with the code above.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The constructor does not pass its props to the super class. It should include the following line:</span></span><br><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// The event listener (when assigned via addEventListener()) is not properly scoped because ES2015 doesn’t provide autobinding. Therefore we might re-assign clickHandler in the constructor to include the correct binding to this:</span></span><br><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">              <span class="keyword">this</span>.clickHandler = <span class="keyword">this</span>.clickHandler.bind(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>And in order to use this component, we can do this:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;MyComponent headerText=”A list <span class="keyword">of</span> paragraph tags”&gt;</span><br><span class="line">    &lt;p&gt;First child.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">    &lt;p&gt;Any other &lt;span&gt;number&lt;/</span>span&gt; <span class="keyword">of</span> children...&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>MyComponent&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> react </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[webpack与react\redux前端开发工具库]]></title>
      <url>http://chocoluffy.com/2016/07/18/webpack%E4%B8%8Ereact-hot-reload%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>对Dan Abramov开源的react hot loader boilplate的浅探， 同时复习一下webpack与react搭配开发时的常用配置。<a href="https://github.com/chocoluffy/react-hot-boilerplate" target="_blank" rel="noopener">Github Source</a></p>
<a id="more"></a>
<h2 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h2><p>通常用到的plugin, 在package.json里面保存的module有： “babel-loader”\”babel-preset-es2015”\”babel-preset-react”， 使用babel-loader, 一是可以在<code>.babelrc</code>这个文件里面写出使用另外两个module的配置， 或者， 在webpack里面的loaders部分添加相应的code来实现同样的功能。其中”babel-preset-es2015”是将es6的js语法compile成es5的， 现在IE9以上及大部分的主流浏览器目前都支持ES5语法了。</p>
<blockquote>
<p>至于ES6和ES5有什么区别， 以及即将到来的ES7有什么意义， 集成了大部分的functional programming的特性， 本来可能需要引用underscore.js的函数现在可能直接就可以用了。包括spread operator, function binding(::), arrow functions, modules export， 这些都是非常便捷和广泛采用的语法呢~</p>
</blockquote>
<p>而“babel-preset-react”则是将JSX译成JS的插件。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  devtool: <span class="string">'inline-source-map'</span>,</span><br><span class="line">  entry: [<span class="string">'./client/client.js'</span>], <span class="comment">// 将entry下的client.js最终打包成dist/bundle.js。</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    path: <span class="string">'./dist'</span>,</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    publicPath: <span class="string">'/'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>, <span class="comment">// 利用正则表达式来匹配所有以.js结尾的文件， 同时排除node_modules里面的js文件。</span></span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        query: &#123;</span><br><span class="line">          presets: [<span class="string">'react'</span>, <span class="string">'es2015'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意在express里面， 我们通常会调整前端index.html引用资源的路径为“./dist”:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(express.static(<span class="string">'./dist'</span>));</span><br></pre></td></tr></table></figure>
<p>这样的在index.html里面引用bundle.js就可以直接：<code>&lt;script src=&quot;bundle.js&quot;&gt;&lt;/script&gt;</code>就好了。</p>
<p>然后在webpack.config.js写好之后， <code>webpack --config webpack.config.js</code>可以run webpack。然后<code>nodemon server.js</code>就可以开始运行了。当然webpack也有hot reloading的功能。不用每一次都rebuild一次webpack， 而是可以在react里面看到更新component的变化。</p>
<h2 id="React-Hot-Reloading"><a href="#React-Hot-Reloading" class="headerlink" title="React Hot Reloading"></a>React Hot Reloading</h2><p>具体的做法是将webpack当成一个middleman来hook服务器。相比nodemon， webpack的好处就是， 它并没有restart server, nodemon是会watching整个”*”， 而webpack只是更新改变的部分。所以我们希望的是让webpack来管理关于react component的部分， 而nodemon只是来监听剩下的部分， 例：<code>nodemon server.js --ignore components</code>， 这样nodemon会忽略所有components文件夹下面的改动。</p>
<p>要使用hot module reload，下载一个babel的插件， 其实babel主要的功能还是在compile上， webpack的主要作用还是在project building这个过程， 然后中间有很多相关的插件是相互联系的， 比如我们现在准备使用的这个“babel-preset-react-hmre”。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// updated webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  devtool: <span class="string">'inline-source-map'</span>,</span><br><span class="line">  entry: [</span><br><span class="line">    <span class="string">'webpack-hot-middleware/client'</span>,</span><br><span class="line">    <span class="string">'./client/client.js'</span></span><br><span class="line">    ], <span class="comment">// source file</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    path: <span class="built_in">require</span>(<span class="string">"path"</span>).resolve(<span class="string">"./dist"</span>),</span><br><span class="line">    path: <span class="string">'./dist'</span>,</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    publicPath: <span class="string">'/'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> webpack.optimize.OccurrenceOrderPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.NoErrorPlugin()</span><br><span class="line">  ],</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>, <span class="comment">// search all files with ".js" as last.</span></span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        query: &#123;</span><br><span class="line">          presets: [<span class="string">'react'</span>, <span class="string">'es2015'</span>, <span class="string">'react-hmre'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之前写的基本都是babel的插件， 现在引入了<code>npm install --save webpack</code>的插件， 同时为了避免多次执行<code>webpack --config webpack.config.js</code>，我们把webpack.config.js引入express server. </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'../webpack.config.js'</span>);</span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">var</span> webpackDevMiddleware = <span class="built_in">require</span>(<span class="string">'webpack-dev-middleware'</span>);</span><br><span class="line"><span class="keyword">var</span> webpackHotMiddleware = <span class="built_in">require</span>(<span class="string">'webpack-hot-middleware'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> compiler = webpack(config);</span><br><span class="line"></span><br><span class="line">app.use(webpackDevMiddleware(compiler, &#123;<span class="attr">noInfo</span>: <span class="literal">true</span>, <span class="attr">publicPath</span>: config.output.publicPath&#125;));</span><br><span class="line">app.use(webpackHotMiddleware(compiler));</span><br><span class="line"></span><br><span class="line">app.use(express.static(<span class="string">'./dist'</span>));</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.sendFile(path.resolve(<span class="string">'client/index.html'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.listen(port, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Express server listening on port"</span>, port);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="React-Hot-Boilerplate"><a href="#React-Hot-Boilerplate" class="headerlink" title="React Hot Boilerplate"></a>React Hot Boilerplate</h2><p>最后的成果见这里， <a href="https://github.com/chocoluffy/react-hot-boilerplate/blob/master/webpack.config.js" target="_blank" rel="noopener">minimum react hot boilerplate</a>， fork自redux的作者dan abramov。他写的react hot loader boilerplate是我看过的最好的使用starter kit!</p>
<p>最后还想提出的一点， 主要关于ES6里面关于函数的this binding的问题， 通常来说，ES6的arrow可以解决这个问题，或者说在每次render里面调用函数的时候加上<code>.bind(this)</code>。 但是最好的办法还是写在constructor里面， 这样的函数只会bind一次之后都可以一直用。下面附上官方的使用范例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Counter</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;<span class="attr">count</span>: props.initialCount&#125;;</span><br><span class="line">    <span class="keyword">this</span>.tick = <span class="keyword">this</span>.tick.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  tick() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">count</span>: <span class="keyword">this</span>.state.count + <span class="number">1</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div onClick=&#123;<span class="keyword">this</span>.tick&#125;&gt; <span class="comment">// don't need to use arrow type or bind function here anymore since bind in contructor.</span></span><br><span class="line">        Clicks: &#123;<span class="keyword">this</span>.state.count&#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">Counter.propTypes = &#123; initialCount: React.PropTypes.number &#125;;</span></span><br><span class="line"><span class="regexp">Counter.defaultProps = &#123; initialCount: 0 &#125;;</span></span><br></pre></td></tr></table></figure>
<p>不得不说， 这个starter kit和chrome的react dev tool搭配用起来， 写react的项目真的是一种享受。</p>
<h2 id="Trouble-Shooting"><a href="#Trouble-Shooting" class="headerlink" title="Trouble Shooting"></a>Trouble Shooting</h2><p>在写react\redux的时候， 由于现在需要使用babel来compile一遍写的code， 很多bugs都是在于对babel的不熟悉而来而导致的编译不成功， 而这些时候， 由于没有办法像以前一样在chrome inspect来debug， 必须对一些基础的使用有一定了解才可以绕过去。特别是在引入webpack之后， 配置在前期挺麻烦的， 但是一旦把开发环境搭建好了， 后期的开发就特别轻松和享受了~也在这个部分， 把我遇到的， 和觉得有价值的细节都提出来， 和大家分享~</p>
<h3 id="Why-my-jsx-element-not-showing-correctly"><a href="#Why-my-jsx-element-not-showing-correctly" class="headerlink" title="Why my jsx element not showing correctly?"></a>Why my jsx element not showing correctly?</h3><p><a href="http://gunnariauvinen.com/getting-es6-syntax-highlighting-in-sublime-text/" target="_blank" rel="noopener">config sublime text to highlight jsx</a></p>
<h3 id="Anything-about-ES6-syntax-error-by-browser"><a href="#Anything-about-ES6-syntax-error-by-browser" class="headerlink" title="Anything about ES6 syntax error by browser."></a>Anything about ES6 syntax error by browser.</h3><p>For example, <code>store.js:1 Uncaught SyntaxError: Unexpected token import</code>, check<a href="http://stackoverflow.com/questions/33460420/babel-loader-jsx-syntaxerror-unexpected-token" target="_blank" rel="noopener">this post</a> for more information about babel plugins, however, we also need to pay attention to the path that plugins take effect. For example, in the “webpack.config.js” file, the module part looks like this:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">	loaders: [&#123;</span><br><span class="line">	  test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">	  loaders: [<span class="string">'react-hot'</span>, <span class="string">'babel'</span>],</span><br><span class="line">	  include: path.join(__dirname, <span class="string">'src'</span>)</span><br><span class="line">	&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>It means that “react-hot” &amp;&amp; “babel” will collect files from “/src” folder and apply two loaders on it. Thus, any folder outside the path the “/src” will be ignored by loaders. In our original example, store.js is located outside “/src”, thus the <code>import</code> syntax will not be converted into es2015 that browser can recognize, thus gives such error. </p>
<h3 id="Pressing-“enter”-don’t-automatically-submit-the-input"><a href="#Pressing-“enter”-don’t-automatically-submit-the-input" class="headerlink" title="Pressing “enter” don’t automatically submit the input"></a>Pressing “enter” don’t automatically submit the input</h3><p>It’s more like a UX experience than a problem. In the traditional input and button structure:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;input </span><br><span class="line">	placeholder=<span class="string">"typing something here..."</span></span><br><span class="line">	value=&#123;<span class="keyword">this</span>.state.inputText&#125;</span><br><span class="line">	onChange=&#123;<span class="keyword">this</span>._onChange&#125;</span><br><span class="line">/&gt;</span><br><span class="line">&lt;button onClick=&#123;<span class="keyword">this</span>._onClick&#125;&gt;Submit&lt;<span class="regexp">/button&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>However, after user types in something in the input box, pressing “enter” key won’t directly submit the input. Thus, we want to improve it by converting it into a form style to automate whole process:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;form onSubmit=&#123;<span class="keyword">this</span>._onClick&#125;&gt;</span><br><span class="line">	&lt;input </span><br><span class="line">		placeholder=<span class="string">"typing something here..."</span></span><br><span class="line">		value=&#123;<span class="keyword">this</span>.state.inputText&#125;</span><br><span class="line">		onChange=&#123;<span class="keyword">this</span>._onChange&#125;</span><br><span class="line">	/&gt;</span><br><span class="line">	&lt;input type=<span class="string">"submit"</span> text=<span class="string">"Submit"</span>/&gt;</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Then, pressing “enter” key right after you finish typing should work!</p>
<h2 id="Tricks-and-Notes"><a href="#Tricks-and-Notes" class="headerlink" title="Tricks and Notes"></a>Tricks and Notes</h2><h3 id="Render-JSX-with-if-else-logic-control"><a href="#Render-JSX-with-if-else-logic-control" class="headerlink" title="Render JSX with if-else logic control"></a>Render JSX with if-else logic control</h3><p>Sometimes, we just want to render JSX depending on some state values like in Angular. We can simple assign JSX to variable inside <code>render()</code>, and note that we need a parathesis around JSX for assignment. This code snippet is used in <a href="https://github.com/chocoluffy/redux-todolist" target="_blank" rel="noopener">redux-todolist</a>. Do note that to avoid confusion, I still use <code>.bind(this)</code> syntax below, but I recommend to put binding logic inside <code>constructor()</code>.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">render()&#123;</span><br><span class="line">	<span class="keyword">var</span> todoText;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">this</span>.props.todo.isCompleted)&#123;</span><br><span class="line">		todoText = (</span><br><span class="line">			&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">s</span>&gt;</span>&#123;this.props.todo.text&#125;<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">		)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		todoText = (</span><br><span class="line">			&lt;div&gt;&#123;<span class="keyword">this</span>.props.todo.text&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">		)</span></span><br><span class="line"><span class="regexp">	&#125;</span></span><br><span class="line"><span class="regexp">	return (</span></span><br><span class="line"><span class="regexp">		&lt;li&gt;</span></span><br><span class="line"><span class="regexp">			&#123;todoText&#125;</span></span><br><span class="line"><span class="regexp">			&lt;button onClick=&#123;this._onComplete.bind(this)&#125; &gt;Complete&lt;/</span>button&gt;</span><br><span class="line">		&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">	)</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>Some other times, in order to keep render function clean, we will move the render logic into another function to return JSX syntax and call that function inside <code>render()</code>, note that we don’t need the <code>.bind(this)</code> syntax in this case! Because, the whole reason of using <code>.bind(this)</code> is that inside the _onClick handler function, the <code>this</code> will points to nothing(null), instead of the React component, which may causes the “this.props” not found error and the like. However, in this case, we simply return JSX syntax based on if-else logic, and we won’t need the binding.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">renderTodoText()&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">this</span>.props.todo.isCompleted)&#123;</span><br><span class="line">		 <span class="keyword">return</span> (</span><br><span class="line">			&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">s</span>&gt;</span>&#123;this.props.todo.text&#125;<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">		)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (</span><br><span class="line">			&lt;div&gt;&#123;<span class="keyword">this</span>.props.todo.text&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">		)</span></span><br><span class="line"><span class="regexp">	&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">render()&#123;</span></span><br><span class="line"><span class="regexp">	return (</span></span><br><span class="line"><span class="regexp">		&lt;li&gt;</span></span><br><span class="line"><span class="regexp">			&#123;this.renderTodoText()&#125;</span></span><br><span class="line"><span class="regexp">			&lt;button onClick=&#123;this._onComplete&#125; &gt;Complete&lt;/</span>button&gt;</span><br><span class="line">			&lt;button onClick=&#123;<span class="keyword">this</span>._onDelete&#125;&gt;Delete&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">		&lt;/</span>li&gt;</span><br><span class="line">	)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Check more information in <a href="http://devnacho.com/2016/02/15/different-ways-to-add-if-else-statements-in-JSX/" target="_blank" rel="noopener">this post</a>.</p>
<h3 id="Webpack-in-production"><a href="#Webpack-in-production" class="headerlink" title="Webpack in production"></a>Webpack in production</h3><p>Pretty similar with using webpack in dev mode, but much simpler in that you only need to specify a correct output path, and webpack will handle the else stuff. And it contains Uglify plugins and others that can help produce the production bundle.js file.</p>
<p>check <a href="http://www.pro-react.com/materials/appendixA/" target="_blank" rel="noopener">this post</a> for more information.</p>
<h3 id="How-redux’s-state-update-react’s-components"><a href="#How-redux’s-state-update-react’s-components" class="headerlink" title="How redux’s state update react’s components"></a>How redux’s state update react’s components</h3><p>When you use Redux in React application, follow one simple rule - all your components are stateless (means, <strong>no component initializes its state or calls .setState() anywhere</strong>).</p>
<p>The redux way of design based on state container, one big object that holds all application state. As React component, being connected to Redux store, Redux will pass the state (or portion of it) into that component, as this.props.state property.</p>
<p>That high-order component (or smart component), renders its children components (or dumb components) and handles events from them.</p>
<p>If child component requires change, it triggers corresponding handler (which typically passed as props). The only way to change the state is to dispatch an action. That action contains a type and a payload and based on that type, corresponding reducer is selected. The reducer then produces a new state, based on previous state and action payload.</p>
<p><strong>If in the result of reducer call, state got changed, Redux will re-render high-order component, passing new state in properties. So, all child components will be updated correspondingly.</strong></p>
<p>Check <a href="http://stackoverflow.com/questions/33668827/refresh-logic-in-react-component-or-flux-redux" target="_blank" rel="noopener">this post</a> for more information.</p>
<h3 id="How-to-use-seperate-reducers-to-handle-different-parts-of-state"><a href="#How-to-use-seperate-reducers-to-handle-different-parts-of-state" class="headerlink" title="How to use seperate reducers to handle different parts of state"></a>How to use seperate reducers to handle different parts of state</h3><p>One thing to note that in seperate single reducers functions like this one, we no longer pass in the whole state tree, but instead the correct portion of that state tree, in this case, only todos array. And this part of code handles that:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> todoReducer <span class="keyword">from</span> <span class="string">'./todoReducer'</span>;</span><br><span class="line"><span class="keyword">import</span> userReducer <span class="keyword">from</span> <span class="string">'./userReducer'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rootReducer = combineReducers(&#123;</span><br><span class="line">    todos: todoReducer,</span><br><span class="line">    user: userReducer</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> rootReducer</span><br></pre></td></tr></table></figure>
<p>Note that after we split the reducer function, we will also update all related files.</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react </tag>
            
            <tag> redux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ReactNative-简易个人博客客户端]]></title>
      <url>http://chocoluffy.com/2016/07/03/ReactNative-%E7%AE%80%E6%98%93%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
      <content type="html"><![CDATA[<p>记录了学习React Native过程中一开始的上手项目， 对初学者提供对比参考。<a href="https://github.com/chocoluffy/ReactNativeEveryday/tree/master/Day3SimpleNavigator" target="_blank" rel="noopener">Github Source</a></p>
<a id="more"></a>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f5h54wb0ung20dc0ob4qu.gif" style="height: 486px; margin: 0 auto;"></p>
<h2 id="Dependency"><a href="#Dependency" class="headerlink" title="Dependency"></a>Dependency</h2><p>react native components:</p>
<ul>
<li>TabBarIOS</li>
<li>Navigator</li>
<li>WebView</li>
</ul>
<p>third library:</p>
<ul>
<li>react-native-vector-icons</li>
</ul>
<h2 id="Trouble-Shooting"><a href="#Trouble-Shooting" class="headerlink" title="Trouble Shooting"></a>Trouble Shooting</h2><h3 id="Use-rnpm-to-link-with-third-party-libraries"><a href="#Use-rnpm-to-link-with-third-party-libraries" class="headerlink" title="Use rnpm to link with third-party libraries"></a>Use <code>rnpm</code> to link with third-party libraries</h3><p>Sometimes the third-party libraries not fully integrated into the project even doing <code>rnpm link</code>. In such case, delete the node_modules folder and install again, <code>rm -rf node_modules &amp;&amp; npm install</code>, then do <code>rnpm link</code> to help link with IOS libraries instead of doing it mannually.</p>
<h3 id="How-to-center-an-image-of-fixed-size"><a href="#How-to-center-an-image-of-fixed-size" class="headerlink" title="How to center an image of fixed size"></a>How to center an image of fixed size</h3><p>Apply <code>flex: 1, justifyContent: &#39;center&#39;, alignItems: &#39;center&#39;</code> styling on image’s parent element, then for that image’s styling, only specify its fixed height and width will work!</p>
<h3 id="TouchableHighlight"><a href="#TouchableHighlight" class="headerlink" title="TouchableHighlight"></a>TouchableHighlight</h3><p>TouchableHighlight component can only has one child element, thus if we want to have multiple children elements, wrap them into a single view container. </p>
<blockquote>
<p>Notice one error I met, we need to directly use a <code>View</code> component after <code>TouchableHighlight</code>.</p>
</blockquote>
<h3 id="Navigator"><a href="#Navigator" class="headerlink" title="Navigator"></a>Navigator</h3><p>Finally using Navigator instead of NavigatorIOS, there are several important things to remember:</p>
<ul>
<li>we have an <code>renderScene</code> method in index.ios.js that defines what component to render when there is an scene being pushed.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// In parent component, we define renderScene method:</span></span><br><span class="line">renderScene(route, navigator) &#123;</span><br><span class="line">   <span class="keyword">if</span>(route.name == <span class="string">'Main'</span>) &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Main</span> <span class="attr">navigator</span>=<span class="string">&#123;navigator&#125;</span> &#123;<span class="attr">...route.passProps</span>&#125; /&gt;</span></span></span><br><span class="line"><span class="xml">   &#125;</span></span><br><span class="line"><span class="xml">   if(route.name == 'Home') &#123;</span></span><br><span class="line">     return &lt;Home navigator=&#123;navigator&#125; &#123;...route.passProps&#125; /&gt;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">// And in child component, we put all data we want to pass to next scene in route object.</span><br><span class="line">_navigate(property)&#123;</span><br><span class="line">  this.props.navigator.push(&#123;</span><br><span class="line">    name: 'Home',</span><br><span class="line">    passProps: &#123;</span><br><span class="line">      name: property</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;TouchableHighlight onPress=&#123; () =&gt; this._navigate('Hello World') &#125;&gt;</span><br><span class="line">    &lt;Text&gt;GO To View&lt;/Text&gt;</span><br><span class="line">&lt;/TouchableHighlight&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>And utilizing the spread syntax of passing properties, we can easily allow next scene to use the data passed from the previous scene, the one being trigger(ususally by pressing).</p>
<ul>
<li>The problem of “this”. In the above example, we use the ES6 arrow syntax, which automatically bind “this” for us, which means that the “this” inside the function we called points to the current component. However, if we use common function assignment like <code>onPress={this.onPress.bind(this)}</code>, we have to manually bind this to it!!!</li>
</ul>
<p>check <a href="https://medium.com/@dabit3/react-native-navigator-navigating-like-a-pro-in-react-native-3cb1b6dc1e30#.1kuxzxyps" target="_blank" rel="noopener">this post</a> for more information. And refer to the source code of example <a href="https://rnplay.org/apps/9_1QSA" target="_blank" rel="noopener">navigator example</a>.</p>
<h3 id="TabBarIOS"><a href="#TabBarIOS" class="headerlink" title="TabBarIOS"></a>TabBarIOS</h3><p>Check <a href="https://devdactic.com/react-native-tab-bar/" target="_blank" rel="noopener">this post</a> for more helpful information.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;TabBarIOS selectedTab=&#123;<span class="keyword">this</span>.state.selectedTab&#125;&gt;</span><br><span class="line">        &lt;TabBarIOS.Item</span><br><span class="line">          selected=&#123;<span class="keyword">this</span>.state.selectedTab === <span class="string">'welcome'</span>&#125;</span><br><span class="line">          systemIcon=<span class="string">"featured"</span></span><br><span class="line">          onPress=&#123;() =&gt; &#123;</span><br><span class="line">              <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                  selectedTab: <span class="string">'welcome'</span>,</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;&#125;&gt;</span><br><span class="line">            &lt;Welcome/&gt;</span><br><span class="line">        &lt;<span class="regexp">/TabBarIOS.Item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;TabBarIOS.Item</span></span><br><span class="line"><span class="regexp">          selected=&#123;this.state.selectedTab === 'more'&#125;</span></span><br><span class="line"><span class="regexp">          systemIcon="featured"</span></span><br><span class="line"><span class="regexp">          onPress=&#123;() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">                this.setState(&#123;</span></span><br><span class="line"><span class="regexp">                    selectedTab: 'more',</span></span><br><span class="line"><span class="regexp">                &#125;);</span></span><br><span class="line"><span class="regexp">          &#125;&#125;&gt;</span></span><br><span class="line"><span class="regexp">          &lt;More/</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/TabBarIOS.Item&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>TabBarIOS&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="Test-on-real-device"><a href="#Test-on-real-device" class="headerlink" title="Test on real device"></a>Test on real device</h3><ul>
<li>Change from localhost to my computer’s IP.</li>
<li><a href="https://gist.github.com/andrewsardone/91797ff9923b9ac6ea64" target="_blank" rel="noopener">Add one more key to info.plist</a></li>
</ul>
<h3 id="Image-not-rendering-from-ListView"><a href="#Image-not-rendering-from-ListView" class="headerlink" title="Image not rendering from ListView"></a>Image not rendering from ListView</h3><ul>
<li>One weird thing happened is that using the same uri from Day2 project, I want to render luffy on each row of ListView, but it doesn’t show up. Then, I change to a <em>small and https-sourced</em> image from facebook’s github repo, then it works. Not sure how to deal with it yet.</li>
<li>Some one from issue panel says that image may not be updated in ListView and you have to add an “ID” attribute to forcely update it, it can be saved for later’s use.</li>
</ul>
<h3 id="Icon"><a href="#Icon" class="headerlink" title="Icon"></a>Icon</h3><p>Most used library for Icon is “react-native-vector-icons”, and simply import corresponding libraries will do the tricks, <code>import Icon from &#39;react-native-vector-icons/Ionicons&#39;;</code> Then, use <a href="http://ionicframework.com/docs/v2/ionicons/" target="_blank" rel="noopener">this website</a> for searching new icons. If animation required, use <a href="https://github.com/oblador/react-native-animatable" target="_blank" rel="noopener">react-native-animatable</a> to animate. icons.</p>
<h3 id="Nativebase"><a href="#Nativebase" class="headerlink" title="Nativebase"></a>Nativebase</h3><p>It’s a surprise for me! Just like the bootstrap for html, nativebase gives so much template to build react native front-end. Check <a href="http://nativebase.io/docs/v0.3.0/components" target="_blank" rel="noopener">this tutorial</a> for more examples.</p>
<h3 id="Webview-render-HTML"><a href="#Webview-render-HTML" class="headerlink" title="Webview render HTML"></a>Webview render HTML</h3><p>Use <a href="https://github.com/jsdf/react-native-htmlview" target="_blank" rel="noopener">react-native-htmlview</a> to render HTML-like text, which usually contains HTML tags like <code>&lt;p&gt;</code> and <code>&lt;/br&gt;</code> and so on. In order to directly jump to the original web page, we simple use react-native-webview library.</p>
<h2 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h2><h3 id="Grab-data-from-RSS"><a href="#Grab-data-from-RSS" class="headerlink" title="Grab data from RSS"></a>Grab data from RSS</h3><p>Here is a handy website that transforms rss feed into json, and provides a API for that: <a href="http://rss2json.com/" target="_blank" rel="noopener">http://rss2json.com/</a>. For example, my blog’s rss feed being transformed to json is: <a href="http://rss2json.com/api.json?rss_url=http%3A%2F%2Fchocoluffy.com%2Fatom.xml" target="_blank" rel="noopener">http://rss2json.com/api.json?rss_url=http%3A%2F%2Fchocoluffy.com%2Fatom.xml</a>. Then using this json file, we can have a much more consistent and clear structure to formatize into RN app.</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react native </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VRTO展会游记]]></title>
      <url>http://chocoluffy.com/2016/06/27/VRTO%E5%B1%95%E4%BC%9A%E6%B8%B8%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>记录在VR Toronto展会第一次尝试Oculus和Vive的使用体验。</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/72f96cbagw1f59mz8yt2sj20ww0jhwiy" alt="down hall"></p>
<p>先是有多大Steve Mann教授的开幕panel演讲， 其实内容和上学期ECE516的课程slides重合度非常高， 主要关于教授这四十年左右对VR的研究和总结， 以及他draft的三条关于VR的laws， 更多具体内容和demo可以在课程网页上找到。 </p>
<p><img src="http://ww1.sinaimg.cn/large/72f96cbagw1f59n0318qmj20vj0ki783" alt="lecture"></p>
<p>我还记得在课上Steve展示的频率可视化手环和水波乐器， 都在昨天和今天的会场展示了， 错过的同学们可以在教授的个人主页上看到更详细的介绍。</p>
<div class="video-container"><br>    <iframe width="560" height="315" src="https://www.youtube.com/v/Z9qiWqRPrcw" frameborder="0" allowfullscreen></iframe><br></div>

<p>接下来是一系列VR相关的演讲和demo展示， 尝试了目前市场比较流行的Oculus和Vive， 有很多游戏和服务行业开发公司都将各自的应用带到了展台， 大致的感受是：Oculus画质暂时比较差， 场景移动快的demo会导致轻微眩晕感， Vive的画质和human interaction相比之下都更加得细腻出色。</p>
<p>但同时不可否认的是， Facebook旗下的Oculus受到更多开发者的青睐， 拥有更多的游戏选择和强大的技术支持, 但最近曝出来的Oculus强制要求某些游戏开发商的优先发行权还是有损企业形象。Sony的VR头盔暂时没有出现在今天的展示中， 但基于PS4成熟市场规模和玩家预期来说， 仍是最值得期待和大规模流行的VR设备。Vive，在我今天的体验之后， 也给我留下了很深刻的印象， 一个三维画画的游戏应用， 见配图， 将手指slide\click\hold的操作融合得很棒， slide换画板， click选择不同的画笔画布装备， hold来画画， 也的确是本场最immersive的应用之一。</p>
<p><img src="http://ww1.sinaimg.cn/large/72f96cbagw1f5a31m8ag3j20pu0klmzn" alt="demo"></p>
<p><img src="http://ww1.sinaimg.cn/large/72f96cbagw1f5a30nl323j20qg0mo75v" alt="ada"></p>
<p>苹果也一直既往地选择观望态度， 短期内没有推出的VR设备的计划。微软Hololens作为AR设备， 相比VR， 拥有更大的生活场景应用空间， 今天体验到的Internet of Things， 包括家具电器灯泡的控制， 餐馆点餐是菜单的选择… 这个demo应该是今天最惊艳的展示了， 也感觉这一两年着力布局家居科技环境的苹果也将加入AR的市场。</p>
<div class="video-container"><br>    <iframe width="854" height="480" src="https://www.youtube.com/v/xG3hslceFqo" frameborder="0" allowfullscreen></iframe><br></div>

<p>同时讲座上提及的myo手环， 曾计划是写个应用给朋友庆祝生日的， 结果用户体验实在太差（动作捕捉不准确）， 不得不放弃myo， 目前市场上较实用的motion detection的设备更多时候还是参考大公司的产品风险比较小。</p>
<p>综上。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 虚拟现实 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[写给高考三年后自己的一封信]]></title>
      <url>http://chocoluffy.com/2016/06/11/%E5%86%99%E7%BB%99%E9%AB%98%E8%80%83%E4%B8%89%E5%B9%B4%E5%90%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1/</url>
      <content type="html"><![CDATA[<p>这篇随笔，记为我对我高中思维的审判。 写给高考结束三年后的自己， 也写给所有刚刚结束高考乃至即将开始高中生活的小伙伴们。</p>
<a id="more"></a>
<blockquote class="blockquote-center">“One Piece到底存不存在，我不想知道。”</blockquote>

<p><img src="http://ww2.sinaimg.cn/large/72f96cbagw1f4ryvevg44j21fn0cl79q" alt="one piece"></p>
<p>3年前， 我刚结束高考， 坐在爸妈的车上一起从学校回家， 路上没多少车， 很像我当时空空的心。</p>
<p>我是一个很容易有抽离感的人， 和周围的人与声音闹腾久了， 仿佛像一根针戳破了泡泡，我会安静下来。 还记得那天高考最后一门结束之后， 一群家长拥挤了课室， 突然一下子把我推进了陌生的热气腾腾。 然而我已经不记得当时的我送上了多少笑脸， 但我清楚的记得那种从未有过的空旷， 是高考的戛然而止意犹未尽也好， 还是一种抵达终点的疲态彷徨， 我站在那里， 听着最熟悉而陌生的寒暄， 无所适从。直到在人群里瞅见了爸爸妈妈， 我才回过了神， 当时就想一直抱着他们。</p>
<p>太多人的掌声和欢呼让你觉得高考就是终点， 可没有多少人理解你的彷徨和张望。</p>
<p>“好像一下子什么都结束了……”</p>
<p>3年后，或是命运的偶然和眷顾， 我碾转在中山大学， 加州伯克利大学， 并于去年落脚在多伦多大学。 回望高中毕业这几年我走过的脚印， 太多太多的人与事牵扯着我， 震撼着我， 改变着我。 相比现在能够掌握着自己努力的痕迹和方向， “高考”两字对现在的我而言， 更像是翻看儿时日记那般哭笑不得旳嫌弃和惋惜。 嫌弃当时自己那种不能够再真实的空阔无助， 惋惜， 或许能够更早些为热爱的东西付出更多的机会。也正是这份切切实实的想法， 有时候让我发梦：如果让我回去三年前， 看着课桌前傻乎乎的自己， 我会和自己说写什么。</p>
<p>一、</p>
<p>我相信偶然， 不是否定去勤奋、去努力的意义， 不是去反驳人定胜天、铁杵成针的精神， 而是我希望更多的宽容。初中高中大量大量不需要天赋而强调记忆的训练， 中考高考前弥漫的三个月苦学逆袭的故事与激励， 太容易让我们去接受一个线性因果论的世界， 因为我这般这般的“付出”与训练， 我一定能得到即时可见的成果， 而往往成绩也很服气的提高更让我相信， “这条路我没有选错， 只是我还不够努力而已”， “他们的成绩还没有提高， 一定是还不够努力”的幻想。 很难讲这种思路对那个人的高考帮助到底大不大， 但这却是一种很残酷的逻辑。</p>
<p>试想想， 在一个付出就有回报的世界里， 你所有的成功与荣光， 都只与你自己相关， 别人的失手挫折， 都只因为他们付出的不够多； 富人的富， 是天经地义的， 而穷人的穷， 也都无非是他们活该； 善良与同情变得胆怯了， 伸出的援手好像也因为“到底他值不值得我的帮助”的打量而颤抖， 我们生活在这样的世界里， 太容易变得坚硬而自负， 人定胜天不再是面对过程的鼓励而成了面对结果的嚣张。一个失去了尊重和惊喜的世界， 我不喜欢。</p>
<p>我们想要尊重与惊喜， 我们会因此想要理解对方的不同和允许那变幻莫测的运气， 会想起宽容。 不是“如何如何原谅别人的错误”，而是相信自己的任何成就都离不开周遭人的相助与教诲， 都离不开前人的经验和教训， 相信没有那么理所当然。 感觉又像说起了大道理， 可对于一个高中生， 乃至现在许多的成年人过分的自我价值追求， 这最最简单的一条， 却一直不肯承认。</p>
<p>我记得很清楚， 我初高中时候的“努力轨迹”。到初三前一直是吊车尾， 只到发现自己玩的最好的一群小伙伴和自己喜欢的女生都可以毫不费力地进省级重点班， 这成了自己当时努力的理由； 一直喜欢听宣布自己理科成绩的那一刻的掌声和赞叹， 这成了我选择奥数、奥化的理由； 因为老师在作业本上给我写了个“有灵气”， 成了我那三年那门课必须考满分的理由； 因为想要证明我比另一个同学更厉害， 成了我必须保持年纪前列不断去争第一的理由。林林总总的理由， 有笑有泪其中不乏充满了记忆与感动的理由， 只可惜， 没有一个理由是因为我喜欢……</p>
<p>我所谓的成就， 不过是在某学科某考试上考的相对好一点罢了， 可我所付出的， 却是一段“太专注”的冲刺， 以致于根本没来得及想自己的热情和兴趣所在， 而自顾自地认为“我值得一切结果与荣誉”。 就像跑在跑道里的我们， 从来好像都没有质疑过跑道的方向， 而越跑越忘记了自己所属的那个方向， 乃至奔跑的意义。</p>
<p>每个人都有走近舞台中央的时刻， 学会宽容打在自己身上的光，学会理解运气和偶然， 想的清楚别人的扶持与帮助， 更看得清自己究竟属不属于这个舞台， 毕竟这个世界上最简单而粗暴的忽悠， 就是叫你去看着别人跑到哪儿， 你也去那儿。 </p>
<p>二、</p>
<p>没有一个能解决所有问题的答案， 但是可以有一个更倾向改变的角度。</p>
<p>下面这个故事是我在知乎上看到的一个印象很深刻的故事。 2016年普利兹克建筑奖得主Alejandro Aravena在2014年Ted论坛上的讲述他的设计哲学，开篇说道：如果设计有任何力量的话，那就是整合的力量。</p>
<p>事情的起因源于12年前Alejandro曾接到的一个项目，他要为智利北部伊基克市中心非法占据了半公顷土地的100个家庭设计一套社会保障性住房。而得到的预算是1万美元。1万美元的用途，包括买地，建房子，以及建相关基础设施。绝对的资金匮乏让他提出了一个绝妙的方案：“一个普通中产家庭拥有80平方米的住房是可接受的，但如果资金不够，这个家庭可能只好去买40平方米的小房子。如果我们把这个40平方米的小房子，看做是一个80平方米的“好房子的一半”（half of a good house），来建造并提供给这些家庭，给予这些家庭另外40平方米的可拓展空间，那么这无疑鼓励了这些家庭在未来财力足够的时候“扩建”自己的房子，成功拥有一个完整的好房子。”（摘自知乎原文）很惊喜的是， 这些家庭大部分都同意了兴建， 不仅同意， 在主动助力修建工作， 因为未来的另一半也是要他们自己建的， 这是他们自己的房子。每户家庭想到的不再是如何和政府拉锯谈判， 而是对未来自己的房子的憧憬和期待。一个很简单却也更有人情味的角度， “撬动了人们的自发性，我认为，这就是一种“整合”，就是“设计的力量””。</p>
<p>经济学的小伙伴可能很快就看出来了， 这貌似就是所谓的“外部利益内部化”的一个更经典的例子嘛。 小到多人合租房间的打扫卫生， 工作在大公司成为其中一颗齿轮， 大到保护地球生态环境， “搭便车行为”无所不在， “公地悲剧”也不断上演。 非要深究原因的话， 书上说是因为“公共物品产权难以界定”， 我说， 也不过就是当规模大了， 涉及的人多了， 就慢慢失去了归属感罢了。归属感， 一个带着温度的词语。 我不想去深入探讨“拥有”（所谓的“产权”）和“归属”到底区别在哪里， 简单来讲， 你“拥有的”并不一定能带给你“归属”感， 而归属， 自愿付出， 本身就沾着承诺与责任的味道。</p>
<p>“拥有好房子的一半（half of a good house）”这简单的口号没有解决任何资源稀缺的问题， 而只是， 给了伊基克市中心的居民们重新清晰的归属感， 房子是自己未来好房子的一半， 我会认真粉刷， 仔细打扮， 悉心准备装饰那另一半的到来……没有一个能解决所有问题的答案， 但是可以找到一个更加打动的角度， 一个更有人情味儿的角度， 毕竟所有问题最终归根结底都回到人， 而人， 因为曾被温柔相待的归属， 更倾向改变。</p>
<p>类似地， 精致有心旳设计， 真实客观的摄影， 复杂而饱满的戏剧， 这些艺术解决不了大部分现实问题， 却苦勤于人心。 他们努力提出一个角度， 无谓对与错， 更没办法用高中习惯的判分标准参考答案来审判， 往往出其不意， 往往饱受误解， 可也因那更多数的理解和感动而孵育着改变。很难讲艺术的意义究竟是什么， 但如果一定要用一句话来概括， 我想是：</p>
<p>我也会想成为温柔的人， 因为曾被温柔的人那样对待， 深深了解那种被温柔相待的感觉。</p>
<p>或许这就是改变的初衷吧。</p>
<p>三、</p>
<p>“One Piece到底存不存在，我不想知道。”</p>
<p>《海贼王》里面描述过很多不同身世背景的伙伴和路飞一起战斗的精彩剧情， 但对我来说同样难忘的， 还有另一幕， 当乌索普问冥王雷利， “那个独一无二的大秘宝One Piece， 究竟……”， 还没等乌索普说完， 路飞大吼一声， 谁也没有见过路飞这样严肃的表情， “宝藏在哪里我不想知道，连宝藏又没有我也不想知道， 虽然什么都不知道， 但是大家都是这样赌上性命出海的， 要是在这里就被大叔透露了……我就不当海贼了”。</p>
<p>对于终点和意义的讨论从来没有停止过， 而高考， 在其重大的社会责任下背负了太多塑造一生、决定一生的名声， 可就像生命里其他重要的选择一样， 听过掌声， 走过低谷， 我们依旧要继续上路。意义是很私人的东西， 你做不到让别人帮你生活， 也做不到按图索骥去参悟旅行的意义， 希冀的快乐也远远不同于世界上其他任何人。 过早地接受了终点的模样而擦身而过无数或美妙或苦涩却都精彩无比的可能性， 或许正是所谓的“终点”最大的诅咒了吧。</p>
<p>冥王雷利幽幽地问道， “伟大航路的艰险远远超出了你们的想象， 敌人都很强悍， 你办得到吗？统治这片大海。”， 路飞看着雷利， 咧开一个笑容， “我才不要统治呢， 这片大海上最自由的人， 就是海贼王！”</p>
<p>时间仿佛停止在这一刻， 思绪宛若卷入一幕幕电影场景般跳跃， 肃立在舞台的正中央看着灯光慢慢聚拢， 光脚游走在柔和的森林， 再跳入环游世界的海贼船把手臂高高举起……想起了好多好多， 感慨了好多好多， 终于回过神， 才恍然自己有多么幸运。 高中的学习课余生活让我成长了太多， 在省实也让我认识了可以一起撒娇打诨很久很久的朋友。 但同时我也慢慢意识到， 面向高考的教育仿佛无可避免地让我们更容易接受线性因果的世界观， 存在面面俱到的标准答案和一种风光却道听途说的生活。</p>
<p>这篇随笔，记为我对我高中思维的审判。 写给高考结束三年后的自己， 也写给所有刚刚结束高考乃至即将开始高中生活的小伙伴们。</p>
<p>说实话， 在我刚上高中那年级， 脑子里除了跑跑卡丁车， 就是怪物猎人了吧。 日子过得特别慢， 谁会花功夫想这些折腾呢！</p>
<p>虽然一直不擅于文字， 却很庆幸自己还存留着对文字的眷恋。也是想看看和文字里的自己一起成长吧。 </p>
<p>新世相最近一篇关于高考的文章很有意思， 还记得里面开头的一个提问， 过去很多年，我真的从高考中夺回自己的控制权吗？</p>
<p>Yes, finally.</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[socket.io开发多人聊天室教程]]></title>
      <url>http://chocoluffy.com/2016/05/23/socket-io%E5%BC%80%E5%8F%91%E5%A4%9A%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>用socket.io搭配express写的一个多人聊天室应用， 同时借这个机会复习了一下socket及TCP/IP的一些细节知识， 在UI上用jquery， 简洁而快速地完成一些基础前端样式的开发， 开发时用nodemon和browser-sync来辅助开发流程。<a href="http://52.20.64.23/chatroom" target="_blank" rel="noopener">在线Demo-网页版</a>, <a href="https://github.com/chocoluffy/chatroom" target="_blank" rel="noopener">github源代码</a>, 欢迎提交bug issue或者pull request~</p>
<a id="more"></a>
<h2 id="什么是socket"><a href="#什么是socket" class="headerlink" title="什么是socket?"></a>什么是socket?</h2><p>socket是对TCP/IP协议的封装， 本身是一个调用接口， 也就是我们常说的API， 用socket可以让程序员更方便的使用TCP/IP协议而已。 </p>
<p>在学习C语言(csc209)的时候大家接触到的socket的接口函数比如<code>create/listen/connect/accept/send/read/write</code>， 实际上正是针对TCP编程的接口， 在课程里我们用C语言来实现TCP最基础的一个socket链接， 监听， 包括server-client之间的通信，同样的， socket这个调用接口也可以用java, python和nodejs任何后端语言来实现， 也会出现在各种各样需要服务器端和客户端通信的应用中。</p>
<p>而什么是TCP呢？</p>
<p>Transmission Control Protocol (TCP) 就是其中发送文本信息的<strong>规则规范</strong>而已。 TCP依赖更底层的函数实现来在网络上传输binary data。 这里和大家介绍telnet\putty这些利用TCP在command line上帮助你发送和接受纯文本消息的应用， 你可以利用telnet来， 比如， 发送消息到google.com：<code>telnet google.com 80</code> 在端口80连接到google.com(80默认给网络请求)。我们当然不会随便发文本消息给google.com， 因为我们知道google.com不会接受随意的， 没有结构的文本请求。 是的， 我们需要一个<strong>标准(protocol)</strong>来规范交流的方式。我们在浏览器输出<a href="http://google.com，" target="_blank" rel="noopener">http://google.com，</a> 这意味着：</p>
<ul>
<li>在port 80用TCP协议连接google.com的服务器。</li>
<li>请求返回资源“／”（默认资源）。</li>
<li>将请求用http（hypertext transfer protocol）的形式来规范。</li>
</ul>
<h2 id="什么是socket-io"><a href="#什么是socket-io" class="headerlink" title="什么是socket.io?"></a>什么是socket.io?</h2><p>“Socket.IO goes a step beyond just providing an easy-to-use and more robust API on top<br>of web sockets. It also provides the ability to seamlessly use other real-time protocols if WebSockets are not available. For example, it will fall back on JSON long polling in the absence of WebSocket support.” from Rohit Rai</p>
<p>简单来说，socket.io来socket本身的接口函数上再抽象了一层， 让程序员可以专注应用逻辑的开发， 而由socket.io来操作底层的函数调用和优化， 比如有些时候， 由于浏览器的原因不能使用web socket时， 可以默认用long polling来达到同样的效果。</p>
<p>在socket.io出现之前，我们会采用很多的hack来解决一个问题：<strong>怎样在server和client端更有效率地双向传递信息？</strong>比如上文提到的long polling,  client端发送XHR请求， 然后在server端挂住， 直到server收到数据， 就回传数据， 还是比较常见的hack。</p>
<p>直到HTML5的大规模使用， 出现了两种从服务器端推送数据到客户端的新方法， 一个是Server-Sent Events (SSE)， 另一个是今天的主角， 支持双向通信的WebSockets.</p>
<h2 id="怎么用socket-io"><a href="#怎么用socket-io" class="headerlink" title="怎么用socket.io?"></a>怎么用socket.io?</h2><h3 id="http模块实现"><a href="#http模块实现" class="headerlink" title="http模块实现"></a>http模块实现</h3><p>下面用一个简单的例子来说明socket的使用， 很明确， 在服务器段当有新的连接的时候， 向客户端发送一个”greeting-from-server”的消息， 同时还监听客户端发来的”greeting-from-client”的事件，将消息打印在console里面。 </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// plain http's version of server.js</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line">	socketIO = <span class="built_in">require</span>(<span class="string">'socket.io'</span>);</span><br><span class="line">	fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// if using express framework, we can define router easier!</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	fs.readFile(__dirname + <span class="string">'/index.html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">		res.writeHead(<span class="number">200</span>);</span><br><span class="line">		res.end(data);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// The above code is used for create a server to serve the static index.html file under the current directory. The following part is the main idea of how to use socket.io to construct and listen to events.</span></span><br><span class="line">server.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'listen on http://localhost:3000'</span>);</span><br><span class="line"></span><br><span class="line">io = socketIO(server);</span><br><span class="line"></span><br><span class="line">io.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">socket</span>)</span>&#123;</span><br><span class="line">	socket.emit(<span class="string">'greeting-from-server'</span>, &#123;</span><br><span class="line">		greeting: <span class="string">'Hello client!'</span></span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	socket.on(<span class="string">'greeting-from-client'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(msg);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- client side index.html  --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/socket.io/socket.io.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> socket = io(<span class="string">'http://localhost:3000'</span>);</span></span><br><span class="line"><span class="javascript">            socket.on(<span class="string">'greeting-from-server'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.body.appendChild(</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.createTextNode(message.greeting)</span></span><br><span class="line"><span class="undefined">                );</span></span><br><span class="line"><span class="javascript">                socket.emit(<span class="string">'greeting-from-client'</span>, &#123;</span></span><br><span class="line"><span class="javascript">                    greeting: <span class="string">'Hello Server'</span></span></span><br><span class="line"><span class="undefined">                &#125;);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>代码很简洁。以上是用node原生的http模块来搭建的本地服务器， 还可以尝试使用express这个最负盛名的node框架之一来重新实现一下相同的逻辑。</p>
<h3 id="Express模块实现"><a href="#Express模块实现" class="headerlink" title="Express模块实现"></a>Express模块实现</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express's version of server.js</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>),</span><br><span class="line">    app = express(),</span><br><span class="line">    http = <span class="built_in">require</span>(<span class="string">'http'</span>),</span><br><span class="line">    socketIO = <span class="built_in">require</span>(<span class="string">'socket.io'</span>),</span><br><span class="line">    server, io;</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.sendFile(__dirname + <span class="string">'/index.html'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server = http.Server(app);</span><br><span class="line">server.listen(<span class="number">5000</span>);</span><br><span class="line">io = socketIO(server);</span><br><span class="line"></span><br><span class="line">io.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</span><br><span class="line">  socket.emit(<span class="string">'greeting-from-server'</span>, &#123;</span><br><span class="line">      greeting: <span class="string">'Hello Client'</span></span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  socket.on(<span class="string">'greeting-from-client'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(message);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Express is a collection of HTTP utilities and middleware that make it easier to use Node as a web server.</p>
</blockquote>
<p>用<code>var app = express()</code>来创建一个Express应用，将这个Express app当作第一个参数传入HTTP模块得到本地的简易服务器，we told Node that we wanted to use Express as our handler for HTTP requests. 而这个服务器的作用是在接收到对“／”默认资源的请求时， 将index.html文件传回给客户端，也就是我们的浏览器上显示出内容。</p>
<p>Next, we passed the HTTP server directly to the SocketIO method exactly as we would have if we were using a nonExpress HTTP server. Socket.IO took the server instance to listen for new socket connections on it. </p>
<p>其中一个小细节：用 <code>emit</code> 来传输named message, 用 <code>send</code> 来传输a message without name.</p>
<h2 id="多人在线聊天室"><a href="#多人在线聊天室" class="headerlink" title="多人在线聊天室"></a>多人在线聊天室</h2><p>下面是对以上应用的一个简单拓展。使用一个轮播(broadcasting)的方式， 将客户端传来的消息显示给每一个在线的用户。</p>
<p><a href="https://github.com/chocoluffy/chatroom" target="_blank" rel="noopener">github源代码    </a></p>
<p><a href="http://52.20.64.23/chatroom" target="_blank" rel="noopener">在线Demo-网页版</a></p>
<p>在手机上也是可以用的， 不过UI没有专门针对移动端优化， 会有点糗的感觉😭。有bug汇报到Issue呀， 谢谢~</p>
<h3 id="效果图Demo"><a href="#效果图Demo" class="headerlink" title="效果图Demo:"></a>效果图Demo:</h3><p>[1] pick a nickname:</p>
<p>[2] chatroom initialization:</p>
<p>[3] multi users chatting(one in chrome, another in safari):</p>
<h3 id="server端源代码"><a href="#server端源代码" class="headerlink" title="server端源代码"></a>server端源代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A fragment of server.js</span></span><br><span class="line"><span class="keyword">var</span> port = process.env.PORT || <span class="number">3000</span>;</span><br><span class="line">server.listen(port);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'listen on '</span> + port);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> io = socketIO(server);</span><br><span class="line"><span class="keyword">var</span> sockets = [];</span><br><span class="line"><span class="keyword">var</span> ID2user = &#123;&#125;; <span class="comment">// username </span></span><br><span class="line"></span><br><span class="line">io.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">socket</span>)</span>&#123;</span><br><span class="line">	sockets.push(socket);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">var</span> updateUserNum = <span class="function"><span class="keyword">function</span>(<span class="params">skt</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> people = sockets.length === <span class="number">1</span> ? <span class="string">'person'</span> : <span class="string">'people'</span>;</span><br><span class="line">		skt.emit(<span class="string">'greeting-from-server'</span>, &#123;</span><br><span class="line">			greeting: <span class="string">'Welcome! '</span> + sockets.length + <span class="string">' '</span> + people + <span class="string">' online now!'</span></span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	updateUserNum(socket);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// boardcast?!</span></span><br><span class="line">	socket.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">message</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> userlistChanged = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(!ID2user[socket.id])&#123; <span class="comment">// if new user comes in.</span></span><br><span class="line">			<span class="keyword">var</span> profile = &#123;</span><br><span class="line">				username: message.username,</span><br><span class="line">				avatar: message.avatar</span><br><span class="line">			&#125;;</span><br><span class="line">			ID2user[socket.id] = profile;</span><br><span class="line">			userlistChanged = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; sockets.length; i++)&#123;</span><br><span class="line">			sockets[i].emit(<span class="string">'message'</span>, message);</span><br><span class="line">			<span class="keyword">if</span>(userlistChanged)&#123; <span class="comment">// update userlist when new user comes in.</span></span><br><span class="line">				<span class="built_in">console</span>.log(ID2user[socket.id].username + <span class="string">'(id: '</span> + socket.id + <span class="string">' )'</span> + <span class="string">'joins!'</span>);</span><br><span class="line">				sockets[i].emit(<span class="string">'userlist'</span>, ID2user);</span><br><span class="line">				updateUserNum(sockets[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	socket.on(<span class="string">'disconnect'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;sockets.length; i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(sockets[i].id === socket.id)&#123;</span><br><span class="line">				sockets.splice(i, <span class="number">1</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">var</span> usernameOut = ID2user[socket.id].username;</span><br><span class="line">		<span class="keyword">delete</span> ID2user[socket.id]; <span class="comment">// remove user from online users.</span></span><br><span class="line">		<span class="comment">// send to client an updated userlist.</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; sockets.length; i++)&#123;</span><br><span class="line">			<span class="built_in">console</span>.log(usernameOut + <span class="string">'(id: '</span> + socket.id + <span class="string">' )'</span> + <span class="string">'leaves...'</span>);</span><br><span class="line">			sockets[i].emit(<span class="string">'userlist'</span>, ID2user);</span><br><span class="line">			updateUserNum(sockets[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">"There are "</span> + sockets.length + <span class="string">" active sockets remaining."</span>);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>由于我们需要将这个应用放在服务器上看效果， 所以port number就不能一直是本地的localhost了， 需要改成<code>var port = process.env.PORT || 3000;</code>。</p>
<h3 id="达到的效果"><a href="#达到的效果" class="headerlink" title="达到的效果"></a>达到的效果</h3><ul>
<li>显示同时在线的人数和user list。根据你自己选的nickname在user list上显示。</li>
<li>每当有人加入或者disconnect的时候，更新所有客户端的user list。同时console都会有记录。</li>
<li>每当有客户端发送消息的时候， broadcasting给所有在线用户。</li>
</ul>
<h3 id="TODOs"><a href="#TODOs" class="headerlink" title="TODOs"></a>TODOs</h3><ul>
<li>local cache most frequent online users, to make the message transfer much much more efficient and effective. </li>
<li>support image transfer, which should be quite similar to text message, but rather using binary image data. </li>
<li>introduce animation!! this part should be quite familiar to me but I’s just being lazy……</li>
<li>social media ;)</li>
</ul>
<h3 id="client端源代码"><a href="#client端源代码" class="headerlink" title="client端源代码"></a>client端源代码</h3><p>下面是部分client端的代码：由于监听了一些事件（毕竟我还是调整了前端的😂）, 所以代码有点长， 下面只显示核心部分：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">// part of index.html's script</span><br><span class="line">var socket = io();</span><br><span class="line">socket.on('connect', function()&#123;</span><br><span class="line"></span><br><span class="line">    // ... some codes here ...</span><br><span class="line"></span><br><span class="line">	socket.on('greeting-from-server', function(msg)&#123;</span><br><span class="line">		$('#greeting').empty();</span><br><span class="line">		$('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('headline').text(msg.greeting).appendTo($('#greeting'));</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">    // MAIN IDEA: if message comes, append to right place, and self adjust the view!</span><br><span class="line">	socket.on('message', function(msg)&#123;</span><br><span class="line"></span><br><span class="line">		var container = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').attr('id', 'container');</span><br><span class="line">		var bubble = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('talk-bubble tri-right left-in border');</span><br><span class="line">		var textWrapper = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('talktext').appendTo(bubble);</span><br><span class="line">		$('<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>').html(msg.messageText).appendTo(textWrapper);</span><br><span class="line"></span><br><span class="line">		// append the jquery clone to target destination.</span><br><span class="line">		var nameClone = username2jqy(msg.username);</span><br><span class="line">		var avaClone = avatar2jqy(msg.avatar);</span><br><span class="line"></span><br><span class="line">		avaClone.appendTo(container);</span><br><span class="line">		nameClone.appendTo(container);</span><br><span class="line">		bubble.clone().appendTo(container);</span><br><span class="line">		container.clone().appendTo($('#messages'));</span><br><span class="line"></span><br><span class="line">		$('<span class="tag">&lt;<span class="name">br</span>&gt;</span>').appendTo($('#messages'));</span><br><span class="line"></span><br><span class="line">		// self-adjust scrolling height.</span><br><span class="line">		var msgWrapper = document.getElementById('messages');</span><br><span class="line">		msgWrapper.scrollTop = msgWrapper.scrollHeight;</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">    // MAIN IDEA: when user list need to update, do it!</span><br><span class="line">	socket.on('userlist', function(userlist)&#123;</span><br><span class="line">		$('#userlist').empty();</span><br><span class="line">		$('<span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span>').text('Online users:').appendTo($('#userlist'));</span><br><span class="line">		Object.keys(userlist).map(function(d)&#123;</span><br><span class="line">			var usrImg = $('<span class="tag">&lt;<span class="name">img</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span>').attr('src', userlist[d].avatar);</span><br><span class="line">			var usrName = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').text(userlist[d].username).addClass('listname');</span><br><span class="line">			var profileWrapper = $('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>').addClass('userlistProfile');</span><br><span class="line">			usrImg.appendTo(profileWrapper);</span><br><span class="line">			usrName.appendTo(profileWrapper);</span><br><span class="line">			profileWrapper.appendTo($('#userlist'));</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="背景知识补充"><a href="#背景知识补充" class="headerlink" title="背景知识补充"></a>背景知识补充</h2><p>完成一个小demo的开发同样会需要很多边角料信息的补充， 没有人会记得所有javascript各种处理对象的函数， 也没有人需要记得。留个note给自己， 也再以后查纠的之后方便回忆。</p>
<ul>
<li><a href="http://ios.jobbole.com/85230/" target="_blank" rel="noopener">微信,QQ这类IM app怎么做——谈谈Websocket</a></li>
<li><a href="http://betterexplained.com/articles/a-simple-introduction-to-computer-networking/" target="_blank" rel="noopener">A Simple Introduction To Computer Networking</a></li>
<li><code>array.splice(i, 1);</code> will remove one item from ith index in that array, namely, in this case, remove the ith item from array.</li>
<li><code>docuemnt.createTextNode(string) \ document.createElement(&#39;div&#39;); \  document.getElementById(&#39;SOMEID&#39;).appendChild(element);</code> are some common DOM objects munipulations example.</li>
<li>refer to this post: <a href="http://stackoverflow.com/questions/8894226/javascript-submit-textbox-on-enter" target="_blank" rel="noopener">send message by pressing enter</a>, by adding an eventlistener function to message-box, we listent on the keyCode we press, if it is 13(Enter key), then we trigger the message send function.</li>
<li>refer to this post: <a href="http://codepen.io/Founts/pen/gmhcl" target="_blank" rel="noopener">styling for chat bubble</a></li>
<li>Know how to create DOM elements in jquery: <code>$(&#39;&lt;div&gt;&lt;/div&gt;&#39;).addClass(&#39;headline&#39;).html(msg).appendTo($(&#39;#greeting&#39;));</code></li>
<li>create modal in a visually good-looking way, refer to this post: <a href="https://github.com/kylefox/jquery-modal" target="_blank" rel="noopener">jquery.modal.js</a></li>
<li>add user a good-looking avatar! <a href="https://github.com/adorableio/avatars-api" target="_blank" rel="noopener">adorable avatar!</a></li>
<li>change html input focus, refer to this post: <a href="https://api.jquery.com/focus/" target="_blank" rel="noopener">html input focus</a></li>
<li>auto-adjust the scrolling top to the latest message, refer to this post: <a href="http://stackoverflow.com/questions/15432691/css-overflow-value-for-chat" target="_blank" rel="noopener">srollTop = scrollHeight</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> AWS </tag>
            
            <tag> web design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[前端开发工具库[第一期]-npm script]]></title>
      <url>http://chocoluffy.com/2016/05/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BA%93-%E7%AC%AC%E4%B8%80%E6%9C%9F-npm-script/</url>
      <content type="html"><![CDATA[<p>在自动构建工具grunt\webpack等红噪一时的背景下，为什么我想用npm script而不是grunt和gulp等其他工具?</p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为什么我们需要自动构建工具？</p>
<p>在前端开发的时候，会遇到很多实际产品开发之外上的需求，比如开发者希望做到“所写即所得”，可以一边在编辑器里面修改和开发代码，浏览器可以同步更新而不需要我们手动去refresh页面； 比如我们希望可以压缩最后的成品代码， 图片资源的大小，让每次浏览器下载所需要的js代码的时间可以更短，或者考虑CDN； 比如我们希望我们写的scss可以适配任何类型的浏览器等等。</p>
<p>很多功能曾经是要开发者手动引入script文件的，但鉴于npm上活跃的开发者将很多需求的module开发并发布出来， 我们可以利用npm这个包管理器来配置使用这些方便的module，在能够达到同样功能的工具里面比如bower, grunt, gulp，我认为对于一个轻量的小项目， 个人项目来说, npm script是最方便的， 最容易上手的。<strong>没有最好的工具， 只有最合适的使用场景。</strong></p>
<p>而今天的主题：在配置工具grunt\webpack等红噪一时的背景下，为什么我想用npm script而不是grunt和gulp等其他工具?</p>
<p><strong>因为simplicity matters。</strong>没有必要在需要用的时候才去找那些数量有限的grunt, gulp plugins，而直接将node modules拿来用。对于个人开发和维护的小项目， 有没有必要花时间去研究Gruntfile.js怎么去配置， 或者说， 在配置上花的时间相对短期集中开发的时间来说值不值？不是说反对使用grunt, gulp和webpack等工具， 而是我们没有必要拿大炮去打蚊子， 我们想要agile development。 也正是simplicy， 所以才有RoR, meteor等全栈框架的出现来挑战java等较为臃肿的开发流程不是么？</p>
<p>下图是截止至今年1月为止的各平台的插件数量，仍在不断地增加中。</p>
<h2 id="什么是npm-script"><a href="#什么是npm-script" class="headerlink" title="什么是npm script"></a>什么是npm script</h2><p>其实npm script就是希望执行的command的alias， 类似与command line里面的make， 通过提前设置希望执行的命令， 我们可以通过<code>npm run &lt;alias&gt;</code>来执行我们预先设置的命令。 还有一些特别方便的commands比如：</p>
<ul>
<li><code>npm home request</code>， 可以直接跳转到那个module的介绍页面；</li>
<li><code>npm install request --save</code>可以将我们使用的modules以“^”形式保存在package.json文件里面， 这意味着下一次用同一个package.json安装依赖模块时， 没有经过major version jump的模块可以下载到本地项目目录； </li>
<li><code>npm install --production</code>可以安装生产环境的模块， 同<code>NODE_ENV=production npm install</code></li>
</ul>
<h2 id="如何config你的npm-script"><a href="#如何config你的npm-script" class="headerlink" title="如何config你的npm script"></a>如何config你的npm script</h2><p>而目前npm上有很多很棒的module可以直接处理项目， 下面列出来的是我平时自己经常使用的module: </p>
<p>比如: browserfy将文件的各种文件和浏览器同步; postcss和autofixer可以将css文件添加适配各种浏览器的前缀同时进行压缩; js-lint用来检查js文件的各种格式细节; uglify用来压缩js文件的大小; imagemin用来压缩各种图片文件的大小， 在各种大型网站中， 图片的大小占据了大部分。</p>
<h3 id="node－sass"><a href="#node－sass" class="headerlink" title="node－sass"></a>node－sass</h3><p>下面是一些具体使用的例子：比如我们想将sass compile成css。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev node-sass</span><br></pre></td></tr></table></figure>
<p>将<code>node-sass</code>这个module装在developing环境之后，可以直接<code>node-sass --output-style compressed -o dist/css src/scss</code>来将”src/scss“这个文件夹下面的sass文件compile出来并保存在”dist/css“文件夹下面； 或者一个更便捷的做法，是使用npm script：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"scss"</span>: <span class="string">"node-sass --output-style compressed -o dist/css src/scss"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在console里run <code>npm run scss</code>就可以执行这个相同命令了。和makefile的原理和使用习惯可以类比， 只不过使用场景和平台不同。</p>
<h3 id="autoprefixer"><a href="#autoprefixer" class="headerlink" title="autoprefixer"></a>autoprefixer</h3><p>同理对上文提到的autoprefixer这个module， <code>npm install --save-dev postcss-cli autoprefixer</code>来安装， 然后配置script：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="string">"autoprefixer"</span>: <span class="string">"postcss -u autoprefixer -r dist/css/*"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么<code>npm run autoprefixer</code>这个效果就相当于<code>postcss -u autoprefixer --autoprefixer.browsers &#39;&gt; 5%, ie 9&#39; -r dist/css/*</code>。</p>
<h3 id="eslint"><a href="#eslint" class="headerlink" title="eslint"></a>eslint</h3><p>类似地还有eslint这个对js文件进行syntax testing的常用module：<code>npm install --save-dev eslint</code>或者使用shortcut：<code>npm i -D eslint</code>, 然后配置package.json的script部分：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="string">"lint"</span>: <span class="string">"eslint src/js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="项目源代码示例"><a href="#项目源代码示例" class="headerlink" title="项目源代码示例"></a>项目源代码示例</h2><p>一个实战项目的源代码使用在这里和大家分享：</p>
<p>考虑到开发和生产环境的不同，还需要配置不同的环境，这个项目在开发上有浏览器同步更新，语法检查，压缩源文件， 监听端口， s3同步备份的自动化优势， 还引入了前端的jade框架代替html， stylus框架代替css，mocha的testing框架和karma驱动。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"npm-scripts-example"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">"An example of how to use npm scripts"</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"browserify"</span>: <span class="string">"^6.3.2"</span>,</span><br><span class="line">    <span class="string">"hashmark"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="string">"http-server"</span>: <span class="string">"^0.7.3"</span>,</span><br><span class="line">    <span class="string">"jade"</span>: <span class="string">"^1.7.0"</span>,</span><br><span class="line">    <span class="string">"jshint"</span>: <span class="string">"^2.5.10"</span>,</span><br><span class="line">    <span class="string">"karma"</span>: <span class="string">"^0.12.28"</span>,</span><br><span class="line">    <span class="string">"karma-browserify"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"karma-cli"</span>: <span class="string">"^0.0.4"</span>,</span><br><span class="line">    <span class="string">"karma-mocha"</span>: <span class="string">"^0.1.10"</span>,</span><br><span class="line">    <span class="string">"karma-phantomjs-launcher"</span>: <span class="string">"^0.1.4"</span>,</span><br><span class="line">    <span class="string">"live-reload"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="string">"minifyify"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="string">"mocha"</span>: <span class="string">"^2.0.1"</span>,</span><br><span class="line">    <span class="string">"nodemon"</span>: <span class="string">"^1.2.1"</span>,</span><br><span class="line">    <span class="string">"opener"</span>: <span class="string">"^1.4.0"</span>,</span><br><span class="line">    <span class="string">"parallelshell"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"rimraf"</span>: <span class="string">"^2.2.8"</span>,</span><br><span class="line">    <span class="string">"s3-cli"</span>: <span class="string">"^0.11.1"</span>,</span><br><span class="line">    <span class="string">"stylus"</span>: <span class="string">"^0.49.3"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"clean"</span>: <span class="string">"rimraf dist/*"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"prebuild"</span>: <span class="string">"npm run clean -s"</span>,</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"npm run build:scripts -s &amp;&amp; npm run build:styles -s &amp;&amp; npm run build:markup -s"</span>,</span><br><span class="line">    <span class="string">"build:scripts"</span>: <span class="string">"browserify -d assets/scripts/main.js -p [minifyify --compressPath . --map main.js.map --output dist/main.js.map] | hashmark -n dist/main.js -s -l 8 -m assets.json 'dist/&#123;name&#125;&#123;hash&#125;&#123;ext&#125;'"</span>,</span><br><span class="line">    <span class="string">"build:styles"</span>: <span class="string">"stylus assets/styles/main.styl -m -o dist/ &amp;&amp; hashmark -s -l 8 -m assets.json dist/main.css 'dist/&#123;name&#125;&#123;hash&#125;&#123;ext&#125;'"</span>,</span><br><span class="line">    <span class="string">"build:markup"</span>: <span class="string">"jade assets/markup/index.jade --obj assets.json -o dist"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"karma start --singleRun"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"watch"</span>: <span class="string">"parallelshell \"npm run watch:test -s\" \"npm run watch:build -s\""</span>,</span><br><span class="line">    <span class="string">"watch:test"</span>: <span class="string">"karma start"</span>,</span><br><span class="line">    <span class="string">"watch:build"</span>: <span class="string">"nodemon -q -w assets/ --ext '.' --exec 'npm run build'"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"open:prod"</span>: <span class="string">"opener http://example.com"</span>,</span><br><span class="line">    <span class="string">"open:stage"</span>: <span class="string">"opener http://staging.example.internal"</span>,</span><br><span class="line">    <span class="string">"open:dev"</span>: <span class="string">"opener http://localhost:9090"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"deploy:prod"</span>: <span class="string">"s3-cli sync ./dist/ s3://example-com/prod-site/"</span>,</span><br><span class="line">    <span class="string">"deploy:stage"</span>: <span class="string">"s3-cli sync ./dist/ s3://example-com/stage-site/"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"serve"</span>: <span class="string">"http-server -p 9090 dist/"</span>,</span><br><span class="line">    <span class="string">"live-reload"</span>: <span class="string">"live-reload --port 9091 dist/"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"npm run open:dev -s &amp;&amp; parallelshell \"npm run live-reload -s\" \"npm run serve -s\" \"npm run watch -s\""</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>很多时候就是因为准备的工具效率高， 开发者也因此得以集中精力于产品逻辑， 在更短的时间内开发出更好更稳定的产品。</p>
<h2 id="后记小结"><a href="#后记小结" class="headerlink" title="后记小结"></a>后记小结</h2><p>npm script不是没有缺点的，就像我一再强调的，没有最好的工具， 只有最合适的使用场景， 在个人小项目适合的npm script，在大项目， 动辄几十万的前端项目的构建和测试下， npm script会显得特别臃肿和难以维护。 而目前大热的grunt\gulp\webpack也迎来了他们的舞台。下一期，集中介绍grunt和webpack，公司里使用的也是grunt，为什么它会在众多工具中脱颖而出。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://www.zybuluo.com/yangfch3/note/249328" target="_blank" rel="noopener">用npm搭配脚本执行</a> npm 不仅可以用于模块管理，还可以用于执行脚本。对于多个任务的操作很方便！</li>
<li><a href="https://www.nczonline.net/blog/2016/03/mimicking-npm-script-in-node-js/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+nczonline+%28NCZOnline+-+The+Official+Web+Site+of+Nicholas+C.+Zakas%29" target="_blank" rel="noopener">Mimicking npm script in Node.js</a> The underlying mechanism of using npm script is that npm modifies the PATH environment variable so that it affects the lookup of executables. Run <code>npm install --save-dev eslint</code>, then do <code>npm run lint</code>, it works because npm script is actually running <code>node_modules/.bin/eslint</code>.</li>
<li><a href="http://gon.to/2015/02/26/gulp-is-awesome-but-do-we-really-need-it/" target="_blank" rel="noopener">Gulp is awesome, but do we really need it?</a></li>
<li><a href="http://blog.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/" target="_blank" rel="noopener">How to Use npm as a Build Tool</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> nodejs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[另一种鼓声-读《途客圈》有感]]></title>
      <url>http://chocoluffy.com/2016/05/13/%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%BC%93%E5%A3%B0-%E8%AF%BB%E3%80%8A%E9%80%94%E5%AE%A2%E5%9C%88%E3%80%8B%E6%9C%89%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>“如果你清醒地知道你要去哪儿，脑海中还保留着那份憧憬，那么你就能逢山开路，遇水搭桥，所有的阻碍都将成为一个个里程碑，被踩在你的身后……”</p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在<a href="http://chocoluffy.com/2016/04/25/%E5%85%B3%E4%BA%8E%E5%88%9B%E4%B8%9A%EF%BC%8C-%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E8%AF%B4%E7%9A%84%E7%A7%98%E5%AF%86/">关于创业, 那些不能说的秘密</a>里主要记录了阅读<the hard="" thing="" about="" things="">的阅读手记， 而另一本几乎同时完成的书&lt;途客圈创业记&gt;的阅读记录思考，在这里分享。</the></p>
<p>在一个充斥着来自CEO乃至风险投资人视角的创业回顾的环境下， 一个来自技术合伙人(CTO)的视角显得尤为可贵。 从最早的技术选型， 到带领其它技术人员的开发和维护， 到技术过渡和商业选择， 陈天给了一份很详细和真挚的参考选项。</p>
<p>每本书， 每个文字对不同的人意义都是不同的。 下面纪录了我在看完这本书之后的想法。</p>
<h2 id="关于创业，那所有无关技术的事"><a href="#关于创业，那所有无关技术的事" class="headerlink" title="关于创业，那所有无关技术的事"></a>关于创业，那所有无关技术的事</h2><p>一开始不要设置过高的期权池， 期权池的主要目的是未来吸引和留住人才。期权与股权不同，股权代表所有权，期权代表的则是在特定的时间、以特定的价格购买特定所有权的权利，它可被视作是员工与公司之间关于股权买卖的一份合同。行权之后员工获得的股份是普通股。</p>
<h3 id="在创新工场里的打拼"><a href="#在创新工场里的打拼" class="headerlink" title="在创新工场里的打拼"></a>在创新工场里的打拼</h3><p>在和创新工场就入驻细节的交谈中：</p>
<ul>
<li><p>清算优先权</p>
</li>
<li><p>反稀释条款</p>
</li>
</ul>
<p>如何雇佣到最好的人， 的确拥有创新工场这个名字更容易发现更好的技术人员。</p>
<p>nanfang就是通过创新工厂的招聘进来的。同时alex的官方博客和知乎都可以用来获取人才的来源。</p>
<h3 id="技术选型和工具库"><a href="#技术选型和工具库" class="headerlink" title="技术选型和工具库"></a>技术选型和工具库</h3><p>当时作者使用的是amazon的四台最小免费计算单元， 用4个账号注册的。一台用来跑翻译， 一台跑wordpress， 一台跑toureet.com， 和另一台。 现在国内的云服务可以考虑阿里云。</p>
<p>在UI上要直观和实用。 一定要在第一轮宣传之前完成UI的设计和构架， 毕竟第一轮宣传之后， 往后的宣传的力度和效果都将大大不如之前。</p>
<p>同时也需要考虑的就是域名和注册的问题!!</p>
<p>要把钱花在刀刃上， 要舍得去花钱。app的制作是必须的!!!!!!!!尽管大家使用web的时间很多， 但是下载了一个app就是护城河。</p>
<p><strong>对于一些特别优秀的人， 一定要和他们经常讨论产品的发展方向， 因为对于他们来说， 他们之所以加入你， 已经不是因为技术的吸引力了， 而是因为他的声音很可能在塑造他准备推出的产品， 因为从未有的对产品的掌控力。而这， 也是创业的魅力吧!</strong></p>
<h3 id="市场推广"><a href="#市场推广" class="headerlink" title="市场推广"></a>市场推广</h3><p>历时一个月的推广大赛， 烧了30万（加上员工的工资）， 换来的是一次性的用户， 看热闹的用户， 注册了3万多人， 然而没有什么用。</p>
<p>如果你战略上不是很清晰，你再做什么也是没有用的，<strong>是在用战术性的疲劳掩盖战略上的懒惰</strong>。百场汇不停地在战略层面做一些调整，所以战术上大家不会那么辛苦。一年来，百场汇全公司只有一个人离职。这对初创公司来说是很不容易的。</p>
<h2 id="关于功能的实用和噱头"><a href="#关于功能的实用和噱头" class="headerlink" title="关于功能的实用和噱头"></a>关于功能的实用和噱头</h2><p>有没有想过如果微信把朋友圈的功能作为每一次打开的初始页面？而不是一直以来的群组或者单聊？首屏一定要放你最最核心的功能， 而社交是最为用户粘性的方式之一， 绝对不能喧宾夺主。或者说， 所有的工具式网站， 都应该考虑围绕那个工具所最最合适的社交场景。</p>
<p>比如微信的工具属性是：即时通讯和群聊， 那么聊天的社交场景就应该是： 让更多的人发现聊天的内容， 也从纯文字转换到图片和视频和直播， 乃至可以让更多的人加入和感受到聊天的这个场景里面。</p>
<p>比如网易云音乐的工具属性是： 发现和享受高品质音乐， 那么找音乐和听音乐的社交场景就应该是： 让更多的人去发现你喜欢和收藏的音乐， 并基于这些音乐进行进一步的交流。而我觉得一个非常非常棒的功能就是， 不仅仅允许用户分享他们自己创作的歌单， 而且允许把他们最常听的那25首歌显示出来。你不会欺骗你自己的耳朵。如果可以把这一栏更突出地显示会更好？！</p>
<h2 id="关于工具和社区的交叠和矛盾"><a href="#关于工具和社区的交叠和矛盾" class="headerlink" title="关于工具和社区的交叠和矛盾"></a>关于工具和社区的交叠和矛盾</h2><p>每一个需求在被解决的时候， 产品是被工具化的， 而希望推广这种解决方案的时候， 产品是被社区化的。 现在大部分围绕工具性产品还是社区性产品的讨论， 如果被抽象出了产品本身要解决的问题的话， 基本都是废话和干扰。 拿两种使用场景和频率比较不同的方向做比较， 比如听音乐和旅游这两个商业方向。 </p>
<p>人们听音乐的两个需求， 在自己疲惫不爽的时候听到自己最喜欢的音乐， 和发现那些不认识却好听的音乐； 当然， 人们还会从分享自己组好的歌单或者评论里面得到分享和反馈的满足，但我认为这种行为是因为社区化带来的，因为在人群中， 所以也想得到人群的温暖和共鸣 ，但这种社会心理的需求我暂不归于听音乐本身的需求。 就拿网易云音乐APP作例子， 其本身在很多细节上做得很棒了， 但是我认为还可以提高的地方：</p>
<p>基于喜欢同一个专辑的乐众的社交兴趣小组。人们对自己喜欢的东西永远都有如数家珍般的热情。</p>
<p>从你不会骗自己的耳朵， 你最最经常听的25首歌。</p>
<p>同样发现别人最最经常听的25首歌。</p>
<p>用户对收集到歌曲的分类的自我重组。 应当支持双向的标记， 一是tag， 二是collection。像管理笔记一样去管理音乐， 同时将任何collection都注重社交化的分享， 像pinterest的理念学习。</p>
<p>评论分为两栏， 一栏是trending， 一栏是历史最热。 trending要像hackernews一样的不断让新事物涌现来代替旧评论， 而历史最热， 则是就硬碰硬的质量。原因？你不会去参加一个高低胜负已经分明的比赛。你之所倚评论， 你总会有被反馈的渴望， 而看见自己的文字被淹没是最最失落的， 哪怕你知道这的确不是最好的文字~</p>
<h2 id="关于期权池"><a href="#关于期权池" class="headerlink" title="关于期权池"></a>关于期权池</h2><p>以下内容， 来源自知乎。可参考：<a href="http://zhuanlan.zhihu.com/p/20726127" target="_blank" rel="noopener">知乎专栏</a>, 作者：黄海, 著作权归作者所有。</p>
<p>可能有创业者会问了：我给了员工股份，他3个月以后就跳槽了，我不就亏了。当然不会，首先记住这是股权池，不是股份池。给的是股权，不是直接送股份。所谓股权，就是一定时候，可以以行使价格买入股票，这个行使价格由董事会决定，一般特别低。</p>
<h3 id="有股权的员工和创始人的区别"><a href="#有股权的员工和创始人的区别" class="headerlink" title="有股权的员工和创始人的区别"></a>有股权的员工和创始人的区别</h3><p>你最早的员工可能和你一起度过了创业的全过程，而且还通过股权池获得股权，那你可能会问，那他们算创始人么？</p>
<p>答案是，他们与创始人还是有很大不同的。首先，如果他们不行使权利，他们甚至都不算是股东，话语权当然不一样。另外创始人开始都是、没有工资，甚至自己就是投资人，承担了所有的风险。员工就很不一样，依然是雇佣关系，除了失业风险较大，同时劳资可能相对低，但这些都是个人风险，而不是企业风险。所以还是有很大区别的。</p>
<p>越迟加入公司的员工需要冒的风险越低。</p>
<p>创始人应该最终拿整个公司大约50%的股份。首层下面的5层员工的每一层最终都分别分到大约10%的公司股份，每一层的员工都将平分这10%的股份。</p>
<p>现在，你搞定了一个公平的份股系统，但还有一个重要的原则：你必须执行“股份绑定”(vesting)。股份绑定期最好是 4 到 5 年。任何人都必须在公司做够起码 1 年才可持有股份（包括创始人）。好的股份绑定计划一般是头一年给 25%，然后接下来每个月落实 2%。否则，你的合作创始人将加入公司 3 个星期后跑掉，然后 7 年后又出现，并声称他拥有公司的 25% 的股份。</p>
<p>没有“股份绑定”条款，你派股份给任何人都是不靠谱的！</p>
<p>没有执行“股份绑定”是极其普遍的现象，后果可以十分严重。你看到有些公司的 3 个创始人没日没夜地工作了 5 年，然后你发现有些混蛋加入后 2 个星期就离开，这混蛋还以为他仍然拥有公司 25% 的股份，就因为他工作过的那 2 个星期。</p>
<p>好了，让我们清理一下整个设计蓝图中没搞定的小问题。</p>
<p>如果你的公司融资了，股份如何分割？</p>
<p>投资可以来自任何方向，一个天使投资人，一个风险投资公司，或者是某人的老爸。基本上，回答很简单：</p>
<p>新的投资将“稀释”所有人的股份。</p>
<p>千万不要用分配股权来解决这些问题。</p>
<p>其实，你只需要针对每位创始人拿的工资做好记帐：不拿工资创始人就给 她记着工资“欠条”。当公司有了足够现金，就根据这个工资欠条补发工资给她。接下来的几年中，当公司现金收入逐步增加，或者当完成第一轮风险投资后，你可 以给每一位创始人补发工资，以确保每一位创始人都可从公司得到完全一样的工资收入。</p>
<h3 id="创业构想提出者应该多拿股份吗？"><a href="#创业构想提出者应该多拿股份吗？" class="headerlink" title="创业构想提出者应该多拿股份吗？"></a>创业构想提出者应该多拿股份吗？</h3><p>不拿。构想基本上是不值钱的。仅仅因为提出创业构想就获得更多股 权，因此导致纷争是不值得的。如果你们当中有人首先提出的创业构想，但你们都同时辞工并同时开始创业，你们应该拿同等的股份。为公司工作才是创造价值的原 因，而你洗澡的时候突发奇想的“创业点子”根本不值什么钱。</p>
<h3 id="创始人不全职投入工作？"><a href="#创始人不全职投入工作？" class="headerlink" title="创始人不全职投入工作？"></a>创始人不全职投入工作？</h3><p>那么，他（们）就不能算是“创始人”。在我的概念中，如果 一个人不全职投入公司的工作就不能算是创始人。任何边干着他们其它的全职工作边帮公司干活的人只能拿工资或者工资“欠条”，但是不要给股份。如果这个“创 始人”一直干着某份全职工作直到公司拿到风投，然后辞工全职过来公司干活，他（们）和第一批员工相比好不了多少，毕竟他们并没有冒其他创始人一样的风险。</p>
<h3 id="如果有人给公司提供有价值的东西？"><a href="#如果有人给公司提供有价值的东西？" class="headerlink" title="如果有人给公司提供有价值的东西？"></a>如果有人给公司提供有价值的东西？</h3><p>比如提供了设备， 专利或者是域名。</p>
<p>很好啊。按这些东西的价值支付现金或开个“欠条”咯，别给股份。你准确算一下他给公司带来的那台电脑的价值，或者他们自带的某个聪明的字处理专利的价格，给他们写下欠条，公司有钱后再偿还即可。在创业初期就用股权来购买某些公司需要的东西将导致不平等，纷争和不公平。</p>
<p><strong>再重复一遍!! 用欠条， 而不是股份解决问题!!!!解决大部分的资金纷争和各种帮助!!</strong></p>
<p>今天买来的用户，明天还是不会成为你的品牌用户。</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 商业评论 </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Angular入门-module和service]]></title>
      <url>http://chocoluffy.com/2016/05/12/Angular%E5%85%A5%E9%97%A8-module%E5%92%8Cservice/</url>
      <content type="html"><![CDATA[<p>自己学习angular时候记录的学习笔记，这一篇主要讨论module和service。</p>
<a id="more"></a>
<h2 id="How-to-define-a-module"><a href="#How-to-define-a-module" class="headerlink" title="How to define a module?"></a>How to define a module?</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// define a module</span></span><br><span class="line">angular.module(<span class="string">'notesApp'</span>,</span><br><span class="line">    [<span class="string">'notesApp.ui'</span>, <span class="string">'thirdCompany.fusioncharts'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// look up a module.</span></span><br><span class="line">angular.module(<span class="string">'notesApp'</span>);</span><br></pre></td></tr></table></figure>
<p>Also, make sure the file that defines the module is loaded first.</p>
<p>After defining the module, we use Angular to use these modules to bootstrap the application. <code>ng-app</code> takes an optional argument, the name of the modulr to load.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">ng-app</span>=<span class="string">"notesApp"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello AngularJS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      Hello &#123; &#123; 1 + 1 &#125; &#125;nd time AngularJS</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">angular.module(<span class="string">'notesApp'</span>, []); </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Controller-in-Angular"><a href="#Controller-in-Angular" class="headerlink" title="Controller in Angular"></a>Controller in Angular</h2><ul>
<li>fetching data from server to UI.</li>
<li>presentation logic.</li>
<li>user interaction, what will happen when user clicks something. </li>
</ul>
<p>An AngularJS controller is almost always directly linked to a view or HTML. We will <strong>never have a controller that is not used in the UI</strong> (that kind of business logic goes into services).</p>
<h3 id="HTML-code"><a href="#HTML-code" class="headerlink" title="HTML code"></a>HTML code</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">angular.module(<span class="string">'notesApp'</span>, []) .controller(<span class="string">'MainCtrl'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// Controller-specific code goes here</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'MainCtrl has been created'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;]);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The above code define a module that depends on nothing, and a controller and its dependencies in the second argument, an array(the last argument in that array is the actual function itself).</p>
<p>We also introduce a new directive, ng-controller. This is used to tell AngularJS to go instantiate an instance of the controller with the given name, and attach it to the DOM element. In this case, it would load MainCtrl, which would end up printing the console.log() statement.</p>
<h3 id="Angular-code"><a href="#Angular-code" class="headerlink" title="Angular code"></a>Angular code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;html ng-app=&quot;notesApp&quot;&gt; </span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;Notes App&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body ng-controller=&quot;MainCtrl as ctrl&quot;&gt;</span><br><span class="line">      &#123; &#123; ctrl.helloMsg &#125; &#125; AngularJS.</span><br><span class="line">      &lt;br/&gt;</span><br><span class="line">      &#123; &#123; ctrl.goodbyeMsg &#125; &#125; AngularJS</span><br><span class="line">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">angular.module(&apos;notesApp&apos;, [])</span><br><span class="line">  .controller(&apos;MainCtrl&apos;, [function() &#123;</span><br><span class="line">    this.helloMsg = &apos;Hello &apos;;</span><br><span class="line">    var goodbyeMsg = &apos;Goodbye &apos;;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>The reason why it only shows the the hello message it that: We <strong>defined the variable helloMsg on the controller’s instance</strong> (using the “this” keyword, and it is how we expose the data from controller to front-end UI), and the variable goodbyeMsg as a local inner variable in the controller’s in‐ stance (using the var keyword).</p>
<p>By using <code>ng-controller</code>, it allows us to associate an instance of controller with a UI element, in this case, the <body> tag.</body></p>
<p>“This” in javascipt, since it will be easily modified by whoever call the function, which causes the case that “this” inside and outside the function(the asychcronous function) may refer to two different objects. Thus, using a proxy variable will help!! Since with the help of the closure, that proxy varibale will always stay the same(pointing to “this”) inside the function.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"note in ctrl.notes"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span> &#123; &#123; note.label &#125; &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"status"</span> <span class="attr">ng-bind</span>=<span class="string">"note.done"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The two methods appear above are the same effect, but we recommend the second way, since the second one will be replaced before the the first one. </p>
<h2 id="Angular’s-working-flow"><a href="#Angular’s-working-flow" class="headerlink" title="Angular’s working flow"></a>Angular’s working flow</h2><p>After the entire HTML is loaded, angular.js starts to find the <code>ng-app</code> directive, then using that directive, it looks for the angular modules defined and attached to that DOM element. </p>
<p>Then it starts to find other directive and binding elements inside the range. Every it meets <code>ng-controller</code> or <code>ng-repeat</code>, it creates a scope for that part of element. <strong>scopr is the context of that element</strong>, and it dictates what each DOM has access to in terms of functions, variables and so on.</p>
<p>Angular also adds <strong>watcher and listeners</strong> on HTML’s DOM element.</p>
<p>The way angular update the UI, only happens for a certain events including XHR, server calls, page loads and user interaction such clicks and type.</p>
<h3 id="what-is-XHR"><a href="#what-is-XHR" class="headerlink" title="what is XHR?"></a>what is XHR?</h3><p>XMLHttpRequest (XHR) is an API available to web browser scripting languages such as JavaScript. It is used to send HTTP or HTTPS requests to a web server and load the server response data back into the script.</p>
<p>Data from the response can be used to alter the current document in the browser window without loading a new web page, and despite the name of the API, this data can be in the form of not only XML, but also JSON, HTML or plain text.</p>
<p>Ajax depends heavily on XHR.</p>
<h2 id="More-directive"><a href="#More-directive" class="headerlink" title="More directive"></a>More directive</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"note in ctrl.notes"</span> <span class="attr">ng-class</span>=<span class="string">"ctrl.getNoteClass(note.done)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span> &#123; &#123; note.label &#125; &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"assignee"</span> <span class="attr">ng-show</span>=<span class="string">"note.assignee"</span> <span class="attr">ng-bind</span>=<span class="string">"note.assignee"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">self.getNoteClass = <span class="function"><span class="keyword">function</span>(<span class="params">status</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    done: status,</span><br><span class="line">    pending: !status</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>ng-show</code> and <code>ng-hide</code> can help display or hide the DOM element. <code>ng-class</code> will add class to DOM element depending on the [1] if it is string [2] it is a json object, assign the key by the value of that key. <code>ng-switch on=&quot;&lt;some variable value in scopr&gt;&quot;</code> with <code>ng-switch-when=&quot;&lt;the conditional value of that variable&gt;&quot;</code> will create the if-else effect directly in html.</p>
<h2 id="Testing-in-Angularjs"><a href="#Testing-in-Angularjs" class="headerlink" title="Testing in Angularjs"></a>Testing in Angularjs</h2><h3 id="Test-Runner-Versus-Testing-Framework"><a href="#Test-Runner-Versus-Testing-Framework" class="headerlink" title="Test Runner Versus Testing Framework"></a>Test Runner Versus Testing Framework</h3><p>We have often noticed that developers can sometimes get confused between the test runner and the testing framework. This could be because the same library often handles both responsibilities.</p>
<p>When working with JS (and AngularJS), we have two separate tools/ libraries for each purpose. Karma, which is the test runner, is solely responsible for finding all the unit tests in our codebase, opening browsers, running the tests in them, and capturing results. It does not care what language or framework we use for writing the tests; it sim‐ ply runs them.</p>
<p>Jasmine is the testing framework we will use. Jasmine defines the syntax with which we write our tests, the APIs, and the way we write our assertions. It is possible to not use Jasmine, and instead use something like mocha or some other framework to write tests for AngularJS.</p>
<h2 id="Model-in-angular"><a href="#Model-in-angular" class="headerlink" title="Model in angular"></a>Model in angular</h2><p>The <code>ng-bind</code> and “{ {  } }” we see in the above example demonstrates the one-way data-binding in angular, to use two-way data-binding, we opt for <code>ng-model</code>. As expected, such functionality is heavily used in user form.</p>
<h2 id="Angular’s-service"><a href="#Angular’s-service" class="headerlink" title="Angular’s service"></a>Angular’s service</h2><p>service refers to reuseable api that can be shared across the applications. One obvious difference between controllers and services is <strong>services are independent of views</strong>, while controllers drives UI.  </p>
<h3 id="Dependency-injection"><a href="#Dependency-injection" class="headerlink" title="Dependency injection"></a>Dependency injection</h3><p><strong>Dependency injection is a concept that started more on the server side.</strong> Dependency injection states that instead of creating an instance of the dependent service when we need it, the class or function should ask for it instead and the “injector” will be responsible for figuring out how to create it.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Without Dependency Injection</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fetchDashboardData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $http = <span class="keyword">new</span> HttpService();</span><br><span class="line">  <span class="keyword">return</span> $http.get(<span class="string">'my/url'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// With Dependency Injection</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fetchDashboardData</span>(<span class="params">$http</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> $http.get(<span class="string">'my/url'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The two probable ways to write service and why the latter is better? In the first example, we use “new” keyword, we have new instance everytime we use service while <strong>service in angular is singletons for the scope of our application, </strong> and two controllers ask for service A will get the vary same instance!</p>
<p>To use built-in services, we should remember that the built-in services are prefixed with “<code>$</code>“ sign like “<code>$log</code>“, “<code>$http</code>“ and so on.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myModule.controller(<span class="string">"MainCtrl"</span>, [<span class="string">"$log"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$log</span>) </span>&#123;&#125;]);</span><br><span class="line"></span><br><span class="line">myModule.controller(<span class="string">"MainCtrl"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$log</span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure>
<p>And here are the two ways we usually inject services, but why we prefer the former one, the one with safe style of dependency injection. </p>
<p>Because of the “uglify” procedure. During the uglifing process, the variable will be shortened to some random string, while at that time, we won’t be able to tell which service it is using! Also, since the “uglify” won’t change string constant, it will help to identify which service we are using. </p>
<p>Why we call “injection”? because the way we use those services like <code>myModule.controller(&quot;MainCtrl&quot;, [&quot;$log&quot;, &quot;$window&quot;, function($l, $w) {}]);</code> is similar to injecting those services for the function to use. </p>
<h3 id="Some-common-services"><a href="#Some-common-services" class="headerlink" title="Some common services"></a>Some common services</h3><h4 id="location"><a href="#location" class="headerlink" title="$location"></a>$location</h4><p>The <code>$location</code> service in AngularJS allows us to interact with the URL in the browser bar, and get and manipulate its value. Any changes made to the <code>$location</code> service get reflected in the browser, and any changes in the browser are im‐ mediately captured in the <code>$location</code> service. The <code>$location</code> service has the fol‐ lowing functions, which allow us to work with the URL:</p>
<ul>
<li>absUrl. A getter that gives us the absolute URL in the browser (called <code>$location</code>. absUrl()).</li>
<li>url. A getter and setter that gets or sets the URL. If we give it an argument, it will set the URL; otherwise, it will return the URL as a string.</li>
<li>path. Again, a getter and setter that sets the path of the URL. Automatically adds the forward slash at the beginning. So <code>$location.path()</code> would give us the current path of the application, and <code>$location.path(&quot;/new&quot;)</code> would set the path to /new.</li>
<li>search. Sets or gets the search or query string of the current URL. Calling <code>$location.search()</code> without any arguments returns the search parameter as an ob‐ ject. Calling <code>$location.search(&quot;test&quot;)</code> removes the search parameter from the URL, and calling <code>$location.search(&quot;test&quot;, &quot;abc&quot;);</code> sets the search parameter test to abc.</li>
</ul>
<h4 id="http"><a href="#http" class="headerlink" title="$http"></a>$http</h4><p>We will deal with <code>$http</code> extensively in Chapter 6, but it is the core AngularJS service used to make XHR requests to the server from the application. Using the <code>$http</code> service, we can make GET and POST requests, set the headers and caching, and deal with server responses and failures.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">angular.module(<span class="string">'notesApp'</span>, [])</span><br><span class="line">  .controller(<span class="string">'MainCtrl'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">    self.tab = <span class="string">'first'</span>;</span><br><span class="line">    self.open = <span class="function"><span class="keyword">function</span>(<span class="params">tab</span>) </span>&#123;</span><br><span class="line">      self.tab = tab;</span><br><span class="line">    &#125;;</span><br><span class="line">    &#125;])</span><br><span class="line">  .controller(<span class="string">'SubCtrl'</span>, [<span class="string">'ItemService'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ItemService</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>; self.list = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ItemService.list(); </span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    self.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      ItemService.add(&#123;</span><br><span class="line">        id: self.list().length + <span class="number">1</span>,</span><br><span class="line">        label: <span class="string">'Item '</span> + self.list().length</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    &#125;])</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// we created ItemService using angular's module function: factory. </span></span><br><span class="line">  .factory(<span class="string">'ItemService'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">var</span> items = [</span><br><span class="line">      &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">label</span>: <span class="string">'Item 0'</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">label</span>: <span class="string">'Item 1'</span>&#125;</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      list: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> items; </span><br><span class="line">      &#125;,</span><br><span class="line">      add: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">        items.push(item);</span><br><span class="line">      &#125; </span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>The point in the above example is that if we add one more item in one of the tabs, we can also see that item in the other tab, because the itemService instance in both tabs are the same. To summerize:</p>
<p>AngularJS guarantees the following:</p>
<ul>
<li>The service will be lazily instantiated. The very first time a controller, service, or directive asks for the service, it will be created.</li>
<li>The service definition function will be called once, and the instance stored. Every caller of this service will get this same, singleton instance handed to them.</li>
</ul>
<h3 id="Factory-provider-and-service"><a href="#Factory-provider-and-service" class="headerlink" title="Factory, provider and service"></a>Factory, provider and service</h3><p><strong>There are several ways to defining a service: factory, provider and service.</strong></p>
<p>we use “factory” if we define the service in a more functional way, like in the previous example, we return an object that contains functions; or we can use “service” if we define the service in a classic class\OO way, which doesn’t return anything. </p>
<p>An example of using “serive” is followed:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ItemService</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> items = [</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">label</span>: <span class="string">'Item 0'</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">label</span>: <span class="string">'Item 1'</span>&#125;</span><br><span class="line">      ];</span><br><span class="line">  <span class="keyword">this</span>.list = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> items;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.add = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">        items.push(item);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">angular.module(<span class="string">'notesApp'</span>, [])</span><br><span class="line">  .service(<span class="string">'ItemService'</span>, [ItemService])</span><br><span class="line">  .controller(<span class="string">'MainCtrl'</span>, [<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">    self.tab = <span class="string">'first'</span>; self.open = <span class="function"><span class="keyword">function</span>(<span class="params">tab</span>) </span>&#123;</span><br><span class="line">          self.tab = tab;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;])</span><br><span class="line">  .controller(<span class="string">'SubCtrl'</span>, [<span class="string">'ItemService'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ItemService</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>; self.list = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> ItemService.list(); </span><br><span class="line">    &#125;;</span><br><span class="line">    self.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      ItemService.add(&#123;</span><br><span class="line">            id: self.list().length + <span class="number">1</span>,</span><br><span class="line">            label: <span class="string">'Item '</span> + self.list().length</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="Communication-with-server"><a href="#Communication-with-server" class="headerlink" title="Communication with server"></a>Communication with server</h3><p><code>$http</code> is a core AngularJS service that allows us to communicate with server endpoints using XHR. Like XHR such tedious task, we usually instantiate a XMLHttpRequest Object and read the response, check the error codes and so on, or using jquery’s <code>$.ajax</code> syntax. </p>
<p>Also, it follows the Promise interface.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">angular.module(<span class="string">'resourceApp'</span>, [<span class="string">'ngResource'</span>])</span><br><span class="line">    .factory(<span class="string">'ProjectService'</span>, [<span class="string">'$resource'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$resource</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> $resource(<span class="string">'/api/project/:id'</span>); </span><br><span class="line">    &#125;]);</span><br></pre></td></tr></table></figure>
<p><strong>use <code>ngResource</code> to handle RESTful API </strong> as it will make it extremely easy to send the “GET”\”POST” request to the server. In the above example, we produce a service called “ProjectService”, which depends on the built-in module called “<code>$resource</code>“, which wraps the RESTful endpoint to make our life easier as we can then use:</p>
<ul>
<li>ProjectService.query() to get a list of projects.</li>
<li>ProjectService.save({id: 15}, projectObj) to update a project with ID 15.</li>
<li>ProjectService.get({id: 19}) to get an individual project with ID 19.</li>
</ul>
<p>The following is a full-fledged example, showing how to use <code>ngResource</code> in front end to cooperate with the back end.</p>
<div style="text-align:center" markdown="1"><br>  <iframe src="http://angular-example-dev.us-east-1.elasticbeanstalk.com/http-post-example.html" width="100%" height="500"><br>    <p>Your browser does not support iframes.</p><br>  </iframe><br></div>

<p>The source code is listed as followed:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js (Express 4.0)</span></span><br><span class="line"><span class="keyword">var</span> express        = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> morgan         = <span class="built_in">require</span>(<span class="string">'morgan'</span>);</span><br><span class="line"><span class="keyword">var</span> bodyParser     = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">var</span> methodOverride = <span class="built_in">require</span>(<span class="string">'method-override'</span>);</span><br><span class="line"><span class="keyword">var</span> app            = express();</span><br><span class="line"></span><br><span class="line">app.use(express.static(__dirname + <span class="string">'/public'</span>)); <span class="comment">// this line is important as we will serve those html file directly in screen as option, in those html front-end example, we will use angular's ngResource to create http request for the backend of this server.js (the endpoint we just created using express's router).</span></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>)); 					<span class="comment">// log every request to the console</span></span><br><span class="line">app.use(bodyParser()); 						<span class="comment">// pull information from html in POST</span></span><br><span class="line">app.use(methodOverride()); 					<span class="comment">// simulate DELETE and PUT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> notes = [</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">label</span>: <span class="string">'First Note'</span>, <span class="attr">author</span>: <span class="string">'Shyam'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">label</span>: <span class="string">'Second Note'</span>, <span class="attr">author</span>: <span class="string">'Brad'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">3</span>, <span class="attr">label</span>: <span class="string">'Middle Note'</span>, <span class="attr">author</span>: <span class="string">'Someone'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">4</span>, <span class="attr">label</span>: <span class="string">'Last Note'</span>, <span class="attr">author</span>: <span class="string">'Shyam'</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>: <span class="number">5</span>, <span class="attr">label</span>: <span class="string">'Really the last Note'</span>, <span class="attr">author</span>: <span class="string">'Shyam'</span>&#125;</span><br><span class="line"></span><br><span class="line">];</span><br><span class="line"><span class="keyword">var</span> lastId = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/note'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(notes);</span><br><span class="line">&#125;);</span><br><span class="line">router.post(<span class="string">'/note'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> note = req.body;</span><br><span class="line">  note.id = lastId; <span class="comment">// An smart way to keep track of the last id.</span></span><br><span class="line">  lastId++;</span><br><span class="line">  notes.push(note);</span><br><span class="line">  res.send(note);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/note/:id/done'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> noteId = req.params.id;</span><br><span class="line">  <span class="keyword">var</span> note = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; notes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (notes[i].id == req.params.id) &#123;</span><br><span class="line">      note = notes[i];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  note.label = <span class="string">'Done - '</span> + note.label;</span><br><span class="line">  res.send(notes);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/note/:id'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; notes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (notes[i].id == req.params.id) &#123;</span><br><span class="line">      res.send(notes[i]);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(&#123;<span class="attr">msg</span>: <span class="string">'Note not found'</span>&#125;, <span class="number">404</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/note/:id'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; notes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (notes[i].id == req.params.id) &#123;</span><br><span class="line">      notes[i] = req.body;</span><br><span class="line">      notes[i].id = req.params.id;</span><br><span class="line">      res.send(notes[i]);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(&#123;<span class="attr">msg</span>: <span class="string">'Note not found'</span>&#125;, <span class="number">404</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'API LOGIN FOR '</span>, req.body);</span><br><span class="line">  res.send(&#123;<span class="attr">msg</span>: <span class="string">'Login successful for '</span> + req.body.username&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/api'</span>, router);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">8000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Open http://localhost:8000 to access the files now'</span>); <span class="comment">// shoutout to the user</span></span><br></pre></td></tr></table></figure>
<p>And the front-end part code is:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- File: chapter6/public/http-post-example.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">ng-app</span>=<span class="string">"notesApp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTTP Post Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .item &#123;</span></span><br><span class="line"><span class="undefined">      padding: 10px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-controller</span>=<span class="string">"MainCtrl as mainCtrl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello Servers!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"todo in mainCtrl.items"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"todo.label"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>- by <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"todo.author"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"todo.messege"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"addForm"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">ng-submit</span>=<span class="string">"mainCtrl.add()"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">placeholder</span>=<span class="string">"Label"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">ng-model</span>=<span class="string">"mainCtrl.newTodo.label"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">required</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">placeholder</span>=<span class="string">"Author"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">ng-model</span>=<span class="string">"mainCtrl.newTodo.author"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">required</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"messege"</span> <span class="attr">ng-model</span>=<span class="string">"mainCtrl.newTodo.messege"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">value</span>=<span class="string">"Add"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">ng-disabled</span>=<span class="string">"addForm.$invalid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  angular.module(<span class="string">'notesApp'</span>, [])</span></span><br><span class="line"><span class="javascript">    .controller(<span class="string">'MainCtrl'</span>, [<span class="string">'$http'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$http</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> self = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="undefined">      self.items = [];</span></span><br><span class="line"><span class="undefined">      self.newTodo = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> fetchTodos = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> $http.get(<span class="string">'/api/note'</span>).then(</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              self.items = response.data; <span class="comment">// set the items to be the return data.</span></span></span><br><span class="line"><span class="javascript">            &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">errResponse</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.error(<span class="string">'Error while fetching notes'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">      &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      fetchTodos();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">      self.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $http.post(<span class="string">'/api/note'</span>, self.newTodo)</span></span><br><span class="line"><span class="javascript">            .then(fetchTodos) <span class="comment">// update items.</span></span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              self.newTodo = &#123;&#125;; <span class="comment">// clear the form.</span></span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">      &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;]);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="http-in-detail"><a href="#http-in-detail" class="headerlink" title="$http in detail"></a>$http in detail</h3><p>Promise-style syntax.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">angular.module(<span class="string">'notesApp'</span>, [])</span><br><span class="line">  .controller(<span class="string">'MainCtrl'</span>, [<span class="string">'$http'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$http</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">    self.items = [];</span><br><span class="line">    $http.get(<span class="string">'/api/note'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">      self.items = response.data;</span><br><span class="line">      &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">errResponse</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.error(<span class="string">'Error while fetching notes'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">  &#125;]</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>why Promise is better? try thinking about a case when we have to make 3 http request in a row, when the latter ones will depend on the information from the first ones. If using callbacks, we will need to nest them all together!</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$http.get(<span class="string">'/api/server-config'</span>)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">configResponse</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $http.get(<span class="string">'/api/'</span> + configResponse.data.USER_END_POINT);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">userResponse</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $http.get(<span class="string">'/api/'</span> + userResponse.data.id + <span class="string">'/items'</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">itemResponse</span>) </span>&#123; </span><br><span class="line">    <span class="comment">// Display items here</span></span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Common error handling</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="Additional-information"><a href="#Additional-information" class="headerlink" title="Additional information"></a>Additional information</h2><h3 id="difference-between-Promise-and-callback-in-js"><a href="#difference-between-Promise-and-callback-in-js" class="headerlink" title="difference between Promise and callback in js?"></a>difference between Promise and callback in js?</h3><p>As for their effect, they are pretty like the same in terms of being asynchronous while Promise’s syntax looks far more clear than nested callbacks.</p>
<p>Promises provide a more succinct and clear way of representing sequential asynchronous operations in javascript. They are effectively a different syntax for achieving the same effect as callbacks. The advantage is increased readability. Something like this</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">aAsync()</span><br><span class="line">  .then(bAsync)</span><br><span class="line">  .then(cAsync)</span><br><span class="line">  .done(finish);</span><br><span class="line"><span class="comment">// Promise is much more readable then the equivalent of passing each of those individual functions as callbacks, like:</span></span><br><span class="line"></span><br><span class="line">Async(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> bAsync(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cAsync(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            finish()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>简单来说， Promise就是syntactic sugar。Everything that can be written in Promise can be written in nested callbacks.</p>
<h3 id="difference-between-websocket-and-RESTful-API"><a href="#difference-between-websocket-and-RESTful-API" class="headerlink" title="difference between websocket and RESTful API?"></a>difference between websocket and RESTful API?</h3><p>It really depends on the context, whether it requires less interaction like reading a blog, or requires time browsing; or it requires rich interaction and messege sending. For the former, close the connection during reading or browsing may actually save resources, which is exactly what HTTP does, while the latter one calls for websocket!!</p>
<p><strong>HTTP is a pull service, while websocket is bidirectional.</strong></p>
<p>参考<a href="https://www.pubnub.com/blog/2015-01-05-websockets-vs-rest-api-understanding-the-difference/" target="_blank" rel="noopener">这篇博客</a>介绍得非常详细!!</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> angularjs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第三期]-民主的不满]]></title>
      <url>http://chocoluffy.com/2016/05/07/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80-%E7%AC%AC%E4%B8%89%E6%9C%9F-%E6%B0%91%E4%B8%BB%E7%9A%84%E4%B8%8D%E6%BB%A1/</url>
      <content type="html"><![CDATA[<p>我不清楚我的选择会是什么， 但这并不是我拒绝去看这个问题的理由， 或许在相信他们针锋相对的背后， 就是我的立场。</p>
<a id="more"></a>
<p>自由， 就在于人们选择他们价值与目标的能力。</p>
<p>我们在政治生活中公民的或者塑造性的一面在很大程度上， 已经让位于自由主义。 而这正是我们现在参与政治活动的困境， 政治， 或者说， 公共哲学， 是否应该具有塑造性。</p>
<p>古代的政治理论， 比如亚里士多德， 认为政治的目标就是培养德行和达到某种的善。而这种达到某种善的观点， 在现在非常容易被反驳， 我们很容易说， 这是价值判断， 什么是善呢？什么是你认为的善的呢？先抛开价值判断的这种做法来说， 毕竟如果在情愿对一件事， 一种态度深入了解之前就放弃了解它的机会的话， 我们会错过很宝贵的东西。回到这种良善的想法， 其实这种观念自然地会发展出一种社会契约论， 而这个契约的目的正是保证人们往那种善的方向发展。它要求人们需要有对公共事务的知识， 归属感， 对集体的关系， 和共同道德的维系， 一种公民的参与感（相比于现在的自由主义）。</p>
<p>对一个共同方向的认可， 意味着牺牲某些个人意愿。这是我们都能想到的， 而这种取舍， 或许就是其中一个定义了自由主义和上述共和主义的区别之一。自由主义的宣扬者会说， 政治理论不是某种特定的良善生活观念， 而是坚持宽容、公正的程序以及尊重个人权利， 从各种美国最高法院的判决案例我们也能看出一些倾向性， 自由言论的权利是被美国人民镌刻在心的一种inborn权利， 法官对任何有可能伤害到这种自由的嗅觉是异常灵敏， 或许也是缘因美国人心里对大政府天生的反感。</p>
<p>我们能不能用之前所说的价值判断这种说法， 来指出共和主义的问题而支持自由主义呢？ 其实仔细想想， 这种价值判断的论断核心是相对主义。 相对主义的一个明显的标志就是， 不去主张什么， 而是变现为质问“谁来判断？谁来决定？”。 他们会问， 什么是良善？什么是高雅和污秽？ 然而我们也可由此问回他们“什么才是他们口中的宽容、自由和公平呢？”。以相对主义来为自由主义辩护根本就算不上是一种辩护。</p>
<p>但仔细去追究自由主义和共和主义， 我们会发现一个经常提出的问题， 权利和善哪个更重要？这里的善， 我们可以想为是一种道德上的义务， 和认同。我们究竟是一副无负荷自我（the unencumbered self）的自由主义形象, 还是为我们家庭、民族、文化的身份所赋予的目标所束缚？在很多情况下， 也正是这些束缚带给我们困境和痛苦。</p>
<p>举一个栗子， 内战前的罗伯特李大将军， 身为联邦军队的一名高级将领， 李将军反对分裂， 然后再战争迫近的时候， 他认为他对弗吉尼亚州的责任超过了他对联邦的责任， 于是他毅然会到家乡， 和他的家乡人民共患难。一个让人心酸的困境。如果我们认为，与自己人民站在一起的召唤是一种道德要求而不是情感表达的话， 这正是印证了前文关于良善， 关于道德义务上的困境。相反， 一个自由主义者， 他们没有这样子的束缚， 他们只为他们选择去承担的责任所约束， 也只去承担他们选择去承担的部分。仔细想想， 我们其实常常崇敬这些像李将军一样的人，不一定是因为他们做出的选择， 而是因为他们的考虑所反映的特质－－作为能够反思自身处境的存在者， 看清楚自己的生命处境并担当起来， 自己深深卷入其中的特定生活对自己有所要求， 而自己又意识到这种生活的特殊性， 也就是说意识到存在更加广阔的世界， 另外的生活方式。</p>
<p>书摘 摘自《民主的不满》</p>
<p>2015.7.26</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AWS elastic beanstalk使用体验]]></title>
      <url>http://chocoluffy.com/2016/05/04/AWS-elastic-beanstalk%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p>本文对目前市面上的主流Paas(platform as a service)提供商进行了比较， 比如heroku和amazon家的新星elastic beanstalk。并以一个nodejs爬虫的实例部署在了eb的服务器上。很多关于服务器端的概念也因此理清了， 比如reverse proxy server, dynamic IP addressing和后端的一些配置。也在文章中做个小结， 分享给感兴趣的大家。</p>
<a id="more"></a>
<h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><p>将之前用nodejs写的对<a href="https://cnodejs.org/?tab=good" target="_blank" rel="noopener">cnode社区精华帖</a>的爬虫放在AWS的EC2 instance下管理， 利用elastic beanstalk来对AWS资源进行分配和调控， 由于使用的还是free-tier的single instance， 则elastic beanstalk所特有的load-balancing的优势没有办法享受到。</p>
<p>一开始如果直接按照AWS给的方法, <code>eb init</code>初始化一个elastic beanstalk的项目， <code>eb create</code>创建一个environment和一个EC2实例, 然后<code>eb deploy</code>将.git里面committed的改动push到elastic beanstalk的生产环境里面， 然后用<code>eb open</code>来打开这个IP address， 如果之后需要终止这个app的话， 就<code>eb terminate</code>就好了。</p>
<p>如果之前有使用heroku的经验的话， 其实你会发现其实amazon elastic beanstalk和heroku提供的服务非常相似， 实际上， 就这两家服务的定位而言， 都是platform as a service（Paas）， 也就是让developer可以将网站， 移动端部署在云端(cloud)不需要顾虑backend server和database的configuration。 而heroku本身相对于其他市面上的Paas在auto-scaling上做得更加出色， 它的computing resources(dyno)可以按照计算的需求而叠加从而满足在高流量下的网站后端流畅运行。而近几年amazon的elastic beanstalk的出现， 在这个Paas的市场给我们developer多一个很好的选择。就自己的使用而言， 感觉两者的command line interface其实设计得差不多， 都很简洁方便， 不过相比heroku， amazon的AWS还涉及租用到计算单元EC2, 就配置的操作来说， 你在配置AWS的服务上需要花更多的时间去设置环境变量和考虑密钥存储， 毕竟你可能有时候有ssh远程登陆amazon linux服务器的需求。相比之下， heroku的配置就是很简单的在<code>~/.bashrc</code>文件里面添加toolbelt文件夹的路径了。</p>
<blockquote>
<p> 其实heroku它本身就是deploy在了AWS上的呀😂， 所以理论上在performance上不会有太大的差别。</p>
</blockquote>
<p>而在pricing上， 我认为AWS的价格和服务会更加的实惠， 毕竟考虑到你有一张信用卡就可以申请到你一年的free-tier的single instance的使用权利， 而single instance对一些小型的side project来说完完全全是够用的呀。即便不够用， 换成large instance也是several clicks away， 反正也是按用量收费， 经济实惠!</p>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>第一个使用EB部署的应用是一个nodejs爬虫， 负责爬去cnode社区的精华帖， 然后返回一个json object收集精华帖的link, 标题和作者avatar， 为了显示的直观， 我并没有写前端的样式， 而是直接<code>JSON.stringify(json)</code>然后send会浏览器。之后如果仅仅作为REST API使用的话， 还需要在router上修饰一下URL。目前还是有点粗糙的。<a href="https://github.com/AirLoft/web-scraper" target="_blank" rel="noopener">github链接</a></p>
<p>一开始我直接将在本地localhost运行的版本deploy到了elastic beanstalk上， 由于缺少了这一行配置<code>var port = process.env.PORT || 3000;</code>， 我直接把port定在了3000， 而elastic beanstalk是有应该占用的port的， 所以得到了“502 bad gateway error”。</p>
<p>还有一点需要注意的是<code>npm start</code>这个npm script里面的配置， AWS elastic beanstalk会找到这条指令并去执行来执行相应的js文件， 比如我把写cnode网站的爬虫写在了cnode.js里面， 那么我需要</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"start"</span>: <span class="string">"node cnode.js"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>来保证服务器执行的是我对cnode这个网站的爬虫。</p>
<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>以下内容是我在自己折腾Elastic Beanstalk的时候收集的一些比较简练而准确的总结， 在这里分享给大家。 其实amazon的AWS教程写得非常详细的， 大家自己如果有能力最好去尝试自己阅读和实践它给的例子!</p>
<p><strong>How elastic beanstalk works?</strong><br>Now you have a web app running in AWS Elastic Beanstalk. As Elastic Beanstalk creates your environment, it <strong>interacts with several other AWS services</strong> to create the resources required to run your web app securely and resiliently.</p>
<p><strong>How EC2 instance works?</strong><br>EC2 instance – A virtual machine that runs Amazon Linux or Microsoft Windows Server and that is configured to run web apps on the platform that you choose.<br>Each platform runs a different set of software, configuration files, and scripts to support a specific language version, framework, web container, or combination thereof. Most platforms <strong>use either Apache or nginx as a reverse proxy</strong> that sits in front of your web app, forwards requests to it, serves static assets, and generates access and error logs.</p>
<p><strong>What is reverse proxy server?</strong><br>A proxy server is a go-between or intermediary server that forwards requests for content from multiple clients to different servers across the Internet. A reverse proxy server is a type of proxy server that typically <strong>sits behind the firewall in a private network</strong> and directs client requests to the appropriate backend server. A reverse proxy provides an additional level of abstraction and control to ensure the smooth flow of network traffic between clients and servers.</p>
<p>Common uses for a reverse proxy server include:</p>
<ul>
<li>Load balancing – A reverse proxy server can act as a “traffic cop,” sitting in front of your backend servers and distributing client requests across a group of servers in a manner that maximizes speed and capacity utilization while ensuring no one server is overloaded, which can degrade performance. If a server goes down, the load balancer redirects traffic to the remaining online servers.</li>
<li>Web acceleration – Reverse proxies can compress inbound and outbound data, as well as cache commonly requested content, both of which speed up the flow of traffic between clients and servers. They can also perform additional tasks such as SSL encryption to take load off of your web servers, thereby boosting their performance.</li>
<li>Security and anonymity – By intercepting requests headed for your backend servers, a reverse proxy server protects their identities and acts as an additional defense against security attacks. It also ensures that multiple servers can be accessed from a single record locator or URL regardless of the structure of your local area network.</li>
</ul>
<p><strong>What is amazon s3 bucket?</strong><br>Amazon S3 bucket – A storage location for your source code, logs, and other artifacts that are created when you use Elastic Beanstalk.</p>
<p><strong>How your domain will look like?</strong><br>Domain name – A domain name that routes to your web app in the form subdomain.region.elasticbeanstalk.com.</p>
<p><strong>When should I use AWS Lambda versus Amazon EC2?</strong></p>
<p>Amazon Web Services offers a set of compute services to meet a range of needs.</p>
<p>Amazon EC2 offers flexibility, with a wide range of instance types and the option to customize the operating system, network and security settings, and the entire software stack, allowing you to easily move existing applications to the cloud. With Amazon EC2 you are responsible for provisioning capacity, monitoring fleet health and performance, and designing for fault tolerance and scalability. AWS Elastic Beanstalk offers an easy-to-use service for deploying and scaling web applications in which you retain ownership and full control over the underlying EC2 instances. Amazon EC2 Container Service is a scalable management service that supports Docker containers and allows you to easily run distributed applications on a managed cluster of Amazon EC2 instances.<br>AWS Lambda makes it easy to execute code in response to events, such as changes to Amazon S3 buckets, updates to an Amazon DynamoDB table, or custom events generated by your applications or devices. With Lambda you do not have to provision your own instances; Lambda performs all the operational and administrative activities on your behalf, including capacity provisioning, monitoring fleet health, applying security patches to the underlying compute resources, deploying your code, running a web service front end, and monitoring and logging your code. AWS Lambda provides easy scaling and high availability to your code without additional effort on your part.</p>
<p><strong>To create a hosted zone in Amazon Route 53</strong></p>
<ul>
<li>Open the Amazon Route 53 management console.</li>
<li>Choose Hosted Zones.</li>
<li>Choose Create Hosted Zone.</li>
</ul>
<p>For Domain Name, type the domain name that you own. For example: example.com.</p>
<p>Choose Create.</p>
<p>Next, add a CNAME record to the hosted zone. A CNAME record registers a domain name that you own as an alias of your web app environment’s elasticbeanstalk.com subdomain.</p>
<p>When an Amazon Route 53 DNS server receives a name request for your custom domain name, it resolves to the elasticbeanstalk.com subdomain, which resolves to the public DNS name of your Elastic Load Balancing load balancer, which resolves to your web app’s IP address.</p>
<p>Note<br>In a single-instance environment, the elasticbeanstalk.com subdomain resolves to an Elastic IP address attached to the instance running your web app.</p>
<p><strong>关于elastic beanstalk的价格</strong><br>有小伙伴在comment里面提问， 如果用完了一年的free-tier的话， 价格怎么计算呢? 可以参考下amazon的<a href="https://aws.amazon.com/elasticbeanstalk/pricing/" target="_blank" rel="noopener">这篇介绍</a>里面详细记录了EC2, S3, DB等等AWS相关服务的价格。如果是个人的side project, 对CPU和图片等用户信息存储的需求不是特别大的话， 免费的plan或者是micro的instance是完全够用的， 如果是在某方面的需求特别大， 比如说unsplash这个高清摄影图片分享的社区。</p>
<p> unsplash将用户上传的照片存储在Amazon的S3服务上会比较安全和便捷，(搭配着Imgix这个service使用)， 具体的网站花销可以参考<a href="http://backstage.crew.co/what-does-unsplash-cost/" target="_blank" rel="noopener">这篇博文</a>， 里面记录了unsplash一个月网站使用的各种服务的明细记录， 也可以给一些希望做图片分享社区的创业者们一个参考。一个值得注意的点是， unsplash的花销是比较适合借鉴的， 因为unsplash和目前许多的创业公司一样， 选择将自己的主服务host在heroku这个平台， 选择S3等等主流的服务， 不像一些更geeky的公司可能为了省钱就自己来搭建和管理自己的服务器和数据库。 当然， 管理成本和维护成本都要考虑进去， 所以综上我才认为unsplash的例子是非常值得借鉴的!</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>下面的链接是我在自己尝试搭建环境时参考的内容， 以及我选择free-tier的configuration的页面。其中就有以express为例子的服务端环境搭建。</p>
<ul>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/set-up-ec2-cli-linux.html#set_aes_home_linux" target="_blank" rel="noopener">setting up EC2 cli on mac</a> we store EC2 api tool, aws-access-key and aws-secret-key in <code>~/.bashrc</code>, so that we can use the shortcut commands to do <code>init\create\deploy\open</code>. The common commands are listed as followed.</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eb init</span><br><span class="line">eb create</span><br><span class="line">eb deploy</span><br><span class="line">eb open</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://docs.aws.amazon.com/quickstarts/latest/webapp/welcome.html" target="_blank" rel="noopener">A high level explanation of what EB does and what can we config</a> trying to give a high-level description of what is the use and purpost of each AWS service, including EC2, the reverse proxy server sitting in front of servers, router 53 and so on so forth.</li>
<li><a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_express.html" target="_blank" rel="noopener">A detailed explanation of how to host an express app on EB full-step tutorial</a> The tutorial uses an express app to explain how to use EB.</li>
<li><a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs.html" target="_blank" rel="noopener">How to deploy a nodejs project to EB</a> similar to the previous tutorial post.</li>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html" target="_blank" rel="noopener">how to connect to EC2 instance using ssh</a><br>by using <code>ec2-describe-instances</code>, we can get the id of my instance.</li>
</ul>
<p>So after we have created an project, we go to the elastic beanstalk console, we will see the dashboard of all the application I host on EB such as the recent one(webscraper). The following is a screen capture of the configuration of that application on EB as in a free-tier plan:<br>In this page, we can set the scaling option from single instance to load-balanced configuration, and when we add a load-balancer, it will automatically adjust the number of instances depending on the need.</p>
<p>When you turn on load balancing, Elastic Beanstalk creates a load balancer, deletes the Elastic IP address from your environment, and provisions a new EC2 instance. Elastic Beanstalk also updates DNS records to point the web app’s domain name to the load balancer instead of to the IP address of a single instance.</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> nodejs </tag>
            
            <tag> AWS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[第一期]AirLoft组织动员宣言]]></title>
      <url>http://chocoluffy.com/2016/04/27/%E7%AC%AC%E4%B8%80%E6%9C%9F-AirLoft%E7%BB%84%E7%BB%87%E5%8A%A8%E5%91%98%E5%AE%A3%E8%A8%80/</url>
      <content type="html"><![CDATA[<p>The best education comes from inside. </p>
<a id="more"></a>
<h2 id="Orientation"><a href="#Orientation" class="headerlink" title="Orientation"></a>Orientation</h2><p>这个ada内部组织airloft成立的目的， 是我希望大家能在一个更加紧密和熟悉的环境下分享和学习课外知识， 采用github托管的形式是因为它管理代码的高协作效率和peer review的便捷。</p>
<p>为了保证大家自学步骤的一致性和自由发挥的空间， 我决定采取的是任务发布形式。 <strong>每周会由我或我指定的负责人发布1-2篇的教程或任务</strong>， 任务内容从刚入门的git的使用与协作， 到之后的网站样式布局， 移动端，动效设计，后端编程都会涉及， 而教程则主要来源于<strong>所有有心人对某些创意点子的实现过程无论成败的记录(任何人都可以发布)</strong>。 我不会在任务完成度上给大家太多压力， 但是所有的任务都会指向最终AirLoft移动端APP及一系列配套web app的诞生， 能够深入互动参与每个方向讨论和实践并自己动手coding的人， 也会收获远比完成一个作品， 一个产品更多也更重要的东西， being insightful and clear of what you really want to do。</p>
<p>组织内部大致的方向：<br>我主导的 - AirLoft reactive native的开发， 并将Airloft网站端从angular1.4全部由react重写。<br>朱子宁主导的 - 爬虫scripts， 对于校园内部热门活动消息，教务信息和周边消息的收集和呈现。<br>Joyce主导的 - 走进多大的web app及html5微信移动页面。<br>Jerry主导的 - 基于GPS的餐饮外卖信息呈现和成交平台。</p>
<p>每个方向都由不同的coding侧重点， 每个人可自由参与任意方向， <strong>不强制任务进度， 但强制定期分享。</strong>就最终成果而言， 作品与作品之间可以相互配合和改善， 举个例子， 我会使用服务器端的爬虫来收集兴趣小组的讯息， 会在之后的宣传阶段用html5写移动端的宣传页面， 而基于GPS本身就是AirLoft的功能基础。</p>
<p>而需要再强调一遍的是， <strong>任何人， 在任何时候， 都可以提出新的开发方向和想法， 无论关乎技术还是设计还是美工还是用户体验。</strong>我会欢迎脑洞， 折腾些好玩却可能“无用”的东西， 比如哪一周主题或许就是自学Sketch来给AirLoft换个图标？或者就开个repo去参加HackerRank？能带你自己一直走下去的， 不是压力， 是兴趣。</p>
<p>很多人会好奇我自己的成长轨迹， 而如果真的往回看， 我是在2015年3月29号那天， 在交换时期参加的一次hacker meeting上， 第一次见识到html\css\js， 那天的主题是用meteor.js和mongo在5min内搭建一个todo应用， 嘉宾是伯克利大二的一个学生。到现在学CS大概有1年了吧， 从一开始写javascript各种运动框架开始， 到用ruby on rails自己前后端折腾了5， 6个中型blogging, social或者API网站， 到上学期用react重写各种网站及耗时一个月的SPA应用Airloft， 和现在react native。 我并不觉得自己已经有能力开始回顾自己过去的作品和荣誉， 只是最近挺多人问我“如果想做课外的项目应该学些什么的问题”， 我把我自己的轨迹拿出来给大家参考。永远没有一步登天的成就， 去凭着兴趣摸索， 因为好奇而坚持， 是我能给的最好的建议。</p>
<p>Orientation动员会的最后， 和大家分享两句话， 第一句来自自己的体会， 第二句来自ECE516 prof: Steve Mann：</p>
<ul>
<li>the best education comes from inside.</li>
<li>the best way to learn is to teach.</li>
</ul>
<h2 id="第一期任务"><a href="#第一期任务" class="headerlink" title="第一期任务"></a>第一期任务</h2><p>学会git的简单使用, 直接在org内创建一个新的repo， 添加一个readme.md文件， 在里面写上你对两件事的想法， <strong>1、关于社区建造。 你认为应该怎样打造一个经久不衰的社区？举个现实生活中的例子？为什么？ 怎么设计回馈和奖励机制能够造就一个好的社区？哪些设计体现或者暗示了这些机制？2、你对哪个具体开发方向感兴趣？如果在这方面有充足的能力， 你可以怎样贡献到哪个任务里？做出怎样的作品？</strong>， 或者直接在github网页端操作创建新的repo和添加新文件， 或者更佳推荐的方式是本地代码备份然后关联到github的相关repo再push你的本地修改。</p>
<p>创建好之后， 做第三件事， <strong>3、至少在其他一个别人的repo里面的issue panel提出你对他这个想法的看法和补充</strong>。</p>
<blockquote>
<p>任务解释， 比如我喜欢看hackernews， 我对它的投票机制特别感兴趣， 我就拿这个社区的各种机制来举例， 又或者我喜欢B站， 去尝试分析B站哪些设计是特别有用户吸引力的， 记录下来， 新创repo分享。所有可能遇到的问题， 尝试记录下来自己解决， 找不到办法， open一个新的issue然后在微信群里讨论讨论。</p>
</blockquote>
<p>参考的链接， 我在第二期任务发布的时候公布。开始折腾起来吧。</p>
<h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><ul>
<li>暑假就是要好好浪的。周末去骑trail， 打球， 聚餐什么的都要约起来啊。</li>
<li>我喜欢爱折腾的小伙伴。 有什么想说的话都可以私戳我。</li>
<li>认真对待梦想。 可能这个时代最一文不值和被轻易低估的， 就是梦想了。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 创业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于创业, 那些不能说的秘密]]></title>
      <url>http://chocoluffy.com/2016/04/25/%E5%85%B3%E4%BA%8E%E5%88%9B%E4%B8%9A%EF%BC%8C-%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E8%AF%B4%E7%9A%84%E7%A7%98%E5%AF%86/</url>
      <content type="html"><![CDATA[<p>每个人， 在每个阶段， 都会有个不容分说的理由。</p>
<a id="more"></a>
<p>趁着考完期末考的一段自由时间， 把之前一直积压着的两本书给读完了。</p>
<p>第一本是来自Ben Horowitz的创业维艰， 前半段描述了他管理Loudcloud到Opsware将一个濒临破产的公司带到最后以16亿美元的价格被惠普收购的传奇经历， 后半段则记录下了他对公司管理的各个细节的心得思考。巧合的时， 就在我阅读这本书的期间， 曾任多家上市公司董事， Ben的精神导师Bill Campbell逝世了。 他对Ben说的那句， “要和员工一起宣布这个消息”的告诫仿佛还历历在目， 通过Ben的描述， 看得出Campbell极其富有同理心(empathy)的领袖气质。 向Campbell致敬。</p>
<p> 第二本书是硅谷创业者陈天的随笔。 在一个充斥着来自CEO乃至风险投资人视角的创业回顾的环境下， 一个来自技术合伙人(CTO)的视角显得尤为可贵。 从最早的技术选型(为什么用Django)， 到带领其它技术人员的开发和维护(4台EC2)， 到技术过渡和商业选择， 陈天给了一份很详细和真挚的参考选项， 也让一个非商圈的学生， 慢慢了解到国内白手起家创业的一条非常有代表性的道路。感激陈天老师的分享。</p>
<p>曾经一直以为， 创业是一件离自己很远的事情。直到一个月前， 一个多伦多大学毕业的直系师兄找到我来聊聊创业的可能。 他希望我能够以技术合伙人的身份帮他做出一个类似airbnb的网站和移动端， 已经有另外两个商科毕业已经工作的学姐愿意参与市场营销和推广， 万事具备， 就差个程序员了。</p>
<p>也是第一次， 我感觉到创业， 其实也只是一种选择罢了， 突然想到一句微博上看到的话， “对有能力的人来说， 很多事情不是机会， 而是选择。”， 我当然不觉得我自己有能力和把握在这个阶段就合适技术合伙人的身份， 只是当我在一个旁观者的角度去看我身边的故事时， 好像创业， 也并没有倾家荡产， 孤注一掷般的惊天动地， 好像创业， 更像是创始人在生命某个时期赴的一场约， 选择了一条人迹罕至的路， 也由此义无反顾。</p>
<p>下面是我在阅读时记录下的文字， 从我的角度出发， 或摘录， 或直接是自己的感受， 像《金蔷薇》里那个收集着金色尘土的老人， 我把它们留在这里：</p>
<h2 id="The-hard-thing-about-hard-things"><a href="#The-hard-thing-about-hard-things" class="headerlink" title="The hard thing about hard things"></a>The hard thing about hard things</h2><ul>
<li>在团队有十几个人的时候， 我招了一个人力管理人员， 专门帮我们招聘最聪明的人从硅谷。</li>
<li>Ben从一个同事分享的mosaic浏览器， 发现这就是未来， 于是第二天就去面试mosaic公司。</li>
<li><strong>究竟为什么要上市？</strong> 在文中， 作者是在2000年互联网泡沫的时候， 发现私人资金已经没有出路的时候， 想到公开上市， 认为公开市场， 会有更多的人来给自己投资， 而不是一直以来私人投资者的钱。</li>
<li><strong>如何做资产重组？</strong> 在Ben即将破产的时候， 他问他自己， 如果要退出， 他会怎么做， 他说他会把opsware带出来卖给别人用， 因为这是他自己开发的， 他知道这个特别好用， 但是基于当时的情况， 这个软件被限制住， 没法和loudcloud分离开用， 于是他回去分配了一个精英小组去尝试从现有软件分离出来。</li>
<li>在紧急情况的时候， 有很有多人议论你， 他们有些人是因为同情， 因为关心， 也可能是想摧毁你。 也会有很多人想帮你， 想帮你摆脱困境， 给出各种各样的建议。 永远从数据和具体情况出发， 没有任何一个旁观者有这个耐心帮你理顺所有的商业策略， 如果你任凭那些根本不了解具体情况的人对公司指手画脚， 那公司就无药可救了。</li>
</ul>
<p><strong>很多时候， 我们都会评论那些伟大的CEO， 很自恋自大， narcisist， 专制。 然而他们只是没有听进去那些愚蠢的建议吧了， 又有谁比他们更清楚公司发展的每一个细节呢？</strong></p>
<ul>
<li><p>EPS真正想要的是tangram这家公司的软件， 而opsware在tangram比较低股价的时候收购了tangram， 让主要负责融洽opsware的EPS负责任frank特别高兴。也就是Ben他的要求， 弄清楚买方到底想要什么， 去提供他最想要的东西， 而不是一个劲地夸自己好。</p>
</li>
<li><p>同时非常重要的也是团队会议， Ben在两次会议中表现都超出了我的意料。第一次在计划从loudcloud中分离出opsware的时候， Ben将新公司的股票送给所有人， 同时允许有人决定退出。 “我不会送你出门， 但我汇帮你找份新的工作。要明确自己此刻所站的位置， 哪些人可以依靠。告诉大家你的决定。”<br>第二次， 在遇到bladelogic这个强劲的对手的时候， Ben再次开了一个全体的会议， 和大家说明白， 他需要大家， 在未来的6个月里面卯足了劲， “我要你们和你们最关心的人认真地谈一次话， 我们需要一次达成目标。”</p>
</li>
<li><p>研发出好产品是创新者的职责， 而不是客户。 <strong>客户只知道根据现在的产品体验来判断自己想要什么。</strong></p>
</li>
<li><p>在会议中添加一项， “我现在没有做什么” 的议程。而大家觉得的还没有做到的事， 都是一致的。那就是自动化。在公司慢慢做大的时候， 会有很多收购的声音， 其中， 你也会<strong>仅仅因为别人打算收购的意愿而得到股票的溢价</strong>， 要看清楚自己的价值。 同时， 也充分了解自己的直系下属他们的意愿。</p>
</li>
<li><p>而对于一个CEO能力的最好的考量， 是逆境不是顺境， 是专心致志的能力， 和在走投无路的时候选择最佳路线的能力。不是去如何不犯错误， 而是在犯错误之后如何去深刻理解那些你必须要做的事。</p>
</li>
<li><p>当你意识到一个CEO的职责就是为公司解决问题的时候， 你就知道， 有些没有用的空话可以省去了。</p>
</li>
<li><p><strong>在人类的所有交往中， 沟通量和信任程度成反比。</strong>现在很多的公司文化会阻碍坏消息的传播， 真相如果永远只能被戏谑地说出来， 那么等到采取行动的时候就晚了。建立一个奖励文化， 对找到问题症结和解决方案的人给予奖励。于此同时， 公司的任何决策必须当机立断， 比如像裁员这一类的重大决定， 如果不小心走漏风声， 当员工过来质问管理层的时候， 管理者就只有两种选择了， 要么表现出不知情， 要么就是撒谎， 而这其中任何的一个行为都会破坏公司文化。</p>
</li>
<li><p>对待裁员。 裁员对公司的最大伤害就是士气。而士气低下的主要表现症状就是怀疑， 所以越是困难的时候， 就越要坦诚相待你的员工。同时， 这是一个非常严重和严肃的时刻， 需要一名直接亲属上司去温和地解决这个事情， 你只要记住， 你的员工可能并无法记得他在这里工作的每一天， 但是他一定会记住他被辞掉的那一天。 <strong>永远记得， 聪明是一种天赋， 而善良是一种选择。</strong> 但是有一点也很重要， <strong>话是说给留下来的人听的</strong>， 你怎么对待那些被辞去的员工， 在困难时候， 就会是留下来的员工的一次自我映照。</p>
</li>
<li><p>一定要明晰什么时候笨办法最有用， 不是欺骗自己说， “产品是完美的， 是没有问题的， 问题出在销售人员， 问题出在用户的三分钟热度。”， 不， 问题是， 产品不够好。</p>
</li>
<li><p>不让这个公司最精英的人才去参与最棘手的问题， 完全就是浪费。<strong>一个人， 无论多出色， 都解决不了他不了解的问题。也就像开源社区所倡导的一样， 只有有足够多的眼镜， 就可以让所有问题浮出水面。</strong></p>
</li>
<li><p>很多时候， 你会吩咐很多指令给你的下属， 但他们并不一定会严格执行， 甚至不会执行这些要求。 而这种现象的背后原因是， <strong>你只告诉了他们应该怎么做， 他们却不知道为什么要这么做。</strong>一个好的工作环境就是， 每个人早上一睁开眼睛就知道自己所做的工作高效有用。管理层需要和每个员工有一对一的会面。当然就有人问了， 好的工作环境和坏的工作环境有什么区别， 是的， 在一切顺利的时候， 没有区别， 你的亮眼成绩会遮住所有可能质疑声的嘴， 问题不是没有， 而是让解决问题的人自我怀疑了。 但是一旦在事情不顺利的时候， 好与坏就是生与死的差别。</p>
</li>
<li><p><strong>如何对生产力进行直观的测量？</strong></p>
</li>
<li><p>好的产品经理会将一些重要问题以书面形式纪录下来， 竞争中的良策， 艰难的架构选择， 艰难的产品选择。而差的产品经理， 只会以口头的方式表达自己的意见。</p>
</li>
<li><p>大公司的主管都是应答式的, 当有事情要实例， 接受到命令之后， 才会去执行。而小公司的主管， 创业公司的管理者， 你不自己主动承担起很多的责任这个公司就倒了啊。一种很危险的情况就是， 在创业公司艰难的时期， 你雇用了一个认股数还不小的高薪高管， 他好像并没有干什么事， 却能够占到一定比例的利润。这就是并不适应节奏的管理层， 对创业公司的奋斗员工有很大的打击。</p>
</li>
<li><p><strong>关于招聘</strong>。 永远要提醒自己， 我们是找谁拥有解决问题的能力， 而不是谁看上去最适合。每个人都会有或多或少的缺点， 他可能不善于表达， 他可能有点自大， 有点脾气躁， 这些特质都不应该迷惑你真正找寻的目标。 尤其是在国内这个鱼龙混杂的招聘市场， 明明优秀的人就已经是凤毛麟角了， 如果你还只关注缺点， 只希望站在高处评论一番自我麻醉的话， 这对公司就太可惜了。<strong>写下你认为检验人才最好的几个问题， 形成面试的规范。</strong></p>
</li>
<li><p>一个好的管理者思考问题从是会有两个角度， 一个是我想怎么做， 另一个是员工会怎么想。</p>
</li>
<li><p>办公室政治</p>
<ul>
<li>如果你的员工给你提加薪的要求？ 拒绝， 如果你接受了这个要求， 其他员工会认为你加薪是因为你提出了这个要求而不是因为你出色的业绩。 这个会让其他人更加跃跃欲试。坏处二， 那些办公室里老实沉默， 或者对这种政治手段不敏感的人， 是不是就错过了加薪的机会呢？其中一个避免的方法就是<strong>保证员工收入和公司收入之间的一致性</strong>。</li>
<li>如果你的员工给你提希望扩大权力范围的要求？一个绝对不能触碰的底线是， 你给他一个口头承诺， 给了小道消息一次机会。 记住， 在公司的决策方案是， <strong>决策即出， 立即执行， 不要在交谈的时候流露出任何口头承诺的倾向</strong>。</li>
</ul>
</li>
</ul>
<ul>
<li><p>不要因为你在业务上缺乏经验就降低对他们工作的要求。很多年经轻轻的CEO， 会因为在公司创立之初媒体发布的几篇正面报道而喜出望外。这个标准太低了。</p>
</li>
<li><p>管理一家创业公司就像驾驶着一辆高速行驶的汽车， 当你以一个高速过弯的时候， 千万别看墙， 如果你看着墙， 你就直接撞上去， 盯着路， 你就安然无恙。</p>
</li>
<li><p>Ben他们建立一个风投公司的初衷， 就是发现了技术性创始人CEO和职业CEO的区别， 那些伟大的技术型驱动的公司都是由创始人经营的， 然而技术型创始人在管理上， 人脉上和营销宣传上有很大的不足。</p>
</li>
</ul>
<blockquote>
<p>后记:对于《途客圈》一书的总结回顾将会分开在另外一篇博文中， 主要探讨工具性和社交性产品的比较和更多创始人必须注意的具体股权结构， 敬请期待。</p>
</blockquote>
<blockquote>
<p>Edit:《途客圈》一书的阅读手记已完成，👉<a href="http://chocoluffy.com/2016/05/13/%E5%8F%A6%E4%B8%80%E7%A7%8D%E9%BC%93%E5%A3%B0-%E8%AF%BB%E3%80%8A%E9%80%94%E5%AE%A2%E5%9C%88%E3%80%8B%E6%9C%89%E6%84%9F/">另一种鼓声-读《途客圈》有感</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[创意视频分屏 - HTML5 & JS]]></title>
      <url>http://chocoluffy.com/2016/04/23/%E5%88%9B%E6%84%8F%E8%A7%86%E9%A2%91%E5%88%86%E5%B1%8F-HTML5-JS/</url>
      <content type="html"><![CDATA[<p>和朋友聊天时无意间发现的一个创意视频分屏的想法， 来自<a href="http://www.beoplay.com/products/beoplayh7?_ga=1.127614725.969767543.1461077943#at-a-glance" target="_blank" rel="noopener">beoplay</a>这个高端耳机的宣传页面， 在自己实现的过程中， 也发现了视频自适应居中的这个设计细节， 自己也捣鼓了出来， 话说在之后产品的宣传主页视频可以一试的， 从两个视角去诠释同一个故事， 就是对这样有心思的设计细节没有任何抵抗力呢。</p>
<a id="more"></a>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>仿造beoplay这款耳机<a href="http://www.beoplay.com/products/beoplayh7?_ga=1.127614725.969767543.1461077943#video" target="_blank" rel="noopener">主页的宣传视频</a>来实现一个类似的视频分屏的效果。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqcsfos35og30dc06f4qz.gif" alt="demo"></p>
<h2 id="版本1-0（不加视频自适应居中）"><a href="#版本1-0（不加视频自适应居中）" class="headerlink" title="版本1.0（不加视频自适应居中）"></a>版本1.0（不加视频自适应居中）</h2><p>right video是静止的不动的， 同时位于最底层。 目前所有的伸缩都是在控制left video， 同时由于我们设置了left video的<code>z-index</code>为3， 那么左边的视频会覆盖在右边的视频上。接下来的目标就很明确了， 我们需要追踪鼠标在整个container里面的位置(我们会用占宽度的百分比来表示)， 然后， 通过改变左边视频的宽度， 同时也就把位于下面的右边视频暴露出来了， 来达到切换的效果。</p>
<p>理解到这一步之后，目标就是<strong>如何改变视频宽度</strong>了。</p>
<h3 id="如何改变视频宽度"><a href="#如何改变视频宽度" class="headerlink" title="如何改变视频宽度"></a>如何改变视频宽度</h3><p>这里其实隐藏着一个陷阱， 就是因为我们不可以直接改变<strong>视频本身的宽度</strong>，因为视频的高宽比在拍摄的时候就决定了， 我们如果只拉长视频而不同时提高高度的话， 就会使得在纵轴上部分内容被遮盖到， 大致意思如图：</p>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1f37ixae23nj219e0oe77a.jpg" alt="" style="display: block; margin: 0 auto;"></p>
<p>而这并不是我们想要的效果， 我们希望， 视频可以维持在同一个大小，而改变的只是<strong>视窗的横向移动</strong>，<br>这一步我用到了一个trick， 就是<code>overflow: hidden;</code>， 我们在左边的视频外面包住了一层<code>div</code>， 因为我们控制的就是左边的视频， 然后我们来改变这个“wrapper”的宽度（同时保证保证里面的left video的宽度占比仍然占最外面container的100%）， 来改变我们的视窗， 所以这个wrapper在网页上所包住的部分， 加上了<code>overflow: hidden;</code>遮去了超出部分后， 显示的就是左边的视频了。</p>
<p>比如一开始， 我们希望两个视频都各占一半， 那么左边的视窗一开始就会是占比原container的宽度的50%， 而原视频本身的宽度应该不变， 即container的宽度的100%， 所以我们需要给left video赋上200%的宽度， 理由是这个属性是对其直接父级的div起作用的。</p>
<h3 id="引入视窗"><a href="#引入视窗" class="headerlink" title="引入视窗"></a>引入视窗</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* clipper 即左侧视频的视窗 */</span></span><br><span class="line"><span class="selector-id">#clipper</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 该属性作用于左侧视频  */</span></span><br><span class="line"><span class="selector-id">#clipper</span> <span class="selector-tag">video</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">200%</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1f37j53tshej21a20o643j.jpg" alt="init"></p>
<p>之后的事情就清楚了， 我们只需要改变<strong>左边视窗的宽度， 并同时保证视频本身相对原容器的宽度不变</strong>。写的js代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rect = videoContainer.getBoundingClientRect(),</span><br><span class="line">offset = e.pageX - videoContainer.offsetLeft,</span><br><span class="line">position = ((e.pageX - videoContainer.offsetLeft) / videoContainer.offsetWidth) * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (position &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">	videoClipper.style.width = position+<span class="string">"%"</span>;</span><br><span class="line">	leftVideo.style.width = ((<span class="number">100</span>/position)*<span class="number">100</span>)+<span class="string">"%"</span>;</span><br><span class="line">	leftVideo.style.zIndex = <span class="number">3</span>;</span><br><span class="line">｝</span><br></pre></td></tr></table></figure>
<blockquote>
<p>简单地说， 只需保证<code>videoClipper.style.width * leftVideo.style.width = 100%</code>即可。</p>
</blockquote>
<p>那最后一个改变<code>z-index</code>的目的， 就是确保左边的视频一直叠加在右边的视频之上。</p>
<h2 id="版本2-0（增加了自适应居中）"><a href="#版本2-0（增加了自适应居中）" class="headerlink" title="版本2.0（增加了自适应居中）"></a>版本2.0（增加了自适应居中）</h2><p>初衷： 因为从拍摄的角度， 大部分的时间， 我们都会把拍摄的主体放在视频的中间位置， 而如果我们只是简单地移动视窗而不改变视窗的主角位置的话， 我们在鼠标移动的时候， 就只能看到边边角的视频内容了， 这违反设计直觉。</p>
<p>因此我们希望在移动视窗的同时， <strong>同时移动视频本身的位置来弥补视窗的偏差</strong>。相应的js代码是：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">offset = e.pageX - videoContainer.offsetLeft,</span><br><span class="line">offsetRight = videoContainer.offsetWidth - offset,</span><br><span class="line"></span><br><span class="line"><span class="comment">// for adaptive resizing:</span></span><br><span class="line">rightVideo.style.webkitTransform = <span class="string">"translate("</span> + offset / <span class="number">2</span> + <span class="string">"px, 0)"</span>;</span><br><span class="line">leftVideo.style.webkitTransform = <span class="string">"translate(-"</span> + offsetRight / <span class="number">2</span> + <span class="string">"px, 0)"</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>画外音： 使用<code>transform</code>来改变DOM元素的位置相比直接改写他们的”定位属性“有很多好处， 其中最突出的就是， transform使用的是GPU， 而那些<code>top\left</code>等的定位元素使用的是CPU， 我们希望充分利用GPU和它提供的硬件加速， 同时<code>transform</code>也不会触发网页的repaint， 从而在渲染上更加的smooth和fast。</p>
</blockquote>
<p>那这个地方，<code>offset</code>就是鼠标在container里面距离左边边框的距离， 那么我们同时根据这个距离， 让左边的视频在视窗移动时， <strong>往相反的方向以一半的速度移动来弥补视窗偏差</strong>。使得可以在视窗移动的时候， 始终保持视频本身拍摄的主体视角也处于该视窗的主体视角! 原理可以参考这个图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fqcshvn7p7g30dc049qv6.gif" alt="demo2"></p>
<p>那么也就大功告成啦!</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fqcsirwnlgg30dc06hnpi.gif" alt="demo3"></p>
<p>HTML5对media文件更多功能上的支持使得我们可以更好的操作media文件， 包括视频的开始暂停， 以及各种音量的调节， 而这个程序实例， 是一个很好的对相关API的使用的一个示范和一个小小的创意细节。这个项目， 也是饭后和朋友聊天聊出来的实现方案，也希望看到更多的创意脑洞和美的设计!</p>
<p>这个是这个项目的<a href="https://github.com/chocoluffy/screen-split-video" target="_blank" rel="noopener">github repo</a>, 这个是项目的展示<a href="http://chocoluffy.com/screen-split-video/">demo</a> 欢迎评论和pull request~</p>
<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>后续的一些疑问和解答：(基于V2ex和微博的评论)</p>
<p><strong>跟<a href="http://www.mi.com/hezi3s/" target="_blank" rel="noopener">这个链接</a>中间的 2K－4K 对比差不多一个意思？</strong><br>A: 哈哈在分屏效果上是类似的， 不过那个对图片的处理就会简单很多啦， 感觉就是在某个位置以左叠加一个高斯模糊的滤镜就可以了~ 相比之下， 对视频的处理还要考虑到视窗和视频本身的移动呢! 不过谢谢分享啦!</p>
<p><strong>多个声音怎么办？两个声音会重叠嘛？</strong><br>A: 我做了音轨的渐变处理， 也就是根据视频的相对大小来相对改变音量， 也就是说， 当某个视频占主体位置的时候， 另一个视频的声音是会渐弱的， 这样可能使用体验更好吧! 在博文最后有 demo 的网址， 你可以试试， 我 host 在了 github pages 上， 对了， 这个 demo 只在桌面端 work ， 在手机端还是实现不了这个效果呢， 有点可惜啦， 如果有改进的建议的话， 希望能提出来啦~</p>
<p><strong>快速拉扯的时候边缘缝隙比较大?</strong><br>A: 啊对的！我调试的时候也发现是有， 原因也很明显， 我只对整个 container 绑定了 mousemove 事件， 而 html 页面其他元素是不会监听 mousemove 的， 因此当鼠标快速移出 container 的时候， 就会发现边缘缝隙较大了， 我现在就改改 code ， 加个 condition ， 如果鼠标在 container 之外， 就把视频宽度订死为全屏~谢谢啦!</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> web design </tag>
            
            <tag> HTML5 </tag>
            
            <tag> 用户体验 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MEAN全栈开发[第三期-Mongo数据库搭建REST API]]]></title>
      <url>http://chocoluffy.com/2016/03/22/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%89%E6%9C%9F-Mongo%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BAREST-API/</url>
      <content type="html"><![CDATA[<p>AirLoft的原型。 第三期， 基于mongodb的mongoose来搭建RESTful API， 主要包括了关于各类涉及到对象的GET, POST, PUT DELETE方法的实现。 在postman上不断的模拟， 也最终搭好一个稳定且flexible的后端API处理， 剩下的就是将数据库和这个Express App的controller结合， 并在前端上灵活的应用啦！如果说前端就像一个人的妆容， 那么数据库以及API处理就是他的谈吐和内涵， 这个应用也有了scaling的能力， 加油!</p>
<a id="more"></a>
<p><img src="http://ww1.sinaimg.cn/large/c5ee78b5jw1f26lk141v7j21kw0tjn61.jpg" alt="screenshot"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>In MVC architecture, we need to have views without content or data. An common way to implement MVC architecture is to <strong>first build up a frontend clickable prototype, then extract the content from the view back to controller(concerned with data structure), then back to model.</strong> And now we are in the second step, we try to put variable in jade file in place of content, and put the content as variable into the controller.</p>
<h2 id="Mongoose"><a href="#Mongoose" class="headerlink" title="Mongoose"></a>Mongoose</h2><p>First set up a connection URI like: <code>var dbURI = &#39;mongodb://localhost/airloft&#39;;</code>, username, password and port number is optional for localhost.</p>
<p>A stupid mistake!! Need to open the <code>mongod</code> before you tried to connect to it. One thing to notice is that Mongoose connection doesn’t automatically close when the application restarts or stops. In order to do that whenever we restart the <code>nodemon</code>, we will need to listen for nodejs event. Nodemon uses <code>SIGUSR2</code>, application termination uses <code>SIGINT</code>, Heroku uses <code>SIGTERM</code>, like:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> graceShutDown = <span class="function"><span class="keyword">function</span>(<span class="params">msg, callback</span>)</span>&#123;</span><br><span class="line">	mongoose.connection.close(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">'Mongoose is closed through '</span> + msg);</span><br><span class="line">		callback();</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">process.once(<span class="string">'SIGUSR2'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	graceShutDown(<span class="string">'nodemon restart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		process.kill(process.pid, <span class="string">'SIGUSR2'</span>);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>use <code>process.once</code> to overwrite the default <code>SIGUSR2</code> function, but then use <code>kill</code> to resend the <code>SIGUSR2</code> signal again, but this time we hook up a msg display functionality. Especially the place, we use <code>process.once()</code> instead of <code>process.on()</code> in the <code>SIGUSR2</code> case, since nodejs will listen for the same event, and if we use <code>on</code>, then it will forms a infinite loop. Note that <code>process.kill()</code> serves the functionality of sending the signal.</p>
<blockquote>
<p>Recap: Basically four step as discussed here, first define a connection URI string, then second setup the db connection; third monitor the mongoose connection events like <code>connected</code> and <code>disconnected</code>, and fourth monitor the node process event in order to close the db connection when we restart.</p>
</blockquote>
<p>From view to controller, finally to store in db is what we have gone through so far. It works pretty well, since the moment we move the data to the controller, we gradually solidy the data structure we want to use!!</p>
<p>Some technical names: “path” is like attribute names in relational database while “property object” is like the values but like other JS object, can be nested. Also, we can add data validation inside the schema, two advantages: </p>
<ul>
<li>save the roundtrip time to datebase</li>
<li>save the code inside the application for validation.</li>
</ul>
<p>Adding indexes can make database search more efficiently, jist like adding index to the files you want to search in your drawer. In order to add a GeoJSON path into your application, you only need to do this: <code>coords: {type: [Number], index: &#39;2dsphere&#39;}</code>; using <code>2dsphere</code> allows mongodb to be able to calculate the geolocation fast, thus <strong>it is helpful to build a location-based application.</strong></p>
<p>Subdocument is helpful when handling nested data structure, one thing to note, when creating attributes like <code>timestamp</code>, we use data type called <code>Date</code>, like:   </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reviewSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">	rating: &#123;<span class="attr">type</span>: <span class="built_in">Number</span>, <span class="string">"default"</span>: <span class="number">0</span>, <span class="attr">min</span>: <span class="number">0</span>, <span class="attr">max</span>: <span class="number">5</span>&#125;,</span><br><span class="line">	author: <span class="built_in">String</span>,</span><br><span class="line">	createdOn: &#123;<span class="attr">type</span>: <span class="built_in">Date</span>, <span class="string">"default"</span>: <span class="built_in">Date</span>.now&#125;,</span><br><span class="line">	text: <span class="built_in">String</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f1wrkszhcej218w0u6wib.jpg" alt="mongo"> 这张图讲得很清楚， schema是application-side的东西， 每一个model是的实例instance通过schema可以map到database里面的每一个document, 1:1的对应关系。</p>
<p>While typing in <code>mongod</code> will let you start the mongodatabase, using <code>mongo</code> will start tht shell and let you connect to the test database. And some useful commands in mongo go here:</p>
<ul>
<li><code>show dbs</code> to show all existing database so far.</li>
<li><code>use local</code> to switch to another database. And if that db doesn’t exist yet, mongo will create it for us.</li>
<li><code>show collections</code></li>
<li><code>db.startup_log.find()</code> returns all the content from collection, uesful when we check whether the data has been saved.</li>
<li><code>db.missions.save({...})</code> will savev a new document into collection.</li>
<li><code>db.inventory.remove({})</code> will remove all documents in collection <code>inventory</code>.</li>
<li><code>db.missions.update()</code> will query a document and update its content. The first argument is query string, and second argument use <code>$push</code> to insert subdocuments.</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &gt; db.locations.update(&#123; </span><br><span class="line">   name: <span class="string">'Starcups'</span></span><br><span class="line">  &#125;, &#123; </span><br><span class="line">    $push: &#123;</span><br><span class="line">      reviews: &#123;</span><br><span class="line">        author: <span class="string">'Simon Holmes'</span>,</span><br><span class="line">        id: ObjectId(),</span><br><span class="line">        rating: <span class="number">5</span>,</span><br><span class="line">        timestamp: <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"Jul 16, 2013"</span>),</span><br><span class="line">        reviewText: <span class="string">"What a great place. I can't say enough good things about it."</span></span><br><span class="line">      &#125; </span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>So far, we have insert a fake data document in our local computer, but in real life, <strong>we want database to be externally accessible.</strong> use <code>heroku addons:add mongolab</code> to register a db URI at mongolab as a heroku addons.<strong> And use <code>heroku addons:open mongolab</code> to go the website interface to check database details. </strong>In order to get the uri of the database, type <code>heroku config:get MONGOLAB_URI</code>. </p>
<blockquote>
<p>Note that in real practice, I have to fixed a typo bug from my previous data stored in mongolab, I have to first go to the mongo shell to <code>remove({})</code> and <code>insert({...})</code> again, then do the <code>mongodump</code> and <code>mongorestore</code> again to dump the data into the temp folder at <code>~/tmp</code> and push the data to live database. And make sure to press the “Delete all collection” button before we did <code>mongorestore</code> to avoid same key collision.</p>
</blockquote>
<p>After receive URI, we will first dump our localhost data into a folder in local computer, then restore the data to the live database. use <code>mkdir -p ~/tmp/mongodump</code> will create a folder to hold up the dumped data. Note that use <code>-p</code> option will create the non-existed folders on the path like “tmp”.</p>
<ul>
<li>use <code>mongodump -h localhost:27017 -d airloft -o ~/tmp/mongodump</code> to export airloft.missions data into BSON.</li>
<li>use <code>mongorestore -h &lt;host and port number&gt; -d &lt;live database name&gt; -u &lt;username(same as database name)&gt; -p &lt;password&gt; &lt;path to dump data folder&gt;</code> to push the data up to the mongolab live database.</li>
<li>Last step(testing), we can use <code>mongo hostname:port/database_name -u username -p password</code> to change the <code>mongo</code> to interact with an external database. Note that in the last two steps, database name is the same as username. Then, we can use commands introduced before to interact with live database. In summery, we have one source code and can be used to manipulate databases at two locations, one in local computer, a test database, and one in Heroku, a live database.</li>
</ul>
<p>Let application use right database. use <code>heroku config:set NODE_ENV=production</code> to set the environment variable <code>NODE_ENV</code> to be production for Heroku. <strong>Environment variable will affect the way the core process runs.</strong> When we tried to use <code>nodemon</code> to start application, one way to make sure what environemnt we are running in is to prepend a ENV variable before nodemon like <code>NODE_ENV=production nodemon</code>, and corresponds to this change, we also change the code in db.js(with a if-else block) to set the dbURI aligned with environment. In application, we can access to such variable by <code>process.env.NODE_ENV</code>, but since we post it in public repo, we don’t want our credentials to be public. Instead, we use environment variables from Heroku configuration.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dbURI = <span class="string">'mongodb://localhost/airloft'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(process.env.NODE_ENV === <span class="string">'production'</span>)&#123;</span><br><span class="line">	dbURI = process.env.MONGOLAB_URI;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mongoose.connect(dbURI);</span><br></pre></td></tr></table></figure>
<h2 id="REST-APIs"><a href="#REST-APIs" class="headerlink" title="REST APIs"></a>REST APIs</h2><p>REST is an architecture style, it’s stateless, meaning it will not recognize users or history. Having such program interface will allow us to talk to our database through HTTP and perform CRUD operations then send back a HTTP response. An way to construct URLs is to think about the collections in our database. In ‘airloft.missions’ collection, we may want to allow operations like:</p>
<ul>
<li><code>/missions</code> to create an new mission.</li>
<li><code>/missions</code> to read all missions.</li>
<li><code>/missions/&lt;index&gt;</code> to read a specific mission.</li>
<li><code>/missions/&lt;index&gt;</code> to update a specific mission. And so on so forth.</li>
</ul>
<p>As we can see the urls are same for several operations, and we will use different request methods to tell the server what action to take.</p>
<ul>
<li><code>POST</code> to create new data in database(from submitting form).</li>
<li><code>GET</code> to read data.</li>
<li><code>PUT</code> to update a document.</li>
<li><code>DELETE</code> to delete a document.</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// missions</span></span><br><span class="line">router.get(<span class="string">'/missions'</span>, ctrlMissions.missionsListByDistance);</span><br><span class="line">router.post(<span class="string">'/missions'</span>, ctrlMissions.missionsCreate);</span><br><span class="line">router.get(<span class="string">'/missions/:missionid'</span>, ctrlMissions.missionsReadOne);</span><br><span class="line">router.put(<span class="string">'/missions/:missionid'</span>, ctrlMissions.missionsUpdateOne);</span><br><span class="line">router.delete(<span class="string">'/missions/:missionid'</span>, ctrlMissions.missionsDeleteOne);</span><br></pre></td></tr></table></figure>
<p>Then in the corresponding controller files, we define these functions and fill them with the simplest response to display when received such request.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sendJsonRes = <span class="function"><span class="keyword">function</span>(<span class="params">res, status, content</span>)</span>&#123;</span><br><span class="line">	res.status(status);</span><br><span class="line">	res.json(content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.missionsListByDistance = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	sendJsonRes(res, <span class="number">200</span>, &#123;<span class="string">"status"</span>: <span class="string">"success"</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="“GET”-method-implementation"><a href="#“GET”-method-implementation" class="headerlink" title="“GET” method implementation"></a>“GET” method implementation</h2><p>Some useful queries in Mongoose:</p>
<ul>
<li><code>find</code> general search based on query object.</li>
<li><code>findById</code> look for specific ID.</li>
<li><code>findOne</code> get the first match document.</li>
<li><code>geoNear</code> find geo-closef query.</li>
<li><code>geoSearch</code> add query functionality to geoNear operation.</li>
</ul>
<p>After using queries, we use <code>exec</code> method execute the query and passes a callback function that will run when the operation is complete. The callback function should accept two parameters, an error object and the instance of found document.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sendJsonRes = <span class="function"><span class="keyword">function</span>(<span class="params">res, status, content</span>)</span>&#123;</span><br><span class="line">	res.status(status);</span><br><span class="line">	res.json(content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.missionsReadOne = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	Missions</span><br><span class="line">		.findById(req.params.missionid)</span><br><span class="line">		.exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">200</span>, mission);</span><br><span class="line">		&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Then, we want to add error checking like this: note that we can also utilize <code>console.log</code> to print out some useful information about the data in terminal since we use <code>nodemon</code>. </p>
<p>In real practice, we may not always want to retrive a whole document from mongodb, we may only just need some specific data. Thus, we can limit the data being passed around to improve speed, using <code>select</code> to retriece only “name” and “reviews” entry from a document in collection. Like this:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports.reviewsReadOne = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(req.params &amp;&amp; req.params.missionid &amp;&amp; req.params.reviewid)&#123;</span><br><span class="line">		Missions</span><br><span class="line">			.findById(req.params.missionid)</span><br><span class="line">			.select(<span class="string">'name reviews'</span>)</span><br><span class="line">			.exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(!mission)&#123;</span><br><span class="line">					sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">						<span class="string">"message"</span>: <span class="string">"missionid not found"</span></span><br><span class="line">					&#125;)</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span> <span class="keyword">if</span>(err)&#123;</span><br><span class="line">					sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">var</span> response, review;</span><br><span class="line">				review = mission.reviews.id(req.params.reviewid);</span><br><span class="line">				<span class="keyword">if</span>(!review)&#123;</span><br><span class="line">					sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">						<span class="string">"message"</span>: <span class="string">"reviewid not found!"</span></span><br><span class="line">					&#125;)</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				response = &#123;</span><br><span class="line">					mission: &#123;</span><br><span class="line">						name: mission.name,</span><br><span class="line">						id: req.params.missionid</span><br><span class="line">					&#125;,</span><br><span class="line">					reviews: review</span><br><span class="line">				&#125;;</span><br><span class="line">				sendJsonRes(res, <span class="number">200</span>, response);</span><br><span class="line">			&#125;);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">			<span class="string">"message"</span>: <span class="string">"No missionid or reviewid in request"</span></span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Apart from the error checking in the above code, we can use <code>id</code> to query subdocument the <code>_id</code> entry. <strong>note that in the raw data, I mistakenly put the entry name to be <code>id</code> instead of <code>_id</code>, which causes me to re-insert the data again to let the <code>id()</code> work for subdocument.</strong></p>
<p>These above example codes shows us how to simulate “GET” request for mission and reviews in “missions” collection in live mongolab database. When it comes to geo-query, we need to query the longtitude and latitude in <code>req.query</code> with some urls like this: <code>api/missions?lng=-12.34343434&amp;lat=51.22424224</code>.</p>
<p>Besides, the way writing the js code is quite important using closure!! I use an example that will be reused in later geo-distance calculation to illustrate how to <strong>only expost functions for later use with closure to wrap the inner variables from outer collisions.</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> theEarth = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> earthRadius = <span class="number">6371</span>;</span><br><span class="line">  <span class="keyword">var</span> getDistanceFromRads = <span class="function"><span class="keyword">function</span>(<span class="params">rads</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseFloat</span>(earthRadius * rads);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> getRadsFromDistance = <span class="function"><span class="keyword">function</span>(<span class="params">distance</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseFloat</span>(distance/getRadsFromDistance);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getDistanceFromRads: getDistanceFromRads,</span><br><span class="line">    getRadsFromDistance: getRadsFromDistance</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
<p>Then the complete geo searching functions are:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for main page listing by distance.</span></span><br><span class="line"><span class="keyword">var</span> resToList = <span class="function"><span class="keyword">function</span>(<span class="params">results</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> lst = [];</span><br><span class="line">	results.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">doc</span>)</span>&#123;</span><br><span class="line">		lst.push(&#123;</span><br><span class="line">				distance: theEarth.getDistanceFromRads(doc.dis),</span><br><span class="line">				name: doc.obj.name,</span><br><span class="line">				author: doc.obj.author,</span><br><span class="line">				rating: doc.obj.rating,</span><br><span class="line">				tags: doc.obj.tag,</span><br><span class="line">				_id: doc.obj._id</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">return</span> lst;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.missionsListByDistance = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(req.query.lng &amp;&amp; req.query.lat)&#123;</span><br><span class="line">		<span class="keyword">var</span> lng = <span class="built_in">parseFloat</span>(req.query.lng);</span><br><span class="line">		<span class="keyword">var</span> lat = <span class="built_in">parseFloat</span>(req.query.lat);</span><br><span class="line">		<span class="keyword">var</span> point = &#123;</span><br><span class="line">			type: <span class="string">"Point"</span>,</span><br><span class="line">			coordinates: [lng, lat]</span><br><span class="line">		&#125;;</span><br><span class="line">		<span class="keyword">var</span> geoOptions = &#123;</span><br><span class="line">			spherical: <span class="literal">true</span>,</span><br><span class="line">			maxDistance: theEarth.getRadsFromDistance(<span class="built_in">parseInt</span>(req.query.maxdistance||<span class="number">2000</span>)),</span><br><span class="line">			num: <span class="number">10</span>,</span><br><span class="line">		&#125;;</span><br><span class="line">		<span class="comment">// console.log(geoOptions.maxDistance);</span></span><br><span class="line">		Missions.geoNear(point, geoOptions, <span class="function"><span class="keyword">function</span>(<span class="params">err, results, stats</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(err)&#123;</span><br><span class="line">				sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">				<span class="keyword">return</span> ;</span><br><span class="line">			&#125;</span><br><span class="line">			sendJsonRes(res, <span class="number">200</span>, resToList(results));</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">			<span class="string">"message"</span>: <span class="string">"Found no longtitue or lattitude in query string."</span></span><br><span class="line">		&#125;);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>So far, we complete all three “GET” methods for this website, namely, [1]ListByDistance for the main page “/api/missions”; [2]get a single mission information for each mission document in db “/api/missions/&lt;_id&gt;”; [3]get a single review information for reviews from each mission document as subdocument “/api/missions/&lt;_id&gt;/reviews/&lt;_id&gt;”. And next, we will look at other methods like “POST”, “PUT” and “DELETE”.</p>
</blockquote>
<h2 id="“POST”-method-implementation"><a href="#“POST”-method-implementation" class="headerlink" title="“POST” method implementation"></a>“POST” method implementation</h2><p>In this project, since we only involve missions and reviews, we need to implement new mission post and new review post from form data, which is stored at <code>req.body.&lt;attr&gt;</code>.<br>The way we create an document is using <code>create()</code> directly :</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports.missionsCreate = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	Missions.create(&#123;</span><br><span class="line">		name: req.body.name,</span><br><span class="line">		rating: req.body.rating,</span><br><span class="line">		tag: req.body.tags.split(<span class="string">","</span>),</span><br><span class="line">		author: req.body.author,</span><br><span class="line">		coords: [<span class="built_in">parseFloat</span>(req.body.lng), <span class="built_in">parseFloat</span>(req.body.lat)],</span><br><span class="line">		timepanel: &#123;</span><br><span class="line">			title: req.body.timetitle,</span><br><span class="line">			timeslots: req.body.timeslots.split(<span class="string">","</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(err)&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">201</span>, mission);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>For subdocuments or facing with a list instead of an array, we probably just retrieve that list and <code>push</code> a new item into the list. Then we just need to <code>&lt;instance&gt;.save()</code> to save the item like this:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> addReiview = <span class="function"><span class="keyword">function</span>(<span class="params">req, res, mission</span>)</span>&#123;</span><br><span class="line">	mission.reviews.push(&#123;</span><br><span class="line">		rating: req.body.rating,</span><br><span class="line">		author: req.body.author,</span><br><span class="line">		text: req.body.text</span><br><span class="line">	&#125;)</span><br><span class="line">	mission.save(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> thisReview;</span><br><span class="line">		<span class="keyword">if</span>(err)&#123;</span><br><span class="line">			sendJsonRes(res, <span class="number">404</span>, err);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			updateAveRating(mission._id);</span><br><span class="line">			thisReview = mission.reviews[mission.reviews.length - <span class="number">1</span>];</span><br><span class="line">			sendJsonRes(res, <span class="number">201</span>, thisReview);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="“PUT”-method-implementation"><a href="#“PUT”-method-implementation" class="headerlink" title="“PUT” method implementation"></a>“PUT” method implementation</h2><p>“PUT” method is similar to “POST” in a way that they both use form data stored in <code>req.body</code>, while one is create from nothing and add to the database, the other is to find an existing one and update part of the information. </p>
<ul>
<li>One hack I thought about is to use <code>Object.keys(obj)</code> to obtain the keys from a js object, then using <code>$set</code> in <code>mongo.update()</code> to only update the value in body? <strong>Ideas:</strong> this idea only works when all field are requiring same manipulation from body data. To be more specifically, some data are needed to be processed to feed for later use, such as we add <code>.split(&quot;,&quot;);</code> for tags data, and some fields like “coords” is an array. Thus, if we want to apply more operations on some data, we cannot just treat them in the same way in a for loop</li>
<li>Or, utilize the the way mongoose model treat model parameters, we can do <code>var newReview = new Review(req.body)</code> to create an instance of “Review” model, then use this to replace the old one?</li>
</ul>
<blockquote>
<p>One important thing to notice is that when we save, we save <strong>parent document!</strong> In our case, we did <code>mission.save(function(err, mission))</code> instead of <code>review.save(...)</code>!</p>
</blockquote>
<h2 id="“DELETE”-method-implementation"><a href="#“DELETE”-method-implementation" class="headerlink" title="“DELETE” method implementation"></a>“DELETE” method implementation</h2><p>“DELETE” method is easier, we only need to find that document by “missionid”, then do <code>Missions.remove(function(err, mission))</code>. For the subdocument, we simply find that subdocument and call remove at the end. The prototype is like:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A working prototype without error checking.</span></span><br><span class="line"><span class="built_in">module</span>.exports.reviewsDeleteOne = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">	Missions</span><br><span class="line">		.findById(req.params.missionid)</span><br><span class="line">		.select(<span class="string">"reviews"</span>)</span><br><span class="line">		.exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(err)&#123;</span><br><span class="line">				sendJsonRes(res, <span class="number">404</span>, &#123;</span><br><span class="line">					<span class="string">"message"</span>: <span class="string">"Found no match"</span></span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">			mission.reviews.id(req.params.reviewid).remove();</span><br><span class="line">			mission.save(<span class="function"><span class="keyword">function</span>(<span class="params">err, mission</span>)</span>&#123; <span class="comment">// save parent document.</span></span><br><span class="line">				updateAveRating(mission._id);</span><br><span class="line">				sendJsonRes(res, <span class="number">204</span>, <span class="literal">null</span>);</span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Summery"><a href="#Summery" class="headerlink" title="Summery"></a>Summery</h2><ul>
<li><p>How to insert an common model instance into mongodb? I mean, since we can’t generate the “_id” by ourselves, then how comes we insert such object into <code>mongo</code>? <strong>Answer:</strong> we need to know the difference between <code>db.missions.save</code> and <code>db.missions.insert</code>, using <code>save</code>, we can simple provide an model instance according to the model schma, while using using <code>insert</code>, we have to write the object exacty the same as the final document! </p>
</li>
<li><p>“GET” method implementation? <strong>Answer:</strong> using mongodb query like <code>findById</code> and others to get the document from db, and sometimes we need <code>id</code> to retrieve info from subdocument. Besides, <code>geoNear</code> is handy in mongodb to get displaying documents by distance.</p>
</li>
<li><p>Some important places for error checking: </p>
<ul>
<li>If argument is in the <code>req.body</code> or <code>req.query</code> or <code>req.params</code>. <strong>if not, return a message in <code>res</code> saying founding no argument in coming request.</strong></li>
<li>Then given an ID(probably), we may want to search that document in database using <code>getById()</code>, and the callback function contains an <code>error</code> object and a instance object, where the returning instance object indicates whether or not searching database is succeeded or not. <strong>If not, return a message saying object not found in database.</strong></li>
<li>When we tried to update of create a new document, we may usually use <code>save</code> and <code>create</code>, the callback function contains an error object either, <strong>it indicates whether or not such instance can be created or updated correctly, if the error message appears, it usually dues to the fact that some fields violates the validation rules specified in database schema.</strong></li>
</ul>
</li>
</ul>
<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ul>
<li>Unless you fancy adding hundreds of script tags to your pages, you need a build tool to bundle your dependencies. You also need something to <strong>allow NPM packages to work in browsers</strong>. This is where Webpack comes in.</li>
<li>Add a .gitattributes file and push it to github to overwrite the project type calculated by github, adding <code>*.css linguist-language=Javascript</code> into the file to let a specific file being overwritten.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> nodejs </tag>
            
            <tag> web design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MEAN全栈开发[第二期-前端实战手记]]]></title>
      <url>http://chocoluffy.com/2016/03/11/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%BA%8C%E6%9C%9F-%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%88%98%E6%89%8B%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>AirLoft的原型。 第二期， 基于Bootstrap的扁平化设计， 把所有涉及的页面的clickable prototype做出来， 再迁移到express application或者Angular SPA上， 虽然只是前端的prototype， 但是做好一些npm scripts的配置会让前端开发特别的高效和舒服， 也算是在入门了各种炫技的前端展示后， 逐步到一个full-fledged website的过渡。</p>
<a id="more"></a>
<p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f1tkjoatboj21kw0r7aic.jpg" alt="project screenshot"></p>
<h2 id="Difference-about-MEAN-stack"><a href="#Difference-about-MEAN-stack" class="headerlink" title="Difference about MEAN stack"></a>Difference about MEAN stack</h2><p>Traditional web server like Apache is multi-thread, <strong><em>the key idea about multi-thread is visitors use seperate resources.</em></strong>Like a bank system, it works perfectly fine when the population size is small, while when the size grows more than the resources, you have to queue for resources. (然而当你访问一个网站的时候， 你是不会等的， 你看那个网站响应很慢， 你就退出了). In nodejs, it is single-threaded. 所以你知道现在很多大型的企业架构， 尤其是国内的， 在前几年还特别严重， 一到过年过节流量特别大的时候， 你的网站就会宕机， 因为太多人访问了， 你必须等。所以解决办法是什么， 通常企业就回去买更多的服务器， 或者更新过大的内存， 来扛过流量最大的时候， 可是有一个问题就是， 在流量没有那么大的绝大多数时候， 你的资源被浪费了! </p>
<p>在单线程的nodejs里面， 有一个非常重要的特性就是必须是非阻塞， 因为默认的情况就是大家都会去同一个center office， 同一个线程， 然而我们不希望前一个的request, 比如request static files or database, 影响到下一个用户， 所以nodejs里面的函数都是异步的。</p>
<p>Some useful helper libraries like Underscorejs, Mochajs, and Colors(which can add color to the nodejs console log).</p>
<p>Check out the articles in Evernore, saying that why we don’t want to use the default way of using directory to organize our view static files in Expressjs, but instead use a function-focused way to group the files.</p>
<p>Mongodbd stores documents as BSON(binary format of JSON). Mongoose like the shell for mongodb, enable us to add data validation on database(schema)</p>
<p>Traditional way of doing web, is let the server do all the data processing and application logic, then passes HTML out to the browser. While angularjs allows us to pull some data and logic to the browser.(so server only pass the data from database). Since we have V8 in Chrome.</p>
<p>The difference of Jquery and AngularJS is that Jquery added to the page to provide interactivity, it assume that you have a complete DOM, While angularjs comes earilier to help you form the HTML.</p>
<p>关于SPA(single page application)的缺点， 尤其在SEO上， search engine only fetches the page layout and it won’t run any javascript, thus those data and contents generated by javascript will be ignored by search engine. <strong>_the key feature of SPA is that it takes a longer load for first time login, and it can reduce the pressure on server side, since it handle the logic mostly on browser. _</strong> For example, for a blog website, the blog post entry is for people to read and is expected to show up quitely quickly, is not suitable for SPA, while the admin page can be done in SPA. <strong><em>Thus, for the blog entry, we want the original and traditional method(passing the HTML pages), utilizing Express!</em></strong></p>
<p>Remeber, Angularjs is not only for SPA, it can also provide rich data interactivity to an static pages.</p>
<p><strong><em>API-rich means decouple the reliance!!! You don’t contact directly to the database, but instead use API and if API is satisfied, components can be substituted by any other components.</em></strong></p>
<p>基础的架构是： database\rest API\application在同一个server上， 但之后我们通常会把database分开到另外一个server上（avoid fighting for the same resources）.</p>
<h2 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h2><p>When using express, we can configure it to have some options, like which html engine to use, which css preprocessor, and whether to add the support for session;</p>
<p>We can see in <code>app.js</code> that there are a lot of <code>app.use()</code>, they are middlewares, and the request coming from the application will go through each of them. For example, use <code>app.use(cookieParser());</code> will parse out the cookie information from the request and prepare to be more friendly in controller code. Server side js(app.js) if modified, should let the server stop and restart, but the client-side js or html or css, can just use browser refresh to update on-the-fly. <strong><em>To fix that, we use <code>nodemon</code>, a module that allows auto-reloading when server-side javascript is changed. I have install it globally, so we just need to type <code>nodemon</code> inside the project folder.</em></strong></p>
<p><code>block content</code> in jade, is the inheritance machanism of HTML layout, we can define some block + <variable name=""> in the parent template, then in each child layout that extends it, the child template will redefine such block, just like in c++\java, an abstract class.</variable></p>
<p>We decided to implement MVC inside the Express, like what we did in rails, we route the corresponding URL to controllers(which we created in a new folder).</p>
<p>Bootstrap is not being processed by node engine, thus we put it under <code>public</code> folder. Inside the <code>layout.jade</code> file, we will include the bootstrap theme and js files we want to use in our project:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    # set viewport metadata for better display in mobile device.</span><br><span class="line">  	meta(name=&apos;viewport&apos;, content=&apos;width=device-width, initial-scale=1.0&apos;)</span><br><span class="line">    title= title</span><br><span class="line">    # before the style.css file, so that we can write style to override or polish the style in bootstrap theme.</span><br><span class="line">    link(rel=&apos;stylesheet&apos;, href=&apos;/bootstrap/css/cerulean.bootstrap.css&apos;)</span><br><span class="line">    link(rel=&apos;stylesheet&apos;, href=&apos;/stylesheets/style.css&apos;)</span><br><span class="line">  body</span><br><span class="line">    block content</span><br></pre></td></tr></table></figure>
<p>After deciding on the urls we want to use, we will add corresponding controller into the index.js inside the routes folder. since we mainly have two function groups, we use <code>ctrlLocations</code> and <code>ctrlOthers</code> to represent these two main controller files.</p>
<h2 id="Jade-in-Express"><a href="#Jade-in-Express" class="headerlink" title="Jade in Express"></a>Jade in Express</h2><p>Let’s start to move the content in view into controller. When we look at the clickable prototype, especially its Jade view pages, we define Javascript object in hash in controller to store the data. <strong><em>We design data structure to hold data for views.</em></strong> Then in view folder, we can do: [1] use <code>=</code> to use that object’s value, or use <code>#{}</code> to <strong><em>insert</em></strong> the value into a string.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">h1= title </span><br><span class="line">p &amp;nbsp; #&#123;title&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Pay attention to the format when using the programming syntax or inline coding. </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注意在用synax的时候要多空4个space--&gt;</span><br><span class="line">.row</span><br><span class="line">    .col-xs-12.col-sm-8</span><br><span class="line">        .row.list-group</span><br><span class="line">            each mission in missions</span><br><span class="line">                .col-xs-12.list-group-item</span><br><span class="line">                    h4</span><br><span class="line">                        a(href=&apos;/mission&apos;)= mission.name</span><br><span class="line">                        small &amp;nbsp;</span><br><span class="line">                            - for (var i=0; i&lt;mission.rating; i++)</span><br><span class="line">                                span.glyphicon.glyphicon-star</span><br><span class="line">                            - for (var i=mission.rating; i&lt;5; i++)</span><br><span class="line">                                span.glyphicon.glyphicon-star-empty</span><br><span class="line">                        span.badge.pull-right.badge-default 100m</span><br><span class="line">                    p.author= mission.author</span><br><span class="line">                    p</span><br><span class="line">                        each tag in mission.tags</span><br><span class="line">                            span.label.label-warning= tag</span><br><span class="line">                            | &amp;nbsp;</span><br></pre></td></tr></table></figure>
<p>In Jade, we want to use <strong>mixin</strong> as functions inside a jada file and use <code>include</code> to make it reuseable for other file. Like this, we usually put mixin at between <code>extends layout</code> and <code>block content</code>. </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mixin outputRating(rating)</span><br><span class="line">  - for (var i=0; i&lt;mission.rating; i++)</span><br><span class="line">    span.glyphicon.glyphicon-star</span><br><span class="line">  - for (var i=mission.rating; i&lt;5; i++)</span><br><span class="line">    span.glyphicon.glyphicon-star-empty</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--same place, but using `include`--&gt;</span><br><span class="line">include _includes/sharedHTMLfunctions</span><br></pre></td></tr></table></figure>
<p>Here is an example of showing how to render sting to HTML when the textarea has newline character:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">extends layout</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">	#banner.page-header</span><br><span class="line">		.row</span><br><span class="line">			.col-sm-12</span><br><span class="line">				h1= title</span><br><span class="line">	.row</span><br><span class="line">		.col-sm-12</span><br><span class="line">			p !&#123;(text).replace(/\n/g, &apos;&lt;br/&gt;&apos;)&#125;</span><br></pre></td></tr></table></figure>
<p>For now, the data is stored in controller, while in practice, we need database and data model to store the data. But here we are in the right track of fast development, namely, from developing a clickable prototype, to move hard-cored data into controller as variables, and finally put them into database.</p>
<h2 id="Heroku"><a href="#Heroku" class="headerlink" title="Heroku"></a>Heroku</h2><p>Add the <code>engines</code> part at project’s package.json, add the node and npm version on it.</p>
<p>Add a Procfile, used to declare the process type used by application. we put <code>web: npm start</code> inside the Procfile so that it tells Heroku to tun such web process.</p>
<p>Use forego to test before push it into production environment. <code>brew install forego</code> to install forego, then do <code>forego start</code> and go to <code>localhost:5000</code> to see the result.</p>
<p>Then if everything goes fine, from <strong><em>a) engines part b) Profile c) tested under <code>forego</code></em></strong>, then we do <code>heroku create</code> and <code>git push heroku master</code> to push the local git repo to the remote heroku container. Then <code>heroku open</code> to open that url.</p>
<p>Terminology: <strong>Dynos</strong> are isolated, virtualized Unix containers, that provide the environment required to run an application. Generally, if you deploy an application for the first time, Heroku will run 1 web dyno automatically. In other words, it will boot a dyno, load it with your slug, and execute the command you’ve associated with the web process type in your Procfile. <strong>So, it mainly is about scaling, if we have more dynos, we will have more resources. And we got that 1 dyno for free.</strong> we can type in <code>heroku ps</code> to check which dyno is running which process and for this command, <code>heroku ps:scale web=3 queue=2</code>, it means that we can start 5 dynos, 3 for the web and 2 for the queue process types.</p>
<h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><p>in Bootstrap, there is always 12 columns, and you can define how many columns you want to use in device, <code>col-sm-6</code> means that element will take up 6 columns on device of size sm <strong>and larger.</strong> </p>
<ul>
<li>xs: phone</li>
<li>sm: tablets</li>
<li>md: laptop</li>
<li>lg: external monitors</li>
</ul>
<p><code>&lt;div class=&quot;col-xs-12 col-sm-6&quot;&gt;&lt;/div&gt;</code> means it will take the full width in phone screen while take only half in tablets or larger.</p>
<p>In Jade, in order to put plain text, we need to use pipe at front.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ul.nav.navbar-nav.navbar-right</span><br><span class="line">    li</span><br><span class="line">        a(href=&apos;#&apos;)</span><br><span class="line">            span.glyphicon.glyphicon-user</span><br><span class="line">            |  Sign Up</span><br><span class="line">    li</span><br><span class="line">        a(href=&apos;#&apos;)</span><br><span class="line">            span.glyphicon.glyphicon-log-in</span><br><span class="line">            |  Login</span><br></pre></td></tr></table></figure>
<p>When dealing with <code>block content</code>, we should note that if some elements are not contrained by css, then they will be strethed to have full width of screen. what we did now is do wrap the content with a <code>div.container</code> so that we can apply css on the container easily.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">div.container</span><br><span class="line">  block content</span><br></pre></td></tr></table></figure>
<p>现在的一个主要问题是， 我知道布局是什么样子的， 但是我不知道应该怎么写？when to use <code>.row</code> or <code>.page-header</code>. </p>
<ul>
<li><strong>row. Rows must be placed within a .container (fixed-width) or .container-fluid (full-width) for proper alignment and padding. </strong></li>
<li>Use rows to create horizontal groups of columns.</li>
<li>Content should be placed within columns, and only columns may be immediate children of rows.<strong><em><code>col-</code> is the direct child element for <code>row</code></em></strong></li>
<li>Actually <code>.page-header</code> just applies some of its default styling options to the element with that class. In practice, we find that the element with that class will be margined from normal element. </li>
</ul>
<p>We can download the cutomized bootstrap theme from <a href="http://getbootstrap.com/customize/" target="_blank" rel="noopener">the website</a>, say it I only want to use the <code>glyphicon</code> icon from Bootstrap, then I can just check that box and download it, then after unzipping the file, we include the file under the css part and <strong>inlcude the css tag inside the html</strong>, then it works fine! Hooray! In this project, I mainly use <code>glyphicon-user</code>, <code>glyphicon-fire</code> and <code>glyphicon-chevron-left</code> for navigation.</p>
<p>Using <a href="https://github.com/nicinabox/superslides" target="_blank" rel="noopener">superslides</a> to achieve a full-screen images scrolling animation. pretty amazing effects.</p>
<p>Use <code>.panel</code> for inner component positioning.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   .panel.panel-primary</span><br><span class="line">.panel-heading</span><br><span class="line">	h2.panel-title Training Time</span><br><span class="line">.panel-body</span><br><span class="line">	p March 15 - March 17: 7:00 am - 7:00 pm</span><br><span class="line">	p March 21 - March 23: 7:00 am - 7:00 pm</span><br></pre></td></tr></table></figure>
<h2 id="Additional-reference"><a href="#Additional-reference" class="headerlink" title="Additional reference"></a>Additional reference</h2><p>How to undo the <code>git add &lt;filename&gt;</code> before <code>git commit</code>. Use <code>git reset &lt;filename&gt;</code>. Include <code>node_modules</code> into <code>.gitignore</code> so that it won’t be commited to github. Use</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#You can create your own .gitignore which ignores itself. Create a .gitignore with this two records:</span><br><span class="line">.gitignore</span><br><span class="line">node_modules</span><br></pre></td></tr></table></figure>
<p>在<a href="http://bootswatch.com/" target="_blank" rel="noopener">free bootstrap themes</a>下载bootstrap theme到public folder.</p>
<p><a href="http://stackoverflow.com/questions/33549178/best-practices-for-loading-videos-on-a-web-page" target="_blank" rel="noopener">Like Airbnb, how to load video at the background of a website</a>, using progressive loading or ?</p>
<p>使用nodemon来监听server-side js文件的改动来自动更新server， 使用browser-sync来监听各种css file的改动。有两种模式， 一种是通过直接创建一个server来host本地的static file, 另一种模式是通过代理另一个服务器， 比如php server, rails webbrick server, python simplehttpserver, nodejs server都可以的!!!!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">browser-sync start --proxy=&apos;localhost:3000&apos; --files &apos;app_server/views/*.jade, app_server/controllers/*.js, public/stylesheets/*.css&apos;</span><br><span class="line"></span><br><span class="line">browser-sync start --server --files &apos;app_server/views/*.jade, app_server/controllers/*.js, public/stylesheets/*.css&apos;</span><br></pre></td></tr></table></figure>
<p>由于我在nodejs里面设置了服务器的端口是3000， 那么通过让browser-sync监听这个端口并创建在3001的代理， 我可以在<code>localhost:3001</code>上面得到自动更新的网页!!</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> nodejs </tag>
            
            <tag> web design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MEAN全栈开发[第一期-前端布局]]]></title>
      <url>http://chocoluffy.com/2016/03/06/MEAN%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%80%E6%9C%9F-%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<p>AirLoft的原型。一个sharing economy的网站。 Loft是阁楼的意思， 每个心中那个静静守候一些秘密和癖好的地方。 有些情感， 只能在尘封的铁门后诉说， 就像有些话， 只讲给某个人听。厌倦了某些网站没有审美的UI， 也趁着青春轻狂， 去改变吧。第一期， 记录我前端页面开发的一些手记， 后面慢慢过渡到数据库和后台API设计。</p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在做一个sharing economy的网站，在参考了大部分现有网站的UI的样式后， 我们感觉非常的不满😂(当然像quora这种属于知识信息密度特别高的网站使用文本密集的形势还说的过去)， 但是像airbnb还有携程这种大型的peer sharing的网站， 如何可以从第一屏就吸引到用户是一个很重要的问题。直接上图看看：<br>首先是<a href="https://www.airbnb.ca/" target="_blank" rel="noopener">airbnb</a>的网站：<br><img src="http://ww1.sinaimg.cn/large/c5ee78b5gw1f1mrezw5z0j21kw0t9dqn.jpg" alt="airbnb website"><br>airbnb在网站的第一屏是用一段视频来当做背景的， 非常惊艳， 但是第一屏没有满屏是什么意思？是想吸引我们可以往下滚嘛？但是这种样式让我非常不舒服， 明明有非常好的创意， 为什么不像这个<a href="http://thenewcode.com/samples/polina.html" target="_blank" rel="noopener">thenewcode.com</a>一样使用高清全屏的视频来当做网页背景呢， 很惊艳对不对!!</p>
<p>再看一下<a href="http://www.ctrip.com/#ctm_ref=nb_cn_top" target="_blank" rel="noopener">携程</a>的网站， 感觉还是滞留在上个世纪的UI。<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1f1mrhyoxpvj21kw0t7qiu.jpg" alt="携程website"><br>于是， 也是出于对颜值的追求，我决定尝试使用轮播在第二屏的网站展示页面来展示各个兴趣小组（比如一起做早餐吃早餐啦， 一起go hiking啦， 一起复习期末考写作业的兴趣小组啦）</p>
<p>考虑到完整项目的时间紧迫， 就不准备在前端的js的代码上花太多时间， 毕竟后面还有转移到express的jade模版， 然后最后还要用angularjs来重写。 于是我就在找各类比较好的carousel的js插件， 在比较了几个的表现之后， 还是<a href="https://github.com/nicinabox/superslides" target="_blank" rel="noopener">superslides</a>最得我心。废话不多说， 直接上实例代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;Superslides - A fullscreen slider for jQuery&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;../dist/stylesheets/superslides.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=&quot;slides&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;slides-container&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/people.jpeg&quot; alt=&quot;Cinelli&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/surly.jpeg&quot; width=&quot;1024&quot; height=&quot;682&quot; alt=&quot;Surly&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/cinelli-front.jpeg&quot; width=&quot;1024&quot; height=&quot;683&quot; alt=&quot;Cinelli&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;images/affinity.jpeg&quot; width=&quot;1024&quot; height=&quot;685&quot; alt=&quot;Affinity&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;nav class=&quot;slides-navigation&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;#&quot; class=&quot;next&quot;&gt;Next&lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;#&quot; class=&quot;prev&quot;&gt;Previous&lt;/a&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;javascripts/jquery.easing.1.3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;javascripts/jquery.animate-enhanced.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;../dist/jquery.superslides.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(&apos;#slides&apos;).superslides(&#123;</span><br><span class="line">      animation: &apos;fade&apos;</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>忽略其他的不管， 如果我们希望引入superslides的功效， 我们只需要添加这几个tag:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--css--&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;../dist/stylesheets/superslides.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--js--&gt;</span><br><span class="line">&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;../dist/jquery.superslides.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>注意jquery的引入要在superslides的前面， 来保证superslides在引用的时候可以用到jquery里面的定义的函数。</p>
<p>在添加了css和js之后， 我们就可以来创建全屏图片轮播的html结构了， 官方推荐的是在<code>&lt;div id=&quot;slides&quot;&gt;</code>里面放一个div里面放各种img， 或者也可以使用一个<code>&lt;li&gt;</code>来分开img和div来在后期分别写样式和定位， 我在我的项目中使用的就是后者， 比如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;slides&quot;&gt;</span><br><span class="line">  &lt;ul class=&quot;slides-container&quot;&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      &lt;img src=&quot;http://flickholdr.com/1000/800&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        Slide one</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      &lt;img src=&quot;http://flickholdr.com/1000/800/space&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        Slide two</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">      &lt;img src=&quot;http://flickholdr.com/1000/800/tech&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        Slide three</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">  &lt;nav class=&quot;slides-navigation&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;next&quot;&gt;Next&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;prev&quot;&gt;Previous&lt;/a&gt;</span><br><span class="line">  &lt;/nav&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>由于我的网站背景颜色是暗色系的， 我添加了<code>reveselay</code>和<code>overlay</code>来创建两个mask来写出渐变渐出的效果， 这样可以很好的和背景颜色混为一体。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;section&quot; id=&quot;android&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;containerrow&quot;&gt;</span><br><span class="line">    &lt;div id=&quot;slides&quot;&gt;</span><br><span class="line">      &lt;ul class=&quot;slides-container&quot;&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;img src=&quot;./image/desk.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;reverselay&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;mainbadget&quot;&gt;</span><br><span class="line">              &lt;h5&gt;</span><br><span class="line">                &lt;span class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/span&gt;&amp;nbsp;134 &amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;span class=&quot;glyphicon glyphicon-fire&quot;&gt;&lt;/span&gt;&amp;nbsp;3440</span><br><span class="line">              &lt;/h5&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;text-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;maintitle&quot;&gt;</span><br><span class="line">               &lt;a href=&quot;&quot;&gt;Morning Call&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;maintext&quot;&gt;</span><br><span class="line">              &lt;p&gt;Join our breakfast cooking club for fresh pancakes and sunshine!</span><br><span class="line">              Meet your friends here and enjoy every piece of buttered toast. &lt;a href=&quot;&quot;&gt;See more.&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;    </span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">      &lt;nav class=&quot;slides-navigation&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; class=&quot;prev&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-chevron-left&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; class=&quot;next&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-chevron-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;div id=&quot;slider-control&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;#react&quot; class=&quot;active&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;#intro&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a href=&quot;#native&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a href=&quot;#touch&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a href=&quot;#android&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>注意我这里的<code>text-container</code>, <code>maintitle</code>, <code>maintext</code>都是用来创建overlay在图片上面的文字， 分离出来比较方便定位。最后记得要初始化js：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(&apos;#slides&apos;).superslides(&#123;</span><br><span class="line">    animation: &apos;fade&apos;,</span><br><span class="line">    play: &apos;8000&apos;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>还有很多的功能选项， 在<a href="https://github.com/nicinabox/superslides" target="_blank" rel="noopener">主页</a>可以查看到最全的功能配置，也可以参考他的<a href="http://archive.nicinabox.com/superslides/#1" target="_blank" rel="noopener">实例页面</a> 那就搞定了! 最后附上成品的gif:<br><img src="https://giant.gfycat.com/WetLongHapuka.gif" alt="project gif"></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> web design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ajax(with Jquery) on Nodejs server]]></title>
      <url>http://chocoluffy.com/2016/02/20/Ajax-with-Jquery-on-Nodejs-server/</url>
      <content type="html"><![CDATA[<p>Nodejs的第一个上手小项目， 就是尝试自己在本地的页面来发送Ajax请求， 并且通过nodejs的json文件返回后以比较优雅的前端样式呈现出来。 算是再一次复习了Bootstrap， fontawesome库的调用， 以及一些jquery的语法。 仔细回想， 其实nodejs的后端开发和rails\django的router的本质都是一样的， 以前在还没有理解实质的时候就上手实战， 现在慢慢理解了才能够融会贯通， 现在的开发速度大大进步了。 同时也学会了如何允许CORS的请求， 和正则匹配的部分细节。<br><a id="more"></a></p>
<p><img src="https://zippy.gfycat.com/FancyWeeBrontosaurus.gif" alt="project gif"></p>
<h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><p>Requesting 127.0.0.1:3000 should give your index page (with CSS and JS). For the subsequent requests, you should use AJAX to send requests to the Node server and update only some parts of the page with the response data. Ideally, you should return JSON data as a response and then format that using Javascript.</p>
<h2 id="Ongoing-notes"><a href="#Ongoing-notes" class="headerlink" title="Ongoing notes"></a>Ongoing notes</h2><ul>
<li><p>how to use Ajax to request the data instead of using url request to node server? <strong><em>Main idea is that to use <code>$.getJSON(&quot;http://127.0.0.1:3000/favs.json&quot;, function(...){...}</code> to send out the Ajax request, and set the nodejs script to be able to respond such json file request and properly handle CORS problem. The things left will be just styling and formatted retrieved information and display.</em></strong></p>
</li>
<li><p>nodejs. You might use Node.js to connect to a database (returning a result set from a query, say, or updating a record); deliver HTML, XML, or JSON content; connect to local files; or serve up static web pages like Apache or another web server.</p>
</li>
<li><p>ajax. The mechanism for sending data to and retrieving data from the server with Ajax is the XMLHttpRequest object. So, now that we have an XMLHttpRequest object created, what do we do with it? We use it to make HTTP requests. To do so, we initialize the object with the open() method, which takes three arguments. Like <code>xmlhttp.open(&quot;GET&quot;,&quot;Demo.xml&quot;,true);</code>.</p>
<ul>
<li>HEAD. <code>xmlhttp.open(&quot;HEAD&quot;,&quot;Demo&quot;,true);</code> and <code>xmlhttp.send(null)</code>.</li>
<li>GET. <code>xmlhttp.open(&quot;GET&quot;,&quot;Demo?FirstName=Nat&amp;LastName=Dunn&quot;,true);</code>, the last argument is choose for true(asynchronous) or false(synchronous). The difference is that for synchronous version, browser has to wait for a response. The code below shows how to use Ajax solely to listen to the content change.</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    function start() &#123;</span><br><span class="line">        var xmlhttp = new XMLHttpRequest();</span><br><span class="line">        var contentDiv = document.getElementById(&quot;Content&quot;);</span><br><span class="line"> </span><br><span class="line">        xmlhttp.open(&quot;GET&quot;, &quot;Demo?FirstName=Nat&amp;LastName=Dunn&quot;, true);</span><br><span class="line">        xmlhttp.onreadystatechange = function() &#123; // handle Ajax response.</span><br><span class="line">            if (xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200) &#123;</span><br><span class="line">                contentDiv.innerHTML = xmlhttp.responseText;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        xmlhttp.send(null);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    observeEvent(window, &quot;load&quot;, function() &#123;</span><br><span class="line">        var btn = document.getElementById(&quot;btnStart&quot;);</span><br><span class="line">        observeEvent(btn, &quot;click&quot;, start);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Ajax in jquery. In general, Ajax does not work across domains. Exceptions are services that provide JSONP (JSON with Padding) support, which allow limited cross-domain functionality. JQuery provides Ajax support that abstracts away painful browser differences. It offers both a full-featured $.ajax() method, and simple convenience methods such as $.get(), $.getScript(), $.getJSON(), $.post(), and $.fn.load(). A working example of using Ajax of pulling image data from Flick referring <a href="http://www.w3school.com.cn/jquery/ajax_getjson.asp" target="_blank" rel="noopener">this post</a></p>
</li>
<li><p>How to avoid CORS(cross-origin resources sharing) error, refer to <a href="http://www.bennadel.com/blog/2327-cross-origin-resource-sharing-cors-ajax-requests-between-jquery-and-node-js.htm" target="_blank" rel="noopener">this post</a>. <strong><em>Main idea is that at the nodejs server part, we allow some origin and some type of content being CORS, thus we can request such resources at client part, which in this case in my own browser.</em></strong></p>
</li>
<li><p>How to regex all the href links inside a tweet? Especially how to do that in javascript? </p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// tweet here is a JSON object</span><br><span class="line">var tweetString = JSON.stringify(tweet);</span><br><span class="line">var regex = /(https?:\/\/.*?)(&quot;|\s)/g;</span><br><span class="line">var matchlst = [];</span><br><span class="line">tweetString.replace(regex, function(a, b, c, d)&#123;</span><br><span class="line">	if(a.slice(-1)==&apos;&quot;&apos;)&#123;</span><br><span class="line">		a = a.slice(0, -1);</span><br><span class="line">	&#125;</span><br><span class="line">	matchlst.push(a);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><strong>_Main idea is that we first make a JSON object into a string, then we can do regex match on a string. we use //g to indicate that it is search globally. And then for those valid match, we trim out the trailing quote then store it into a list for later formatting use. _</strong>. Note that we should make full use of the flag option provided with regex matching, refer to <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">this post</a>. For example, <code>/.../g</code> is for global match, <code>/.../i</code> is for case-insensitive match.</p>
<ul>
<li>How to use Jquery to construct <code>div</code> or <code>a</code> elements? refer to <a href="http://stackoverflow.com/questions/867916/creating-a-div-element-in-jquery" target="_blank" rel="noopener">this post</a>, simply do the following: <strong><em>Here I make use of the Bootstrap alert styling!</em></strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;&lt;div&gt;&quot;).addClass(&apos;alert alert-warning&apos;).html(&quot;&lt;strong&gt;Warning!&lt;/strong&gt; Such user or tweet does not exist. Please enter a valid query.&quot;).prependTo(query_list);</span><br></pre></td></tr></table></figure>
<ul>
<li>Avoid the <code>submit</code> event cause a page redirection or refresh? simply add a <code>return false</code> at the end of the submit function. Here is the submit function I wrote to process the info after AJAX from nodejs server. Note that my nodejs server host at <code>http://127.0.0.1:3000/</code>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#queryform&quot;).submit(function()&#123;</span><br><span class="line">    		emptyAll();</span><br><span class="line">    		var searchval = $(&quot;#search&quot;).val();</span><br><span class="line">    		console.log(searchval);</span><br><span class="line">    		$(&quot;#list ul&quot;).addClass(&quot;unseen&quot;);</span><br><span class="line">    		var query_list = $(&quot;#query&quot;);</span><br><span class="line">    		var nameHash = &#123;&#125;;</span><br><span class="line">    		var tweetidHash = &#123;&#125;; </span><br><span class="line">	    	$.getJSON(&quot;http://127.0.0.1:3000/favs.json&quot;, function(tweets)&#123;</span><br><span class="line">				$.each(tweets, function(i,tweet)&#123;</span><br><span class="line">					nameHash[tweet.user.screen_name] = tweet;</span><br><span class="line">					tweetidHash[tweet.id_str] = tweet;</span><br><span class="line">				&#125;);</span><br><span class="line">				if(Object.keys(nameHash).indexOf(searchval)&gt;=0)&#123;</span><br><span class="line">					var formattedText = &quot;&lt;strong&gt;User screen name: &lt;/strong&gt;&quot;;</span><br><span class="line">					formattedText += searchval + &quot;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;strong&gt;Tweet: &lt;/strong&gt;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;pre&gt;&lt;code&gt;&quot; + JSON.stringify(nameHash[searchval], null, 4) + &quot;&lt;/code&gt;&lt;/pre&gt;&quot;;</span><br><span class="line">					$(&quot;&lt;p&gt;&quot;).html(formattedText).prependTo(query_list);</span><br><span class="line">				&#125;</span><br><span class="line">				else if(Object.keys(tweetidHash).indexOf(searchval)&gt;=0)&#123;</span><br><span class="line">					var formattedText = &quot;&lt;strong&gt;Tweet ID: &lt;/strong&gt;&quot;;</span><br><span class="line">					formattedText += searchval + &quot;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;strong&gt;Tweet: &lt;/strong&gt;&lt;br&gt;&quot;;</span><br><span class="line">					formattedText += &quot;&lt;pre&gt;&lt;code&gt;&quot; + JSON.stringify(tweetidHash[searchval], null, 4) + &quot;&lt;/code&gt;&lt;/pre&gt;&quot;;</span><br><span class="line">					$(&quot;&lt;p&gt;&quot;).html(formattedText).prependTo(query_list);</span><br><span class="line">				&#125;</span><br><span class="line">				else&#123;		</span><br><span class="line">					$(&quot;&lt;div&gt;&quot;).addClass(&apos;alert alert-warning&apos;).html(&quot;&lt;strong&gt;Warning!&lt;/strong&gt; Such user or tweet does not exist. Please enter a valid query.&quot;).prependTo(query_list);</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">	</span><br><span class="line">			$(&quot;#query&quot;).removeClass(&quot;unseen&quot;);</span><br><span class="line">			$(&quot;#query&quot;).addClass(&quot;seen&quot;); </span><br><span class="line">			return false; </span><br><span class="line">    	&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>Some JS tricks:<ul>
<li><code>if...in...</code> equivalent type in JS as in python. use <code>Array.indexOf(element)&gt;=0</code> to know that if such element exist in this array.</li>
<li>Get the keys array of a Hash. <code>Object.keys(hash)</code>.</li>
<li>Get the last character from a string. <code>string.slice(-1)</code>.</li>
<li>Trim out the last character from a string. <code>string = string.slice(0, -1)</code>.</li>
<li>Use Jquery to get the value from submitted form. </li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> nodejs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Online messege sending后端C实现版]]></title>
      <url>http://chocoluffy.com/2016/02/18/Online-messege-sending%E5%90%8E%E7%AB%AFC%E5%AE%9E%E7%8E%B0%E7%89%88/</url>
      <content type="html"><![CDATA[<p>原型是最近一门课的作业， 这是我在过程中记下的一些手记心得， 都是我认为是值得关注的地方。 未来会把这些后端函数加入TCP协议， 更贴近实战使用吧。基础的数据结构主要是链表， 算是用C自己再复习一遍链表实现。算法嘛？没有算法😂不需要考虑性能也就没有考虑算法优化咯。</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f149fxx25oj21360w6n5z.jpg" alt="screenshot"><br><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f149r4zqkaj213e0zgajd.jpg" alt="profileshot"></p>
<h2 id="Ongoing-notes"><a href="#Ongoing-notes" class="headerlink" title="Ongoing notes"></a>Ongoing notes</h2><ul>
<li>how to enter the interactive mode? the main function for interactive mode is process_args. Like the code snippet below, it keep reading inputs from stdin(then using <code>fgets</code> to feed it into a input buffer), then using tokenize function(making use of <code>strtok</code> to tokenize the input commands), then the input command is stored in <code>char ** cmdargv</code>, which just like <code>argv</code> we often use. <code>cmdargv[0]</code> stores the first command, like <code>profile</code> and so on. What is left is just to depend on the return value from each core functions to display a proper information back to the screen.  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;Welcome to FriendMe! (Local version)\nPlease type a command:\n&gt; &quot;);</span><br><span class="line"></span><br><span class="line">while (fgets(input, INPUT_BUFFER_SIZE, input_stream) != NULL) &#123;</span><br><span class="line">    // only echo the line in batch mode since in interactive mode the user</span><br><span class="line">    // just typed the line</span><br><span class="line">    if (batch_mode) &#123;</span><br><span class="line">        printf(&quot;%s&quot;, input);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    char *cmd_argv[INPUT_ARG_MAX_NUM];</span><br><span class="line">    int cmd_argc = tokenize(input, cmd_argv);</span><br><span class="line"></span><br><span class="line">    if (cmd_argc &gt; 0 &amp;&amp; process_args(cmd_argc, cmd_argv, &amp;user_list) == -1) &#123;</span><br><span class="line">        break; // can only reach if quit command was entered</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    printf(&quot;&gt; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>cast type when allocating memory for <strong><em>Fixed length character array</em></strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">typedef struct user &#123;</span><br><span class="line">    char name[MAX_NAME];</span><br><span class="line">    char profile_pic[MAX_NAME];  // This is a *filename*, not the file contents.</span><br><span class="line">    struct post *first_post;</span><br><span class="line">    struct user *friends[MAX_FRIENDS];</span><br><span class="line">    struct user *next;</span><br><span class="line">&#125; User;</span><br></pre></td></tr></table></figure>
<p>we need to do this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">char* username = malloc(MAX_NAME*sizeof(char));</span><br><span class="line">strcpy(newuser-&gt;name, username);</span><br></pre></td></tr></table></figure>
<p>to be able to allocate the memory for that character array. </p>
<ul>
<li>how to handle structs of linked list when only the head of the list is given like <code>int create_user(const char *name, User **user_ptr_add)</code>. Note that since we will modify the linked list itself, we will have to pass in a pointer of pointer. Now if we only want to iterate through this linked list, we don’t need the ptr of ptr. Resolved by referring to <a href="http://geeksquiz.com/linked-list-set-2-inserting-a-node/" target="_blank" rel="noopener">this post </a>, and refer to <a href="https://www.cs.bu.edu/teaching/c/linked-list/delete/" target="_blank" rel="noopener">this post</a> and <a href="http://geeksquiz.com/linked-list-set-3-deleting-node/" target="_blank" rel="noopener">this post from Geeksquiz</a> for deleting a node from a post. <blockquote>
<p>one key thing of dealing with ptr of ptr in linked list is that we need make clear the use of <code>curr</code> pointer and <code>*user_ptr</code> since we are suppore to change it in function <code>int create_user(const char *name, User **user_ptr_add)</code>. </p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// add the newuser to the end of linked list.</span><br><span class="line">// int create_user(const char *name, User **user_ptr_add) </span><br><span class="line"></span><br><span class="line">	// now append this node to the end of linked list.</span><br><span class="line">	User* last = *user_ptr_add;</span><br><span class="line">	if(*user_ptr_add == NULL)&#123; // if linked list is empty</span><br><span class="line">		*user_ptr_add = newuser;</span><br><span class="line">	&#125;</span><br><span class="line">	else&#123; // otherwise</span><br><span class="line">		if(strcmp(last-&gt;name, name) == 0)&#123; // if the first node is the same user.</span><br><span class="line">			return 1;</span><br><span class="line">		&#125;</span><br><span class="line">		while(last-&gt;next!=NULL)&#123;</span><br><span class="line">			if(strcmp(last-&gt;name, name) == 0)&#123; // if same user exists</span><br><span class="line">				return 1;</span><br><span class="line">			&#125;</span><br><span class="line">			last = last-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		last-&gt;next = newuser;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// delete the user with name from the linked list.</span><br><span class="line">// int delete_user(const char *name, User **user_ptr_del)</span><br><span class="line"></span><br><span class="line">		User* curr = *user_ptr_del;</span><br><span class="line">		User* prev; // store previous node.</span><br><span class="line"></span><br><span class="line">		// if head node itself holds the user to be deleted.</span><br><span class="line">		if(curr != NULL &amp;&amp; strcmp(curr-&gt;name, name)== 0)&#123;</span><br><span class="line">			*user_ptr_del = curr-&gt;next;</span><br><span class="line">			free(curr);</span><br><span class="line">			return 0;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		while(curr != NULL &amp;&amp; strcmp(curr-&gt;name, name) != 0)&#123;</span><br><span class="line">			prev = curr;</span><br><span class="line">			curr = curr-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		delete_user_from_friends(name, *user_ptr_del);</span><br><span class="line">		prev-&gt;next = curr-&gt;next;</span><br><span class="line">		free(curr);</span><br></pre></td></tr></table></figure>
<ul>
<li><p>type is not assignable during <code>malloc</code>: <code>struct user *friends[MAX_FRIENDS];</code></p>
</li>
<li><p>segmentation fault!!! <strong><em>Usually in practice, if we want to access the memory location where we don’t have access to, meaning that when we want to set some attributes, we need to first make sure that that part of memory has been malloc!!</em></strong></p>
<blockquote>
<p>One trick on this is to make sure that whenever we see a struct like this: first is to malloc memory for the all struct, then for each array, like here <code>name</code>, <code>profile_pic</code> and <code>friends</code> array. Especially the <code>friends</code> array, the haunting time when debugging for the final function <code>delete_user</code>, I always get a segmentation fault, which results from that I did not malloc the memory for the friend array at the very first beginning inside <code>create_user</code> function, thus when I try to change one element’s value, I will access to unallocated memory, a segmentation fault.</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">typedef struct user &#123;</span><br><span class="line">    char name[MAX_NAME];</span><br><span class="line">    char profile_pic[MAX_NAME];  // This is a *filename*, not the file contents.</span><br><span class="line">    struct post *first_post;</span><br><span class="line">    struct user *friends[MAX_FRIENDS];</span><br><span class="line">    struct user *next;</span><br><span class="line">&#125; User;</span><br></pre></td></tr></table></figure>
<ul>
<li>Difference between <code>memcpy</code> and <code>strcpy</code>. <code>strcpy</code> will stop when meeting a ‘\0’ line terminator, while <code>memcpy</code> will not do that, it can do the content copy without looking to the value of the contents.</li>
</ul>
<h2 id="Bugs-remaining-to-fix"><a href="#Bugs-remaining-to-fix" class="headerlink" title="Bugs remaining to fix"></a>Bugs remaining to fix</h2><ul>
<li>time.h. I finally do a trick to cover up the failure of using time.h. we are supposed to record the time when a post is created, and store the address of that <code>time_t</code>, which is actually a long int, to the struct attribute <code>post-&gt;date</code>, while it fails to display the right time when doing <code>ctime</code> in <code>print_user</code> function. I finally insert a time update right into the <code>print_user</code> function to let them next to each other and it display right result?!.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Responsive web design[第三期]-js动画]]></title>
      <url>http://chocoluffy.com/2016/02/04/Responsive-web-design-%E7%AC%AC%E4%B8%89%E6%9C%9F-js%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<p>Introduce greensock library to javascript, along with GPU acceleration to create high-quality and smooth animations. </p>
<a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>很多前端开发者会告诉你，你应该避免使用 JavaScript 动画。使用 CSS 动画会有更好的性能（更少的 CPU 时间）和更平滑的效果（更高的帧率）。</p>
<p>然而，JavaScript 动画慢的原因经常是因为你用的库并没有为动画进行优化。优化过的 JavaScript 动画引擎（比如 GreenSock 或 Velocity.js）有堪比 CSS 动画的性能。某些情况下 JS 动画甚至比 CSS 动画更快！可参考下面这个性能的比较， 最后发现在某些情况下greensock的性能会比jquery好上5-6倍</p>
<ul>
<li><a href="https://www.greensock.com/js/speed.html" target="_blank" rel="noopener">greensock</a> </li>
</ul>
<h2 id="引入greensock-js库"><a href="#引入greensock-js库" class="headerlink" title="引入greensock js库"></a>引入greensock js库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">TweenMax.fromTo(&quot;#box&quot;,1, &#123;</span><br><span class="line">    // from</span><br><span class="line">    css: &#123;</span><br><span class="line">      left: &quot;-200px&quot;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    // to</span><br><span class="line">    css: &#123;</span><br><span class="line">      left: &quot;200px&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 永久重复动画的选项</span><br><span class="line">    repeat: -1,</span><br><span class="line"></span><br><span class="line">    // 反转、重新运行动画的选项</span><br><span class="line">    yoyo: true,</span><br><span class="line"></span><br><span class="line">    // 改变 easing 类型</span><br><span class="line">    ease: Power2.easeInOut,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>什么是fps? 帧率或画面更新率是用于测量显示帧数的量度[1]。测量单位为“每秒显示帧数”（Frame per Second，FPS，帧率）或“赫兹”，一般来说FPS用于描述影片、电子绘图或游戏每秒播放多少帧，而赫兹则描述显示屏的画面每秒更新多少次。<br>由于人类眼睛的特殊生理结构，如果所看画面之帧率高于每秒约10-12帧的时候，就会认为是连贯的[2]， 此现象称之为视觉暂留。这也就是为什么电影胶片是一格一格拍摄出来，然后快速播放的。但30帧仅仅是流畅，而非平滑连续，因此有更多帧率的产品推出也就不足为奇了。<br>有声电影的拍摄及播放帧率均为每秒24帧，对一般人而言已算可接受，但对早期的高动态电子游戏，尤其是射击游戏或竞速游戏来说，帧率少于每秒30帧的话，游戏就会显得不连贯，这是因为电脑会准确地显示瞬时的画面（像是一台快门速度无限大的相机），没有动态模糊使流畅度降低。而使用相同帧率的摄影机拍摄物体移动时，该场景的视频必定会表现所有移动物体在曝光时间内所有位置的完整组合。因此很多新世代电玩游戏以动态模糊为特色。在实际体验中，60帧相对于30帧有着更好的体验。</p>
</blockquote>
<p>在app.js里面我们用y来表现出垂直状态的变化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function animateLogo()&#123;</span><br><span class="line">	TweenMax.fromTo(&quot;#logo&quot;, 2.5, &#123;</span><br><span class="line">		css: &#123;</span><br><span class="line">			y: &quot;-30px&quot;,</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, &#123;</span><br><span class="line">		css: &#123;</span><br><span class="line">			y: &quot;20px&quot;,</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		repeat: -1,</span><br><span class="line">		yoyo: true,</span><br><span class="line">		ease: Sine.easeInOut,</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="GPU加速"><a href="#GPU加速" class="headerlink" title="GPU加速"></a>GPU加速</h2><p>你可以把一个网页想象为一堆矩形。布局和绘图都是由 CPU 完成的：</p>
<p>CPU 计算这些矩形的布局。矩形在哪里？它们有多大？<br>CPU 把矩形渲染成点阵位图（bitmap）。<br>之后如果可能的话，矩形被送到 GPU 以获得更好的性能：</p>
<p>CPU 以点阵位图的形式上传到 GPU 中。<br>CPU 给 GPU 发送指令去处理这些位图。可能有平移/缩放/旋转，修改透明度，等等。<br>GPU 为什么比 CPU 快呢？假设我们把一个红色点阵和一个绿色点阵结合，CPU 不得不一个一个像素地做.</p>
<p>总的来说，当修改 CSS 属性时，有三种可能的开销：</p>
<p>重排（CPU。代价最高）。<br>重绘（CPU）。<br>变换, 旋转, 缩放, 透明度（GPU，代价最低）。</p>
<p>因此在使用transform的时候， 我们常常用y在表示垂直方向的移动，这么做是不会重新排列布局的， 而是在局部位置偏移。</p>
<blockquote>
<p>注意： left 只对 position: absolute 生效 </p>
</blockquote>
<p>transform 的原理是由元素的定位位置（absolute or relative) 偏移。<br>用 GreenSocks 去修改 left 的话是改变定位位置。<br>也就是说 left 的动画改变布局，但 transform 动画不会改变布局。</p>
<h2 id="多步骤动画"><a href="#多步骤动画" class="headerlink" title="多步骤动画"></a>多步骤动画</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var t = new TimelineMax();</span><br><span class="line">t.to(&quot;#box&quot;,1,&#123;x: 200&#125;)</span><br><span class="line">  .to(&quot;#box&quot;,0.5,&#123;rotation: &quot;360deg&quot;&#125;)</span><br><span class="line">  .to(&quot;#box&quot;,1,&#123;y: 100&#125;)</span><br><span class="line">  .to(&quot;#box&quot;,0.5,&#123;rotation: &quot;-=360deg&quot;&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="指示器-滚动指示条"><a href="#指示器-滚动指示条" class="headerlink" title="指示器(滚动指示条)"></a>指示器(滚动指示条)</h2><p>当窗口滚动时, 你可以用 window.scrollY 来算出窗口正在展示的是哪一部分。那么现在的重点就在于， 怎样可以获得关于元素所在位置， 高度的各种属性， 比如<code>scrollY</code>, <code>offsetHeight</code>, <code>offsetTop</code></p>
<ul>
<li><a href="http://stackoverflow.com/questions/6777506/offsettop-vs-jquery-offset-top/21880020#21880020" target="_blank" rel="noopener">offset的各种用法实例</a></li>
</ul>
<h2 id="取消link默认行为"><a href="#取消link默认行为" class="headerlink" title="取消link默认行为"></a>取消link默认行为</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function addSmoothScrolling()&#123;</span><br><span class="line">	var links = document.querySelectorAll(&quot;#slider-control a&quot;);</span><br><span class="line">	for(var i=0; i&lt;links.length; i++)&#123;</span><br><span class="line">		var link = links[i];</span><br><span class="line">		var section = document.querySelectorAll(&quot;div.section&quot;)[i];</span><br><span class="line">		(function(sec)&#123;</span><br><span class="line">			// console.log(sec);</span><br><span class="line">			link.addEventListener(&quot;click&quot;, function(e)&#123;</span><br><span class="line">				// console.log(sec.offsetTop+&quot;px&quot;);</span><br><span class="line">				scrollToElement(sec);</span><br><span class="line">				e.preventDefault();</span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;)(section)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>首先用一个闭包来保证， 里面的函数在click的时候才之行， 而在那个时候， i 已经到了最后一个link的位置， 所以必须提前找到对应的section， 然后在闭包中传入。 同时需要在click事件的最后加上一个e.preventDefault， 来阻止link的默认行为， link的默认行为是直接跳转， 然后我们需要动画来辅助。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> web design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Memory allocation in C]]></title>
      <url>http://chocoluffy.com/2016/01/26/Memory-allocation-in-C/</url>
      <content type="html"><![CDATA[<p>Learning memory allocation in C for beginners will be totally a pain. This post, distilled from course materials, will provide you a practice guide and example coding snippets to help you learning more and fast in C programming language. It is cherishable, at least to me :)</p>
<a id="more"></a>
<h2 id="Introduction-to-malloc"><a href="#Introduction-to-malloc" class="headerlink" title="Introduction to malloc"></a>Introduction to malloc</h2><ul>
<li>Variable defined in function will be stored in stack, so how to use that part of memory after function returns? we use <code>void * malloc(size_t size)</code> will allocate memory in heap. This function will remain the memory for the variables until the function explicitly deallocate them. The argument for this function indicates how many bytes of memory should it allocate.</li>
<li>In general, <code>size_t</code> is unsigned_int. Notice the <code>void *</code> type of the pointer, we know that in C, add 1 to a pointer will go to the next legal address, for <code>int*</code>, it is the next integer, for <code>char*</code>, it is next character.</li>
<li>A void pointer is a pointer that represent a generic type. It just points to the memory specified, so it do not need to specify right now what type of that memory is, instead, we will declare the type when use pointer:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int * pt = malloc(sizeof(int));</span><br></pre></td></tr></table></figure>
<p>the above code indicates that we will the allocated memory for integer. </p>
<h2 id="Example-code"><a href="#Example-code" class="headerlink" title="Example code"></a>Example code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">/* </span><br><span class="line"> * Return an array of the squares from 1 to max_val.</span><br><span class="line"> */</span><br><span class="line">int *squares(int max_val) &#123;</span><br><span class="line">    int *result = malloc(sizeof(int) * max_val);</span><br><span class="line">    int i;</span><br><span class="line">    for (i = 1; i &lt;= max_val; i++) &#123;</span><br><span class="line">        result[i - 1] = i * i ;</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">    int *squares_to_10 = squares(10);</span><br><span class="line">    </span><br><span class="line">    // let&apos;s print them out </span><br><span class="line">    int i;</span><br><span class="line">    for (i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">        printf(&quot;%d\t&quot;, squares_to_10[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Note that in the above code, there are several variables that are located in heap. They are, the address store inside the variable result, since it points to a integer that lies in heap, while <strong>the addresss of the variable result is not in the heap, it is in the stack</strong>. One quick trick is that those value in heap, their address is valid. </p>
<h2 id="Explicitly-deallocate-the-memory"><a href="#Explicitly-deallocate-the-memory" class="headerlink" title="Explicitly deallocate the memory"></a>Explicitly deallocate the memory</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int play_with_memory() &#123;</span><br><span class="line">    int i;</span><br><span class="line">    int *pt = malloc(sizeof(int));</span><br><span class="line"></span><br><span class="line">    i = 15;</span><br><span class="line">    *pt = 49;</span><br><span class="line">    </span><br><span class="line">    // What happens if you comment out this call to free?</span><br><span class="line">    free(pt);</span><br><span class="line"></span><br><span class="line">    // What happens if you uncomment these statements?</span><br><span class="line">    printf(&quot;%d\n&quot;, *pt); // output 49</span><br><span class="line">    *pt = 7;</span><br><span class="line"></span><br><span class="line">    printf(&quot;%d\n&quot;, *pt); // output 7</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    play_with_memory();</span><br><span class="line">    play_with_memory();</span><br><span class="line">    play_with_memory();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Important issue here: when returned from the function, all variables will be freed from stack, which means that the <code>i</code> and <code>result</code> in the above code will be removed. It will cause a memory leak if we forget to link the memory from <code>malloc</code> to other heap variables. Since there will be no way from elsewhere to access that part of memory.</p>
</blockquote>
<ul>
<li>The danger of memory leak is that if it accumulates, it will finally cause a <code>out of memory</code> issue.</li>
<li>what happens if we print out the value stored in that memory location after we free up that pointer? <strong>Address is still valid and the value can still be accessed, but this time, we are using the part of memory that does not belong to us</strong>. Note that using unallocated memory is OK in some cases, but it will be dangerous when that part of memory being reallocated. So, always use allocated memory!</li>
</ul>
<h2 id="Passing-values"><a href="#Passing-values" class="headerlink" title="Passing values"></a>Passing values</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void helper(int **arr_matey) &#123;</span><br><span class="line">   // let&apos;s make an array of 3 integers on the heap</span><br><span class="line">   *arr_matey = malloc(sizeof(int) * 3);</span><br><span class="line"></span><br><span class="line">   int *arr = *arr_matey;</span><br><span class="line">   arr[0] = 18;</span><br><span class="line">   arr[1] = 21;</span><br><span class="line">   arr[2] = 23;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    int *data;</span><br><span class="line">    helper(&amp;data);</span><br><span class="line"></span><br><span class="line">    // let&apos;s just access one of them for demonstration</span><br><span class="line">    printf(&quot;the middle value: %d\n&quot;, data[1]);</span><br><span class="line"></span><br><span class="line">    free(data);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>there are basically two ways to help to avoid memory leak, a) <strong>return value</strong>, if we define that function type to be a pointer type, so that we can return the pointer in order to assign the values in main function. b) <strong>argument</strong>, we pass the one we want to assign values to the function and do the assigning part inside that function, and this time, the function type can be void but still finish the task.</li>
<li>However, it is much harder to use <code>argument</code> one since in C, the changes inside the function will not be preserved if we return nothing. Therefore, we need to the “address-value” relation in such scenario – That is <strong>we pass in pointer, we change value pointed at pointer, without returning anything, and we’re done.</strong> While problem comes when we want to change the pointer, say this line <code>*arr_matey = malloc(sizeof(int) * 3);</code>, we want to change the pointer now, but such change will not be preserved after function. Therefore, we will need to pass in a <strong>“poiter of pointer” to deal with pointer assignment!</strong> </li>
</ul>
<h2 id="Nested-structure"><a href="#Nested-structure" class="headerlink" title="Nested structure"></a>Nested structure</h2><p>if we want to use a nested struture to represent an array, say in that array, each element points to another array, since we don’t know that array size at compilation time, we would use <code>malloc</code> to allocate memory for those int array. The code is like</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int ** pt = malloc(sizeof(int*)*2);</span><br></pre></td></tr></table></figure>
<p>Say, now, I want the pt[0] to hold up an array of one integer, the way to do that is to use:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt[0] = malloc(sizeof(int));</span><br></pre></td></tr></table></figure>
<p>Similarly, if we want pt[1] to hold up 3 integers, we would use:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt[1] = malloc(sizeof(int)*3);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note that when we free those pointers, we need to free the innermost pointer first then outer one. </p>
</blockquote>
<p>An complete code example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">    // this allocates space for the 2 pointers</span><br><span class="line">    int **pointers = malloc(sizeof(int *) * 2); </span><br><span class="line">    // the first pointer points to a single integer</span><br><span class="line">    pointers[0] = malloc(sizeof(int));</span><br><span class="line">    // the second pointer pointes to an array of 3 integers</span><br><span class="line">    pointers[1] = malloc(sizeof(int) * 3);</span><br><span class="line"></span><br><span class="line">    // let&apos;s set their values</span><br><span class="line">    *pointers[0] = 55;</span><br><span class="line"></span><br><span class="line">    pointers[1][0] = 100;</span><br><span class="line">    pointers[1][1] = 200;</span><br><span class="line">    pointers[1][2] = 300;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    // do other stuff with this memory</span><br><span class="line"></span><br><span class="line">    // now time to free the memory as we are finished with the data-structure</span><br><span class="line">    // first we need to free the inner pieces</span><br><span class="line">    free(pointers[0]);</span><br><span class="line">    free(pointers[1]);</span><br><span class="line">    // now we can free the space to hold the array of pointers themselves</span><br><span class="line">    free(pointers);</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Memory-model"><a href="#Memory-model" class="headerlink" title="Memory model"></a>Memory model</h2><ul>
<li>note that th variable in main function does not belong to global variable, indicating it should still go to the stack part. The “global data” part contains mainly three stuff: <strong>a) global variables, b) string literals </strong> Note that for the string literals, the code like this: <code>char* str = &quot;Hello world!&quot;;</code> can lie in a local function, it just means that the pointer str can be in the stack, while the string literal “Hello world!” is in global data part. </li>
<li>And dynamic memory allocation lie in heap.</li>
</ul>
<h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><ul>
<li><p>difference between a string and a character is that at the end of string, there is a <code>\0</code> as an ending signal. Once the character array declared, the size is fixed. Note that the difference between these similar version of declaring character array:</p>
<ul>
<li><code>char string[20] = &quot;cool shit&quot;</code>, it is defining a <strong>string variable</strong>, with a <code>\0</code> at the end of the array, note that there will be a lot of <code>\0</code> following the valid words. It can be changed afterwards.</li>
<li><code>char string[] = &quot;cool shit&quot;</code>, defining a <strong>string variable</strong> the size will be fixed according to the first assignment. It can be changed afterwards.</li>
<li><code>char* string = &quot;cool shit&quot;</code>, defining a <strong>string constant</strong>. it is a string literal! cannot be changed!! If you change the string, it will give a “bus error”. Main point here: _ <strong>it makes string point to a read-only memory where string literal is stored, while the above two way are indeed allocating memory and copy string to them.</strong>_</li>
</ul>
</li>
<li><p>difference between <code>strlen</code> and <code>sizeof</code>. <code>strlen</code> will return the valid number of characters before null character, while <code>sizeof</code> will just give you the size of whole char array including null characters.</p>
</li>
<li><p>use <code>strncpy</code> as a stable counterpart of <code>strcpy</code>, the usage is like: <code>strncpy(s1, s2, sizeof(s1));</code> see the complete code below, s2 is a string literal. </p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    char s1[5];</span><br><span class="line">    char s2[32] = &quot;University of&quot;;</span><br><span class="line"></span><br><span class="line">    // This is unsafe because s1 may not have enough space</span><br><span class="line">    // to hold all the characters copied from s2.</span><br><span class="line">    //strcpy(s1, s2);</span><br><span class="line"></span><br><span class="line">    // This doesn&apos;t necessarily null-terminate s1 if there isn&apos;t space.</span><br><span class="line">    strncpy(s1, s2, sizeof(s1));</span><br><span class="line">    // So we explicitly terminate s1 by setting a null-terminator.</span><br><span class="line">    s1[4] = &apos;\0&apos;;</span><br><span class="line"></span><br><span class="line">    printf(&quot;%s\n&quot;, s1);</span><br><span class="line">    printf(&quot;%s\n&quot;, s2);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note that s1 is a character array, which means that there is no null characters at the end. if we want to do this way, we want to add null character at the end.</p>
</blockquote>
<ul>
<li>Similarly, <code>strncat(s1, s3, sizeof(s1)-strlen(s1)-1);</code> is the stable version of using strcpy.</li>
<li><code>char * strchr(const char s, int c);</code> return the index at the first occurence of the character</li>
<li><code>char * strstr(const char* s1, const char* s2);</code> find sub string. see the code example below:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    char s1[30] = &quot;University of C Programming&quot;;</span><br><span class="line">    char *p;</span><br><span class="line"></span><br><span class="line">    // find the index of the first &apos;v&apos;</span><br><span class="line">    p = strchr(s1, &apos;v&apos;);</span><br><span class="line">    if (p == NULL) &#123;</span><br><span class="line">        printf(&quot;Character not found\n&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        printf(&quot;Character found at index %ld\n&quot;, p - s1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // find the first token (up to the first space)</span><br><span class="line">    p = strchr(s1, &apos; &apos;);</span><br><span class="line">    if (p != NULL) &#123;</span><br><span class="line">        *p = &apos;\0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%s\n&quot;, s1);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>if the character specified in the second argument cannot find the right place, then it will assign NULL to p in this case. We can use pointer subtraction to get the index. </p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[象征与符号]]></title>
      <url>http://chocoluffy.com/2016/01/23/%E8%B1%A1%E5%BE%81%E4%B8%8E%E7%AC%A6%E5%8F%B7/</url>
      <content type="html"><![CDATA[<p>是什么， 在流血。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1f0agj99z92j20zk0zkajv.jpg" alt="mirror"></p>
<p>每一个刺耳的反对声音， 都很容易被看作是一种象征， 与其说是自愿地走上风口浪尖， 不如说， 是在大众的狂欢和幻想意淫里演变为一场戏剧式的剑拔弩张。 人们娱乐着， 消遣着， 像是有了将帅挂靠着的小兵肆意地挑逗着对手的神经， 全然不觉语气里的傲慢与肤浅。 枪口最后还是走火了， 不过看热闹的小兵早已作鸟兽散， 留下曾经市井起义逐渐背离初衷的将帅， 在一片哀叹中， 付出沉重的代价。</p>
<p>关于查理周刊的事情， 我想试着从一个不那么主流， 但是仍然很有趣的角度去想， 究竟什么是象征， 是什么推动了出现象征性。是什么让这种呈现和代表变得躁动不安又难以抗拒。 又是什么， 在流血。</p>
<p>首先引起我注意的是这几句话</p>
<ul>
<li>“一种沉重的象征主义的重量——原本并不存在于我们的漫画中，也离我们很远的东西，现在落在了我们的肩上。”</li>
<li>“实际上，《查理周刊》一直以来都致力于反对象征主义：我们摧毁符号，打破禁忌，将那些幻想的泡沫破灭。我们很高兴看到人们给予《查理周刊》支持，但同时他们的做法却跟《查理周刊》的初衷背道而驰。”</li>
<li>“任何意义的象征主义都能被任何人利用起来做他们想做的事。”</li>
</ul>
<p>我接着联想到的是， 很久之前的一个大新闻， 戴安娜王妃之死。 如果大家还有印象， 当时那个车祸发生之后的几天， 是接踵而来的铺天盖地关于邪恶的小报记者的评论， 大家指责那些追逐在王妃身后的狗仔记者们， 认为他们手上沾满了鲜血， 要对公众心中那个高贵优雅的戴安娜王妃的事故负上不可推卸的责任。 然而如果仔细推敲， 渴望注视戴安娜王妃高贵而优雅的形象， 又在其陨灭之时渴求安慰的， 究竟是那些努力挖掘“隐私”的小报， 还是拥有着窥视他人生活的这个或许谈不上弱点的本能的大众呢？而那些狗仔小报， 或许只是市场的产物， 只是人们愿意窥视， 哪怕只是对他人生活的一种不恶意的关心的象征。 而一旦顶上了象征的头衔， 也容易在万众注视下成为笔伐口诛的对象。 换句话说， 很可能是人们这种不必然具备恶意的欲望， 促成了那种“有害”的小报和令人们讨厌的狗仔记者。</p>
<p>听上去挺“悖论”的， 为什么明明是不必然恶意的东西， 会衍生出有害的结果。 而为什么， 主角都是传媒媒体， 都是传播者。</p>
<p>人们饭前茶后的谈资， 自古放肆得甚至有点愚蠢朋克的法式幽默， 又真得能经受得住媒体放大器般的传播吗？媒体往往是言论自由和新闻自由的象征和符号。 美国宪法史上好几次最精彩的判决和宣判都和言论自由有关， 而关于新闻自由和涉及“所谓的政府内幕的间谍罪”之间的争论也一直不会停止。 人们不希望受到恶意言论所困， 却又畏惧在任何形式上的禁止和压迫上走得更远。 而媒体， 则更像一个扩音器， 无论是积极还是消极的影响都会被施加上令人喘不过气的压迫力。 一个我能想到的理由， 然而并不新鲜， 是更多的人们偏爱剑拔弩张多过鲜花掌声， 反对和刺耳， 带着张着血气的眼神， 比冷静和无为更为刺激和爽感。 而媒体， 只是一次次转发传递的情感累积， 只是在一场场人群的狂欢中那个热气朝天的广场， 没有了人群， 没有了咆哮， 也就没有它本身存在的意义。</p>
<p>人们可以在自己的本能和欲望中注视到许多象征的缘由。 或许象征本身， 就是人们所力所不及却昼夜痴狂的一种群体记忆吧。而没有了回响， 也就没有了意义。</p>
<blockquote>
<p>后记： 这篇文章的大部分构架是我在等地铁的时候偶然想到的。 缘于读书小组的一次主题讨论， 看到朋友分享的一篇文章， 由一些只言片语所启发所引来的一堆胡思乱想。 或许我可以写得更加详细一点， 但是可能大家在自己思考的时候的所思所想也已远超过我的文笔和见解， 多一些余地， 也多一些回响的空间嘛。趁周末的时候写点文字的感觉还是极好的， 望坚持！最后， 本文中关于戴安娜王妃的例子阐述， 也是启发于以前看到的北大法学系苏力教授关于隐私权的探讨， 而那些摘录的句子， 来源于下面这篇朋友转发的文章。附上我所参考的文章原文。</p>
</blockquote>
<h2 id="《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画"><a href="#《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画" class="headerlink" title="《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画"></a>《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画</h2><p>当地时间1月7日，法国漫画杂志《查理周刊》突遭恐怖分子持枪袭击，造成12人死亡，11人受伤。遇难者中包括杂志社五名重要的漫画家以及两名警察。面对这样的暴行，“Je suis Charlie”（我是查理）成为了一句口号，一面宣扬保护言论自由、抵制恐怖主义的旗帜。</p>
<p>Luz在《查理周刊》工作了20年。1月7日是他的生日，因此他在当天早上在《查理周刊》杂志社总部召开的每周编辑会议上迟到了，因此逃过一劫。现在他同其他的幸存者一起在为1月14日发行的下一期《查理周刊》做准备，这一期漫画将印刷100万份。在这份新的杂志中，Luz和他的同事们将在漫画中描述这周日的共和国大游行。在恐怖分子杀死了他的朋友，他的导师，他的亲人之后，Luz向记者讲述了他的愤怒，他的恐惧，他的怀疑。目前悲痛欲绝的他不能确定在1月7日的悲剧之后他是否还能继续画下去。</p>
<p>记者：下周三的《查理周刊》的内容将是很敏感的国家与政治问题。在目前这种不稳定的局势下，你们为什么要承担起这样的责任呢？</p>
<p>Luz：当我最初拿起画笔的时候，我并不认为这是一件危险的事，我们认为我们只是画出类似滑稽的米老鼠的东西而已。但现在，在死亡，枪击，暴力之后，一切都改变了。所以的目光都聚焦在我们身上，我们现在成了一个象征，就像我们画出来的漫画一样。《人道报》Humanité 将《查理周刊》2015年1月7号刊的作家Houellebecq漫画像作为封面，并配上头条标题“自由已被谋杀”，莫大的讽刺。一种沉重的象征主义的重量——原本并不存在于我们的漫画中，也离我们很远的东西，现在落在了我们的肩上。</p>
<p>《查理周刊》1月7号刊，刚出新作《屈服》的Houellebecq登上封面，书中想象了2022年伊斯兰化了的法国。</p>
<p>记者：您所说的“象征主义的重量”是什么意思呢？</p>
<p>Luz: 2007年，当丹麦报纸Jyllands-Posten把一系列穆罕默德的漫画刊登出来之后，我们被看成是为媒体言论自由抗争的麻烦制造者或是勇敢的白衣骑士。在2011年，当我们的办公室被燃烧弹攻击时，我们再一次被看作是白衣骑士。2012年，一部关于穆斯林的喜剧电影上映（穆斯林的无知），当时我们把这部电影画成了相关的漫画，得到了相同的回应：我们再一次成为了危险的麻烦制造者，画出危险的漫画导致法国领事馆关闭、导致在国外的法国人承担恐惧的麻烦制造者。当全球都因此处于恐慌之中时，我们只是该死的一本受大众喜爱的杂志而已。这本杂志成为了国家、国际的象征，但是，被杀死的是“人”，不是“言论自由”！是那些坐在办公室里画漫画的人。</p>
<p>记者：你的意思是说漫画的本质改变了吗？</p>
<p>Luz：自从我们开始画有关穆罕默德的漫画开始，漫画“不承担责任”的本质就开始一点点消失了。从2007年开始，我们的漫画被人们以字面上的意思来理解。人们，包括一些像Plantu那样的漫画家（Plantu，法国政治讽刺漫画家）都认为我们不该画那些关于穆罕默德的漫画，因为这些画都在网络上疯传。因此我们得处处小心遭人报复，这种感觉让人难以忍受。</p>
<p>记者：为什么？</p>
<p>Luz：从2007年开始，《查理周刊》就受到审查并被警告要承担责任。我们画出的每一幅漫画都被解读成是跟政治有关。这些责任就落到了我们肩上。但我们只是一份杂志，买了，打开看了，再合上，就这么简单。若是人们把我们的漫画传到网上，若是媒体强调我们的一些漫画，那是他们的责任，不是我们的。</p>
<p>记者：但同你们事与愿违的事情发生了。</p>
<p>Luz：我们被加上了象征主义的责任，而这本不是《查理周刊》的初衷。我们跟Plantu不同，我们反对象征主义。“战争中鸽子象征着和平”这类隐喻不是我们想要表达的。我们是在细节上下功夫，我们注重的是怎样把我们画的东西用法式幽默表达出来。</p>
<p>记者：漫画在某些情况下会被认为是粗鲁的，或是很朋克的东西。</p>
<p>Luz：有些时候愚蠢，有些时候粗鲁，至于朋克，那是肯定的。有时候漫画不会产生任何影响，另一些时候它就只是供人消遣的娱乐。《查理周刊》聚集了一群思想差异很大的漫画家。根据不同的漫画家用不同的风格来表现一副漫画——画政治或是艺术，漫画的本质也在改变。但是这种多样性的表达方式现在却不复存在了。每一幅漫画都被看作是我们所有人一起完成的。实际上，《查理周刊》一直以来都致力于反对象征主义：我们摧毁符号，打破禁忌，将那些幻想的泡沫破灭。我们很高兴看到人们给予《查理周刊》支持，但同时他们的做法却跟《查理周刊》的初衷背道而驰。</p>
<p>记者：你们现在已经成为引领民族团结的旗帜。</p>
<p>Luz：这种团结能帮助奥朗德巩固整个国家，同样对于勒庞提倡的恢复死刑的主张也有帮助。任何意义的象征主义都能被任何人利用起来做他们想做的事。而这恰恰跟《查理周刊》追求的不同，你不能去做任何你幻想出来的事情。当我们嘲讽，开政治的玩笑，或者说是娱乐大众的时候，我们没有成为一种符号。我认为Charb（《查理周刊》主编，在11.7恐袭案中遇难）是20世纪末、21世纪初的Jean-Marc Reiser，他用自己的方式对这个社会做出评价。他画出藏在表象下的阴影，那些爱说谎的丑陋的人。而现在我们也被掩盖在表象下了。</p>
<p>记者：您的意思是？</p>
<p>Luz：在目前一种情绪状态下发布《查理周刊》是一个正确的时机吗？这样快速地对所攻击的象征主义做出回应适合吗？我很怀疑。用象征主义来回应象征主义，这不是《查理周刊》做的事。昨天晚上我在脑海中描绘出一幅漫画，不过我可能不会把它画出来：地板上一滩滩污渍代表着遇难者倒下的地方，一幅眼镜散落在角落说“哈哈哈”，背景是黑色。这不是一个好的主意，因为它会被打上象征主义的标签。</p>
<p>记者：所以您的问题时“事件过后你们将以什么方式继续画下去？”</p>
<p>Luz：是的，以及我怎样在这样的背景下画画，在《查理周刊》被赋予了那么多幻想之后。</p>
<p>记者：《查理周刊》将怎么继续下去呢？</p>
<p>Luz：这将会很复杂。除了我之前提到的那些原因之外，我们那几个善于画画、善于思考政治、道德、思想激进的同事—— Charb, Tignous, Honoré，还有其他几位，不在了。在这种困难的时刻，我们剩下的人承担着重任。现在只剩下Catherine, Willem, Coco以及我，还有受伤的Riss。单凭我们几个人的力量怎么才能越过这种象征主义呢？（早前从《查理周刊》离职的Jul现在前来帮助策划下一期的内容。）每个人都能成为漫画家，但他们能抓住查理的精神吗？我们的精神流传了22年了，现在这份杂志得以生存至今都是杂志社所有成员的努力。</p>
<p>记者：你们觉得有必要将先知画进讽刺漫画里吗？抑或你们有时候会觉得自己掉进了陷阱里？</p>
<p>Luz：有趣的是在2007年的事件过后我们继续画了一些有关穆罕默德的漫画。在2007年、2011年以及2012年三次画的默罕默德漫画引起争议之后，Charb 和 Zineb El-Rhazoui（在《查理周刊》工作的穆斯林女记者） 又出了两卷关于穆罕默德生活的漫画，但并没有引起轰动。我们的目的达到了。Charb 想要按照这个设想一直进行下去，穿着他的登山鞋，和他喜欢得不得了的实际上很丑的军裤，站在高处（笑）。Charb相信我们可以继续克服禁忌和符号标准。但现在，我们成为了一种符号。当一种符号就是你自己的时候，你能怎么样去摧毁它？</p>
<p>站在被烧毁的办公楼前的Charb。</p>
<p>记者：我不知道。</p>
<p>Luz：我也不知道。这周我不打算去想这个问题，我也不确定以后我会不会来解决它。我们会继续发布《查理周刊》。我会强迫我自己的。我会去思考我死去的朋友们，我知道他们不是为了法国而倒下的！今天，看上去似乎是《查理周刊》为言论自由而死了。但事实很简单，就是我们的朋友死了。我们爱的朋友，那些有着让我们非常欣赏的才华的朋友死了。</p>
<p>记者：在BFMTV上，我们看到现在局势很混乱。Charb的女友Jeannette Bougrab 说，他们值得被埋葬在法国的先贤祠里。</p>
<p>Luz：《查理周刊》不同意这样做。在先贤祠里被火葬对于居里夫人来说并没有改变任何东西！</p>
<p>记者：这将是一个很好的纪念方式。。。</p>
<p>Luz：1月7日晚的自发集会我没有去。在那里人们唱起了国歌。我们谈起Charb, Tignous, Cabus, Honoré, Wolinski: 他们一定会嘲笑这种行为态度。人们用他们喜欢的方式来表达自己，但是共和国不应该也变成一个歇斯底里的送葬者。这是一种悲哀。</p>
<p>记者：我想这将成为你把明天的集会记录在漫画里的理由吧？</p>
<p>Luz：我也不知道。毫无疑问，明天将会有各种美好的场面，泪水，微笑，或许还会有点荒谬。同时这也会表现出《查理周刊》本质的变化：现在来支持我们的人中，有很多都从来没读过我们的作品。我并不是跟他们生气。我们的目标从来都不是说服所有人。</p>
<p>记者：去年11月，Charb发出声明呼吁大家来订阅《查理周刊》，来拯救这本杂志。那个时候这本杂志很孤独。</p>
<p>Luz：自从第三次因为画默罕默德而受到争议之后，一些时候我们感到很孤独。很多关于《查理周刊》无神论的说法、思想都涌现了出来。但实际上我就就只是简简单单，快乐的不信教的人而已。死掉的那些，都是快乐的无信仰的人。现在他们死了，不存在了，就跟其他所有人一样。</p>
<p>记者：对于瓦尔斯总理没有邀请右派的勒庞来参加明天的共和国大游行一事，你怎么看？</p>
<p>Luz：我没有任何看法。</p>
<p>记者：你认为现在人们是有要拯救《查理周刊》的趋势吗？</p>
<p>Luz：说老实话，去救什么？现在大家还在势头上，有气势。而在一年的时间里，这些为言论自由而战的气势又会剩下多少？会给予私人媒体资金赞助吗？人们会抵制纸媒和报刊亭的衰落吗？人们还会买报纸杂志吗？这些气势会剩下什么？也许会剩下，也许不会。</p>
<p>记者：你们将如何工作？</p>
<p>Luz：我们将继续画那些快乐的小人儿。作为漫画家，我们的工作是以这些快乐的人们为素材来画成漫画，以传达一个观点，就是我们所有人都是快乐的小人物，我们会努力把我们需要做的做好。那些被杀害的人都只是画出那些欢快的小人儿的普通人。</p>
<p>记者：因此让你们这些简单快乐的小人物来拯救整个法国，未免太沉重了？</p>
<p>Luz：是的。</p>
<p>（来源：法媒les in rocks，采访：Anne Laffeter）</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Responsive web design[第二期]-position/overlay]]></title>
      <url>http://chocoluffy.com/2016/01/20/Responsive-web-design-%E7%AC%AC%E4%BA%8C%E6%9C%9F-position-overlay/</url>
      <content type="html"><![CDATA[<p>在使用position等css属性的时候会经常在’absolute’,’relative’和’static’上进坑。 本文从实战的角度介绍position的各种应用和如何添加一层优雅的渐变背景过渡层。</p>
<a id="more"></a>
<h2 id="position-static"><a href="#position-static" class="headerlink" title="position: static"></a>position: static</h2><p>when dealing with nested container, the parent div is usually set to be <code>position: relative</code> while child div is <code>position: absolute</code> so that the child element can be positioned to any pos within parent container, if the parent div is set to <code>position: static</code>, child element will ignore parent position.</p>
<blockquote>
<p>Note that <code>position: static</code> is CSS default setting, so if we want to use <code>position: absolute</code>, we should always set the parent element to <code>position: relative</code>. ReactNative set the default value back, so no worries.</p>
</blockquote>
<p>when use position properties like <code>top</code> and <code>left</code>, we usually set them to <code>50%</code>, but the result will be like the element’s top left corner is sticked to the center, while the rest of it is not at the center, which is not what we want, we usually use <code>transform</code> property and get it to <code>-50%</code> to center the element.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">top: <span class="number">50</span>%;</span><br><span class="line">left: <span class="number">50</span>%;</span><br><span class="line">transform: translate(<span class="number">-50</span>%, <span class="number">-50</span>%);</span><br></pre></td></tr></table></figure>
<p>这里我们要说说 static 元素的另外一个坑。</p>
<p>absolute, relative: 有 z-index。<br>static: 没有 z-index。<br>没有 z-index 的元素默认在有 z-index 的元素下面。</p>
<p>img 和 h1 元素都是 position: static。z-index 对 static 元素不起作用，因此它们都在绝对定位的元素下面。</p>
<h2 id="position-relative"><a href="#position-relative" class="headerlink" title="position: relative"></a>position: relative</h2><p>接下来看看我们嘴经常见到的<code>position: relative</code>。<br>简单地说， 就是在这个元素原本的位置上做位移， 因为有了<code>position: relative</code>的设定， 我们可以用<code>top`</code>left`来移动这个元素。<br>If you specify position:relative, then you can use top or bottom, and left or right to move the element relative to where it would normally occur in the document.</p>
<p>Let’s move div-1 down 20 pixels, and to the left 40 pixels:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#div-1 &#123;</span><br><span class="line"> position:relative;</span><br><span class="line"> top:20px;</span><br><span class="line"> left:-40px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Notice the space where div-1 normally would have been if we had not moved it: now it is an empty space. The next element (div-after) did not move when we moved div-1. That’s because div-1 still occupies that original space in the document, even though we have moved it. 效果参考：<img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f08roukzilj20ry0lwjw8.jpg" alt="position relative"></p>
<p>另外， position:relative 还带来了z-index的属性。</p>
<ul>
<li>references from <a href="https://css-tricks.com/absolute-relative-fixed-positioining-how-do-they-differ/" target="_blank" rel="noopener">Absolute, Relative, Fixed Positioning: How Do They Differ?</a><br>There are two other things that happen when you set position: relative; on an element that you should be aware of. One is that it introduces the ability to use z-index on that element, which doesn’t really work with statically positioned elements. Even if you don’t set a z-index value, this element will now appear on top of any other statically positioned element. You can’t fight it by setting a higher z-index value on a statically positioned element. The other thing that happens is it limits the scope of absolutely positioned child elements. Any element that is a child of the relatively positioned element can be absolutely positioned within that block.</li>
</ul>
<h2 id="position-absolute"><a href="#position-absolute" class="headerlink" title="position: absolute"></a>position: absolute</h2><p>如果我们使用<code>position: absolute</code>呢, 这个元素将会脱离文本， 我们可以人意将它摆放到的想去的位置， 注意和static的区别是， 这个absolute是相对<em><strong>上一个定位为relative</strong></em>的定位， 而static是相对浏览器的定位。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#div-1 &#123;</span></span><br><span class="line"> position:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#div-1a &#123;</span></span><br><span class="line"> position:absolute;</span><br><span class="line"> top:<span class="number">0</span>;</span><br><span class="line"> right:<span class="number">0</span>;</span><br><span class="line"> width:<span class="number">200</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果参考：<img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f08rtih4o4j20pe0iadk1.jpg" alt="relative and absolute"></p>
<blockquote>
<p>最后一个补充：我们常常和<code>float</code>搭配使用的<code>clear: both</code>, 作用是使得定义了该属性的元素的左侧和右侧均不允许出现浮动元素。</p>
</blockquote>
<h2 id="滚动控制"><a href="#滚动控制" class="headerlink" title="滚动控制"></a>滚动控制</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"slider-control"</span>&gt;</span><br><span class="line">  &lt;a href=<span class="string">"#native"</span> class=<span class="string">"active"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href=<span class="string">"#touch"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href=<span class="string">"#async"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href=<span class="string">"#flex"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"dot"</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>让它们position: fixed, 效果参考：</p>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f06g8ze3fhj20yo0pw76w.jpg" alt="movement control"></p>
<h2 id="overlay-平滑过渡"><a href="#overlay-平滑过渡" class="headerlink" title="overlay 平滑过渡"></a>overlay 平滑过渡</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;section&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">container</span>" <span class="title">id</span>="<span class="title">intro</span>-<span class="title">section</span>"&gt;</span></span><br><span class="line"><span class="class">    &lt;div class="overlay"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="class">    &lt;h1&gt;<span class="title">I</span> <span class="title">Love</span> <span class="title">React</span>&lt;/h1&gt;</span></span><br><span class="line"><span class="class">    &lt;p&gt;<span class="title">I</span> <span class="title">just</span> <span class="title">want</span> <span class="title">to</span> <span class="title">see</span> <span class="title">the</span> <span class="title">so</span>-<span class="title">called</span> <span class="title">live</span>-<span class="title">coding</span>&lt;/p&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class">&lt;/section&gt;</span></span><br></pre></td></tr></table></figure>
<p>将最上面的container的背景设置为图片背景， 然后中间加一个div.overlay的div, 然后通过渐变设置其背景为主背景颜色。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#intro-section&#123;</span></span><br><span class="line">  background-image: url(../image/background.jpg);</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-position: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#intro-section h1, p&#123;</span></span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.overlay&#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: <span class="number">0</span>;</span><br><span class="line">  left: <span class="number">0</span>;</span><br><span class="line">  width: <span class="number">100</span>%;</span><br><span class="line">  height: <span class="number">100</span>%;</span><br><span class="line">  background-image: linear-gradient(rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),rgba(<span class="number">22</span>, <span class="number">21</span>, <span class="number">37</span>, <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f06lr99d5xj21kw0q47cw.jpg" alt="overlay"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="http://hex2rgba.devoth.com/" target="_blank" rel="noopener">hex to rgba online converter</a></li>
<li><a href="https://github.com/luckymore0520/sike-react-ilovereact" target="_blank" rel="noopener">ilovereact</a></li>
<li><a href="http://gugugupan.github.io/sike-react-ilovereact/" target="_blank" rel="noopener">最后成品效果ilovereact－添加动画</a></li>
<li><a href="https://github.com/gugugupan/sike-react-ilovereact/blob/master/index.html" target="_blank" rel="noopener">上面github项目的index.html</a></li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> web design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[时间知道[持续更新...]]]></title>
      <url>http://chocoluffy.com/2016/01/12/%E6%97%B6%E9%97%B4%E7%9F%A5%E9%81%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<p>因为， 只有时间知道。</p>
<a id="more"></a>
<h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><ul>
<li><a href="http://hanhailong.com/" target="_blank" rel="noopener">韩海龙的技术博客(Android\IOS)</a></li>
<li><a href="http://jinglei.me/" target="_blank" rel="noopener">荆雷的技术博客(React\Meteor)</a></li>
<li><a href="http://ramiro.org/vis/hn-most-linked-books-unique-users/" target="_blank" rel="noopener">Hacker News上评价最高的书</a></li>
<li><a href="http://www.yehbeats.com/" target="_blank" rel="noopener">YeHbeats的技术博客(Python\Hexo)</a></li>
<li><a href="http://zyden.vicp.cc/#blog" target="_blank" rel="noopener">Den的技术博客(Swift\Design)</a></li>
<li><a href="http://aljun.me/" target="_blank" rel="noopener">Aljun的博客(Python)</a></li>
</ul>
<h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><ul>
<li><a href="http://think-different-8.lofter.com/view" target="_blank" rel="noopener">余舜哲的lofter足迹</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 收藏帖 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Flexbox website layout - Intro]]></title>
      <url>http://chocoluffy.com/2016/01/12/Flexbox-website-layout-Intro/</url>
      <content type="html"><![CDATA[<p>My first attempt to build up a responsive website using Flexbox layout. Check <a href="http://chocoluffy.com/flex-layout/">Live Demo</a> here!</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1ezx7kdisiuj21kw0r1di7.jpg" alt="overview"></p>
<p>check <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener">this post</a> on the complete guide about Flexbox layout.</p>
<blockquote>
<p>Below is the code that can be applied to many text\presentation related website. [1] font is cool and elegant. [2] layout is fast since we set div to <code>display: flex</code>. We won’t be bother to type that anymore, focusing on “position” and “stretch”</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  background-color: #1F1E34;</span><br><span class="line">  color: #FFF;</span><br><span class="line">  font-family: &quot;Avenir Next&quot;,</span><br><span class="line">      &quot;HelveticaNeue-Light&quot;, &quot;Helvetica Neue Light&quot;, &quot;Helvetica Neue&quot;, Helvetica,</span><br><span class="line">      Arial, &quot;Lucida Grande&quot;, sans-serif;</span><br><span class="line">  font-weight: 100;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">  font-size: 64px;</span><br><span class="line">  font-weight: 100;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h2 &#123;</span><br><span class="line">  font-size: 48px;</span><br><span class="line">  font-weight: 100;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">  font-weight: 400;</span><br><span class="line">  color: #FFF;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a:hover &#123;</span><br><span class="line">  font-weight: 400;</span><br><span class="line">  color: #DADADA;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>especially the font, it is so beautiful!</p>
<p>These units are vh (viewport height), vw (viewport width), vmin (viewport minimum length) and vmax (viewport maximum length). we set the vh to 100 like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  height: 100vh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>for the parent div container, since we want that parent div can take up a viewport height. vh stands for “viewport height”</p>
<blockquote>
<p>Note that <code>flex-direction</code> indicate items’ aligning, rows or columns. Then <code>align-items</code> means main-axis and <code>justify-content</code> is for sub-axis.</p>
</blockquote>
<h2 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h2><p>在使用 ReactNative 时你会经常看到一个神秘的设定 flex: 1，用了来扩大一个 flexbox。flex 是一个简写，同时设置 flex-grow，flex-shrink 和 flex-basis 三个属性。它们的默认值为：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flex: 0 1 auto;</span><br><span class="line">/*</span><br><span class="line">flex-grow: 0;</span><br><span class="line">flex-shrink: 1;</span><br><span class="line">flex-basis: auto;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
<p>flex: 1 意为 flex: 1 1 auto</p>
<h2 id="Summary-For-All"><a href="#Summary-For-All" class="headerlink" title="Summary For All"></a>Summary For All</h2><p>basically using some flex-related properties to structure the whole website.</p>
<p>[1] to formate those section-like website, need to use <code>section</code> tag in html file and set the corresponding containter to be <code>100vh</code> which means the viewport height, so that each section can be strecthed to adapt to your screen height. (which is pretty elegant)</p>
<p>we usually use </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flex-direction: column;</span><br><span class="line">align-items: center;</span><br><span class="line">justify-content: center;</span><br></pre></td></tr></table></figure>
<p>these properties as container’s property.</p>
<blockquote>
<p>Note that we have main-axis and sub-axis, which will help you position the items by <code>align-items: center;
  justify-content: center;</code></p>
</blockquote>
<p>[2] structure inside each section. we may use another flexbox container inside one parent container to hold up more items like navigation or some scrum-map. And in this way, the <code>flex-direction</code> may usually be the opposite to the parent container. For the child container, we may wonder to stretch the block to whatever proportion to the whole layout. we want to use<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flex-grow: 1;</span><br><span class="line">flex-basis: 0;</span><br><span class="line">align-self: stretch;</span><br></pre></td></tr></table></figure></p>
<p>which also applies the same logic from main-axis and sub-axis when setting their values.</p>
<p>Note that the <code>flex-basis</code> is pretty useful when you try to eliminate the effect of inner text to the block when stretching since <code>align-self: stretch</code> ONLY stretch the empty space to full length!</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> web design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[现实和虚拟的边界]]></title>
      <url>http://chocoluffy.com/2016/01/09/%E7%8E%B0%E5%AE%9E%E5%92%8C%E8%99%9A%E6%8B%9F%E7%9A%84%E8%BE%B9%E7%95%8C/</url>
      <content type="html"><![CDATA[<p>什么花样。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1eztyce4tu0j20c807tjs7.jpg" alt="virtual reality"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有幸将在这个学期接触并学习虚拟现实， 我的授课教授Steve Mann被誉为“世界穿戴电脑之父”， 放一张图片镇楼：<br><img src="http://ww1.sinaimg.cn/large/c5ee78b5gw1eztyejobw4j21jg17kn6k.jpg" alt="wearable computing"><br>早在20年前就自己在车库里捣鼓出第一代可穿戴设备， 然后在MIT实验室完成很多重大突破。刚好在36氪上看到自己同门师兄的一篇文章（不是这一篇）， 感受到2016年真是虚拟现实技术爆发的“元年”， 就好像07年第一代iphone出世时的轰动以及随之而来移动应用的爆发， VR将在2016-2020期间迎来他的舞台和随着平台而来的新媒体交互， 游戏影视内容。 下面这一篇文章同样来自36氪， 是我认为对场景的分析和vision上比较make sense的， 没有太多国内外过于夸张的描述和猎奇。值得一读。</p>
<p>在平台回复“未来”， 可以回顾以前发布的一篇关于增强现实的文字和视频， 当宠物小精灵在大街上对战…还有什么花样。</p>
<p>余舜哲 16.1.9</p>
<p>一下文字转载自36氪。侵删。</p>
<h2 id="一个-“奥酷拉思”-的未来——为什么我相信-VR-会改变娱乐业以及这个世界"><a href="#一个-“奥酷拉思”-的未来——为什么我相信-VR-会改变娱乐业以及这个世界" class="headerlink" title="一个 “奥酷拉思” 的未来——为什么我相信 VR 会改变娱乐业以及这个世界"></a>一个 “奥酷拉思” 的未来——为什么我相信 VR 会改变娱乐业以及这个世界</h2><p>图片: Yestone.com 版权图片库</p>
<p>编者按：本文作者王冉，易凯资本有限公司（微信号：china-ecapital）创始人。文章首发于 36 氪。</p>
<p>内容提要：</p>
<p>如果说未来五到十年有什么东西能够像 Uber 颠覆全球出租车行业一样颠覆全球娱乐产业，我认为就是 VR（虚拟现实）这个东西。</p>
<p>我毫不怀疑，2016年 将是 VR 产业的元年。正像当年网景的 IPO 标志着互联网时代的到来，Oculus Rift 的上市也将成为 VR 时代正式开启的历史性标志。</p>
<p>VR 眼镜将遍地开花，谁都可能进入这个领域。至少在初期，各大 VR 眼镜商都会直接参与 VR 内容的制作。</p>
<p>所有需要插入手机、需要 PC 配合、需要手柄操作的 VR 眼镜都是过渡性产品，因为它们违反人性。未来的 VR 眼镜一定是一体式的，直接和云端的内容、应用和计算能力相连。</p>
<p>硬件商与内容商将从不同的出发点出发，互相侵入对方的领地，最终会出现多家硬软联姻、甚至硬软一体的 “索尼哥伦比亚” 或者 “哥伦比亚索尼”。当然，任何创意产业都无法被垄断，因此 VR 内容领域虽然会有巨头，但也会有层出不穷的中头、小头和微头。相比之下，硬件商经过三到五年的合纵连横，最终会走向整合，这个版图上最终留下的玩家应该不会比今天的手机厂商更多。</p>
<p>VR 将导致内容产业重新洗牌。在 VR 发展的初期，每个人都是斯皮尔伯格。VR 电影是 360 度的电影，它的轴心是观众的眼睛，故事必须沿着每一个观众的视线推进。这里面蕴藏着巨大的挑战、机会与诱惑。</p>
<p>VR 给电影业带来了很多前所未有的新课题。譬如，故事怎么讲剧本怎么写？又譬如，场景和声音切换怎么处理？再譬如，导演摄像如何藏身、360 度场景如何剪辑？还譬如，如何有分寸、有节制地进行感官刺激。未来导演会有更多的工作不是在现场，而是在机房。</p>
<p>VR 电影和 VR 游戏的界限会日渐模糊。一个观众可以与之互动并且影响故事进程的电影本质上就是一个具有电影结构和戏剧性的游戏。未来在电影和游戏之外，很可能会诞生 “游戏电影”（也可以称之为 “浸入式电影”）和 “电影游戏”（也可以称之为 “叙事性游戏”），它们的区别仅仅在于观众对于故事进程的影响程度。一个优秀的游戏电影的导演必须深谙游戏的逻辑；反过来一个优秀的电影游戏的导演必须精通电影的语言。未来电影和游戏的商业模式也将日益趋同。游戏里买装备、买道具、买体验的思路很可能会淘汰看电影买门票看贴片和植入广告的思路，真正有前途的是 “会员费 + 场景内购物 + 线下消费” 的强大组合。电影游戏化可能会比游戏电影化更容易走通。</p>
<p>在 VR 时代，超级 IP 同样重要，甚至更加重要。道理很简单：如果你是内容商，你已经承担了新技术新玩法新市场的风险，这时候应该尽量降低内容本身的风险。因此，手里有超级 IP 的内容公司以及与它们合作的硬件公司将比没有这些超级 IP 的玩家们更有机会品尝到 VR 的果实。</p>
<p>VR 电影是衍生品销售的天堂。这里所说的衍生品绝不仅限于玩具、T 恤、饮料这样的简单产品，它可以是一件极富设计感的大衣、一款来自米兰家具展的沙发、一个超级酷炫的数码产品，也可以是一辆梦幻跑车、一家 B 格闪耀的餐厅、甚至一个依山傍水的别墅样板房。这些原本植入在电影里只能当广告看的 “衍生品” 忽然间有了生命，栩栩如生地出现在你的面前，把展示变成了一场 360 度的亲密接触。</p>
<p>VR 时代电影院会遇到前所未有的挑战。在 VR 电影时代，电影院将很难通过小修小补来满足市场的需求，对着大银幕排排坐的观影方式将失去意义，电影院的整体设计只能推倒重来。未来电影院的主流形态会是怎样还有待定义，或许它会是 “常态影厅 + 社交观影包间 + 浸入式 VR 观影透明空间 + 衍生品体验馆” 的某种组合。</p>
<p>视频网站最有机会成为 VR 内容的发行平台。如果它们再和在线票务平台结合起来，取代现有的电影发行公司和院线公司几乎是必然。那个时候让 VR 电影给线下院线留出一个窗口期就好比让大闸蟹给阳澄湖留出一个窗口期一样可笑。</p>
<p>与 “VR 前” 时代相比，VR 时代是一个更加青睐生态型企业的时代。硬软一体、八面协同的生态型企业在 VR 时代的竞争优势将比以往更为明显。</p>
<p>虽然所有探索都值得鼓励，但万恶的资本和资本家们还是会更青睐那些创始人有正确的基因、技术或者模式具有颠覆性、潜在商业化路径清晰、最好还有一定规模的 VR 公司。这样的公司可以是独立的初创企业，也可以是大公司分拆出来的 VR 业务平台。后者甚至比前者更有机会快速发展。</p>
<p>正文：</p>
<p>先提几个问题：</p>
<p>十年后还会有电影院吗？<br>同一部电影，你用六十分钟看完，我看却用了三个小时，有可能吗？<br>你可以坐在沙发上就进入电影场景并且和 “身边” 的汤姆克鲁斯或者安妮海瑟薇互动吗？<br>“吓死宝宝了” 的电影场面有可能不小心真把宝宝吓死吗？<br>我们真的 “回不到从前” 吗？</p>
<p>所有这些问题之所以成了问题，是因为两个字母：VR。</p>
<p>全名叫 Virtual Reality，虚拟现实。</p>
<p>如果说未来五到十年有什么东西能够像 Uber 颠覆全球出租车行业一样颠覆全球娱乐产业，我认为就是 VR 这个东西。</p>
<p>VR 能玩出什么样的花活？</p>
<p>如果用一句话来概括 VR 为什么可以如此强悍，我觉得那是因为它可以让我们在感知上几近逃离物理时空的束缚，从四维世界进入到 “四维乘二” 的世界。</p>
<p>不妨想象一下这样的情景：</p>
<p>–你蜷缩在客厅的沙发上，用手机选好了想看的电影，戴上 VR 眼镜，然后你就进入了一个现代的虚拟 IMAX 影厅。这是你自己的包场，你可以邀请远在另一个城市的好友和你一起观影，他（她）就坐在你的旁边，你们可以一边看一边语音聊天，不用担心吵到别人，不用被不讲公德接电话的人打扰，周围没有韭菜盒子的气味，也没有后排一会儿踹你椅背一脚的小朋友。</p>
<p>–电影开始，你可以选择继续在虚拟 IMAX 厅观看，也可以选择进入电影场景。如果你选择进入场景，汤姆汉克斯或者安妮海瑟薇可能就在你身边，甚至还有可能向你点头致意。一只萤火虫飞来，你可以用手指与它互动。你可能像坐滑翔伞一样飞过一片森林，可能在枪林弹雨中左躲右闪，也可能在海底与大白鲨擦肩而过。你可能站在一个岔路口，选择向哪里走将决定你看到的故事。你也可能置身于一个古堡中，这个时候你推门走进这个房间会看到有一个女神在泡泡浴，而你走进另一个房间就会成为一起血腥凶杀案的目击者；你甚至还可以看到与你一起远程看电影的好友走进的是哪个房间…看完 VR 电影看 2D 就如同在视频网站上看漫画连载，再看 3D 感觉就像隔着睡袋做爱。</p>
<p>– VR 的应用绝不仅仅局限在电影这一个领域。未来你戴上眼镜，可以立刻出现在 TFBOYS 演唱会、《中国好声音》、或者世界杯决赛的现场。你在钢筋水泥的写字楼里坐在文件如山的办公桌前已经连续工作了 20 个小时，想打个盹，为什么不让自己一秒钟就躺在大溪地的海边。你有 200 斤重还有心脏病，你同样可以 “登上” 珠穆朗玛的峰顶。你想和李娜学网球，她随时可以在你身边示范动作。你想去感受一下 Angelababy 的衣帽间，或许只需微信支付 10 元就可以实现。夜深人静你想和远在地球另一半的闺蜜通个电话，拨完号码，你就坐到了她的对面，此刻她可能正穿着比基尼晒着日光浴。哪里发生重大新闻事件，你都可以瞬间成为新闻的现场目击者，新闻不再是用来 “看” 的，而是用来 “经历” 和 “体验” 的。</p>
<p>–还有更煽情的场景：若干年后，当父母不再，你戴上眼镜，马上就可以回到从前，一家人围坐在餐桌前其乐融融，吃着老的饭，谈着老的天，他们从未走远。只有当你摘下眼镜，才会发现眼角有两行泪水潸然而下。</p>
<p>VR 版图上正在发生什么？</p>
<p>我毫不怀疑，2016年 将是 VR 产业的元年。</p>
<p>说到 VR，不能不提奥酷拉思（Oculus）这个名字。这家 2014年 被脸书（Facebook）以 20 亿美元收购的公司是全球 VR 行业的领军企业。他们将于 2016年 初推出第一代面向大众的商用虚拟现实头戴式眼镜 Oculus Rift， 预计售价在 400 美元以内。当然，如果把使用它所需要的 PC 也算在内的话，全套设备的价格可能会达到 1500 美元。正像当年网景的 IPO 标志着互联网时代的到来，Oculus Rift 的上市也将成为 VR 时代正式开启的历史性标志。</p>
<p>为了能够让 Oculus Rift 一上市就有与它匹配的内容，Oculus 已经于今年1月 成立了一家专注于 VR 内容的公司 Oculus Story Studio（奥酷拉思故事工作室），并从 Pixar（皮克斯）这样的动画航母挖了一批顶尖人才。今年7月 份这家公司首映了一部 VR 动画短电影 “Henry” （《亨利》）的预告片。在这部预告片里，Henry 是一个刺猬，他在生日那一天邀请一帮朋友来给他庆生。朋友们都知道他见面喜欢拥抱，但因为他浑身是刺，大家都心有余悸，因此纷纷找借口推脱…作为观众，你你可以随意走动，当你走近 Henry 的时候，他会看着你并和你打招呼，仿佛你们生活在同一个世界里。在奥酷拉思工作室的另一部 VR 短片 “Lost”（《迷失》）里，只有当观众把目光投向一个特定的方向或者物体，电影情节才会继续，这样的电影有点像电影、游戏和图文小说的混合体。“Henry” 和 “Lost” 的完整版以及其它几部工作室制作的 VR 短电影将会和 Oculus Rift 同步推出。</p>
<p>与此同时，其它科技巨头也都不谋而合地把目光瞄准了 VR。</p>
<p>在 VR 眼镜方面，谷歌 2014年 就正式推出了他们经济实惠的 Cardboard (硬纸盒 + 手机) 解决方案。微软今年在展会上演示了集虚拟现实和增强现实于一体的 “混合现实” 眼镜 Hololens 在娱乐和办公领域的巨大潜力，近期他们也将宣布推出一款与谷歌 Cardboard 类似的微软版 VR 硬纸盒产品 VR Kit。三星 2014年9月 就推出了第一代 VR Gear，近日他们又宣布与 Oculus 合作生产的第二代 Gear VR 眼镜将于今年圣诞季启动销售，这款同样需要把手机插进眼镜的设备预计售价 99 美元。在无需插入手机的一体式眼镜市场，索尼刚刚宣布将于明年上半年推出他们的头戴 VR 眼镜 PlayStation VR，售价 399 美元，感觉上这款产品可能会更加侧重游戏体验。从产品上最被寄予厚望的是预计今年11月 面世的 HTC 与 PC 游戏巨头 Valve 合作的 VR 眼镜 Vive。这款配有手柄的 VR 眼镜被一些 IT 评论人称为目前市场上已知的最优秀的产品，售价应该会在 400 美元以上。最新加入战局的是佳能，他们在 9月 份宣布将于今年推出一款手持式 VR 眼镜。至于巨人中的巨人苹果，别以为他们会站在场边，他们已经于今年2月 取得了一项与 iPhone 手机相匹配的 VR 眼镜的专利，未来的 VR 世界里一定会有他们的惊鸿一瞥。</p>
<p>在 VR 拍摄设备方面，Gopro 今年晚些时候将投放一款叫 Odyssey 的专业 VR 摄像机，由 16 台 Gopro 相机组成一个 360 度拍摄转盘，价格将达到 15,000 美元。这和 Google 的开源 VR 平台 Jump 不谋而合。Jump 是一个完整的系统，除了摄影转盘之外还包括 VR 内容编辑器和一个由 YouTube 承载的 VR 内容频道。与谷歌的 Jump 类似的还有一家独立公司 Jaunt,后者的 VR 内容创生系统同样包括 VR 摄像机、内容编辑器和一个 VR 内容发行传输平台。另外一家在 Kickstarter 上完成了众筹的公司 Bublcam 的 VR 摄像机已经面试，这款定价 799 美元的设备拍出的 VR 内容可以通过谷歌 Cardboard、三星 GearVR 和 Oculus Rift 观看。诺基亚则在放弃手机战场后另辟蹊径，宣布将推出一款可以拍摄 VR 内容的 OZO 摄像机。手机巨头三星则期望下一代三星 Galaxy S7 手机的摄像头具有 VR 摄像的功能。最近还有一家初创公司宣布将于明年三月发售可以进行 VR 拍摄的 FlyBi 无人机，戴上配套的眼镜用户可以直接体验与无人机一起飞翔的感受。</p>
<p>视频公司也闻风而动。YouTube 早就设立了可以 360 度观看视频的 VR 频道。Netflix 和 Hulu 近日也都宣布将推出自己的 VR 应用。Netflix 会与 Oculus 和三星合作，为 Gear VR 设计一个可以虚拟观影的频道。Hulu 走得更远，不仅要为用户提供一个虚拟观影的体验（譬如，你可以坐在 Jerry Seinfeld 的沙发上看 Seinfeld），还计划直接投资参与一部 VR 短片的制作。</p>
<p>在 VR 内容方面更是百舸争流，令人目不暇接。</p>
<p>迪斯尼九月份刚刚宣布战略投资了 Jaunt，这几乎可以被认定是他们进入 VR 领域的重要宣言。华纳影业为电影 “Into the Storm”（《不惧风暴》）制作了可以在 VR 眼睛上观看的预告片。狮门影业也为其电影 “Insurgent – Shatter Reality”（《分歧者》）制作了一部四分钟的制作场景体验片。二十一世纪福克斯的 VR 部门福克斯创新实验室将 2014年 奥斯卡参选影片 “Wild”（《荒野》）的片段做成了 VR，还将为即将登上银幕的大片 “The Martian”（《火星救援》）制作一部独立的 VR 预告片。这家新闻集团旗下的电影公司还计划将自己片库里的上百部电影拿出来，放到 Oculus 的虚拟影院观影平台上（无法进入电影场景，但可以邀请远在万里之外的朋友在虚拟 IMAX 影厅一起观看）。三星最近聘请了 “The Walking Dead”《行尸走肉》的制作人 David Alpert 来制作一个 VR 系列剧。顶级好莱坞制作人 Mark Romanek、Robert Stromberg 以及《星际迷航 3》的导演 Justin Lin 也已经开始投入 VR 电影的制作。</p>
<p>与此同时，形形色色的 VR 电影节也开始粉墨登场。美国一家 VR 广告公司 Kaleidoscope 今年开始举办 “万花筒巡回 VR 电影节”，在 8月22日 到 10月14日 这段时间内将登陆纽约、旧金山、西雅图、洛杉矶、蒙特利尔、多伦多等十个城市。中国也有公司开始筹备举办类似的活动。</p>
<p>电影之外，VR 也开始握手电视。独立 VR 短片制作公司 Vrse.works 为全美老牌综艺节目 “Saturday Night Live”（《星期六直播秀》制作了了一期 40 周年VR 版特别节目。从电视节目制作公司 44 Blue 分拆出来的 Ovrture 即将开始制作两部 VR 真人秀，一部是关于监狱生活，一部关于夜间急诊–你可以零距离进入监狱重犯的生活，也可以看到车祸中遭受重创的人在你身边得到救治。今年七月被 HTC 战略投资了的 VR 社区和制作平台 WEVR 最近在 HTC 的 Vive 眼镜上发行了一部叫 “TheBlu: Encounter”（《蓝色邂逅》）的 VR 短片，观众置身于海底的鲸鱼群中，并且可以在一个 5 米乘 5 米的区域内自由游动（走动），领略海底的斑斓。</p>
<p>侧重于人文关怀的 VR 纪录片也开始批量出现。专注于 VR 新闻纪实的 RYOT 公司近期制作了多部 VR 纪录片，让观众身临其境地体验到叙利亚难民、尼泊尔灾民和墨西哥越境者的无望与艰难。Vrse.works 也与联合国合作推出了一部关于埃博拉的 VR 纪录片 “Waves of Grace”（《慈悲为怀》），由一位利比亚女性、埃博拉幸存者把观众带入到疫情中心区。一位看过这部影片的人评论道 “你会觉得埃博拉病毒就在你身边，那种震撼无与伦比。”“Perspective”（《视角》) 是一部 VR 系列剧，第一集讲述一个女大学生参加派对遭遇男生性侵，前半部分是站在感觉 “被邀请” 的男生视角，后半部分是站在感觉 “被侵犯” 的女生视角。VR 可以让观众换位思考，感同身受。</p>
<p>影视之外，游戏也是推动 VR 发展的重要引擎。全球第一个 VR 游戏体验馆 Zero Latency 今年8月15日 在澳大利亚墨尔本开门迎客。这个 400 平米的厂房式建筑里密布了 129 台摄像机。玩家四到六人一组，背着一个 2.5 公斤重的背包（里面包括电脑），戴着头盔眼镜，举着冲锋枪，置身于一个虚拟城市，穿大街走小巷，一会儿是仓库一会是坟场，随时有僵尸来袭，玩家必须相互配合第一时间把他们击毙。整个体验馆只有 100 米长，但一个小时玩下来，玩家平均至少会走动 1000 米。虽然今天还只是人类大战僵尸，但下一步很可能会是人人对战，甚至同队成员的角色会出现翻转，“很可能最好玩的部分就是最后十分钟把自己队伍中的敌人找出来并干掉”。</p>
<p>事实上，在 VR 世界里电影正和游戏合二为一。狮门影业基于自己的票房宠儿 “John Wick”（《疾速追杀》）正在与游戏发行商 Starbreeze 合作，双方将联手推出一款把玩家虚拟为电影主角的枪战游戏。WEVR 将为这款游戏打造一部量体裁衣的 VR 预告片，在 HTC Vive 眼镜上播放。</p>
<p>在 VR 领域，中国几乎与世界同步。</p>
<p>暴风科技之所以在 A 股市场成为 “妖股”，很大程度上是因为他们的 VR 概念。暴风旗下的暴风魔镜今年4月 拿到了华谊兄弟、天音通讯等机构 6000 万元的投资，新一轮融资正在进行中。今年第四季度，暴风魔镜将发布三代魔镜、VR 一体机、VR 摄像头等多款产品。小米、乐视等公司也在研发自己的 VR 产品。</p>
<p>新一代影视公司柠萌影业正在制作中国电视第一支 VR 预告片《择天记》。动画公司米粒影业就在不久前推出了旗下作品《三只小猪与神灯》的 VR 片段，这家公司表示将制作多部 VR 影片，还将推出以影片为主题的 VR 游戏，打造 VR 主题公园。有 “中国的 Pixar” 之称的追光动画除了明年1月1日 将推出首部好莱坞水准大电影《小门神》之外在不久的将来也会有一部 VR 短片问世。</p>
<p>来自中国的资本在全球 VR 市场同样不甘寂寞。黎瑞刚领导的华人文化产业基金（CMC）前不久就参与了由迪士尼领投的 Jaunt 公司 6600 万美元的融资。</p>
<p>VR 将给产业带来怎样的变革？</p>
<p>VR 眼镜将遍地开花，谁都可能进入这个领域。</p>
<p>毫无疑问，人们进入虚拟现实的 VR 世界，戴在头上的 VR 眼镜是一个超级入口。虽然未来或许隐形眼镜和芯片植入可以取代外挂式装备，但至少三五年内 VR 体验还离不开头戴式眼镜。</p>
<p>因此，VR 眼镜一定会成为千军万马的必争之地。已知的进入者包括国外的谷歌、微软、奥酷拉思（Oculus）、三星、索尼、HTC，以及中国的暴风影音、蚁视、天空（Laputa Hero）等。除此之外，苹果、小米、乐视等进入这个市场几乎是必然。</p>
<p>未来但凡与 VR 可能沾上两毛钱关系的商家都会四面八方涌向这里。从做手机和可穿戴设备的到做电视机的，从视频网站、在线售票平台到电影院线，从大型影视娱乐公司、体育公司到游戏公司，从搜索公司、电商平台到软件公司和芯片公司，都很可能会对 VR 眼镜市场有所图谋。当然，也会有形形色色的独立创业公司盯住这个市场，从这里起航。</p>
<p>最终的胜出者会有哪些没有人能预测，但它们必须具备两个基础条件：第一，强悍的技术和材料应用能力；第二，强大的内容制作和获取能力。</p>
<p>至少在初期，VR 眼镜商都会参与内容制作</p>
<p>和手机不同，没有了视频功能，手机还可以用来打电话发微信，而 VR 眼镜离开了 VR 内容就是一坨压在头上的塑料。</p>
<p>因此，VR 眼镜商同之前所有硬件商最不同的一点是–它从孕育的那一刻（注意，不是诞生的那一刻）起就必须开始考虑内容的事。</p>
<p>这也就注定了至少在 VR 眼镜的发展初期，大多数硬件商将会通过各种形式直接参与 VR 内容的制作，有些可能会设立自己的内容公司，从影视产业大量挖角；有些可能会战略投资或者收购现有的影视和游戏内容公司并给它们注入一些 VR 的基因，或者直接战略投资或者收购新兴的专注 VR 内容的公司；还有些可能会选择同现有的影视和游戏巨头设立合资公司，联合开发制作 VR 内容。</p>
<p>未来 VR 眼镜商销售眼镜大致会有两种模式。“1.0 模式” 是你花几百元到几千元不等买一个 VR 眼镜，这里面已经绑定了一个或几个 VR 内容发行平台，上面可能有几十部 VR 短片，将来还会有更多，多数内容免费将来也会有一些内容收费，你回家自己体验。“2.0 模式” 应该是一个巨大无比的电影 IP 你只能在某款 VR 眼镜上看，你可以选择花几千块买个 VR 眼镜免费看包括这部在内的 10-20 部 VR 电影，也可以选择花几千元购买一个 “电影票 + 衍生品 + 电影旅行项目 + 粉丝活动” 的套餐然后免费获得这款眼镜。“2.0” 肯定比 “1.0” 更有威力，未来 “1.0” 和 “2.0” 会长期共存，但 “2.0” 的比例会持续上升。</p>
<p>我相信，未来消费者因为内容买眼镜的情形要远多于因为眼镜而买内容的情形。也因此，在 VR 发展的初级阶段，各大 VR 眼镜商出于培育市场和行业竞争的考虑会直接参与 VR 内容的制作。但很快他们会发现，长期这样做既不现实也不经济，因此一定会出现一两个全行业的 VR 拍摄标准和几个高度整合的 VR 内容发行平台。各眼镜商对独家内容的掌控将更多体现在第一个 “VR 窗口期” 的独家权利和线上线下联动整合营销的各种可能性上，而不是对这个内容的永久垄断上。最终有一天，戴别人家眼镜的客户在别人的播放平台上也应该能看到自己的这部 “独家作品”，类似今天万达影院与万达参与投资拍摄的电影的关系。</p>
<p>VR 将导致内容产业重新洗牌</p>
<p>无论在好莱坞还是在中国，影视公司的市场格局已经基本尘埃落定，前五大公司占据 50%以上票房已是必然。</p>
<p>但 VR 又把人们拉回到同一起跑线–因为，全世界，到今天，还木有人，拍过 VR 大电影，并成功。在 VR 发展的初期，每个人都是斯皮尔伯格。</p>
<p>VR 电影是 360 度的电影，它的轴心是观众的眼睛，故事必须沿着每一个观众的视线推进。</p>
<p>这是多么大的挑战、机会与诱惑。</p>
<p>VR 给电影业带来了很多前所未有的新课题–</p>
<p>譬如，故事怎么讲，剧本怎么写？传统的 2D、3D 电影，无论结构如何跳跃，都是线性的，每个人看同一部电影在第 20 分 30 秒看到的都是同样的情节和场景。VR 电影完全打破了这种线性。观众自己决定他将跟着谁走进哪个房间，是先看墙后面还是先看树上面，在十字路口是向左转还是向右转。同样一部电影，一个人看完可能只需要 20 分钟，另一个人看完却可能用了一个小时。（譬如前面提到 Oculus 制作的《迷失》，观众看完所需的时间从 3 分半到 10 分钟不等。）这个时候故事怎么讲，剧本怎么写？一部电影里需不需要多个平行发生的故事？这些平行发生的故事如何交互连接？你如何引导观众看有故事的这个方向而不是没故事的那个方向，用声音、道具还是用光？我们到底要给观众多大的选择权，在选择与效率、自主与预设之间如何平衡？如果观众就是不听你的引导你要不要强行把他拉回来？能否让观众不仅在电影场景中选择自己去哪里看什么，还能在故事里扮演自己选择的角色，并据此推进他所看到的故事进程？最重要的，如何确保 VR 电影仍然能够讲出好的打动人心的故事而不会让技术喧宾夺主？所有这些今天都没有答案，需要大量的实验和试错。很多人可能不知道，从第一台电影摄像机诞生到第一部真正电影诞生中间隔了二十多年，我相信 VR 长电影的诞生应该不需要那么长的时间。</p>
<p>又譬如，场景切换和声音切换怎么处理？平时我们看电影的时候不会因为场景切换而感到不适，但如果你置身场景当中，场景切换的时候可能就会感到晕眩。你当然可以可以在切换场景之前把观众弹出场景，等到切换完成再重新带入，但这样进进出出会不会让整个体验显得支离破碎？或许，最适合拍 VR 电影的是那些场景有变化不单一但是线性自然、不需要反复切换的故事（举例：一个人在海上漂流、飞机失事一群人滞留孤岛、古堡里发生谋杀案、索马里街头巷战等），而不是像《盗梦空间》那种频繁切换把时空玩残的电影。在声音方面，如何确保声音跟着目光走，让电影的声效变得更加 “聪明”？譬如，你置身于电影中一个喧嚣的夜场，这个时候你看舞台，听到的就是舞台上的演唱；看周围的人，听到的就是他们的喧嚣；看卡座里的人，能听到他们扯着嗓子的对话；男主角出去接电话，你看他的背影，就能听到他在电话里磁性的声音。</p>
<p>再譬如，导演、摄像如何藏身？360 度场景如何剪辑？在传统的 2D 和 3D 电影中，这从来不是一个问题。一旦进入 VR 电影， 这个问题立即凸显。总不能让观众正沉浸在男神女神的激情缠绵或者杀手出现的深度恐怖中忽然一回头就看见导演摄像场工拿着对讲吆五喝六旁边还有一车盒饭。除此之外，剪辑也是一个难题–如何让导演在 2D 的监视器上剪辑出 360 度的场景？</p>
<p>还譬如，如何有分寸、有节制地进行感官刺激。你看传统电影的时候，情节再恐怖，你一看周围的观众或者窗外的车水马龙，立刻就可以得到舒缓。但在 VR 电影时代，你就在场景里，如果你眼前的衣橱里忽然倒下具尸体或者身边猛然蹿出只面目狰狞的怪兽，心脏不好的就未必是一句 “吓死宝宝了” 就可以轻易平复的了，弄不好会出人命。因此，如何在调动感官情愫和尊重生理极限之间保持平衡，将会是是电影人的新课题，在确立全球规范之前也一定会引起一波波的争议。</p>
<p>所有这些新课题都没有现成的答案，华谊光线博纳华策这样的影视巨头也没有可以依赖的现成资源。因此，VR 影视公司批量涌现几乎是必然的。它们中间大多数会失败，少数会被投资或整合，但也会有极少数借着这波 VR 大潮快速发展脱颖而出，成为新一代的影视游戏旗舰，整个行业就此洗牌。</p>
<p>VR 电影和 VR 游戏的界限会日渐模糊</p>
<p>由于观众已经置身于电影场景中，剩下的问题就是在多大程度上电影可以为他们留出与电影中的人物、场景和故事互动的空间。如果一个观众不仅可以身临其境，还可以随时和电影中的人物互动，那么这个电影与游戏其实已经开始接近；如果他还能影响电影里故事的走向和进程，那么它与游戏已经没有本质的区别。一个观众可以与之互动并且影响故事进程的电影本质上就是一个具有电影结构和戏剧性的游戏。未来在电影和游戏之外，很可能会诞生 “游戏电影”（也可以称之为 “浸入式电影”）和 “电影游戏”（也可以称之为 “叙事性游戏”），它们的区别仅仅在于观众对于故事进程的影响程度。一个优秀的游戏电影的导演必须深谙游戏的逻辑；反过来一个优秀的电影游戏的导演必须精通电影的语言。</p>
<p>是技术的进步为电影与游戏的混搭和融合提供了可能。随着形象、动作、表情捕捉技术的不断提升，电脑可以模拟出出演演员的大部分特征，从而减少他们在电影中的物理表演量。这也为观众与演员的互动提供了可能。事实上，一部 VR 电影可能由于平行故事的存在或者与观众互动的需要导致演员的表演总量看似多了很多，但他们真正需要物理表演的部分很可能不升反降。因此，未来导演会有更多的工作不是在现场，而是在机房。</p>
<p>VR 电影的游戏化也意味着未来的影视公司与游戏公司的界限会越来越模糊。VR 电影和 VR 游戏也会像《花千骨》一样天然融合，两边都可能成为对方的广告牌。所有 VR 电影公司里都会有游戏人才，所有游戏公司在推出大游戏 IP 的时候也会把 VR 电影短片作为营销标配。优秀的影视公司和游戏公司会有更多的理由走到一起尝试各种合作与嫁接，在相互学习、渗透、协同和联姻中共同成长。</p>
<p>VR 电影是衍生品销售的天堂</p>
<p>在 VR 电影中，你可以和里面的人物（当然也可以是卡通形象）生活在同一个世界里，他们就在你身边，几乎是触手可及。你可以和他们对视、对笑、游戏、调情，这自然为衍生品销售转动起一个超级强大的引擎。未来你甚至不用脱离场景，就可以在场景中直接下单，等你看完电影摘下眼镜，你购买的衍生品已经被送到你的手边。</p>
<p>这里所说的衍生品绝不仅限于玩具、T 恤、饮料这样的简单产品，它可以是一件极富设计感的大衣、一款来自米兰家具展的沙发、一个超级酷炫的数码产品（譬如下一代可以直接拍 VR 的手机），也可以是一辆梦幻跑车、一家 B 格闪耀的餐厅、甚至一个依山傍水的别墅样板房。这些原本植入在电影里只能当广告看的 “衍生品” 忽然间有了生命，栩栩如生地出现在你的面前，把展示变成了一场 360 度的亲密接触。</p>
<p>VR 时代电影院会遇到前所未有的挑战</p>
<p>如果 VR 电影的入口是头戴式眼镜，那么你是否还需要去电影院观看 VR 电影的确成了一个问题。</p>
<p>在 VR 电影时代，电影院将很难通过小修小补来满足市场的需求，对着大银幕排排坐的观影方式将失去意义，电影院的整体设计只能推倒重来。未来电影院的主流形态会是怎样还有待定义，或许它会是“常态影厅 + 社交观影包间 + 浸入式 VR 观影透明空间 + 衍生品体验馆” 的某种组合。这种侵入式观影空间可能是 2 米 x 2 米的 “小包”，也可能是 50 米 x 50 米的 “大场”，墙壁以全透明或半透明的玻璃为主。那时候你再来电影院，看到的将不是传统电影厅里一排一排头戴 VR 眼镜的观众，而是一个个透明房间里的人，戴着头盔，做出各种怪异的动作和表情。</p>
<p>我相信即便在 VR 电影时代，常态的电影厅还将继续有存在的价值，还会有传统 2D 电影继续上映；反倒是 3D 电影很可能是一个过渡性产品，很快将被 VR 取代。</p>
<p>有人认为 VR 时代的电影院会成为一个拥有非凡计算能力的机房。你可以戴着自己的眼镜过去，用电影院提供的电脑，体验各种 VR 电影的惊心动魄。我觉得这听上去有点像十年前的网吧，把科幻片生生演成了怀旧片。未来所有的计算能力一定都在天上，在云中。你去电影院只有三个可能的原因：a) 为了社交；b) 为了更好的 VR 体验；c) 这电影只有电影院里有。</p>
<p>对电影院来说，a) 是福音，b) 需要主动思考和探索，而 c) 是最大的不确定因素。这是因为–</p>
<p>视频网站最有机会成为 VR 内容的发行平台</p>
<p>短期内 VR 电影或许可以帮到电影院。电影院可以在上映某部大片的同时在电影院里辟出一个体验区，在这个体验区里观众可以戴上 VR 眼镜，置身大片的场景中，体验大片的一个片段。摘下眼镜转身就可以买到你刚刚在场景中看到的东西，然后你可以带着它走进旁边的 5号厅去欣赏完整的 2D 或者 3D 电影。</p>
<p>但这显然只是 VR 发展的初级阶段，不是它的本意。未来 VR 电影的主流一定是完整独立的 VR 电影，而不是 2D、3D 电影的预告片。</p>
<p>即便电影院面向 VR 电影时代进行了改造，完成了升级，一个绕不过去的问题是：对 VR 电影来说，未来的主发行渠道还必须像今天的 2D 和 3D 电影一样必须是电影院吗？如果电影院本身被边缘化了，传统的电影发行公司和院线公司还有存在的意义吗？</p>
<p>我们不妨设想一下，如果带宽和计算能力都不是问题（它们将来一定不是问题），一旦眼镜在观众手里，电影在硬件商和内容商手里，连接观众和内容还需要什么？</p>
<p>无非一个是支付，一个是播放平台（包括背后的带宽、计算能力和 CDN 网络等）。因此，今天领先的视频网站在 VR 内容（至少是影视内容，将来甚至也包括游戏内容）发行方面拥有天然的优势。如果它们再和在线票务平台结合起来，取代现有的电影发行公司和院线公司几乎是必然。那个时候让 VR 电影给线下院线留出一个窗口期就好比让大闸蟹给阳澄湖留出一个窗口期一样可笑。</p>
<p>因此，未来 VR 电影产业链条上真正不可或缺的只有硬件商 + 内容商 + 播放和支付平台，其它的都可有可无。而在这样一个产业链条里，那些拥有大量用户、投得起研发买得起 IP、左手有支付工具右手有视频平台、既有硬件经验又有内容资源、影视和游戏双剑合一的生态型玩家显然会占尽优势。除此之外，也会有一些专注 VR 内容发行和播放的平台破茧而出，试图以 VR 为突破口扩挑战视频和影视发行行业的既有格局。在这样一个时代如果手里没有 VR 硬件、VR 内容和 VR 发行平台这三张牌里的至少一张，将很难出现在影响娱乐业产业格局的公式里。</p>
<p>对传统电影院来说，要想在 VR 电影这波浪潮中不被边缘化，要么找到能让观众即便家里有眼镜也心甘情愿带着眼镜来影院观看的理由（譬如只有在电影院看才能体验到某种特殊效果或者才能场景中下单看完后立即拿到衍生品），要么通过整合做大然后进入 VR 电影的投资和制作确保至少有一部分 VR 电影只有电影院才能看到，否则集中放映和观看这件事会越来越没有市场。这点和体育比赛和演唱会不一样，因为那些都有 “现场” 的概念，你戴上头盔固然可以获得无限接近现场的感受，但你毕竟不在现场。但电影就不同了，电影院本来也不是电影的现场，电影的真正 “现场” 在 VR 电影的场景里。</p>
<p>VR 时代谁将成为赢家？</p>
<p>今天，虽然行业巨头和一些 VC、PE 已经开始在 VR 的方向上投石问路，但总体来说 VR 产业–无论是技术、产品还是内容、应用–都还处于 “Pre-元年” 的早期阶段。</p>
<p>随着 2016 “VR 元年” 的到来，VR 产业在 2016-18年 将进入 “快速播种” 的第一阶段。在此期间，大多数领先的硬件公司、视频网站和内容公司会通过新公司设立、分拆、合资、战投、并购等方式在 VR 领域开始布局，专注于 VR 眼镜、VR 相机、VR 内容制作和 VR 内容发行的创业企业会密集诞生，资本（尤其是早期资本）也会开始密切关注这个产业里的投资机会。一些财务投资人会与产业玩家联手，设立专门的 VR 产业基金，布局 VR 产业链。预计 2016年 全球完成的 VR 短片会达到数百部，2017-18年 随着头戴式眼镜的技术进步（特别是在重量和舒适感方面）或许会有第一部基于强 IP 的 VR 长电影诞生；2016-17年，大型 VR 游戏将陆续推出，并开始引领游戏产业的潮流；2017年 也将出现销售量突破百万量级的 VR 眼镜商。</p>
<p>2018-2020年，VR 硬件公司和内容公司完成初步的勾兑，形成硬软一体的几大 VR 生态阵营，专注 VR 内容跨阵营分发的发行平台会初露倪端。未来很可能不会有只做 VR 眼镜而不涉足 VR 内容的公司；专注 VR 内容的独立制作公司会有很多，但平台级的大内容公司同样会寻求对 VR 硬件的掌控。这是因为未来的市场和产业格局一定会要求大的玩家在硬件与内容之间有完美协同联动、根据需要自由安排收入模式分配商业利益的能力。这个阶段的核心商业模式就是两个，要么以内容拉动硬件销售，要么以硬件拉动内容销售。国外以 Oculus、苹果、三星为代表，国内以乐视、小米为代表的硬件公司很可能会成为娱乐内容产业升级的重要推手，每一部有影响力的 VR 电影的出品方中都会出现硬件商的名字。此外，随着 VR 内容的不断丰富，有规模的 VR 广告平台会开始出现。</p>
<p>2020年-2022年，VR 行业的标准基本确立，跨阵营的发行平台如日中天取代了今天的电影发行公司，VR 场景内营销和售卖将会逐渐形成规模，基于 VR 内容的新电商平台将会诞生。在这个阶段，VR 也将被更加广泛地应用到娱乐之外的其它领域。</p>
<p>尽管一切才刚刚开始，百舸争流的热闹场面已经在发生，但和所有其它产业一样，最终能够胜出的一定只是少数人。除了 Oculus 多少有点一骑绝尘的感觉之外，目前其他的玩家都大致还在同一个起跑线上。</p>
<p>对于谁有可能成为未来 VR 产业的赢家，我的总体感觉是：</p>
<p>所有需要插入手机、需要 PC 配合、需要手柄操作的 VR 眼镜都是过渡性产品，因为它们违反人性。未来的 VR 眼镜一定是一体式的，直接和云端的内容、应用和计算能力相连。清晰度、舒适度和内容兼容度都可能成为决定 VR 眼镜厂商命运的向度。虽然最终芯片技术的发展或许可以让我们不再需要头戴式设备，但直到那一天，我看不到头戴式眼镜取代手机的可能性。它可以和手机完美互动，但这种互动肯定不应以把手机放进自己躯体里的方式来进行。</p>
<p>硬件商与内容商将从不同的出发点出发，互相侵入对方的领地，最终会出现多家硬软联姻、甚至硬软一体的 “索尼哥伦比亚” 或者 “哥伦比亚索尼”。当然，任何创意产业都无法被垄断，因此 VR 内容领域虽然会有巨头，但也会有层出不穷的中头、小头和微头。相比之下，硬件商经过三到五年的合纵连横，最终会走向整合，这个版图上最终留下的玩家应该不会比今天的手机厂商更多。</p>
<p>随着 VR 电影和 VR 游戏的界限越来越模糊，未来电影和游戏的商业模式也将日益趋同。游戏里买装备、买道具、买体验的思路很可能会淘汰看电影买门票看贴片和植入广告的思路，真正有前途的是 “会员费 + 场景内购物 + 线下消费” 的强大组合。电影游戏化会比游戏电影化更容易走通。</p>
<p>在 VR 时代，超级 IP 同样重要，甚至更加重要。道理很简单：如果你是内容商，你已经承担了新技术新玩法新市场的风险，这时候应该尽量降低内容本身的风险。因此，手里有超级 IP 的内容公司以及与它们合作的硬件公司将比没有这些超级 IP 的玩家们更有机会品尝到 VR 的果实。</p>
<p>与 “VR 前” 时代相比，VR 时代是一个更加青睐生态型企业的时代。硬软一体、八面协同的生态型企业在 VR 时代的竞争优势将比以往更为明显。</p>
<p>虽然所有探索都值得鼓励，但万恶的资本和资本家们还是会更青睐那些创始人有正确的基因、技术或者模式具有颠覆性、潜在商业化路径清晰、最好还有一定规模的 VR 公司。这样的公司可以是独立的初创企业，也可以是大公司分拆出来的 VR 业务平台。后者甚至比前者更有机会快速发展。</p>
<p>一个被 VR 改变的世界会有多么精彩？</p>
<p>十五年前，当 AOL、China.com 如日中天的时候，没有人会想到十五年后的世界会是今天这个样子。同样，无论我们今天试图多么深入地研究 VR 产业，面对十年、十五年之后的世界我们一定也是井底观天。</p>
<p>与预测相比，我们有更多的畅想。与答案相比，我们有更多的问题。我愿意以下面这些问题做为本文的结尾。回答它们应该不需要十五年的时间。</p>
<p>三到五年后是否所有的相机和手机都可以拍摄 VR？</p>
<p>头戴式眼镜什么时候可以做到轻如蝉翼？未来观看 VR 内容是否一定需要头戴式眼镜？我们会不会带上一副隐形眼镜或者贴上一片芯片就可以彻底驱动我们的感官？</p>
<p>未来的人们是否会彻底生活在现实和虚拟两个世界里，拥有多个身份，并在它们之间来回游走切换？</p>
<p>在虚拟的世界里，是否大脑–而非身体–将支配一切？只要你愿意（当然也许你需要为此付出点费用），是否所有物理极限都可以突破，每个人都可以纵身一跃从地面跳到埃菲尔铁塔顶部或者不带氧气瓶在数百米深的海底自由徜徉？</p>
<p>未来当你和我看同一部 VR 电影的时候，我们看的是同一部电影吗？</p>
<p>未来看电影会更社交还是更孤独？VR 会把人类变得更宅吗？</p>
<p>未来除了娱乐，VR 在体育、医疗、养老、教育、建筑、军事等领域，还能诞生哪些炸裂脑洞的应用？</p>
<p>毫无疑问，VR 可以让人们感同身受。这会增加这个世界的理解和善意吗？</p>
<p>顺便说一句，全篇写的都是 VR，只有题目用了 “奥酷拉思”，没什么特别的原因，就是觉得 “奥酷拉思” 四个字特别酷。</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 商业评论 </tag>
            
            <tag> 虚拟现实 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Twitter engine in React]]></title>
      <url>http://chocoluffy.com/2016/01/06/Twitter-engine-in-React/</url>
      <content type="html"><![CDATA[<p>The hand-on project to get myself familiar with React.js, which pulls the latest post from Twitter by using a nodejs module in client-side javascript and allows users to form their own collections and share them via Codepen or other platforms. </p>
<a id="more"></a>
<p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1ezqtafuny9j21kw0uhqhx.jpg" alt="screen capture"></p>
<p><strong>Some important details you want to learn on this project</strong></p>
<h2 id="Browserify"><a href="#Browserify" class="headerlink" title="Browserify"></a>Browserify</h2><p>used for building all the dependency file together in such a way that we can use Node.js module to build up out client-side application. We install it in this way:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install - - save-dev browserify</span><br></pre></td></tr></table></figure></p>
<p>Notice, here is a save-dev flag, which tells npm that it is a development dependency, it will write this dependency in package.json file. Writing a module name into package.json tells npm to install when executed command: <code>npm install</code>. Here is a distinction between running dependency and developing dependency. And since Browserify is used during build time, so it belongs to developing dependency. </p>
<h2 id="Writing-style"><a href="#Writing-style" class="headerlink" title="Writing style"></a>Writing style</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">var React = require(&apos;react&apos;);</span><br><span class="line">var Stream = require(&apos;./Stream.react.js&apos;);</span><br><span class="line">var Collection = require(&apos;./Collection.react.js&apos;);</span><br><span class="line"></span><br><span class="line">var Application = React.createClass(&#123;</span><br><span class="line">	getInitialState: function()&#123;</span><br><span class="line">		return &#123;</span><br><span class="line">			collectionTweets: &#123;&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	addTweetToCollection: function(tweet)&#123;</span><br><span class="line">		var collection = this.state.collectionTweets;</span><br><span class="line">		collection[tweet.id] = tweet;</span><br><span class="line">		this.setState(&#123;</span><br><span class="line">			collectionTweets: collection</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line">	removeTweetFromCollection: function(tweet)&#123;</span><br><span class="line">		var collection = this.state.collectionTweets;</span><br><span class="line">		delete collection[tweet.id];</span><br><span class="line">		this.setState(&#123;</span><br><span class="line">			collectionTweets: collection</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	removeAllTweetsFromCollection: function()&#123;</span><br><span class="line">		this.setState(&#123;</span><br><span class="line">			collectionTweets: &#123;&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	render: function()&#123;</span><br><span class="line">		return (</span><br><span class="line">				&lt;div className=&quot;container-fluid&quot;&gt;</span><br><span class="line">					&lt;div className=&quot;row&quot;&gt;</span><br><span class="line">						&lt;div className=&quot;col-md-4 text-center&quot;&gt;</span><br><span class="line">							&lt;Stream onAddTweetToCollection=&#123;this.addTweetToCollection&#125; /&gt;</span><br><span class="line">						&lt;/div&gt;</span><br><span class="line">						&lt;div className=&quot;col-md-8&quot;&gt;</span><br><span class="line">							&lt;Collection tweets=&#123;this.state.collectionTweets&#125; onRemoveTweetFromCollection=&#123;this.removeTweetFromCollection&#125;</span><br><span class="line">							 onRemoveAllTweetsFromCollection=&#123;this.removeAllTweetsFromCollection&#125; /&gt;</span><br><span class="line">						&lt;/div&gt;</span><br><span class="line">					&lt;/div&gt;</span><br><span class="line">				&lt;/div&gt;</span><br><span class="line">			)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br><span class="line">module.exports = Application;</span><br></pre></td></tr></table></figure>
<p>It is in out Application.react.js. The reason we adopt a CommonJS writing style is that it will be convenient for other part of the file to require this react component we just build. So we use  such <code>module.exports = Application;</code> to allow other file when used to require this component. </p>
<h2 id="Children-elements-change-parent’s-elements"><a href="#Children-elements-change-parent’s-elements" class="headerlink" title="Children elements change parent’s elements"></a>Children elements change parent’s elements</h2><p>Focus on this part:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Stream onAddTweetToCollection=&#123;this.addTweetToCollection&#125; /&gt;</span><br></pre></td></tr></table></figure>
<p>the function defined in this react component is passed in, which indicates that this function will be called inside Stream component where since we know addTweetToCollection embodies a <code>setState</code> method, it illustrates how child element can update its parent component’s state.</p>
<p>Thus, in Stream component, we can access this method by using <code>this.props.onAddTweetToCollection</code>. <strong> Child component feed the arguments to parent’s state-changing function which will trigger <code>render()</code> function to re-render the whole children component again. </strong></p>
<h2 id="React-lifecycle-method-API-like-componentDidMount"><a href="#React-lifecycle-method-API-like-componentDidMount" class="headerlink" title="React lifecycle method API like componentDidMount()"></a>React lifecycle method API like componentDidMount()</h2><p>This function is part of react API, that will be called once after the initial rendering finished. At that time, we have a initialed DOM tree, and it will be a perfect time for using another js library! </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">componentDidMount: function()&#123;</span><br><span class="line">	SnapkiteStreamClient.initializeStream(this.handleNewTweet);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">compoentWillUnmount: function()&#123;</span><br><span class="line">	SnapkiteStreamClient.destroyStream();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p><code>componentWillUnmount()</code> will be called when react unmount the components.</p>
<p>And in general, react lifecycle methods can be grouped into three phases.<br>mounting, updating and unmounting. </p>
<p>And in this coding example, we see <code>componentDidMount</code> and <code>componentWillUnmount</code>. Also, we have <code>componentWillMount</code> and other methods</p>
<blockquote>
<p>Note that <code>componentDidMount</code> will be the method when DOM is ready. Thus we usually will introduce other JS library at this method to do something on the DOM tree. For example, Jquery, setInterval, setTimeout and so on.</p>
</blockquote>
<p>say in this example, if we want to use setInterval method:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">componentDidMount: function() &#123;</span><br><span class="line">  this.interval = setInterval(this.handleTick, 1000);</span><br><span class="line">&#125;,</span><br><span class="line">componentWillUnmount: function() &#123;</span><br><span class="line">  clearInterval(this.interval);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>And we use react-don node.js module here. </p>
<p>Some of other lifecycle methods are: <code>shouldComponentUpdate</code>, this will determine whether or not to call the render function, and <code>forceUpdate</code> can skip this function checking. Note that it is a good way to enhance app’s speed when in hundreds of components app. <code>componentWillRecieveProps</code> will invoke wen receiving new props can use <code>setState</code> inside this method while the similar method <code>compontWillUpdate</code> cannot. <code>componentDidUpdate</code> will invoke after each update. </p>
<h2 id="getDefaultProps"><a href="#getDefaultProps" class="headerlink" title="getDefaultProps"></a>getDefaultProps</h2><p>it will set the props if it receive no props from parent components</p>
<h2 id="Checking-for-props-exist"><a href="#Checking-for-props-exist" class="headerlink" title="Checking for props exist?"></a>Checking for props exist?</h2><p>the predicate statement at parent component may sometimes determine whether or not to render a children component. If not, then in later children component part, it should check whether it receives props from parent component. </p>
<h2 id="Validation-function-for-properties"><a href="#Validation-function-for-properties" class="headerlink" title="Validation function for properties"></a>Validation function for properties</h2><p><code>propTypes</code> is used for validating if a property is used and has value. If not, it will report an error to console.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">propTypes: &#123;</span><br><span class="line">	tweet: function(properties, propertyName, componentName)&#123;</span><br><span class="line">		var tweet = properties[propertyName];</span><br><span class="line"></span><br><span class="line">		if(!tweet)&#123;</span><br><span class="line">			return new Error(&apos;Tweet must be set. &apos;);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		if(!tweet.media)&#123;</span><br><span class="line">			return new Error(&apos;Tweet must have an image&apos;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	onImageClick: React.propTypes.func</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>So in <code>propTypes</code>, we are validating the existence of Tweet by obtaining the tweet property object from <code>properties[propertyName]</code>. And for validating the <code>onImageClick</code> part, we only need to ensure that it is a function. so we did:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">onImageClick: React.propTypes.func</span><br><span class="line">```	</span><br><span class="line"></span><br><span class="line">Some similar validation functions provided by React are: React.propTypes.number and so on.</span><br><span class="line"></span><br><span class="line">## this.refs</span><br><span class="line"></span><br><span class="line">Keep in mind, however, that the JSX doesn&apos;t return a component instance! It&apos;s just a ReactElement: a lightweight representation that tells React what the mounted component should look like. In other word, we can insert `ref` property in `render()` , the component it renders, so that we can access that component outside `render` function.</span><br></pre></td></tr></table></figure>
<p>componentDidMount: function(){<br>    this.refs.collectionName.focus();<br>},</p>
<p>render: function(){<br>    return (<br>            <form classname="form-inline" onsubmit="{this.handleFormSubmit}"><br>                <header text="Collection Name: "></header></form></p>
<pre><code>        &lt;div className=&quot;form-group&quot; style={inputStyle} onChange={this.handleInputValueChange}
         value={this.state.inputValue} ref=&quot;collectionName&quot; /&gt;
         &lt;/div&gt;

         &lt;Button label=&quot;Change&quot; handleClick={this.handleFormSubmit} /&gt;
         &lt;Button label=&quot;Cancel&quot; handleClick={this.handleFormCancel} /&gt;
    &lt;/form&gt;
)
</code></pre><p>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">we know that `componentDidMount` will be called instantly after DOM tree is ready.  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## Bootstrap usage in this project</span><br></pre></td></tr></table></figure></p>
<p><div classname="container-fluid"><br>                    <div classname="row"><br>                        <div classname="col-md-4 text-center"><br>                            <stream onaddtweettocollection="{this.addTweetToCollection}"><br>                        </stream></div><br>                        <div classname="col-md-8"><br>                            <collection tweets="{this.state.collectionTweets}" onremovetweetfromcollection="{this.removeTweetFromCollection}" onremovealltweetsfromcollection="{this.removeAllTweetsFromCollection}"><br>                        </collection></div><br>                    </div><br>                </div><br><code>`</code></p>
<p>It is where we use some Bootstrap property to quickly add style to the components. Note that we only add those style at the wrapper element for example we always wrap a <code>div</code> outside the target element. </p>
<p>references <a href="http://getbootstrap.com/css/" target="_blank" rel="noopener">this post</a> for more Bootstrap property.</p>
<ul>
<li><code>container-fluid</code> for a full width container, spanning the entire width of viewport.</li>
<li><code>text-center</code> to put the innerHTML text at the center of the element. </li>
<li><code>row</code> will create a horizontal groups of elements. </li>
<li><code>col-md-8</code> and <code>col-md-4</code> for sparing width horizontally.</li>
<li><code>form-group</code> for optimum spacing for labels and input controls.</li>
<li><code>form-control</code> for element inside the form wrapper, usually appear with the <code>form-group</code> class. </li>
</ul>
<h2 id="Try-to-add-color-palette-using-Mustache-js-and-ColorThief-js"><a href="#Try-to-add-color-palette-using-Mustache-js-and-ColorThief-js" class="headerlink" title="Try to add color palette using Mustache.js and ColorThief.js"></a>Try to add color palette using Mustache.js and ColorThief.js</h2><blockquote>
<p>Due to my technical issue, I can only make it a local version. I will try me best to host it online.</p>
</blockquote>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[D3js in 3D [Animation focus]]]></title>
      <url>http://chocoluffy.com/2015/12/31/D3js-in-3D-Animation-focus/</url>
      <content type="html"><![CDATA[<p>Focus on how animations work in such 3D scene and how I achieve that. <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> here! </p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1ezjckugw4nj21kw0ncn9h.jpg" alt="Animation"></p>
<h2 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h2><p>One key thing for such 3D scene is animations and we need a lot of interaction to finish that cooperation. Thus, in usual, we need to add multiple event listener to many sibling elements and the way we did that is by creating a parent element and by utilizing the event propagation to achieve the goal.</p>
<p>Say, we have a lot of <code>&lt;a-cube&gt;</code> now, and we want to add the click event listener to the <code>&lt;a-cube&gt;</code> below to trigger the animations of the <code>&lt;a-cube&gt;</code> above the scene. [The way we add animations is to append tag <code>&lt;a-animation&gt;</code>  as the childNode of the <code>&lt;a-cube&gt;</code>]. Now, in order to do that attachment in one time, we need to group all the <code>&lt;a-cube&gt;</code> into a container, we can just use a <code>&lt;a-entity id=“meteor”&gt;&lt;/a-entity&gt;</code> to do that thing. So we can add the click event listener at the parent node, and when the childNode get clicked, the event will propagated to the parent level by level, and back then when it achieve the targeted parent. we can trigger the function and do all the <code>append</code> or other actions on <code>e.target</code>. [here <code>e.target</code> refers to the one get clicked]. </p>
<p>In the later interaction. we want the action of one object may trigger another object’s actions. Then, we need to leave such mark to indicate which object may be related to! For example, in my code, I use  a data-attribute called “flag” as a id to indicate which object to bind. So later in the eventListener, we can use <code>e.target.getAttribute(“flag”)</code> to obtain that value for further use like <code>meteorParentNode.childNodes[e.target.getAttribute(“flag”)].append()</code> some animation nodes to the “meteor”!!</p>
<h2 id="Image-on-meteor"><a href="#Image-on-meteor" class="headerlink" title="Image on meteor"></a>Image on meteor</h2><p>In order to make it a fun, I decided to use image as the surface of the meteors ,  and the way to achieve that is to wrap a tag <code>&lt;a-root&gt;</code> and a tag <code>&lt;a-entity&gt;</code> further inside. So now the structure will be like:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-entity some-attributes-here&gt;</span><br><span class="line">	&lt;a-root&gt;</span><br><span class="line">		&lt;a-entity some-attribute-here&gt;</span><br></pre></td></tr></table></figure></p>
<p>And set the src to be some texture image or even in this project some funny images as the surface of the meteors. And that’s it! </p>
<h2 id="Further-Reading"><a href="#Further-Reading" class="headerlink" title="Further Reading"></a>Further Reading</h2><ul>
<li><a href="http://aframevr.tumblr.com/" target="_blank" rel="noopener">Aframe in tumblr</a></li>
<li><a href="https://aframe.io/docs/core/animation.html" target="_blank" rel="noopener">Official Aframe animations guide</a></li>
<li><a href="http://projects.bmannconsulting.com/aframe-boilerplate/" target="_blank" rel="noopener">How to add texture for Aframe objects</a></li>
<li><a href="http://www.kirupa.com/html5/handling_events_for_many_elements.htm" target="_blank" rel="noopener">How to add event listener to multiple sibling elements</a></li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[D3js in 3D]]></title>
      <url>http://chocoluffy.com/2015/12/30/D3js-in-3D/</url>
      <content type="html"><![CDATA[<p>Create a virtual-reality-like scene in mobile and desktop. Using D3js to do the math! Check out <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> now!</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezi7ksw2zyj21kw0sa17h.jpg" alt="virtual scene"></p>
<p>Inspired by <a href="https://www.youtube.com/watch?v=Tb2b5nFmmsM" target="_blank" rel="noopener">d33d</a>, 💣<strong> <a href="http://chocoluffy.com/d3js-Aframe/">Live Demo</a> </strong></p>
<h2 id="Build-up-a-local-server-to-avoid-cross-origin-error"><a href="#Build-up-a-local-server-to-avoid-cross-origin-error" class="headerlink" title="Build up a local server to avoid cross-origin error"></a>Build up a local server to avoid cross-origin error</h2><p>we know that using <a-image> can do insert the image. Due to the cross-origin problem, in local testing, we need to use a local server to host the static file and its assets, such as images so that when used in html file, it will not cause a cross-origin error. The way we build up a temporary server is to use python. First cd to the corresponding directory, then do:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8000</span><br></pre></td></tr></table></figure></a-image></p>
<p>Then go to the localhost:8000 can see the files. For more detailed info, check <a href="http://stackoverflow.com/questions/8456538/origin-null-is-not-allowed-by-access-control-allow-origin" target="_blank" rel="noopener">this post</a> in stack overflow.</p>
<h2 id="How-to-append-tag-in-multiple-nodes"><a href="#How-to-append-tag-in-multiple-nodes" class="headerlink" title="How to append tag in multiple nodes"></a>How to append tag in multiple nodes</h2><p>references <a href="http://stackoverflow.com/questions/24318154/d3-js-append-on-existing-div-and-hierarchy" target="_blank" rel="noopener">this post</a> from stack overflow</p>
<h2 id="Color-palette"><a href="#Color-palette" class="headerlink" title="Color palette"></a>Color palette</h2><p>references <a href="http://paletton.com/#uid=10M0u0kiRKW0VGw8oOOrBQoTc+M" target="_blank" rel="noopener">this website</a></p>
<h2 id="How-to-host-your-static-page-in-github"><a href="#How-to-host-your-static-page-in-github" class="headerlink" title="How to host your static page in github"></a>How to host your static page in github</h2><p>references <a href="https://help.github.com/articles/creating-project-pages-manually/" target="_blank" rel="noopener">this post</a></p>
<p>The final result will be, you can access the project site from your github.io website with a branch. The procedure goes well, but it seems that gh-pages cannot host a d3 or aframe pages? Answer: YES, SURE WE CAN!!! for more info, you can just visit <a href="https://chocoluffy.github.io/d3js-Aframe/" target="_blank" rel="noopener">my website</a>, github can host static website for free, so what kind of websites can be called as static? we called those sites as “static” as it only involves client-side scripting if it contains js file. Those who need server-side scripting are called dynamic websites.</p>
<blockquote>
<p>note that in order to use gh-pages to host my project website, you need to name the html file to be <code>index.html</code>. Other file name will not be recognized!!</p>
</blockquote>
<p>To summarize, the basic procedure is:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone … // from github, copy the repo’s https</span><br><span class="line">cd …</span><br><span class="line">git checkout - -orphan gh-pages</span><br><span class="line">git rm -rf .</span><br></pre></td></tr></table></figure>
<p>Then now, the gh-pages should be empty. Move the prepared <code>index.html</code> to here then<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m “First commit”</span><br><span class="line">git push origin gh-pages</span><br></pre></td></tr></table></figure></p>
<p>Then, go to <a href="http://www.chocoluffy.com/" target="_blank" rel="noopener">www.chocoluffy.com/</a><your-project-name>, you can see the project site!!</your-project-name></p>
<h2 id="How-A-frame-works"><a href="#How-A-frame-works" class="headerlink" title="How A-frame works"></a>How A-frame works</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-assets&gt;</span><br><span class="line">  &lt;a-mixin id=&quot;red&quot; material=&quot;color: red&quot;&gt;&lt;/a-mixin&gt;</span><br><span class="line">&lt;/a-assets&gt;</span><br><span class="line">&lt;a-scene&gt;</span><br><span class="line">  &lt;a-entity camera look-controls wasd-controls&gt;&lt;/a-entity&gt;</span><br><span class="line">  &lt;a-entity light=&quot;type: point; color: #EEE; intensity: 0.5&quot; position=&quot;0 3 0&quot;&gt;&lt;/a-entity&gt;</span><br><span class="line">  &lt;a-light color=&quot;#da47da&quot; position=&quot;0 0 0&quot; type=&quot;ambient&quot;&gt;&lt;/a-light&gt;</span><br><span class="line">  &lt;!-- &lt;a-sky color=&quot;#c8f8e0&quot;&gt;&lt;/a-sky&gt; --&gt;</span><br><span class="line">  &lt;a-sky src=&quot;road.jpg&quot;&gt;&lt;/a-sky&gt;</span><br><span class="line">&lt;/a-scene&gt;</span><br></pre></td></tr></table></figure>
<p>References <a href="https://aframe.io/docs/primitives/a-sky.html" target="_blank" rel="noopener">this website</a> for more A-frame primitives.</p>
<p>Then by using d3js, we can add corresponding number of <a-entity> to the scene from data array.</a-entity></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      var data=[10, 10, 10, 10, 10, 10, 10, 10, 10, 10]</span><br><span class="line">      var tip = -0.5;</span><br><span class="line">      var radius = 6;</span><br><span class="line">      var scene = d3.select(&quot;a-scene&quot;)</span><br><span class="line">      scene.append(&quot;a-camera&quot;)</span><br><span class="line">           .attr(&#123;</span><br><span class="line">            position: function()&#123;</span><br><span class="line">              var x = 0;</span><br><span class="line">              var y = tip;</span><br><span class="line">              var z = 0;</span><br><span class="line">              return x + &quot; &quot; + y + &quot; &quot; + z</span><br><span class="line">            &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">      var cubes = scene.selectAll(&quot;a-entity.bar&quot;).data(data)</span><br><span class="line">                  .enter()</span><br><span class="line">                  .append(&quot;a-entity&quot;)</span><br><span class="line">                  .classed(&quot;bar&quot;, true)</span><br><span class="line">                  .attr(&#123;</span><br><span class="line">                    // mixin: &quot;link&quot;,</span><br><span class="line">                    material: &quot;color: #7BC8A4&quot;,</span><br><span class="line">                    geometry: &quot;primitive: box; width: 2; height: 2; depth: 2&quot;,</span><br><span class="line">                    position: function(d, i)&#123;</span><br><span class="line">                      var theta = (i / data.length) * (2 * Math.PI);</span><br><span class="line">                      var x = radius * Math.cos(theta); </span><br><span class="line">                      var y = 0;</span><br><span class="line">                      var z = radius * Math.sin(theta);</span><br><span class="line">                      return x + &quot; &quot; + y + &quot; &quot; + z</span><br><span class="line">                    &#125;,</span><br><span class="line">                    rotation: function(d, i)&#123;</span><br><span class="line">                      var x = 0;</span><br><span class="line">                      var y = -360 * i/data.length;</span><br><span class="line">                      var z = -80*Math.atan(tip/radius);</span><br><span class="line">                      return x + &quot; &quot; + y + &quot; &quot; + z</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;)</span><br><span class="line">    cubes.append(&quot;a-mouseenter&quot;)</span><br><span class="line">         .attr(&#123;</span><br><span class="line">            // scale: &quot;1 2 1&quot;,</span><br><span class="line">            position: &quot;0 2 0&quot;,</span><br><span class="line">            visible: false</span><br><span class="line">         &#125;)</span><br><span class="line">    cubes.append(&quot;a-mouseleave&quot;)</span><br><span class="line">         .attr(&#123;</span><br><span class="line">            scale: &quot;1 1 1&quot;</span><br><span class="line">            // position: &quot;0 2 0&quot;</span><br><span class="line">            // visible: true</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure>
<p>Find the structure of this scene, it will like having several <code>&lt;a-entity&gt;</code> inside <code>&lt;a-scene&gt;</code>, and each of <code>&lt;a-entity&gt;</code> has multiple attributes that defines its position, rotation, material and geometry. And inside the <code>&lt;a-entity&gt;</code>, also has  <code>&lt;a-mouseenter&gt;</code> and <code>&lt;a-mouseleave&gt;</code> tags which helps define the actions when hovered. </p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么大公司不会偷取你的想法]]></title>
      <url>http://chocoluffy.com/2015/12/28/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%A7%E5%85%AC%E5%8F%B8%E4%B8%8D%E4%BC%9A%E5%81%B7%E5%8F%96%E4%BD%A0%E7%9A%84%E6%83%B3%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>那些难以复制的。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezge2ma3zoj21kw0zkth0.jpg" alt="君临"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>[唠叨]好久没有更新公众号了， 之前因为一个机器学习的比赛和期末考， 21号结束期末考之后又接了一项数据可视化的比赛， 同时手上还有一些rails app项目想好好干一番， 所以平时只能断断续续地写一些思考。 也托大家的福， 最后那门人脸表情识别的比赛在所有本科生和研究生里面排第6，准确率达到82%， 冠军是84%。 最近也会把这个比赛的一些技巧心得写到博客里，对机器学习感兴趣的同学可以直接发消息到后台和我交流。我的博客收集了平时项目中遇到的technical技巧和思考还有一些不错的公众号的文章， 欢迎参观：<a href="http://www.chocoluffy.com" target="_blank" rel="noopener">www.chocoluffy.com</a> 有一些关于社会人文的文字之后会陆陆续续和大家见面， 最近一段时间先更新一些关于商业圈的想法和读书笔记， 比如这一篇。</p>
<p>在面对投资人的时候， 很多VC都会问你这样的一个问题：如果大公司偷了你的想法的话， 你怎么办? </p>
<p>我想， 先不要把自己代入后果， 在各种利弊分析中致自己于死地， 而是尝试从根本去想， 为什么大公司想偷(采用)我们小startup的想法， 从这个角度做到自圆其说， 对投资人而言也是一剂强心针。 不过说服归说服的技巧， 下文所列为你可以尝试切入的分析原因， 希望你可以在自己的产品上真正做到不可复制。</p>
<p>[1] 大公司不会像VC那样的portfolio investing， 好比如说作为一个VC， 你可以在一个项目投入几十万， 在另一个项目投入几十万， 你有一个不把鸡蛋放在同一个篮子的原则， 但是大公司做不到， 大公司在每进入一个新市场， 承担的是所有stock holder的期望， 他们的试错成本太高， 往往会是在经过了深思熟虑之后的大举侵入。 你说不是谷歌和facebook不是投入了很多资金在许多不同的研究上吗， 但是如果仔细想想， 投资或者收购， 以及其他的很多战略都可以从其意图中推敲出来， 有些投资和入股是防御性质的， 是希望创造一个暂时垄断市场的， 比如中国你最近听到的大部分合并。 而谷歌\facebook的那一种投资是用于开拓市场的， 是希望在未来当舆论熟悉了新的科技场景的时候， 他们能够在研发上占得先机。 所以当你一个做O2O食品分发的， 送外卖的， 被问到， 如果你的想法被大公司知道了话， 你怎么办的话， 你完全不用傻傻地觉得你会被有钱的大公司直接干掉， 大公司， 基于他的身份和社会预期， 大部分时候只会选择成熟的市场和场景。 对国内的市场尤其是如此， 就好比， 当国内的大公司发掘到这是一个有利可图的战略市场的市场的时候， 他们的第一选择绝对不是自己do from scratch， 他们要么会选择收购， 要么就是战略入股。 而那时候， 如果你真的够格的话， 也会走到市场的前几名了。<br>[2] 普通大公司的固有惰性， 其实这一点和上一点有重叠。下面参考文章中所述简洁明了， 不再赘述。<br>[3] 与其花时间想象一堆可能不存在的假想敌， 还不如想想更致命的问题， 比如， 到底这个你准备进入的市场需要你提供的服务嘛？ 你能提供的是一个容易被模仿的feature， 还是一个难以复制的product? 想起在08-11年硅谷超级火的独角兽之一dropbox， 当时其实在乔布斯还在的时候， 曾在得知dropbox的产品后马上透露收购的意愿， 当时他的解释是“it’s more like a feature than a product”。最终dropbox拒绝了来自apple的收购， 现在面对来自google drive，icloud， 各种云服务， 国内的比如七牛等等的威胁， dropbox的魅力已早不复之前。</p>
<p>参考的原文阅读如下， 和大家分享。</p>
<p>余舜哲</p>
<p>2015.12.28</p>
<h2 id="Startups-Why-Google-Facebook-Apple-SalesForce-probably-won’t-steal-your-lunch-money"><a href="#Startups-Why-Google-Facebook-Apple-SalesForce-probably-won’t-steal-your-lunch-money" class="headerlink" title="Startups: Why Google/ Facebook/ Apple/ SalesForce (probably) won’t steal your lunch money"></a>Startups: Why Google/ Facebook/ Apple/ SalesForce (probably) won’t steal your lunch money</h2><p>It’s the one question which always gets asked of a startup - why won’t (insert market leader here) simply implement your great idea themselves, wiping you out in the process?</p>
<p>A reasonable enough question given the billions of dollars and thousands of engineers available to them, as compared to the typical startup’s resources. </p>
<p>It’s worth outlining the reasons why in fact Goliath has fewer advantages than you might think as compared to David.</p>
<h3 id="Innovation-is-a-Crap-Shoot"><a href="#Innovation-is-a-Crap-Shoot" class="headerlink" title="Innovation is a Crap Shoot"></a>Innovation is a Crap Shoot</h3><p>No one really knows that your great idea is great. That’s only found out when the revenue comes in, and by that stage, you’re well on the way to becoming the next generation incumbent. VC’s don’t invest in companies. VC’s invest in markets, and people (specifically CEO’s). They understand that in a hot market, they have a shot at the unicorn which will become the market leader, and a very good chance of a 2nd to 5th place player that will deliver the returns needed to keep the limited partners in order. If the market is hot enough, you won’t loose your shirt even on the also-rans. Failures are buried, and history rewritten to emphasize the foresight of picking the 1-2 mega hits which pay the returns and the 20-30 “failures” (and remember some may still be pretty successful by most people’s reckoning) simply forgotten. </p>
<p>It’s a portfolio business (the technical term for “crap shoot”), and one which most VC’s only play with a fund size of $100-$500M. You can’t “just” invest $10M in Facebook circa 2004 and be done - it’s not that easy - you need to invest in a wide portfolio, and that takes serious amounts of money that even market leaders baulk at when trying to run their own innovation program.</p>
<p>This model also requires darwinian culling - something VC’s can do easily since all they have to do is simply stop returning calls when the cash runs out. It’s much harder for a large company psychologically or practically to fire an under-performing R&amp;D team. Google is often quoted as a counter example, and certainly they end-of-life projects with impressive regularity, but even Google have shown far more patience with Google+ than any VC would. Large companies are like mammals with their young. VC’s parent like fish, and whilst it’s cold-blooded (no pun intended), it’s more effective. </p>
<p>Large companies are not competing with one 5 million startup, they are competing against a $B ecosystem, which is why so often it’s the startup that comes out on top. Large companies cannot run projects as portfolios like VC’s can.</p>
<h3 id="Everbody-is-Loss-averse"><a href="#Everbody-is-Loss-averse" class="headerlink" title="Everbody is Loss-averse"></a>Everbody is Loss-averse</h3><p>Nobody wants to cannibalize revenue. Start-ups don’t have any revenue, ergo, they don’t worry about cannibalization. It’s not easy to walk away from stable, predictable (even if declining) revenues. By comparison, this latest new fangled widget may or may not deliver in the market. Better to invest in an upgraded line of mainframes…</p>
<h3 id="Large-Companies-are-Process-bound"><a href="#Large-Companies-are-Process-bound" class="headerlink" title="Large Companies are Process-bound"></a>Large Companies are Process-bound</h3><p>Everyone can say no, and no one can say yes. Or more charitably, there is a need to get “buy-in” across the corporation, where “across” can be departments scattered over the globe. There is an inherent inertia, built around middle management more focused on managing their own pension trajectory. Upper management is often too distant from the market realities to identify up-and-comers. And people at the bottom just do as they are told. Or go and form their own startup…</p>
<h3 id="Large-Companies-need-Large-Projects"><a href="#Large-Companies-need-Large-Projects" class="headerlink" title="Large Companies need Large Projects"></a>Large Companies need Large Projects</h3><p>All large companies fundamentally become conglomerates. When you are the market leader, the only place to grow is another market. If you are delivering several billion per quarter, then only large projects can move the needle. Sure, a startup growing at 100% pa looks impressive, but the additional $1M revenue would be just a rounding error. </p>
<p>Where large companies do focus in innovating is in the area of large capital intensive bets - think Google StreetView, something which would be hard for a startup to compete with.</p>
<p>This also impacts growth strategy. From the early 90’s Oracle stopped being a database company, transitioning to a full-suite enterprise IT provider today - hardware, software, and services. People often confuse the fact that SalesForce is the incumbent market leader in CRM with the belief that SalesForce is still a CRM company. Salesforce today is a Platform-as- a-Service company looking to expand out their footprint with big data and everything else. They want to be Oracle for Cloud. With 85% of IT spending coming from enterprise customers, Marc Benioff could not care less about smaller customers nor the CRM startups earning their stripes with them, any more than Oracle gives a monkey about MongoDB.</p>
<h3 id="Not-Invented-Here"><a href="#Not-Invented-Here" class="headerlink" title="Not Invented Here"></a>Not Invented Here</h3><p>Google offered themselves to Excite in 1999 for the princely sum of $1M - but Excite pooh-poohed the idea, since it was so simple to implement themselves. The funny thing is, they were right, but they just never got around to doing it. The rest, as they say, is history. Excite Turns Down Google Acquisition - In Photos: 6 Business Deal Disasters</p>
<p>It’s hard as a big company product manager with access to hundreds of developers to accept they could have missed something a couple a geeks with barely a pot noodle between them have managed. So usually they don’t.</p>
<h3 id="Large-Companies-aren’t-Large"><a href="#Large-Companies-aren’t-Large" class="headerlink" title="Large Companies aren’t Large"></a>Large Companies aren’t Large</h3><p>Large companies have lots of departments. Each of which may or may not be that big. “But they still have lots of resources”. Yes, but there are all doing things, and in terms of the actual skill sets needed, no, they don’t. </p>
<p>I joined Sybase (1500 employees at the time) from IBM (300,000 employees) in the 90’s and was surprised that up-and-coming Sybase (which only did databases) had twice the number of database focused staff than IBM (which did everything including project manage the delivery of military helicopters). I wasn’t surprised then when joining the startup Illustra (&lt; 80 staff) that we still had more web database expertise than Informix, Oracle and Sybase put together. Informix eventually coughed up $400M for Illustra.</p>
<h3 id="Time-is-Money"><a href="#Time-is-Money" class="headerlink" title="Time is Money"></a>Time is Money</h3><p>Why, on earth, did Facebook not simply reproduce the 24 man-month effort that Instagram represented, rather than pay an eye-popping $1B???</p>
<p>It wasn’t an acqui-hire for 13 staff. Nor was it really about market share, since almost every one of Instagram’s 30M customers would already be using Facebook (845M at that time). And it certainly wasn’t about acquiring revenue - Instagram had none, nada, zero, zilch, $0.00.</p>
<p>The reason was that Facebook was convinced that this was the future of photo-sharing and would put their own business at risk (since Facebook, reduced, is really about photos). For all the reasons outlined above, they knew that it would take at least 12 months to replicate that, and in that time there could have been a significant reversal of fortunes between the incumbent and the startup. Buying rather than building means additional revenue, but at levels commensurate with the acquiring company’s existing sales and marketing channels - not the startup’s. This can easily justify apparently silly revenue multiples, since the comparison point is not what Instagram is currently doing, but rather what Facebook would be missing out on, were it not. With Facebook doing almost $3B in 3Q14, then paying just one month’s revenue for Instagram now looks like a bargain given its importance to the Facebook value proposition.</p>
<p>Focus on the Customers, not the Competition</p>
<p>You can’t reliably grow an oak tree by relying on just one acorn. You need a full tray of seedlings, thinning some out and nurturing the rest, and hopefully at least one will turn out well. It’s actually the entire premise of the VC model, and it’s also the reason big companies don’t typically stamp on startups, since they don’t know which seedling will be the one to finally overtake them, and there are too many to snuff them all out. </p>
<p>Like all generalizations in business there are exceptions. Developing a feature for a market leader typically does not end well, but these should be clear to identify. The general rule though, is clear. Few startups are actually at risk from the incumbents they seek to displace. The greater risk is does any part of the market actually want what you offer?</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 商业评论 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ActionCable in Rail5 实战笔记]]></title>
      <url>http://chocoluffy.com/2015/12/26/ActionCable-in-Rail5-%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>rails5 ActionCable in chatroom, 为之后开发狼人多人游戏做准备</p>
<a id="more"></a>
<ul>
<li>整个流程<br>After <code>rails new chat</code> and <code>bundle install</code>, we add some related in Gemfile, so now it will look like this:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">source &apos;https://rubygems.org&apos;</span><br><span class="line"></span><br><span class="line">gem &apos;rails&apos;, &apos;4.2.3&apos;</span><br><span class="line">gem &apos;actioncable&apos;, github: &apos;rails/actioncable&apos;</span><br><span class="line"></span><br><span class="line">gem &apos;sqlite3&apos;</span><br><span class="line">gem &apos;coffee-rails&apos;, &apos;~&gt; 4.1.0&apos;</span><br><span class="line">gem &apos;jquery-rails&apos;</span><br><span class="line">gem &apos;turbolinks&apos;</span><br><span class="line">gem &apos;puma&apos;</span><br><span class="line">gem &apos;uglifier&apos;, &apos;&gt;= 1.3.0&apos;</span><br><span class="line"></span><br><span class="line">group :development, :test do</span><br><span class="line">  gem &apos;byebug&apos;</span><br><span class="line">  gem &apos;spring&apos;</span><br><span class="line">  gem &apos;web-console&apos;, &apos;~&gt; 2.0&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>[1] in routes.rb, we set the root page to be<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root ‘sessions#new’</span><br></pre></td></tr></table></figure></p>
<p>which means that it will first find the SessionsController’s new method and implement it. We know in rails that when it runs a controller method, it will also render the corresponding views html.erb in view folder. Thus the <code>views/sessions/new.html.erb</code> will be first rendered. </p>
<p>Further observing in routes.rb:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Rails.application.routes.draw do</span><br><span class="line">  resources :messages, only: [:index, :create]</span><br><span class="line">  resources :sessions, only: [:new, :create]</span><br><span class="line">  root &apos;sessions#new&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<p>we find the use of <code>resources</code>, which means we treat those objects as RESTFUL as we could, those objects in their controllers will have all seven methods like new, create, update, destroy and so on which corresponds to the Http Verbs like post, get and so on.</p>
<h2 id="Then-we-look-at-the-new-html-erb"><a href="#Then-we-look-at-the-new-html-erb" class="headerlink" title="Then, we look at the new.html.erb"></a>Then, we look at the new.html.erb</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= form_for :session, url: sessions_path do |f| %&gt;</span><br><span class="line">	&lt;%= f.label :username, &apos;Enter a name&apos; %&gt;&lt;br/&gt;</span><br><span class="line">	&lt;%= f.text_field :username %&gt; &lt;br&gt;</span><br><span class="line">	&lt;%= f.submit &apos;Start chatting&apos; %&gt;</span><br><span class="line">&lt;% end %&gt;</span><br></pre></td></tr></table></figure>
<p>where <code>:session</code> is the name for this form, when in use in SessionsController, we obtain the information in this form by<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookies.signed[:username] = params[:session][:username]</span><br></pre></td></tr></table></figure></p>
<p>And <code>url: sessions_path</code> is for directing the action to SessionsController#create.</p>
<h2 id="In-MessagesController-rb"><a href="#In-MessagesController-rb" class="headerlink" title="In MessagesController.rb"></a>In MessagesController.rb</h2><p>we use index to render the view<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Signed in as @&lt;%= cookies.signed[:username] %&gt;.</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;messages&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;%= form_for :message, url: messages_path, remote: true, id: messages-form do |f| %&gt;</span><br><span class="line">	&lt;%= f.label :body, &apos;Enter a message:&apos; %&gt; &lt;br&gt;</span><br><span class="line">	&lt;%= f.text_field :body %&gt; &lt;br&gt;</span><br><span class="line">	&lt;%= f.submit &apos;Send message&apos; %&gt;</span><br><span class="line">&lt;% end %&gt;</span><br></pre></td></tr></table></figure></p>
<p>where the cookies are carrying the parameters we need in another controller, while the empty <code>div</code> will eventually be filled with previous content. As for the form, it will pretty similar as the SessionsController#new.</p>
<ul>
<li>here we use <code>remote: true</code>, which is calling with Ajax. In usual case, we will need to specify the partial js file we want to implement in MessagesContrller#create method. * But, here we just want it to reload again without refreshing the page.</li>
</ul>
<h2 id="ActionCable"><a href="#ActionCable" class="headerlink" title="ActionCable"></a>ActionCable</h2><p>ActionCable uses Redis for publishihng and subscribing to the messages, so we need to configure Redis in config/redis/cable.yml. You will need Redis installed and running for ActionCable to work.</p>
<h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><p>reds is a key-value store, often referred to as a NoSQL database. Key features are that: [1] the data can be retrieved by key later in use. [2] the key-value will be stored permanently.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SET server:name “fido”</span><br><span class="line">GET server:name</span><br><span class="line">DEL server:name</span><br><span class="line">INCR count</span><br></pre></td></tr></table></figure>
<p>Compared with<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = GET count</span><br><span class="line">x = x + 1</span><br><span class="line">SET count x</span><br></pre></td></tr></table></figure></p>
<p>we choose to use INCR because it is a atomic operation which will work as expected if multiple users want to access this value.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPIRE server:name 120 //after 120s this value will vanish</span><br><span class="line">TTL server:name // obtain after how long it will vanish</span><br></pre></td></tr></table></figure></p>
<h3 id="List-operation"><a href="#List-operation" class="headerlink" title="List operation"></a>List operation</h3><p><code>RPUSH, LPUSH, LLEN, LRANGE, LPOP, RPOP</code></p>
<h3 id="Set-operation"><a href="#Set-operation" class="headerlink" title="Set operation"></a>Set operation</h3><p><code>SADD, SREM, SISMEMBER, SMEMBERS, SUNION</code><br>where <code>SMEMBERS</code> returns a list of all members of this set.</p>
<h3 id="Sorted-Set"><a href="#Sorted-Set" class="headerlink" title="Sorted Set"></a>Sorted Set</h3><p><code>ZADD, ZRANGE</code></p>
<h3 id="Hashes"><a href="#Hashes" class="headerlink" title="Hashes"></a>Hashes</h3><p><code>HSET, HGETALL, HMSET, HGET, HINCRBY, HDEL</code> like</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HMSET user:1001 name &quot;Mary Jones&quot; password &quot;hidden&quot; email &quot;mjones@example.com&quot;</span><br><span class="line">HGETALL user:1001</span><br></pre></td></tr></table></figure>
<h2 id="Adding-our-MessagesChannel"><a href="#Adding-our-MessagesChannel" class="headerlink" title="Adding our MessagesChannel"></a>Adding our MessagesChannel</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># app/channels/messages_channel.rb</span><br><span class="line">class MessagesChannel &lt; ApplicationCable::Channel</span><br><span class="line">  def subscribed</span><br><span class="line">    stream_from &apos;messages&apos;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>whenever a client subscribes to MessageChannel, the <code>#subscribed</code> method will be called, which starts streaming anything you broadcast to the “messages” stream.</p>
<h2 id="Future-learning"><a href="#Future-learning" class="headerlink" title="Future learning"></a>Future learning</h2><ul>
<li><a href="https://gorails.com/episodes/rails-5-actioncable-websockets" target="_blank" rel="noopener">Rails 5’s ActionCable and Websockets Introduction</a></li>
<li><a href="https://github.com/rails/actioncable-examples" target="_blank" rel="noopener">Action Cable Examples</a></li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> rails </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[优化hexo博客]]></title>
      <url>http://chocoluffy.com/2015/12/25/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E6%9C%80%E6%A3%92%E7%9A%84%E7%B4%A0%E6%9D%90%E5%92%8C%E6%95%99%E7%A8%8B%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>在搭建hexo博客的时候遇到的各种坑， 留下一些最棒的博文和大家分享!</p>
<a id="more"></a>
<h2 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h2><h3 id="添加豆瓣读书插件"><a href="#添加豆瓣读书插件" class="headerlink" title="添加豆瓣读书插件"></a>添加豆瓣读书插件</h3><blockquote>
<p>每一次如果<code>hexo g</code>会报错，通常都是因为我系统的node的版本不对；需要用<code>nvm use system</code>来改成node 4.5来运行操作。</p>
</blockquote>
<p><a href="https://github.com/ForbesLindesay/sync-request" target="_blank" rel="noopener">GitHub - ForbesLindesay/sync-request: Make synchronous web requests with cross platform support.</a> 用sync-request来修改hexo-douban，实现爬去书籍消息的功能。</p>
<p>demo: <a href="https://blog.mythsman.com/books/" target="_blank" rel="noopener">https://blog.mythsman.com/books/</a></p>
<p>开发的组件博客 <a href="https://blog.mythsman.com/" target="_blank" rel="noopener">https://blog.mythsman.com/</a><br>github： <a href="https://github.com/mythsman/hexo-douban/blob/master/lib/templates/book.ejs" target="_blank" rel="noopener">hexo-douban/book.ejs at master · mythsman/hexo-douban · GitHub</a></p>
<p>类似的但是样式上差一点的另一个组件 <a href="https://github.com/Yikun/hexo-generator-douban" target="_blank" rel="noopener">GitHub - Yikun/hexo-generator-douban: Douban page generator plugin for Hexo.</a></p>
<h3 id="添加微博组件"><a href="#添加微博组件" class="headerlink" title="添加微博组件"></a>添加微博组件</h3><p><a href="http://kuangqi.me/tricks/add-weibo-show-in-hexo/" target="_blank" rel="noopener">在Hexo博客中添加微博秀 | The Bloom of Youth | 锦瑟华年</a></p>
<p><a href="https://suarezzz.github.io/2016/07/02/hexo-useful-tools/" target="_blank" rel="noopener">Hexo有用的工具和插件汇总 | suarezzz’s blog</a></p>
<h3 id="怎样使用七牛云服务来存储静态资源"><a href="#怎样使用七牛云服务来存储静态资源" class="headerlink" title="怎样使用七牛云服务来存储静态资源"></a>怎样使用七牛云服务来存储静态资源</h3><ul>
<li><a href="https://linux.cn/article-2311-1.html" target="_blank" rel="noopener">Linux中国采用“七牛”云存储支撑图片访问</a></li>
<li><a href="https://blog.blahgeek.com/qiniu-cdn-serve-static/" target="_blank" rel="noopener">使用七牛CDN加速博客静态文件访问</a></li>
</ul>
<p>个人的话， 我其实用的是微博图床， 也很方便。 类似的服务还有dropbox, google drive等等。</p>
<p>Edit: 16.3.12更新， 现在我自己通过自己写的scripts来自动化将博文中的image上传的任务了， 所有的图片都将上传到leancloud然后得到一个external url可以在md博客中直接展示， 这样做更加的自动化和节省我的时间!! 具体操作方法看下面的介绍。</p>
<h3 id="关于hexo-config文件的配置细节"><a href="#关于hexo-config文件的配置细节" class="headerlink" title="关于hexo _config文件的配置细节"></a>关于hexo _config文件的配置细节</h3><p>推荐博文：</p>
<ul>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">hexo你的博客</a></li>
<li><a href="https://gist.github.com/mabrasil/dc245da48a757b91b777" target="_blank" rel="noopener">给hexo添加disqus的评论框</a></li>
<li><a href="http://ibruce.info/2013/12/22/count-views-of-hexo/" target="_blank" rel="noopener">给hexo博文添加访问次数统计-不蒜子统计</a></li>
</ul>
<h3 id="关于hexo基础的command"><a href="#关于hexo基础的command" class="headerlink" title="关于hexo基础的command"></a>关于hexo基础的command</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;article name&quot;</span><br><span class="line">hexo new page &quot;about&quot; # 给blog添加一个新的main entry endpoint. 比如/about等</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>可以利用这个<code>hexo new page &quot;about&quot;</code>这个想法来收集很多的放在collection里面的东西， 比如自己的photography, 自己的bookreview等等， 就是那些不适合放在单独的博客文章中的东西， 都可以尝试整理在这里面， 然后在一个portal里面留下入口， 比如在”/life”里面留下我的”/photography”和”/bookreview”等等， 这样会更加的organized。</p>
<h3 id="在hexo博客里面内嵌html静态网页"><a href="#在hexo博客里面内嵌html静态网页" class="headerlink" title="在hexo博客里面内嵌html静态网页"></a>在hexo博客里面内嵌html静态网页</h3><p>我们有将静态网页展示出来作为example的需求， 尤其是在介绍新技术的时候，首先将该静态网站部署在服务器上， 无论是github上利用gh-pages的静态前端网页， 还是elastic beanstalk的后端serve的前端(利用express的<code>app.use(express.static(__dirname + &#39;/public&#39;));</code>可以将public文件夹下面的html文件都serve出来!!!!)， 这么做的好处是我们可以得到external URL， 可以将这个URL插入在iframe里面， 然后在md文章里面直接使用!!!! 比如下面这个例子亲测成功， 注意就是要将插入的网页居中就是了!!</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">'text-align:center'</span> <span class="attr">markdown</span>=<span class="string">'1'</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://mdn-samples.mozilla.org/snippets/html/iframe-simple-contents.html"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>Your browser does not support iframes.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="居中文本-图片样式"><a href="#居中文本-图片样式" class="headerlink" title="居中文本\图片样式"></a>居中文本\图片样式</h3><p>具体效果参考<a href="http://chocoluffy.com/2015/03/30/%E4%BC%AF%E5%85%8B%E5%88%A9%E7%9A%84%E7%A7%98%E5%AF%86-%E4%B8%8A-%E6%A2%A6%E6%83%B3%E7%9A%84%E7%81%AB%E5%85%89/">这篇博文</a>的样式， 其中在第一段添加了居中文本作为开头。 特别适合在段落间插入， 作为章节的小结， 很优雅~</p>
<p>使用方法<code>&lt;blockquote class=&quot;blockquote-center&quot;&gt;blah blah blah&lt;/blockquote&gt;</code></p>
<p>将图片居中方法<code>&lt;img src=&quot;http://ac-TC2Vc5Tu.clouddn.com/6ceefbf6929babac.png&quot; style=&quot;display: block; margin: 0 auto;&quot;&gt;</code>， 直接添加inline styling， 在markdown中插入html image tag。</p>
<p>将图片突破通常边际大小的样式<code>&lt;img src=&quot;/image-url&quot; class=&quot;full-image&quot; /&gt;</code>。</p>
<h3 id="关于怎样自动化博文图片上传"><a href="#关于怎样自动化博文图片上传" class="headerlink" title="关于怎样自动化博文图片上传"></a>关于怎样自动化博文图片上传</h3><p>参考<a href="http://laobie.github.io/python/2016/04/24/replace-image-file-in-markdown.html" target="_blank" rel="noopener">自动化替换 Markdown 中的本地图片引用</a>。 我已经在我的.zshrc文件里面配置好了， 之后写一些多图的博客文章的时候， 可以先放一个<code>img/demo.jpg</code>这样的路径占位， 之后在从quiver export出md文件后在那个文件夹目录下创建img文件夹和要用的图片执行<code>lzmd source.md target.md</code>即可。<a href="https://github.com/chocoluffy/lazy-markdown" target="_blank" rel="noopener">github链接</a></p>
<p>参考<a href="http://www.denizoguz.com/2013/08/07/how-to-align-images-in-markdown/" target="_blank" rel="noopener">将markdown文章中的图片居中</a>。 还需要做的事是， 把这个做法加入到lzmd的scripts里面， 做到一起的自动化。<a href="https://github.com/chocoluffy/lazy-screen-capture" target="_blank" rel="noopener">github链接</a></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replace_img</span><span class="params">(source_md, target_md, conn)</span>:</span></span><br><span class="line">    image_list = get_image_list_from_md(source_md)</span><br><span class="line">    md_content = open(source_md).read()</span><br><span class="line">    fb = open(target_md, <span class="string">'w'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'start &gt;&gt;&gt;&gt;&gt;\n'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> image <span class="keyword">in</span> image_list:</span><br><span class="line">        source_img = os.path.join(os.path.split(source_md)[<span class="number">0</span>], image[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(source_img):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        db_data = find_in_db(conn, calc_hash(source_img))</span><br><span class="line">        <span class="keyword">if</span> db_data:</span><br><span class="line">            print(<span class="string">"[%s] &gt;&gt;&gt; url: %s"</span> % (os.path.split(source_img)[<span class="number">1</span>], db_data[<span class="number">1</span>]))</span><br><span class="line">            url = db_data[<span class="number">1</span>]</span><br><span class="line">            // 重点在添加一个子元素align的div wrapper</span><br><span class="line">            md_content = md_content.replace(image[<span class="number">0</span>], <span class="string">"&lt;div style='text-align:center' markdown='1'&gt;"</span> + image[<span class="number">0</span>].replace(image[<span class="number">1</span>], str(url)) + <span class="string">"&lt;/div&gt;"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> os.path.isfile(source_img):</span><br><span class="line">            compressed_img = os.path.join(os.path.split(source_img)[<span class="number">0</span>], <span class="string">'cp_'</span> + os.path.split(source_img)[<span class="number">1</span>])</span><br><span class="line">            compress(source_img, compressed_img)</span><br><span class="line">            url = upload(compressed_img)</span><br><span class="line">            // 重点在添加一个子元素align的div wrapper</span><br><span class="line">            md_content = md_content.replace(image[<span class="number">0</span>], <span class="string">"&lt;div style='text-align:center' markdown='1'&gt;"</span> + image[<span class="number">0</span>].replace(image[<span class="number">1</span>], str(url)) + <span class="string">"&lt;/div&gt;"</span>)</span><br><span class="line">            write_db(conn, calc_hash(source_img), url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> source_img + <span class="string">"is not exit or not a file"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'\n&lt;&lt;&lt;&lt;&lt; end'</span></span><br><span class="line"></span><br><span class="line">    fb.write(md_content)</span><br><span class="line">    fb.close()</span><br></pre></td></tr></table></figure>
<h2 id="Further-Reading-more-useful-links"><a href="#Further-Reading-more-useful-links" class="headerlink" title="Further Reading (more useful links)"></a>Further Reading (more useful links)</h2><ul>
<li><p><a href="https://gist.github.com/andyferra/2554919" target="_blank" rel="noopener">github markdown css standard</a> 如果希望自己tweak一下自己博客的样式， 尤其是markdown渲染出来的效果， 可以参考下github的markdown样式， 我就自己对着修改了一些</p>
</li>
<li><p><a href="http://designshack.net/articles/css/5-simple-and-practical-css-list-styles-you-can-copy-and-paste/" target="_blank" rel="noopener">添加styling for html list(ordered or unordered)</a></p>
</li>
<li><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">hexo next主题官方配置文档</a></p>
</li>
<li><p><a href="https://css-tricks.com/snippets/css/simple-and-nice-blockquote-styling/" target="_blank" rel="noopener">Simple and nice blockquote styling</a> </p>
</li>
<li><p><a href="http://www.smashingmagazine.com/2014/08/build-blog-jekyll-github-pages/" target="_blank" rel="noopener">Build A Blog With Jekyll And GitHub Pages</a></p>
</li>
<li><p><a href="http://jinyanhuan.github.io/2015/03/16/hexo-bulid-three/" target="_blank" rel="noopener">更换另一个hexo主题</a></p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="noopener">搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门</a></p>
</li>
<li><p><a href="http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype.html" target="_blank" rel="noopener">给Hexo博客添加站内搜索</a></p>
</li>
<li><p><a href="http://starsky.gitcafe.io/2015/05/05/Hexo%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E3%80%81%E9%9F%B3%E4%B9%90%E5%92%8C%E8%A7%86%E9%A2%91/" target="_blank" rel="noopener">在Hexo博文里面添加音乐\gif\视频等的教程</a></p>
</li>
<li><p><a href="http://blog.sunnyxx.com/2014/03/07/hexo_customize/" target="_blank" rel="noopener">私人定制hexo主题，添加横幅logo</a></p>
</li>
<li><p><a href="https://github.com/unhealthy/hexo-all-minifier" target="_blank" rel="noopener">A plugin for Hexo that optimizes HTML, CSS, JS and images(Minify)</a></p>
</li>
<li><p><a href="http://www.jeyzhang.com/hexo-website-seo.html" target="_blank" rel="noopener">给Hexo网站添加sitemap和robots.txt</a></p>
</li>
<li><p><a href="https://moral.im/%E4%B8%BAHexo%E6%B7%BB%E5%8A%A0meta%20Keyword/" target="_blank" rel="noopener">给Hexo网站添加meta tag提高SEO</a></p>
<ul>
<li><p><a href="https://www.google.com/webmasters/tools/home?hl=en&amp;authuser=0" target="_blank" rel="noopener">去goole search console管理property</a></p>
</li>
<li><p><a href="https://www.google.com/webmasters/tools/sitemap-list?hl=en&amp;authuser=0&amp;siteUrl=http%3A%2F%2Fchocoluffy.com%2F#MAIN_TAB=0&amp;CARD_TAB=-1" target="_blank" rel="noopener">google search console sitemap dashboard</a></p>
</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用reveal.js制作生日礼物]]></title>
      <url>http://chocoluffy.com/2015/12/24/%E7%94%A8reveal-js%E5%88%B6%E4%BD%9C%E7%94%9F%E6%97%A5%E6%B4%BE%E5%AF%B9%E7%A4%BC%E7%89%A9/</url>
      <content type="html"><![CDATA[<p>这篇笔记作为revealjs的学习记录 &amp; 网页制作的迭代</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezadadm0hkg20dw07ndwp.gif" alt="吹蜡烛"></p>
<ol>
<li><p>首先理清楚每天需要做的东西<br>在tracy换头像的时候保存头像， 最后还需要大家帮忙把头像收集好；<br>需要整理关于他们最爱的东西的问题：<br>[1] 最喜欢的颜色？<br>tracy: 黄色<br>xth:<br>[2] 最喜欢的场景？<br>tracy: 雪天的时候在房间里面看雪景,  喝着热巧， 吃cookie，看雪景。<br>用飘雪的效果<br>xth: 萤火虫的效果</p>
<p>[3] </p>
</li>
<li>网上一些很棒的资源<br><a href="http://htmlcheats.com/reveal-js/reveal-js-tutorial-reveal-js-for-beginners/" target="_blank" rel="noopener">Reveal.js Tutorial-Reveal.js for Beginners</a></li>
</ol>
<p><a href="http://codepen.io/aamirafridi/pen/sfgGA" target="_blank" rel="noopener">很美的萤火虫的特效scrolling</a><br><a href="http://codepen.io/rikschennink/pen/eNbXMP" target="_blank" rel="noopener">萤火虫闪光</a></p>
<p>找css background gradient的一个好地方：<br><a href="http://uigradients.com/#" target="_blank" rel="noopener">http://uigradients.com/#</a></p>
<h3 id="开场特效："><a href="#开场特效：" class="headerlink" title="开场特效："></a>开场特效：</h3><p>参考<a href="http://codepen.io/andreasstorm/pen/rHDjf" target="_blank" rel="noopener">click anywhere to start an animation!</a><br>use:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(html).on(‘mousedown’, function(e))</span><br></pre></td></tr></table></figure></p>
<p>然后给中心的图标添加一个火箭发射的动效</p>
<p>关于reveal.js的在section的部分添加视频</p>
<section data-background-video="https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm" data-background-video-loop="">

<p>使用长图片做parallax scrolling effect:<br><a href="https://github.com/hakimel/reveal.js/" target="_blank" rel="noopener">https://github.com/hakimel/reveal.js/</a><br>的parallax background部分！！</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
</section>]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Agile web developing in rails 第一期]]></title>
      <url>http://chocoluffy.com/2015/12/24/agile-web-developing-in-rails-%E7%AC%AC%E4%B8%80%E6%9C%9F/</url>
      <content type="html"><![CDATA[<p>目的： 将agile rails web application一书里面的精华概括下来， 为之后运用rails开发打基础</p>
<a id="more"></a> 
<h2 id="The-details-you-should-know-about-in-rails"><a href="#The-details-you-should-know-about-in-rails" class="headerlink" title="The details you should know about in rails:"></a>The details you should know about in rails:</h2><ul>
<li><p>link_to | button_to<br>在link_to 和 button_to的情况下， 因为浏览器已经知道他们调用的是http的什么方法， 因此我们只需要将他们导流到对应controller<br>的位置就可以了；rails会根据http的动作调用相应的方法， 然后用一下shortcut path, 也就是 line_item_path;<br>为了创建一个LineItem obeject， 我们需要product_id和cart_id， cart_id可以在session中得到， product_id则需要用参数传入；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &apos;Add to Cart&apos;, line_item_path(product_id: product) % &gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Http verb<br>create(post), new(get)等等</p>
</li>
<li><p>写法区别</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &quot;delete&quot;, @cart, :method =&gt; :delete % &gt; </span><br><span class="line">&lt;%= button_to &quot;delete&quot;, &#123;:controller =&gt; :carts, :action =&gt; :destroy, :id =&gt; cart.id&#125;, :method =&gt; :delete % &gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>ajax in rails<br>add Ajax to cart 目的: 在store页面实现将cart的show展示在sidebar里面， 然后添加user interface<br>注意： 在每一个partial template里面都有一个和template file同名的变量来指代当前变量；</p>
</li>
</ul>
<p>首先， 在发送请求的时候， 将请求改正为ajax请求：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &quot;Add to cart&quot;, line_items_path(product_id: product), remote: true % &gt;</span><br></pre></td></tr></table></figure></p>
<p>然后， 由于button_to默认http请求动作是post， 在line_items_controller里面找到create这个方法， 然后在response_to里面添加<br>一个format.js; 在create这个line_items的method处理了ajax的请求后， 就会去渲染一个同名的file： create.js.erb； 由于rails<br>自动gemfile里面加载了jquery的gem, 所以我们可以直接使用；</p>
<p>重点： format.js 里面也就是create.js.erb里面渲染的js代码是给format.html里面调用使用的， 也就是在重新渲染store/index.html.erb<br>的时候， 重点不在于index.html.erb， 因为使用ajax的目标之一是只去更新那些改变了的东西， 也就是在sidebar区域的&lt;%= render @cart % &gt;<br>利用ajax， 我们只希望重新渲染&lt;%= render @cart % &gt;, 其他部分保留；</p>
<p>具体实现的方法： 由于在application.html.erb里面包裹住&lt;%= render @cart % &gt;部分的div是id是cart， 所以我们只需要通过jquery选择<br>到那个div， 然后修改里面的html使之成为更新后的版本就可以了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#cart&quot;).html(&quot;&lt;%= escape_javascript render(@cart) %&gt;&quot;)</span><br></pre></td></tr></table></figure></p>
<ul>
<li>Add a member route<br>To add a member route, just add a member block into the resource block:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resources :photos do</span><br><span class="line">  member do</span><br><span class="line">    get &apos;preview&apos;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>This will recognize /photos/1/preview with GET, and route to the preview action of PhotosController, with the resource<br>id value passed in params[:id]. It will also create the preview_photo_url and preview_photo_path helpers.<br>在我们这个网站里面， 通过增加下面这几行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resources :line_items do</span><br><span class="line">  member do</span><br><span class="line">    put &apos;decrement&apos;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<p>我们实现的是， 首先能够识别出 /line_items/1/decrement这个路由， 和http里面的put联系起来， 然后去调用line_items controller里面的decrement这个方法<br>同时也将resource的id传入进来, params[:id], 然后创建 decrement_lin_item_url和 decrement_line_item_path;</p>
<p><strong>注意： 一直困扰我的， 在点击decrement这个按钮的时候， 会出现internet error 505, unable to load the resources; 然后还看到的是关于line_item_controller里面的各种nil class, 其实这就是一个启示， 表示在那个时候使用的@line_item是没有被赋值的； 因此追根溯源找到的赋值的地方是set_line_item， 我们使用hook, before_action限制了使用这个hook的范围， 因此每一次我们新引进一个method的时候， 我们都需要记得在controller最前面的hook看看有没有限制；</strong></p>
<blockquote>
<p>总结一下8.16号犯的一些错误：<br>[1]在touch file的时候注意不要放错位置！_line_item.html.erb这个文件的错放导致了很多的问题；<br>[2]添加了member route之后创建的新方法已开始被hook before_action限制住了， 要记得添加他们的使用范围；<br>[3]灵通一点， 在decrement.js.erb中， 通过调换其中一些code的顺序也可以达到同样的效果；</p>
</blockquote>
<ul>
<li>Modify the model<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails generate scaffold Order name address:text email pay_type</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>在rails里面， 没有标明type的属性默认： string<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails generate migration add_order_to_line_item order:references</span><br></pre></td></tr></table></figure></p>
<p>在已经存在的line_item model里面添加一个column， order_id；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake db:migrate</span><br></pre></td></tr></table></figure></p>
<p>然后在_cart.html.erb里面增加一个button_to按钮来链接到对应的创建order的操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to &quot;Checkout&quot;, new_order_path, method: :get % &gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># GET /orders/new</span><br><span class="line">def new</span><br><span class="line">  if @cart.line_items.empty?</span><br><span class="line">    redirect_to store_url, notice: &quot;Your cart is empty!&quot;</span><br><span class="line">    return </span><br><span class="line">    # 提前终止程序， 防止double render， 不仅渲染了notice而且还渲染了下面的@order;</span><br><span class="line">  end</span><br><span class="line">  @order = Order.new</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p><strong>  再补充一遍， new只是得到一个form的页面， 真正的create操作是由create来完成的， 通过http的verb也可以看出来；</strong></p>
<p>在修改了new的方法之后， 尤其是改变了redirect的方向之后， 需要同时去修改test里面的文件；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">test &quot;should redirect to store_url because of empty cart when checkout&quot; do</span><br><span class="line">  get :new</span><br><span class="line">  assert_redirected_to store_url</span><br><span class="line">  assert_equal flash[:notice], &quot;Your cart is empty!&quot;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">test &quot;should get new&quot; do</span><br><span class="line">  item = LineItem.new</span><br><span class="line">  item.build_cart</span><br><span class="line">  item.product = products(:one)</span><br><span class="line">  item.save!</span><br><span class="line">  session[:cart_id] = item.cart.id</span><br><span class="line">  get :new</span><br><span class="line">  assert_response :success</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> rails </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[机器学习资料收集[持续更新]]]></title>
      <url>http://chocoluffy.com/2015/12/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>来自github, 各种关于机器学习的教程博客和工具。</p>
<a id="more"></a>
<h1 id="Dive-into-Machine-Learning"><a href="#Dive-into-Machine-Learning" class="headerlink" title="Dive into Machine Learning  "></a>Dive into Machine Learning <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noopener"><img src="http://i.creativecommons.org/l/by/4.0/88x31.png" alt="Creative Commons License"></a> <a href="https://github.com/sindresorhus/awesome" target="_blank" rel="noopener"><img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" alt="Awesome"></a></h1><p><strong>Hi there! This guide is for you:</strong></p>
<ul>
<li><strong>You’re new to Machine Learning.</strong></li>
<li><strong>You know Python.</strong> (At least the basics! If you want to learn Python, try <a href="http://www.diveintopython.net/" target="_blank" rel="noopener">Dive Into Python.</a>)</li>
</ul>
<p>I learned Python by hacking first, and getting serious <em>later.</em> I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.</p>
<p><em>Note:</em> There are several fields within “Data” and Machine Learning is just one. It’s good to know the context: <a href="http://www.quora.com/What-is-the-difference-between-Data-Analytics-Data-Analysis-Data-Mining-Data-Science-Machine-Learning-and-Big-Data-1" target="_blank" rel="noopener">What is the difference between Data Analytics, Data Analysis, Data Mining, Data Science, Machine Learning, and Big Data?</a></p>
<h1 id="Get-your-feet-wet"><a href="#Get-your-feet-wet" class="headerlink" title="Get your feet wet!"></a>Get your feet wet!</h1><p>I suggest you get your feet wet ASAP. You’ll boost your confidence.</p>
<h2 id="Tools-you’ll-need"><a href="#Tools-you’ll-need" class="headerlink" title="Tools you’ll need"></a>Tools you’ll need</h2><ul>
<li><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a>. Python 3 is the best option.</li>
<li><a href="http://ipython.org/" target="_blank" rel="noopener">IPython and the Jupyter Notebook</a>. (FKA IPython and IPython Notebook.)</li>
<li>Some scientific computing packages:<ul>
<li>numpy</li>
<li>pandas</li>
<li>scikit-learn</li>
<li>matplotlib</li>
</ul>
</li>
</ul>
<p>You can install Python 3 and all of these packages in a few clicks with the <a href="https://www.continuum.io/downloads" target="_blank" rel="noopener">Anaconda Python distribution</a>. Anaconda is popular in Data Science and Machine Learning communities.</p>
<p>If you’re using Python 2.7, don’t worry. You don’t have to migrate to Python 3 just for this guide. Also, if you’re using pip/virtualenv instead of Anaconda, that’s alright too! Confer <a href="http://conda.pydata.org/docs/_downloads/conda-pip-virtualenv-translator.html" target="_blank" rel="noopener">conda vs. pip vs. virtualenv</a> if you’re curious.</p>
<h2 id="Let’s-go"><a href="#Let’s-go" class="headerlink" title="Let’s go!"></a>Let’s go!</h2><p><strong><a href="http://opentechschool.github.io/python-data-intro/core/notebook.html" target="_blank" rel="noopener">Learn how to use IPython Notebook</a> (5-10 minutes).</strong> (You can <a href="https://www.youtube.com/watch?v=qb7FT68tcA8" target="_blank" rel="noopener">learn by screencast</a> instead.)</p>
<p>Now, follow along with this brief exercise (10 minutes): <strong><a href="http://scikit-learn.org/stable/tutorial/basic/tutorial.html" target="_blank" rel="noopener">An introduction to machine learning with scikit-learn</a></strong>. Do it in <code>ipython</code> or IPython Notebook. It’ll really boost your confidence.</p>
<p><a href="http://scikit-learn.org/stable/tutorial/basic/tutorial.html" target="_blank" rel="noopener"><img src="http://i.imgur.com/nqn3pVV.jpg" alt="I&#39;ll wait."></a></p>
<h2 id="What-just-happened"><a href="#What-just-happened" class="headerlink" title="What just happened?"></a>What just happened?</h2><p>You just classified some hand-written digits using <a href="http://scikit-learn.org/stable/index.html" target="_blank" rel="noopener">scikit-learn</a>. Neat huh?</p>
<p><a href="http://scikit-learn.org/stable/index.html" target="_blank" rel="noopener">scikit-learn</a> is the go-to library for machine learning in Python. <a href="http://scikit-learn.org/stable/testimonials/testimonials.html" target="_blank" rel="noopener">Some recognizable logos use it, including Spotify and Evernote.</a> Machine learning is hard. You’ll be glad your tools are easy to work with.</p>
<p>I encourage you to look at the <a href="http://scikit-learn.org/stable/index.html" target="_blank" rel="noopener">scikit-learn</a> homepage  and spend about 5 minutes looking over the names of the strategies (Classification, Regression, etc.), and their applications. Don’t click through yet! Just get a glimpse of the vocabulary.</p>
<h1 id="Dive-in"><a href="#Dive-in" class="headerlink" title="Dive in"></a>Dive in</h1><h2 id="A-Visual-Introduction-to-Machine-Learning"><a href="#A-Visual-Introduction-to-Machine-Learning" class="headerlink" title="A Visual Introduction to Machine Learning"></a>A Visual Introduction to Machine Learning</h2><p>Let’s learn a bit more about Machine Learning, and a couple of common ideas and concerns. Read <a href="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/" target="_blank" rel="noopener">“A Visual Introduction to Machine Learning, Part 1”</a> by <a href="https://twitter.com/stephaniejyee" target="_blank" rel="noopener">Stephanie Yee</a> and <a href="https://twitter.com/tonyhschu/" target="_blank" rel="noopener">Tony Chu</a>.</p>
<p><a href="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/" target="_blank" rel="noopener"><img src="http://i.imgur.com/j5fiTBv.gif" alt="A Visual Introduction to Machine Learning, Part 1"></a></p>
<p>It won’t take long. It’s a beautiful introduction … Try not to drool too much!</p>
<h2 id="A-Few-Useful-Things-to-Know-about-Machine-Learning"><a href="#A-Few-Useful-Things-to-Know-about-Machine-Learning" class="headerlink" title="A Few Useful Things to Know about Machine Learning"></a>A Few Useful Things to Know about Machine Learning</h2><p>OK. Let’s dive deeper.</p>
<p>Read <strong><a href="http://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf" target="_blank" rel="noopener">“A Few Useful Things to Know about Machine Learning”</a></strong> by Prof. Pedro Domingos. It’s densely packed with valuable information, but not opaque. The author understands that there’s a lot of “black art” and folk wisdom, and they invite you in.</p>
<p>Take your time with this one. Take notes. Don’t worry if you don’t understand it all yet.</p>
<p>The whole paper is packed with value, but I want to call out two points:</p>
<ul>
<li><strong>Data alone is not enough.</strong> This is where science meets art in machine-learning. Quoting Domingos: “… the need for knowledge in learning should not be surprising. Machine learning is not magic; it can’t get something from nothing. What it does is get more from less. Programming, like all engineering, is a lot of work: we have to build everything from scratch. Learning is more like farming, which lets nature do most of the work. Farmers combine seeds with nutrients to grow crops. Learners combine knowledge with data to grow programs.”</li>
<li><strong>More data beats a cleverer algorithm.</strong> Listen up, programmers. We like cool tools. Resist the temptation to reinvent the wheel, or to over-engineer solutions. Your starting point is to <a href="http://www.artima.com/intv/simplest3.html" target="_blank" rel="noopener">Do the Simplest Thing that Could <em>Possibly</em> Work</a>. Quoting Domingos: “Suppose you’ve constructed the best set of features you can, but the classifiers you’re getting are still not accurate enough. What can you do now? There are two main choices: design a better learning algorithm, or gather more data. […] As a rule of thumb, a dumb algorithm with lots and lots of data beats a clever one with modest amounts of it. (After all, machine learning is all about letting data do the heavy lifting.)”</li>
</ul>
<p>So  <strong>knowledge</strong> and <strong>data</strong> are critical. Focus your efforts on those, before fussing about algorithms. In practice, this means that unless you <em>have</em> to increase complexity, you should continue to <a href="http://c2.com/cgi/wiki?DoSimpleThings" target="_blank" rel="noopener">Do Simple Things</a>; don’t rush to neural networks just because they’re cool. To improve your model, get more data  and use your knowledge of the problem to manipulate the data. You should spend most of your time on these steps. Only optimize your choice of algorithms after you’ve got enough data, and you’ve processed it well.</p>
<p><img src="http://i1381.photobucket.com/albums/ah240/hangtwenty/Screen%20Shot%202015-03-05%20at%2010.08.10%20PM_zpsqnljkqt5.png" alt="What has the most impact in Machine Learning"></p>
<p>(Chart inspired by a slide from <a href="https://www.youtube.com/watch?v=TYVCVzEJhhQ" target="_blank" rel="noopener">Alex Pinto’s talk, “Secure Because Math: A Deep-Dive on ML-Based Monitoring”</a>.)</p>
<h2 id="Talking-Machines"><a href="#Talking-Machines" class="headerlink" title="Talking Machines"></a>Talking Machines</h2><p>Subscribe to <strong><a href="http://www.thetalkingmachines.com/" target="_blank" rel="noopener">Talking Machines</a></strong>, a podcast about machine learning. It’s great. It’s a low-effort, high-yield way to learn more.</p>
<p>I suggest this listening order:</p>
<ul>
<li>Start with the <a href="http://www.thetalkingmachines.com/blog/2015/4/23/starting-simple-and-machine-learning-in-meds" target="_blank" rel="noopener">“Starting Simple”</a> episode. It supports what we read from Domingos. Ryan Adams talks about starting simple, as discussed above. Adams also stresses the importance of feature engineering. Feature engineering is an exercise of the “knowledge” Domingos writes about.</li>
<li>Then, start over from the first episode</li>
</ul>
<h2 id="Play-to-learn"><a href="#Play-to-learn" class="headerlink" title="Play to learn"></a>Play to learn</h2><p>Pick <strong>one or two</strong> of these IPython Notebooks and play along.</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/ogrisel/notebooks/blob/master/Labeled%20Faces%20in%20the%20Wild%20recognition.ipynb" target="_blank" rel="noopener">Face Recognition on a subset of the Labeled Faces in the Wild</a></li>
<li><a href="http://agconti.github.io/kaggle-titanic/" target="_blank" rel="noopener">Machine Learning from Disaster</a>: Using Titanic data, “Demonstrates basic data munging, analysis, and visualization techniques. Shows examples of supervised machine learning techniques.”</li>
<li><a href="https://github.com/jseabold/538model" target="_blank" rel="noopener">Election Forecasting</a>: A replication of the model Nate Silver used to make <a href="http://fivethirtyeight.blogs.nytimes.com/fivethirtyeights-2012-forecast/" target="_blank" rel="noopener">predictions about the 2012 US Presidential Election for the New York Times</a>)</li>
<li><a href="https://github.com/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%20Machine%20Learning%20Notebook.ipynb" target="_blank" rel="noopener">An example Machine Learning notebook</a>: “let’s pretend we’re working for a startup that just got funded to create a smartphone app that automatically identifies species of flowers from pictures taken on the smartphone.  We’ve been tasked by our head of data science to create a demo machine learning model that takes four measurements from the flowers (sepal length, sepal width, petal length, and petal width) and identifies the species based on those measurements alone.”</li>
<li>ClickSecurity’s “data hacking” series (thanks <a href="https://github.com/hummus" target="_blank" rel="noopener">hummus</a>!)<ul>
<li><a href="http://nbviewer.ipython.org/github/ClickSecurity/data_hacking/blob/master/dga_detection/DGA_Domain_Detection.ipynb" target="_blank" rel="noopener">Detect Algorithmically Generated Domains</a></li>
<li><a href="http://nbviewer.ipython.org/github/ClickSecurity/data_hacking/blob/master/sql_injection/sql_injection.ipynb" target="_blank" rel="noopener">Detect SQL Injection</a></li>
<li><a href="http://nbviewer.ipython.org/github/ClickSecurity/data_hacking/blob/master/java_classification/java_classification.ipynb" target="_blank" rel="noopener">Java Class File Analysis</a>: is this Java code malicious or benign?</li>
</ul>
</li>
<li>If you want more of a data science bent, pick a notebook from <a href="https://github.com/donnemartin/data-science-ipython-notebooks" target="_blank" rel="noopener">this excellent list of Data Science ipython notebooks</a>. “Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.”</li>
<li>Or more generic tutorials/overviews …<ul>
<li><a href="http://amueller.github.io/sklearn_tutorial/" target="_blank" rel="noopener">Tutorial introduction to machine learning with sklearn</a></li>
<li><a href="http://bugra.github.io/work/notes/2014-11-22/an-introduction-to-supervised-learning-scikit-learn/" target="_blank" rel="noopener">An Introduction to Supervised Learning via Scikit Learn</a></li>
<li><a href="http://bugra.github.io/work/notes/2014-11-16/an-introduction-to-unsupervised-learning-scikit-learn/" target="_blank" rel="noopener">An Introduction to Unsupervised Learning via Scikit Learn</a></li>
</ul>
</li>
</ul>
<p>There are more places to find great IPython Notebooks:</p>
<ul>
<li><a href="https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks#statistics-machine-learning-and-data-science" target="_blank" rel="noopener">A Gallery of Interesting IPython notebooks (wiki page on GitHub): Statistics, Machine Learning and Data Science</a></li>
<li><a href="http://nb.bianp.net/sort/views/" target="_blank" rel="noopener">Fabian Pedregosa’s larger, automatic gallery</a></li>
</ul>
<h1 id="Immerse-yourself"><a href="#Immerse-yourself" class="headerlink" title="Immerse yourself"></a>Immerse yourself</h1><p>Pick one of the courses below and do the whole thing.</p>
<h2 id="Recommended-course"><a href="#Recommended-course" class="headerlink" title="Recommended course"></a>Recommended course</h2><p><strong><a href="http://www.andrewng.org/about/" target="_blank" rel="noopener">Prof. Andrew Ng’s</a> <a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="noopener"><em>Machine Learning</em></a> is a free online course I’ve <a href="https://docs.google.com/document/d/1YN6BVdReNAYc8B0fjQ84yzDflqmeEPj7S0Xc-9_26R0/" target="_blank" rel="noopener">seen</a> <a href="http://www.forbes.com/sites/anthonykosner/2013/12/29/why-is-machine-learning-cs-229-the-most-popular-course-at-stanford/" target="_blank" rel="noopener">recommended</a> <a href="https://www.quora.com/How-do-I-learn-machine-learning-1/answer/Cory-Hicks-1" target="_blank" rel="noopener">often.</a> <a href="https://www.quora.com/How-do-I-learn-machine-learning-1/answers/5673" target="_blank" rel="noopener">And</a> <a href="https://www.quora.com/How-do-I-learn-machine-learning-1/answer/Xavier-Amatriain" target="_blank" rel="noopener">emphatically.</a></strong></p>
<p>It’s helpful if you decide on a pet project to play around with, as you go, so you have a way to apply your knowledge. You could use one of these <a href="https://github.com/caesar0301/awesome-public-datasets" target="_blank" rel="noopener">Awesome Public Datasets</a>. And remember, IPython Notebook is your friend.</p>
<p>Also, the book <em><a href="http://statweb.stanford.edu/~tibs/ElemStatLearn/" target="_blank" rel="noopener">Elements of Statistical Learning</a></em> comes up frequently, but is usually referred to as a “reference” not an introduction. It’s free, so download or bookmark it!</p>
<h2 id="Other-courses"><a href="#Other-courses" class="headerlink" title="Other courses"></a>Other courses</h2><p>Here are some other free online courses I’ve seen recommended. (Machine Learning, Data Science, and related topics.)</p>
<ul>
<li><a href="https://www.coursera.org/course/machlearning" target="_blank" rel="noopener">Machine Learning</a> by Prof. Pedro Domingos of the University of Washington. Domingos wrote the paper <a href="https://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf" target="_blank" rel="noopener">“A Few Useful Things to Know About Machine Learning”</a>, from earlier in this guide. (Thanks to <a href="https://news.ycombinator.com/item?id=9563501" target="_blank" rel="noopener">paperwork on Hacker News.</a>)</li>
<li>Data science courses as IPython Notebooks:<ul>
<li><a href="http://radimrehurek.com/data_science_python/" target="_blank" rel="noopener">Practical Data Science</a></li>
<li><a href="http://learnds.com/" target="_blank" rel="noopener">Learn Data Science (an entire self-directed course!)</a></li>
<li>Supplementary material: <a href="https://github.com/donnemartin/data-science-ipython-notebooks" target="_blank" rel="noopener">donnemartin/data-science-ipython-notebooks</a>. “Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.”</li>
</ul>
</li>
<li>Kevin Markham’s video series, <a href="http://blog.kaggle.com/2015/04/08/new-video-series-introduction-to-machine-learning-with-scikit-learn/" target="_blank" rel="noopener">Intro to Machine Learning with scikit-learn</a>, starts with what we’ve already covered, then continues on at a comfortable place. After the videos you could do Markham’s <a href="https://github.com/justmarkham/DAT8" target="_blank" rel="noopener">General Assembly’s Data Science course.</a> Interactive. (Older versions: <a href="https://github.com/justmarkham/DAT7" target="_blank" rel="noopener">7</a>, <a href="https://github.com/justmarkham/DAT5" target="_blank" rel="noopener">5</a>, <a href="https://github.com/justmarkham/DAT4" target="_blank" rel="noopener">4</a>, <a href="https://github.com/justmarkham/DAT3" target="_blank" rel="noopener">3</a>.) Markham’s course is also offered in-person in Washington, DC.</li>
<li>Surveys of Data Science courseware (a bit more Choose Your Own Adventure)<ul>
<li>Check out <a href="https://www.quora.com/Is-it-worth-it-to-pay-9-*-49-for-a-data-science-specialization-on-Coursera/answer/Jack-Golding" target="_blank" rel="noopener">Jack Golding’s survey of Data Science courseware</a>. Includes Coursera’s <a href="https://www.coursera.org/specializations/jhudatascience" target="_blank" rel="noopener">Data Science Specialization</a> with 9 courses in it. The Specialization certificate isn’t free, but you can take the courses 1-by-1 for free if you don’t care about the certificate. The survey also covers <a href="http://cs109.github.io/2014/" target="_blank" rel="noopener">Harvard CS109</a> which I’ve seen recommended elsewhere.</li>
<li><a href="https://www.quora.com/How-can-I-become-a-data-scientist?redirected_qid=59455" target="_blank" rel="noopener">Another epic Quora thread: How can I become a data scientist?</a></li>
<li>Data Science Weekly’s <a href="http://www.datascienceweekly.org/data-science-resources/the-big-list-of-data-science-resources" target="_blank" rel="noopener">Big List of Data Science Resources</a> has a <a href="http://www.datascienceweekly.org/data-science-resources/data-science-moocs" target="_blank" rel="noopener">List of Data Science MOOCs</a></li>
</ul>
</li>
<li><a href="http://cs109.github.io/2014/" target="_blank" rel="noopener">Data Science (Harvard CS109)</a></li>
<li><a href="http://stronginference.com/Bios8366/lectures.html" target="_blank" rel="noopener">Advanced Statistical Computing (Vanderbilt BIOS8366).</a>. Interactive (lots of IPython Notebook material)</li>
</ul>
<h2 id="Learn-Pandas-well"><a href="#Learn-Pandas-well" class="headerlink" title="Learn Pandas well"></a>Learn Pandas well</h2><p>If you’re focusing on Python, you should get more familiar with Pandas.</p>
<ul>
<li><strong>Essential</strong>: <a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" target="_blank" rel="noopener">10 Minutes to Pandas</a></li>
<li><strong>Essential</strong>: <a href="http://nbviewer.ipython.org/github/rasbt/python_reference/blob/master/tutorials/things_in_pandas.ipynb" target="_blank" rel="noopener">Things in Pandas I Wish I’d Had Known Earlier</a> (IPython Notebook)</li>
<li><a href="http://www.swegler.com/becky/blog/2014/08/06/useful-pandas-snippets/" target="_blank" rel="noopener">Useful Pandas Snippets</a></li>
<li>Here are some docs I found especially helpful as I continued learning:<ul>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/cookbook.html" target="_blank" rel="noopener">Cookbook</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/dsintro.html" target="_blank" rel="noopener">Data Structures</a>, esp. <a href="http://pandas.pydata.org/pandas-docs/stable/dsintro.html#dataframe" target="_blank" rel="noopener">DataFrame</a> section</li>
<li><a href="http://pandas.pydata.org/pandas-docs/version/0.15.0/reshaping.html" target="_blank" rel="noopener">Reshaping by pivoting DataFrames</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/computation.html" target="_blank" rel="noopener">Computational tools</a> and <a href="http://stats.stackexchange.com/questions/29713/what-is-covariance-in-plain-language" target="_blank" rel="noopener">StackExchange thread: “What is covariance in plain language?”</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/groupby.html" target="_blank" rel="noopener">Group By (split, apply, and combine DataFrames)</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/version/0.15.0/visualization.html" target="_blank" rel="noopener">Visualizing your DataFrames</a></li>
</ul>
</li>
</ul>
<h2 id="Cheat-sheets"><a href="#Cheat-sheets" class="headerlink" title="Cheat sheets"></a>Cheat sheets</h2><p>Bookmark these cheat sheets:</p>
<ul>
<li><a href="http://scikit-learn.org/stable/tutorial/machine_learning_map/" target="_blank" rel="noopener">scikit-learn algorithm cheat sheet</a></li>
<li><a href="http://hunch.net/?p=2714" target="_blank" rel="noopener">Metacademy: a package manager for [machine learning] knowledge</a>. A mind map of machine learning concepts, with great detail on each.</li>
<li><a href="https://drive.google.com/folderview?id=0ByIrJAE4KMTtaGhRcXkxNHhmY2M" target="_blank" rel="noopener">Matplotlib / Pandas / Python cheat sheets</a>.</li>
</ul>
<h2 id="More-topics"><a href="#More-topics" class="headerlink" title="More topics"></a>More topics</h2><h3 id="More-Data-Science-materials"><a href="#More-Data-Science-materials" class="headerlink" title="More Data Science materials"></a>More Data Science materials</h3><p>Not repeating the materials mentioned above, here are some more Data Science resources:</p>
<ul>
<li><strong>Extremely accessible data science book: <a href="http://www.john-foreman.com/data-smart-book.html" target="_blank" rel="noopener"><em>Data Smart</em> by John Foreman</a></strong></li>
<li><strong><a href="http://learnds.com/" target="_blank" rel="noopener">An entire self-directed course in Data Science, as a IPython Notebook</a></strong></li>
<li><a href="http://cacm.acm.org/blogs/blog-cacm/169199-data-science-workflow-overview-and-challenges/fulltext" target="_blank" rel="noopener">Data Science Workflow: Overview and Challenges</a> (read the article &amp; the comment by Joseph McCarthy)</li>
<li>Fun little IPython Notebook: <a href="http://nbviewer.ipython.org/github/jmsteinw/Notebooks/blob/master/IndeedJobs.ipynb" target="_blank" rel="noopener">Web Scraping Indeed.com for Key Data Science Job Skills</a></li>
</ul>
<h3 id="Many-more-specialized-topics"><a href="#Many-more-specialized-topics" class="headerlink" title="Many more specialized topics"></a>Many more specialized topics</h3><p>Check out <a href="http://gwulfs.github.io/" target="_blank" rel="noopener">Gideon Wulfsohn</a>‘s <a href="https://docs.google.com/document/d/1YN6BVdReNAYc8B0fjQ84yzDflqmeEPj7S0Xc-9_26R0" target="_blank" rel="noopener"><strong>excellent</strong> introduction to Machine Learning</a> for specialized knowledge on many topics… including <a href="http://www.quora.com/How-do-random-forests-work-in-laymans-terms" target="_blank" rel="noopener">Ensemble Methods</a>, <a href="https://spark.apache.org/examples.html" target="_blank" rel="noopener">Apache Spark</a>, <a href="https://www.coursera.org/course/neuralnets" target="_blank" rel="noopener">Neural Networks</a>, <a href="http://pybrain.org/" target="_blank" rel="noopener">Reinforcement Learning</a>, <a href="https://nltk.org" target="_blank" rel="noopener">Natural Language Processing</a> (<a href="https://github.com/IndicoDataSolutions/Passage" target="_blank" rel="noopener">RNN</a>, <a href="http://bugra.github.io/work/notes/2015-02-21/topic-modeling-for-the-uninitiated/" target="_blank" rel="noopener">LDA</a>, <a href="http://rare-technologies.com/word2vec-tutorial/" target="_blank" rel="noopener">Word2Vec</a>), <a href="https://pystruct.github.io/" target="_blank" rel="noopener">Structured Prediction</a>, <a href="https://www.youtube.com/watch?v=S75EdAcXHKk" target="_blank" rel="noopener">Deep Learning</a>, <a href="http://web.stanford.edu/class/cs246/" target="_blank" rel="noopener">Distributed Systems (Hadoop Ecosystem)</a>, Graphical Models (<a href="http://www.autonlab.org/tutorials/hmm.html" target="_blank" rel="noopener">Hidden Markov Models</a>), <a href="https://github.com/hyperopt/hyperopt" target="_blank" rel="noopener">Hyper Parameter Optimization</a>, <a href="http://deeplearning.net/software/theano/tutorial/using_gpu.html" target="_blank" rel="noopener">GPU Acceleration (Theano)</a>, <a href="http://deeplearning.net/tutorial/lenet.html" target="_blank" rel="noopener">Computer Vision</a>, Internet of Things, and Visualization.</p>
<p>Here’s an IPython Notebook book about <a href="http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/" target="_blank" rel="noopener">Probabilistic Programming<br>and Bayesian Methods for Hackers</a>: “An intro to Bayesian methods and probabilistic programming from a computation/understanding-first, mathematics-second point of view.”</p>
<h2 id="Questions-answers-chats"><a href="#Questions-answers-chats" class="headerlink" title="Questions, answers, chats"></a>Questions, answers, chats</h2><p>For now, the best StackExchange site is  <a href="http://stats.stackexchange.com/questions/tagged/machine-learning?sort=frequent&amp;pageSize=15" target="_blank" rel="noopener">stats.stackexchange.com – <em>machine-learning</em>.</a> (There’s also <a href="http://datascience.stackexchange.com/" target="_blank" rel="noopener">datascience.stackexchange.com</a>, but it’s still in Beta.) And there’s <a href="https://www.reddit.com/r/machinelearning" target="_blank" rel="noopener">/r/machinelearning</a>. There are also many relevant discussions on Quora, for example: <a href="http://www.quora.com/What-is-the-difference-between-Data-Analytics-Data-Analysis-Data-Mining-Data-Science-Machine-Learning-and-Big-Data-1" target="_blank" rel="noopener">What is the difference between Data Analytics, Data Analysis, Data Mining, Data Science, Machine Learning, and Big Data?</a></p>
<p>You should also <a href="https://gitter.im/scikit-learn/scikit-learn" target="_blank" rel="noopener">join the Gitter channel for scikit-learn!</a></p>
<p>For help and community in meatspace, seek out meetups. Data Science Weekly’s <a href="http://www.datascienceweekly.org/data-science-resources/the-big-list-of-data-science-resources" target="_blank" rel="noopener">Big List of Data Science Resources</a> may help you.</p>
<h1 id="Assorted-Opinions-and-Other-Resources"><a href="#Assorted-Opinions-and-Other-Resources" class="headerlink" title="Assorted Opinions and Other Resources"></a>Assorted Opinions and Other Resources</h1><p>The rest of the stuff that might not be structured enough for a course, but seems important to know.</p>
<h2 id="Risks"><a href="#Risks" class="headerlink" title="Risks"></a>Risks</h2><p>“Machine learning systems automatically learn programs from<br>data.” Pedro Domingos, in <a href="http://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf" target="_blank" rel="noopener">“A Few Useful Things to Know about Machine Learning.”</a> The programs you generate will require maintenance. Like any way of creating programs faster, you can rack up technical debt.</p>
<p>Really essential:</p>
<ul>
<li><strong><a href="http://www.john-foreman.com/blog/surviving-data-science-at-the-speed-of-hype" target="_blank" rel="noopener">Surviving Data Science “at the Speed of Hype”</a></strong> by John Foreman, Data Scientist at MailChimp</li>
<li><a href="http://hunch.net/?p=22" target="_blank" rel="noopener">11 Clever Methods of Overfitting and How to Avoid Them</a></li>
</ul>
<p>A worthwhile paper: <a href="https://static.googleusercontent.com/media/research.google.com/en/us/pubs/archive/43146.pdf" target="_blank" rel="noopener">Machine Learning: The High-Interest Credit Card of Technical Debt.</a> Here’s the abstract:</p>
<blockquote>
<p>Machine learning offers a fantastically powerful toolkit for building complex systems quickly. This paper argues that it is dangerous to think of these quick wins as coming for free. Using the framework of technical debt, we note that it is remarkably easy to incur massive ongoing maintenance costs at the system level when applying machine learning. The goal of this paper is highlight several machine learning specific risk factors and design patterns to be avoided or refactored where possible. These include boundary erosion, entanglement, hidden feedback loops, undeclared consumers, data dependencies, changes in the external world, and a variety of system-level anti-patterns.</p>
</blockquote>
<p>And a few more articles:</p>
<ul>
<li><a href="http://www.john-foreman.com/blog/the-perilous-world-of-machine-learning-for-fun-and-profit-pipeline-jungles-and-hidden-feedback-loops" target="_blank" rel="noopener">The Perilous World of Machine Learning for Fun and Profit: Pipeline Jungles and Hidden Feedback Loops</a></li>
<li><a href="http://www.kdnuggets.com/2015/01/high-cost-machine-learning-technical-debt.html" target="_blank" rel="noopener">The High Cost of Maintaining Machine Learning Systems</a></li>
</ul>
<h3 id="Welcome-to-the-Danger-Zone"><a href="#Welcome-to-the-Danger-Zone" class="headerlink" title="Welcome to the Danger Zone"></a>Welcome to the Danger Zone</h3><p>So you are dabbling with Machine Learning. You’ve got Hacking Skills. Maybe you’ve got some “knowledge” in Domingos’ sense (some “Substantive Expertise” or “Domain Knowledge”). This diagram isn’t a perfect fit for us, but may get the point across:</p>
<p><a href="http://drewconway.com/zia/2013/3/26/the-data-science-venn-diagram" target="_blank" rel="noopener"><img src="http://i.imgur.com/cH5Rkko.png" alt="Drew Conway&#39;s Data Science Venn Diagram, modified slightly"></a></p>
<p><strong>Please</strong> don’t sell yourself as a Machine Learning expert while you’re still in the Danger Zone. Don’t build bad products or publish junk science. This guide can’t tell you how you’ll know you’ve “made it” into Machine Learning competence … let alone  expertise. It’s hard to evaluate proficiency without schools or other institutions. This is a common problem for self-taught people.</p>
<h4 id="Towards-Expertise"><a href="#Towards-Expertise" class="headerlink" title="Towards Expertise"></a>Towards Expertise</h4><p>You need practice. <a href="https://news.ycombinator.com/item?id=10508565" target="_blank" rel="noopener">On Hacker News, user olympus commented to say you could use competitions to practice and evaluate yourself</a>. <a href="http://www.kaggle.com/competitions" target="_blank" rel="noopener">Kaggle</a> and <a href="http://www.chalearn.org/" target="_blank" rel="noopener">ChaLearn</a> are hubs for Machine Learning competitions. You can find some <a href="https://github.com/apeeyush/machine-learning" target="_blank" rel="noopener">examples of code for popular Kaggle competitions here</a>. For smaller exercises, <a href="https://www.hackerrank.com/domains/ai/machine-learning/page/1" target="_blank" rel="noopener">try HackerRank</a>.</p>
<p>You also need understanding. You should review what Kaggle competition winners had to say about their solutions, <a href="http://blog.kaggle.com/" target="_blank" rel="noopener">for example, the “No Free Hunch” blog</a>. These might be over your head at first but once you’re starting to understand and appreciate these, you know you’re getting somewhere.</p>
<p>Competitions and challenges are one way to practice. You shouldn’t limit yourself, though.</p>
<p>Here’s a complementary way to practice: <strong>do practice studies.</strong></p>
<ol>
<li><strong>Ask a question. Start your own study.</strong> The <a href="https://github.com/DataScienceSpecialization/courses/blob/master/01_DataScientistToolbox/03_02_whatIsData/index.Rmd#the-data-is-the-second-most-important-thing" target="_blank" rel="noopener">“most important thing in data science is the question”</a> (<a href="https://github.com/jtleek" target="_blank" rel="noopener">Dr. Jeff T. Leek</a>). So start with a question. Then, find <a href="https://github.com/caesar0301/awesome-public-datasets" target="_blank" rel="noopener">real data</a>. Analyze it. Then …</li>
<li><strong>Communicate results.</strong> When you have a novel finding, reach out for peer review (see below).</li>
<li><strong>Fix issues.</strong> Learn. Share what you learn.</li>
</ol>
<p>And repeat. Re-phrasing this, it fits with the <a href="https://en.wikipedia.org/wiki/Scientific_method" target="_blank" rel="noopener">scientific method</a>: formulate a question (or problem statement), create a hypothesis, gather data, analyze the data, and communicate results. (You should <a href="http://101.datascience.community/2012/06/27/the-data-scientific-method/" target="_blank" rel="noopener">watch this video about the scientific method in data science</a>, and/or <a href="http://customerthink.com/getting-insights-using-data-science-skills-and-the-scientific-method/" target="_blank" rel="noopener">read this article</a>.)</p>
<p>How can you come up with interesting questions? Once a week, <a href="https://github.com/caesar0301/awesome-public-datasets" target="_blank" rel="noopener">browse datasets</a> and write down some questions. Also, you should sign up for <a href="https://tinyletter.com/data-is-plural" target="_blank" rel="noopener">Data is Plural</a>, a newsletter of interesting data sets. Stay curious. When a question inspires you, start a study.</p>
<p>This advice, to do practice studies and learn from peer review, is based on <a href="https://github.com/hangtwenty/dive-into-machine-learning/issues/11#issuecomment-153934120" target="_blank" rel="noopener">a conversation</a> with <a href="http://www.randalolson.com/" target="_blank" rel="noopener">Dr. Randal S. Olson</a>. Here’s more advice from Olson, <a href="https://github.com/hangtwenty/dive-into-machine-learning/issues/11#issuecomment-154135498" target="_blank" rel="noopener">quoted with permission:</a></p>
<blockquote>
<p>I think the best advice is to tell people to always present their methods clearly and to avoid over-interpreting their results. Part of being an expert is knowing that there’s rarely a clear answer, especially when you’re working with real data.</p>
</blockquote>
<p>As you repeat this process, your practice studies will become more scientific, interesting, and focused. The most important part of this process is peer review.</p>
<h4 id="Ask-for-Peer-Review"><a href="#Ask-for-Peer-Review" class="headerlink" title="Ask for Peer Review"></a>Ask for Peer Review</h4><p>Here are some communities where you can reach out for peer review:</p>
<ul>
<li><a href="https://stats.stackexchange.com/" target="_blank" rel="noopener">Cross-Validated: stats.stackexchange.com</a></li>
<li><a href="https://reddit.com/r/DataIsBeautiful" target="_blank" rel="noopener">/r/DataIsBeautiful</a></li>
<li><a href="https://reddit.com/r/DataScience" target="_blank" rel="noopener">/r/DataScience</a></li>
<li><a href="https://reddit.com/r/MachineLearning" target="_blank" rel="noopener">/r/MachineLearning</a></li>
<li><a href="https://news.ycombinator.com" target="_blank" rel="noopener">Hacker News: news.ycombinator.com</a>. You’ll probably want to submit as “Show HN”</li>
</ul>
<p>Post to any of those, and ask for feedback. You’ll get feedback. You’ll learn a ton. As experts review your work you will learn a lot about the field. You’ll also be practicing the skill of accepting critical feedback.</p>
<p>When I read the feedback on my Pull Requests, first I repeat to myself, “I will not get defensive, I will not get defensive, I will not get defensive.” You may want to do that before you read reviews of your Machine Learning work too.</p>
<h3 id="An-Anecdote-About-User-Experience"><a href="#An-Anecdote-About-User-Experience" class="headerlink" title="An Anecdote About User Experience"></a>An Anecdote About User Experience</h3><p>If you create software for users, and you want to use machine learning to benefit your users, <em>you must understand your users.</em> I won’t get into a whole user experience lesson here, but in short, you must think about user experience.</p>
<p>I have a friend who worked at <code>&lt;Redacted&gt;</code> Music Streaming Service. This company used machine learning in their recommendation and radio services. He complained about the way the company scored the radio feature’s performance. There was disagreement about what should be scored. They used a metric, “no song skips.” But why? Sure that indicates the recommendation wasn’t <em>awful</em>, what if you want to measure engagement? Other metrics could measure positive engagement: “favorites,” shares, listening time, or whether the listener returns to the radio station later. Measuring “no skips” might work for the passive listener, but the engaged listener is different. Perhaps the engaged listener will skip 5 songs, but find 20 songs they love and come back to the service later.</p>
<p><strong>My takeaway:</strong> user experience matters just as much as ever. You must understand <em>which kind</em> of user you’re trying to benefit with your machine learning techniques. (Write user stories!) You must come up with measurements and ways to evaluate success for those users. You must be able to measure before you can optimize.</p>
<p>This has to do with knowledge of the domain, but also may benefit from UX expertise. Work with UX experts if you can.</p>
<h3 id="Machine-Learning-in-Internet-Security"><a href="#Machine-Learning-in-Internet-Security" class="headerlink" title="Machine Learning in Internet Security"></a>Machine Learning in Internet Security</h3><p>There was a great BlackHat webcast on this topic, <a href="https://www.blackhat.com/html/webcast/02192015-secure-because-math.html" target="_blank" rel="noopener">Secure Because Math: Understanding Machine Learning-Based Security Products.</a> Slides are <a href="https://www.blackhat.com/html/webcast/02192015-secure-because-math.html" target="_blank" rel="noopener">there</a>, <a href="https://attendee.gotowebinar.com/recording/80449431422110210" target="_blank" rel="noopener">video recording is here.</a> Equally relevant to InfoSec and AppSec.</p>
<h2 id="Big-Data"><a href="#Big-Data" class="headerlink" title="Big Data?"></a>Big Data?</h2><p>Scaling data analysis is a familiar problem now, and there’s no shortage of ways to address it. <a href="http://www.john-foreman.com/blog/surviving-data-science-at-the-speed-of-hype" target="_blank" rel="noopener">Beware needless hype and companies that want to sell you flashy, proprietary solutions.</a> You can do it all with open-source tools. Even if you contract it, you consider looking for contractors who use known good stacks. No news here.</p>
<p>Here are some tools to reach for:</p>
<ul>
<li><strong><a href="https://spark.apache.org/" target="_blank" rel="noopener">Apache Spark.</a></strong><ul>
<li>I mean, hell, <a href="https://databricks.com/blog/2015/02/17/introducing-dataframes-in-spark-for-large-scale-data-science.html" target="_blank" rel="noopener">Spark has DataFrames and easy co-operability with pandas!</a></li>
<li>Berkeley has <a href="https://www.edx.org/course/scalable-machine-learning-uc-berkeleyx-cs190-1x#.VOC70VPF_lQ" target="_blank" rel="noopener">a course on Scalable Machine Learning, focusing on Apache Spark.</a></li>
</ul>
</li>
<li><a href="http://netflix.github.io/#repo" target="_blank" rel="noopener">NetflixOSS</a> (see “Big Data Tools”)<ul>
<li><a href="http://techblog.netflix.com/2015/01/introducing-surus-and-scorepmml.html" target="_blank" rel="noopener">Netflix: Surus and ScorePMML</a></li>
<li><a href="http://techblog.netflix.com/search/label/big%20data" target="_blank" rel="noopener">“big data” on the NetflixOSS blog</a></li>
</ul>
</li>
</ul>
<p>Also: <a href="http://simplystatistics.org/2014/05/22/10-things-statistics-taught-us-about-big-data-analysis/" target="_blank" rel="noopener">10 things statistics taught us about big data analysis</a></p>
<h2 id="Finding-Open-Source-Libraries"><a href="#Finding-Open-Source-Libraries" class="headerlink" title="Finding Open-Source Libraries"></a>Finding Open-Source Libraries</h2><ul>
<li>Bookmark <strong><a href="https://github.com/josephmisiti/awesome-machine-learning" target="_blank" rel="noopener">awesome-machine-learning</a></strong>, a curated list of <a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">awesome</a> Machine Learning libraries and software.</li>
<li><a href="http://www.tensorflow.org/" target="_blank" rel="noopener">TensorFlow</a> seems like a <a href="https://news.ycombinator.com/item?id=10532957" target="_blank" rel="noopener">really big deal.</a> People like you will do exciting things with TensorFlow. It’s a framework. Frameworks can help you manage complexity. Just remember this rule of thumb: <strong>“More data beats a cleverer algorithm”</strong> (Domingos), no matter how cool your tools are. Also note, TensorFlow is not the only machine learning framework of its kind: <strong><a href="https://github.com/zer0n/deepframeworks" target="_blank" rel="noopener">Check this great, detailed comparison of TensorFlow, Torch, and Theano.</a></strong> See also <a href="https://github.com/Newmu/Theano-Tutorials" target="_blank" rel="noopener">Newmu/Theano-Tutorials</a> and  <a href="https://github.com/nlintz/TensorFlow-Tutorials" target="_blank" rel="noopener">nlintz/TensorFlow-Tutorials</a>.</li>
<li>Bookmark <strong><a href="https://github.com/svaksha/pythonidae/blob/master/AI.md#machine-learning" target="_blank" rel="noopener">Pythonidae</a></strong>, a curated list of <a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">awesome</a> libraries and software in the Python language.</li>
<li>Bookmark <strong><a href="https://github.com/svaksha/Julia.jl/blob/master/AI.md#machine-learning" target="_blank" rel="noopener">Julia.jl</a></strong>, a curated list of <a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">awesome</a> libraries and software in the Julia language.</li>
<li>For Machine-Learning libraries that might not be on PyPI, GitHub, etc., there’s <a href="http://mloss.org/software/" target="_blank" rel="noopener">MLOSS (Machine Learning Open Source Software)</a>. Seems to feature many academic libraries.</li>
</ul>
<h2 id="Alternative-ways-to-“Dive-into-Machine-Learning”"><a href="#Alternative-ways-to-“Dive-into-Machine-Learning”" class="headerlink" title="Alternative ways to “Dive into Machine Learning”"></a>Alternative ways to “Dive into Machine Learning”</h2><p>Here are some other guides to Machine Learning. They can be alternatives or complements to this guide.</p>
<ul>
<li><a href="http://xyclade.github.io/MachineLearning/" target="_blank" rel="noopener">Machine Learning for Developers</a> is another good introduction. It introduces machine learning for a developer audience using Smile, a machine learning library that can be used both in Java and Scala.</li>
<li><a href="http://www.jacksimpson.co/2015/06/07/materials-for-learning-machine-learning/" target="_blank" rel="noopener">Materials for Learning Machine Learning</a> by Jack Simpson</li>
<li><a href="https://docs.google.com/document/d/1YN6BVdReNAYc8B0fjQ84yzDflqmeEPj7S0Xc-9_26R0/edit" target="_blank" rel="noopener">How to Machine Learn</a> by <a href="http://gwulfs.github.io/" target="_blank" rel="noopener">Gideon Wulfsohn</a></li>
<li><a href="https://github.com/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%20Machine%20Learning%20Notebook.ipynb" target="_blank" rel="noopener">Example Machine Learning notebook, exercise, and guide</a> by Dr. Randal S. Olson. Mentioned in Notebooks section as well, but it has a similar goal to this guide (introduce you, and show you where to go next). Rich “Further Reading” section.</li>
<li>[Your guide here]</li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> machine learning </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第一期]-读书是赴会一场缺席的对话]]></title>
      <url>http://chocoluffy.com/2015/11/24/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80/</url>
      <content type="html"><![CDATA[<p>一场缺席的对话， 一场没有观众的戏剧。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbm2aq2l8j21kw0zk4c2.jpg" alt="书"></p>
<p>事情的缘由是这样的， 有时候觉得， 自由、独立、道德等等等的这些抽象词语其实都是我们自己给自己定义的， 我们的经历给我们如何填充这些词语以素材和方向， 如果没有经历过奴役之苦， 我们很难想象自由physically\mentally的那种意义和美妙； 没有自觉到束缚或依赖于人的经历， 也很难体会独立， 在精神上不诉求于人的客观。这些诠释， 都其实是自己对自己过往的一次总结和反思。</p>
<p>于是想起了， 高中有时候的读书节， 总有一些代表们在台上说， 我们为什么要读书的演讲稿， 各种引经据典， 恨不得把各朝代的祖爷爷们搬来个遍。 我于是也想了， 如果是我， 我会怎么讲？</p>
<p>这就是原稿的来由， 思维混乱， 一派胡言：</p>
<p>===============================</p>
<p>我们从小都在什么‘黄金书’（哦不， 是什么书里自有黄金屋）的宣告下长大， 或者说我们中国的学生， 特别容易在自己还没有亲自体验之前就被 塞满一大堆的so called 经验之谈。</p>
<p>去体验， 不要去嚼别人嚼剩下的槟榔， 在你自己真正去看书， 去独立地思考之前， 不要去听别人什么：读书是好的， 读书是有意义的的， 这些都是bullshit。什么是意义， 意义是非常私人的， 是你想到什么， 对自己的生活有什么的思考和收获， 别人不能帮你生活。</p>
<p>我不喜欢那种举着大旗的宣称， 那种读书强国的腔调， 我真正体验到的， 是读书， 或者说读书的那一段时光， 是非常孤独的， 是平静的外人看来甚至有点呆的。 我甚至不能向你保证， 你会收获什么， 这听起来也挺残忍， 而且不是特别值得的不是吗。</p>
<p>读书， 是一种传递， 是一种跨越时空的对话。</p>
<p>那些作家的死掉， 并不是结束， 没有什么人， 什么作品是不朽的， 甚至艺术， 包括人们创造出来的任何文明都会消失， 我们能做到的， 就一下下把它传递下去； 可怕的是， 遗忘；遗忘， 等同于那件事， 那个人， 从来不曾出现过一样。 1984里面， 大洋国的人们最经常做的一件事就是去篡改历史， 按照老大哥的想法和意志， 去忘记， 去创造一个过去；</p>
<p>一场缺席的对话， 一场没有观众的戏剧； 说它神圣， 是因为这或许是唯一的一个途径， 让他曾经思考过的想法去传递下去； 而说它充满期待， 则是因为， 你永远也不知道， 你会在这个对话里面看见， 听见什么， 或者想到什么；你体会到了悲凉， 伤感， 读书就传给了这个时代多一个悲凉、伤感的想法； 你体会到了荒谬与残酷， 读书就让这个时代多一个思考过荒谬和残酷的想法。</p>
<p>是你自己， 决定了这本书所能达到的高度！</p>
<p>也是你自己， 决定了作者将以什么样的形式在我们这个时代延续，延续他曾经饱含着热情和感动创造、打造的作品！</p>
<p>===============================</p>
<p>感觉讲成了鸡汤…哎也没看几本书的人在这里痴人说梦</p>
<p>余舜哲</p>
<p>2015.7.16</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[辩手说]人们有没有权利来决定他们的税收将会被用在什么地方？]]></title>
      <url>http://chocoluffy.com/2015/11/20/%E8%BE%A9%E6%89%8B%E8%AF%B4-%E4%BA%BA%E4%BB%AC%E6%9C%89%E6%B2%A1%E6%9C%89%E6%9D%83%E5%88%A9%E6%9D%A5%E5%86%B3%E5%AE%9A%E4%BB%96%E4%BB%AC%E7%9A%84%E7%A8%8E%E6%94%B6%E5%B0%86%E4%BC%9A%E8%A2%AB%E7%94%A8%E5%9C%A8%E4%BB%80%E4%B9%88%E5%9C%B0%E6%96%B9%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>出于本能和直觉。</p>
<a id="more"></a>
<p>观点1: 关于“公地悲剧”<br>这里面会不会出现free rider的问题呢， 就是我们比较熟悉的“公地悲剧”和“搭便车“的问题。 思路是这样的， 如果每个个体可以根据自己的意志选择税收将要被使用在什么地方的话， 我们会觉得， 自己交的税在其中的一个项目中占比微不足道， 比如：公路马路的建设，认为其他人的税收足以支持这些项目，然后将自己的税转移到其他地方。一个显然的结果是， 如果每个人都这么想， 很多并不引起公众注意的社会福利设施将会失去资金支撑， 可以sense到一点“公地悲剧”的味道了。</p>
<p>观点2: 关于选择的成本<br>如果每个人都被要求做出基于自己的税收想要支出在什么项目的话， 有考虑过决策的成本吗？ 有考虑到因为信息的不对称导致的盲目选择吗？ 这样的系统在决策层面会不会效率太低了一点。不同的选择之间的说服和凝聚都是需要时间和谈判的， 就像我们知道民主是一个缓慢的决策过程， 多方的角力和冲突宣传， 民主低效的体现之一。而这样的过程的最终结果， 感觉又回在不同人的个人选择， 逐渐演变到， 出现了中间人代表人， 然后由代表人之间的胜负决定。 注意， 这种演变， 只是基于谈判效率优化的演变， 和专制暴政无关， 但仔细想想， 这不就是一开始的情景吗？绕了一圈结果回到了原点。</p>
<p>观点3: 关于社会分工和信息不对称<br>这一点本质上和第二点有交叠。 我们不能指望每一个人都对这个社会的运作有一个百分之百的了解和知识， 实际上， 这也不可能. 这就会导致每个人手上的选票（这里是他们自己的税收）最终流去他们自己关注的地方。 注意， 这里是他们自己关注的地方， 并不是真正需要， 有需求的， 自下往上的地方［嗯嗯嗅到了“专制”的味道］。后果可想而知， 不详述。这里一个比较常用的论点是， ［关于媒体的思考， 很多都和这个有关］， “Being emotional is more impressive, attractive and easier than being rational.” 这就是为什么我们需要可信赖的knowledgable的代表替我们做出决定， 我们也让渡这个决策的权利给政府。</p>
<p>后记：<br>很希望自己的公众号里面可以积累一些有质感的文字（可惜这篇就不是）， 无奈自己平时很难挤出完整的时间来洗濯文字和质地， 大部分的空闲时间， 还是在自己的开发项目和运动场上。最近刚好处于期中后节奏比较缓的时期， 决定将平时刷牙， 走路， 吃早餐时候注意到或者灵光一闪过的有趣的观点收集下来， 和大家分享。 也是以一名辩手的本能， 去学习去思考（辩题类型偏英辩， 毕竟自己也有积累挺多的英辩参赛经验和认识一堆有趣的辩手可以讨论）。这一系列不会更新的太频繁， 但每一个观点都是出于本能和直觉， 不作过多的修饰， 也希望给喜欢辩论的伙伴们一个思路。</p>
<p>最后一点， 不是特别擅长文字， 只是特别喜欢， 会有点慢热。 如果你也有关于辩题出于直觉的有趣的观点， 特别欢迎回复我!! 我会在后一次的公众号更新中发布跟进的讨论和亮点哦~嘿嘿^_^</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 公众号文章 </tag>
            
            <tag> 辩论记录 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的ISIS男友：一个记者与恐怖分子的秘密生活]]></title>
      <url>http://chocoluffy.com/2015/11/16/%E4%B8%80%E4%B8%AA%E8%AE%B0%E8%80%85%E5%92%8C%E6%81%90%E6%80%96%E5%88%86%E5%AD%90%E7%9A%84%E7%A7%98%E5%AF%86%E7%94%9F%E6%B4%BB/</url>
      <content type="html"><![CDATA[<p>什么才是真正难以摧毁的。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3llZCuiaqK6HKEpVbVUU1eZmG8ygGSLYCb891OrzE5SglmTstia8Rj6fOKwMUia8zgIT3yW6s6jYuFrg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5" alt="隔阂"></p>
<p>最近大家想必都会关注到许多关于恐怖主义， 关于ISIS和宗教教旨的解读文章。 我个人的想法是， 如果能够从生活现实层面看到关于ISIS的一点纪实的文字， 那样会让我更好的理解并思考现在正在传播的或完整或偏颇的观点。 我想知道ISIS他们的心理状态， 他们的生活日常， 他们的童年经历， 究竟为什么会有这么一群人， 愿意把杀戮(圣战)当成荣耀， 而究竟战争与反抗能争取到什么， 而什么才是真正难以摧毁的。</p>
<p>本意在一些纪实小说、记者报告中找到这些绳索的源头， 偶然发现这个知乎上面的一篇观点， 翻译自《伦敦星期日时报》的一篇调研文章， 来自一个女记者冒着生命危险取得的第一手资料。里面的一些细节让我对ISIS这个组织有了更多一点的印象。决定转载在这里， 分享给大家。在后记里我写上了一些个人想法。</p>
<p>余舜哲</p>
<p>2015.11.16</p>
<p><strong>我的ISIS男友：一个记者与恐怖分子的秘密生活</strong></p>
<p>一个年轻女子坐在一间巴黎的咖啡店里等着和她朋友共进午餐。她穿着一件紫色的贴身上衣，有着深色的头发和一双睿智的眼睛，手上戴着戒指。</p>
<p>她非常频繁地看向窗外，但是她并不是在看她的朋友是否到了，而是在紧张地看那个被派来保护她的警察，希望那个警察不要离她太远。</p>
<p>Anna Erelle生活在恐惧中。</p>
<p>这份恐惧是来自于一个叫做ISIS, 又称为伊斯兰国的组织。她收到了死亡威胁，来自网上不计其数的辱骂，以及一个关于她的视频，里面用阿拉伯语循环着“全世界的兄弟们，如果你们见到了她，杀了她”</p>
<p>在Erelle的手机里，有一张从监控录像截图下来三个英国女孩子的照片，分别是 Shamima Begum, 15岁, Kadiza Sultana, 16岁, 和 Amira Abase, 15岁。2个星期以前，照片中她们围着围巾，穿着牛仔裤，正在经过英国格域机场（Gatwick Airport)，去往叙利亚加入ISIS.</p>
<p>“看看她们，她们多么美好,” 她一边说，一边用她修剪得很整齐的指甲指着屏幕，“她们看起来既开心又放松。她们看起来就像仅仅是去土耳其的海滩度两周假而已。如果三个女孩子都穿黑色罩衫，她们一定会在机场引起人们的注意。可是，如果就像这样穿着普通的衣服，谁会注意到她们呢？”</p>
<p>“当他们让我去叙利亚时，也让我这么做。不要穿那种蒙住全身上下只露出眼睛的黑色罩衫Niqab，穿得像个普通女孩子就好了。最后一天在家的时候，对家人就像平常那样，家人们就不会怀疑了。不要留任何纸条或短信给家人们，不要试图向家人们解释，不然的话，家里人会跟着你的。待完了最后一天，直接消失就是了”。</p>
<p>成为“小旋律”（Melodie)</p>
<p>其实，并不是Erelle本人要去叙利亚旅行，而是她在网上创建的一个叫“小旋律”的虚拟的20岁女孩要去。这个20岁的虚拟姑娘将要成为圣战分子的新娘。而Erelle本人已经32岁，在巴黎的一家新闻周刊做记者，专门负责做关于中东的分析和报道。</p>
<p>2年前，Erelle在巴黎的一个乡下地区对当地的一些青少年做了一个采访。住在那里的人们大多在贫困中挣扎，而且她发现，那个地区已经成为一个滋生极端主义的沃土。这引起了她的兴趣，她很想调查清楚，到底有多少生活在那个地区的年轻穆斯林变成激进主义者了？</p>
<p>“他们其实对他们的宗教了解得非常少。他们很少读书，而且，他们是先了解了圣战再了解宗教的。”Erelle说，“他们曾经告诉我，‘你用你的大脑思考，而我们用心灵思考’。在他们眼中，激进主义有一种浪漫的情怀。我很想知道，这是怎么发生的？”</p>
<p>更令人费解的是一种被称作 “caliphettes”的人，指的是从小生活在一个自由的社会，却痴迷于圣战战士的年轻女孩子。 “对她们来说，圣战战士就像布拉德·皮特，甚至比他更迷人，因为布拉德·皮特不是宗教信仰。”</p>
<p>她决定加入年轻的穆斯林网上社区。并且在Facebook和Twitter上创建了虚拟资料的人物。很少有人知道，极端分子和穆斯林青少年之间的联系已经越来越多。即使是现在，这个规模已经让人惊讶了：苏丹娜，一个已经失踪的英国女孩，据信已经越过边境到达了叙利亚，在Twitter上是70多个极端分子的粉丝，而且她自己也已经积累了超过11000的粉丝。</p>
<p>Erelle本来只是想观察他们在网上的交流，弄清楚在法国的青少年是怎样变得激进的。然而意想不到的是，“小旋律”吸引了Abou-Bilel的注意，而Abou-Bilel是一个 ISIS的高级指挥官。他爱上了她，向她求婚，并邀请她去加入他的哈里发国。</p>
<p><strong>我的ISIS男朋友</strong></p>
<p>Erelle第一次收到Bilel的消息，是在去年四月一个有些暖和的晚上，大约10点左右。在她结束了一天的工作后，Erelle在沙发上观看小旋律的“朋友们”在干些什么：“姐妹，我见你看过了我的视频。全世界的人们都看了这个视频，这太疯狂了！你是穆斯林吗？你怎么看待圣战者呢？你要不要考虑来叙利亚？”</p>
<p>Erelle感到很惊讶。Bilel是一个出生在法国的阿尔及利亚后裔。他在伊拉克的时候，和ISIS的领袖阿布·贝克尔·巴格达迪结盟，后来和他一起搬到了叙利亚。</p>
<p>小旋律虽然在网上只有几天，但她已经有了一个很大的朋友圈，互相分享视频，经常讨论关于圣战的话题。网上的其他人都认为，她是一个在法国南方的贫困地区出生和长大的少女，母亲每天要工作很长的时间，她没有父亲，也没有兄弟。</p>
<p>小旋律试探性地回复他，她是一个皈依者，而且想学着做一个好穆斯林。她的文字里有很多的微笑表情符号，对他而言，这是一种鼓励。甚至比鼓励更多。</p>
<p>接下来的几天，他发给了她很多照片，照片中的他，坐在他的4X4吉普车里，还拿着他的枪。很快的，Bilel告诉小旋律，他爱上她了，她必须来叙利亚。</p>
<p>“如果你来这里，你会得到公主一样待遇。”他许诺。</p>
<p>“这就是那些女孩子们去那里的原因，”Erelle说。 “这是一个能拥有美好生活的美梦。她们相信，那是一个天堂，她们在英国或法国不会有任何美好的未来，她们不能找到好丈夫，而且被异教徒包围着，永远不能成为一个好穆斯林。 Bilel告诉小旋律，如果来到哈里发国，她就能有一个美好的人生，一间大大的公寓，还能有很多孩子。”</p>
<p>很快地，Bilel开始就和她在Skype上聊天。</p>
<p>“我从来没有见过一个杀过人的男人的脸。而他曾经自夸说，他已经杀死了几十个异教徒。开始的那几秒钟让人非常难忘。他盯着我看，而当我看他的时候，我从他的眼睛里什么也看不见，没有信仰，没有感情。他不是一个好人”</p>
<p>她不知道她是否能成功地冒充一个比自己的真实年龄年轻10岁的女孩，但Erelle身材小巧玲珑，一旦她穿上了带面罩的黑罩衫，尽量化最少的妆，这样似乎是可行的。</p>
<p>“去装作与恐怖分子交好是一件很奇怪的事。你要表现得很可爱，跟他说，‘嗨，你可不可以告诉我你今天干了什么？’我曾经以为我穿上黑罩衫会很不舒服，但是这个道具很有用，每当我穿上它，我就感觉我不是我自己了。”</p>
<p>Bilel很高兴：“你总是逗我笑！”因为他越来越相信她，他开始更多地说起他的生活。</p>
<p>他讲述了2013年伊斯兰国和叙利亚政府军为了争夺Raqqa地区控制权的血战。也讲了他是怎样参加了战斗，怎样砍头，怎样折磨囚犯。</p>
<p>“他是一个喜欢自吹自擂的人。说的什么全是他自己。但是他也是一个真正的残忍的人。最开始的时候，我想试着从他身上去寻找人性中光辉的一面，因为我以前总是相信，不管什么样的人，都应该有一点美好的东西在人性里。可是他完全没有人性。</p>
<p><strong>冒险生涯</strong></p>
<p>Bilel的真名是拉希德，他从小生活在在法国北部一个叫鲁贝的地方。 Erelle得知了他在法国有一连串犯罪指控，并且放弃保释，潜逃去了伊拉克。那时是2000年，也正是那时，他变成了一个激进分子。作为巴格达迪的左右手之一，他在叙利亚主要负责三项工作：招募新人，收税和在部队担任指挥官。</p>
<p>“每天都有新人从欧洲来到这里。”他告诉她，“他们上午学习阿拉伯语，下午进行射击练习。新人住在集体宿舍里，晚上有精神引导的课程。”</p>
<p>“两周后，他们会进行评估，聪明的新人会被挑选出来的给予特殊的任务，例如反间谍活动。”</p>
<p>Erelle把他告诉她的所有事情都与叙利亚联络人和法国的安全局共享和核实。 “跟所有的骗子一样，有时他忘了他以前说过什么，然后讲一个完全不同的故事，所以我不得不核实一切，但更可怕的事情是，那些他曾经告诉过我的关于战争和杀戮的故事，全都是真实的。”</p>
<p>他谈到他对自杀式袭击者的钦佩 - “在这里，我们评价实力有两个标准——信心和勇气。自杀式袭击者是我们所有人中最强大的。并且开玩笑说他是如何偏爱小旋律这样的皈依者，因为他们“宗教中严格，生活中开放”。</p>
<p>“你可以看到一个像小旋律这样的女孩是怎样被迷住的，”Erelle说。 “她自己本是一个无名小卒，但是生命中突然出现了一个38岁的男人，年龄快比她大一倍，而且还拥有这些令人难以置信的冒险经历，并且对她这么好，告诉她，他爱她，想每天亲口说爱她千万遍。”</p>
<p>然后小旋律被称为Bilel的未婚妻，她在她的网上的伊斯兰朋友间变得小有名气。</p>
<p>“这一切在那些英国女孩子失踪之前应该也上演过，”她说。 “那些去叙利亚的女孩子知道她们会成为报纸和互联网上的新闻，人们会议论她们。这些女孩们还是义无反顾地追随那些已经离开英国去往叙利亚的朋友。她们早就知道这会造成她们的家庭的痛苦，尽管如此还是没能阻止她们离去的脚步。”</p>
<p>起初，每当Bilel都劝她去叙利亚时，她都拒绝了。她说她不能离开她的母亲，她说，她害怕走这么远的路。</p>
<p>“他不会把你的拒绝当做答案。他会说：‘当你到了这里，你可以帮助照看孤儿，直到你有你自己的孩子，或探访伤兵。</p>
<p>“他想当然地认为我会服从。他想知道我有没有足够的钱买飞机票。他告诉我，他和他的组织非常有钱，可以报销我的开支”</p>
<p><strong>暗度陈仓到叙利亚</strong></p>
<p>法国警方从去年夏天就开始对女孩子们离开法国前往叙利亚有所戒备。所以Bilel说，她应该先前往阿姆斯特丹，甩掉法国当局的追踪。小旋律终于同意前往叙利亚，如果她能带她（虚构的）15岁的朋友优思敏同行。</p>
<p>“他说，‘告诉你家人，你今晚在优思敏家里过夜，让她说告诉她家人今晚在你家。’当我到阿姆斯特丹，我扔掉我的手机，买一个新的，用新号码打了电话给他，告诉他我们什么时候会从阿姆斯特丹飞往伊斯坦布尔。”</p>
<p>在伊斯坦布尔，小旋律和优思敏将通过ISIS派来的一个“嫲嫲”陪她们到叙利亚。 Erelle决定将继续做戏到这一步。</p>
<p>“我想见见这个‘嫲嫲’。”她说， “我是一个女人，我不能理解为什么这些女人能让这么年轻的女孩去和那些男人结婚。所以这是私人的问题。我就想看看她的脸。”</p>
<p>还有一个进一步的指令：Bilel让小旋律在机场免税店给他买一些礼物，包括须后水。他告诉她，他喜欢用的香奈儿的Egoiste。</p>
<p>“关于这些人，还有一些事情值得一提，”Erelle说。 “他们说，他们反对西方，他们反资本主义，但他们喜欢奢侈品和设计师品牌，他们的军队制服里包括了耐克和雷朋太阳镜。这是对青少年们另一种方式的引诱：“我曾经和你一样穷，但看看现在的我吧。’”</p>
<p>在阿姆斯特丹，又有了一个问题。 Bilel说，她和“优思敏”将不得不独自前往，因为”嫲嫲”们旅行不方便。一旦到了伊斯坦布尔，她们就转乘一辆土耳其境内航班飞往一个在土耳其东南部叫乌尔法的地方，和之前一样，用现金支付，并等待下一步指示。小旋律回复他说，她很害怕。</p>
<p>“你是个大姑娘了，”Bilel安慰她。 “每个星期都有好几十个欧洲人这样过来加入我们的行列。 来吧，我的狮子！”</p>
<p>但小旋律拒绝让步，说这里到处都是警察，她想回家。</p>
<p>“这是我第一次开始与他争辩。他很不喜欢这样，“Erelle说。 “他就开始嚷嚷，他很可怕。他因为我的拒绝非常生气，他说，‘你都到了这一步了，现在是在耍我吗？’那是很难被原谅的。”</p>
<p>是时候断绝所有联系了，但是这并不是一件容易的事。Bilel仍然相信小旋律的存在，打来电话说：“我知道你是谁，我可以分分钟找到你，杀了你”</p>
<p><strong>ISIS的敌人</strong></p>
<p>Erelle回到巴黎，去年五月给她的杂志写了一篇关于小旋律的故事。她现在已经写了一本书，“在圣战者的外围”</p>
<p>这篇文章是化名书写。 “Erelle”是她的第二个化名。一旦这篇文章出版，小旋律的背叛行为变得很明显，Erelle成为目标。</p>
<p>她不得不好几次改变她的电话号码，并且搬家。令人担忧的是，在小旋律断绝和BIlel的联系后不久，Bilel用法国的电话号码打给她。而在小旋律的Skype帐号里，有无数的死亡威胁。</p>
<p>她写了一本书，但是她不能承认那是她写的，而1月7日发生查理周刊大屠杀后，开始有警察保护她。</p>
<p>“他们坚持要这么做。有人看着我住的房子。他们看着我。我从来不知道他们在或者不在，”她说， “我很孤独，因为查理周刊事件吓得所有人和朋友们都害怕和我在一起。警方甚至把我的狗带走了。以前每当我觉得情绪低落的时候，我就抱着我的狗。但它是一个很特别的品种，警察认为它让我太容易被辨认出来。 或更糟的是，恐怖分子可能会错误地杀掉和我有相同的品种的狗的人”</p>
<p>几个月前，据报道，Bilel已被击毙。</p>
<p>“我不知道这个消息是不是真的，或者他是否知道我的真实身份。”她只知道的是，尽管发生了这一切，如果再来一次，她还是会这样做。 “这是肯定的。”她说。</p>
<blockquote>
<p>后记：我之前有想过， 感觉关于伊斯兰教和其他的宗教信仰相对比有一个特点是， 他们的信徒愿意并会主动地将教义强制在其他信教徒的身上。当被问到伊斯兰教对生命的看法的时候， 一名穆斯林uber司机引述了《古兰经》里面的一句话， if you kill a single soul it’s like killing the soul of all humanity. if you save a single soul, you save all humanity.</p>
<p>这也是会有“圣战”这么一个仪式的原因吧， 任何异端的与伊斯兰教旨不符的行为， 哪怕是他们生活中再平常不过的事， 都会成为暴力、自以为是的英雄主义的发泄地， 有了宗教这一个坚强的借口， 或许暴力也可以被包装成一种忠诚和信仰。</p>
<p>当我从这一篇纪实报道中发现那些组成ISIS组织的人的背景经历之后， 许多想法感觉都被justified了。 如果本身就是一个被社会边缘化了的群体， 那么， 他们所做的任何抵抗， 在某种程度上， 可以理解是对自我存在的证明， 对现实生活的反击。而归属感， 这个或温暖或危险的力量， 会让这些还没真正找到反击方式的人们， 做出不理性的行为。</p>
<p>归属感， 或许就是我想说的， 是战争， 是恐惧，都摧毁不掉的事情了。相反的， 越是恐惧， 身子就越会蜷缩去更为强大的方向。 我们曾经在留守儿童的议题上看见归属感这个不可避免的根源。 而在宗教信仰的背后， 归属与虔诚， 又将成为许多暴力滋生更为牢固且不容分说的根基。</p>
<p>祈祷巴黎， 祈祷ISIS组织心里那个无依无靠的小孩。</p>
</blockquote>
<blockquote>
<p>欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rails开发笔记-instagram]]></title>
      <url>http://chocoluffy.com/2015/08/31/rails%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-instagram-1/</url>
      <content type="html"><![CDATA[<p>用了一天的时间完成了这个网站的开发，SearchInsta， 也算是一个阶段性的总结。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qp26GB1Mm409ZKPy3NRDqbD6xeG6hgdjfyN9ic3bEQtwQGsArZ53PxmQ/0?wx_fmt=jpeg" alt="image"><br>用了一天的时间完成了这个网站的开发，SearchInsta， 也算是一个阶段性的总结。<br><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qB5xCWEgEH979oIdDSpPMiaW1oLIHtpVECbY3ZQxNBXnKw33rFBh2gMQ/0?wx_fmt=png" alt="image">  </p>
<p>当鼠标hover其中一个照片时：  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qzKjPRxEFgZdPbcicyDcSxaRCAh34H7EKK5O2Na5gIEwlZbYjXchB3rQ/0?wx_fmt=png" alt="image">  </p>
<p>网站的功能：输入一个image tag或者用户名， 可以看到这个类别下面最新发布的post， 鼠标hover的时候可以看到用户的post原文。  </p>
<p>原理：其实这个很简单的， 就是调用了instagram的api，然后做的一个数据抓取和呈现而已。 不过在改进方向上面有很多可能。 我也会继续在功能上做出完善。比如：   </p>
<ol>
<li>我可以通过api得到用户之间的follow关系， 那么利用d3.js里面的一些三维模型函数库， 也就可以做出一张动态的关系网出来， (这种社交网络结构在商业ppt上可能比较常见吧)； 还记得大一去MIT决赛的时候， 中科大的那个结构网的作品， 结合图论上的一些shortest path, maximum flow的原理还可以找到最高效的关系连通path。在这个instagram的情景中，这个“最高效的”仍然需要人们定义， 比如可以定义成获得的点赞数最多， 社区声誉最好？购买力最高， 广告转化率最高等的指标。  </li>
<li>通过获得的geolocation的数据， 可以结合一些数据处理包完成地图上tag发布热点区域的绘制， 用户发布的地点时间的集合，（现在吐槽最多的不就是O2O startup，现在都可以拿个google map的地图和一些头像就去融资了不是吗)。   </li>
<li>获得某一个tag当前最新的， 或者最热的图片， 那其实也可以变相给用户推荐图片， 像feed一样， 不过这个时候用户看到的不就只是自己follow的人, 而是门户filter后的资源， 这个方向走下去基本就是社交媒体了， 那种编辑、发布的， 控制资源的channel。   </li>
<li>对用户的描述做语义分析， 然后利用统计手段得到某个特定用户的发布资源的特点， 或者某个特定群体的common tag\interests。 实现方式也不算复杂， ruby里面的nokogiri gem可以parse掉html结构， 得到的json数据再去统计整合处理。 但就像我前几天做得一个小项目中遇到的问题。 英文可以很方面的根据词语出现过的频率来统计， 然后去掉预设的meaningless的词语后得到， 然后筛选可以得到概括； 但是对于中文， 毕竟parse之后只能得到单个的字， 而不是一个个完整意义的词语， 所以给后期过滤中心主体带来了很多困难， （为什么不能得到词语？ 答：技术上只能得到一个个单个字， 就像英文一个个单词一样， 你必须定义怎样算一个中文词语的规则， 以及怎样才是原文里面的那个词语搭配规则才能得到一个完整的意群）这也是当时困扰我的一个问题， 或许互联网上有很多人、企业遇到过这个问题， 我会继续去关注。  </li>
<li>根据用户发布的post的点赞数或者是转发数量的一个统计分析、排序， 做出一个类似facebook的 the best of the years， 虽然在隐私上仍然有着一些抵触的情绪， 但是当用户看到这些曾经很棒的、很希望分享的照片不都挺惊讶和开心的吗。  </li>
<li>打通twiiter \ weibo \ facebook api之间的联系？ 可以做到站内的消息多平台的发布和浏览。  </li>
</ol>
<p>等等…  </p>
<p>这些基本都是我debug之后挺高兴地走去吃饭路上想到的一些延伸， 能写出来的都是大概心里有个想法知道方向在哪里的， 可以做出来的。 那些有些天马行空的就自己留着暂时不分享了。 其实这一天的时间里面我在前端设计上花的功夫比我在后端请求数据和处理的功夫多太多了， 而问题都基本都出在一些动效和细节上面， 不过一仔细起来， 真的很多地方的设计都学到了东西；  </p>
<p> 比如怎样做出这样类似纸张微微隆起的漂亮阴影效果：  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qzW0y2WJqB8oJXFdxXE3ZqCYcFvywrnXT97u69vUWvvTg93VxiaP9rNw/0?wx_fmt=png" alt="image">  </p>
<p> 一些优雅的google fonts的收集、bootstrap里面超级flexible的grid system。还有很多很多， 之后的优化应该要集中在抽象上面了， 做到真正orthogonal \ extensible的模块真的不简单， 我函数里面hard-coding还是太多了。   </p>
<p> 其实刚刚在一边写这些extensions的时候， 就感觉， 数据的意义和价值都是设计者思维的体现。 一场惊艳的交互， 一个有商业价值的发现， 都离不开设计者的融会贯通。  </p>
<p> 希望能在全栈工程师的路上可以走的更远。  </p>
<p>今天看到的一句很喜欢的话， 和大家分享：  </p>
<p>孤独被抬举和神化， 寂寞也并不可耻。多数时候， 我们只是寂寞， 不必用孤独为自己加冕。  </p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> rails </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[希望是一种善意]]></title>
      <url>http://chocoluffy.com/2015/08/29/%E5%B8%8C%E6%9C%9B%E6%98%AF%E4%B8%80%E7%A7%8D%E5%96%84%E6%84%8F/</url>
      <content type="html"><![CDATA[<p>如果我们真的有幸进入了孩子们的世界带给他们快乐和尚不熟悉的爱和体贴， 那当我们离开的时候， 我们会留下什么。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3lXBLzmASkRkfMSRXJr0cVLIFtjoeksdp9fnqqEDvapNiaicDL9OI66VS9GS6KeRN33LicpoibNbfjZLg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5" alt="灰烬"></p>
<p>很喜欢胡婷婷的云淡风轻的描写， 却有时候给我心上重重的一击。喜欢这篇文章， 也算是对上次推送关于《告别卢安克》的一次延续， 不知道为什么， 在看文章的时候， 我想到一句话： “把自己藏起来， 有时候是为了被寻找。”， 如果我们真的有幸进入了孩子们的世界带给他们快乐和尚不熟悉的爱和体贴， 那当我们离开的时候， 我们会留下什么。</p>
<p>余舜哲</p>
<p>2015.8.29</p>
<p>推荐胡婷婷的公众号向湾硚（xiangwanqiao )</p>
<p>博客网站 <a href="http://xiangwanqiao.sinaapp.com/" target="_blank" rel="noopener">http://xiangwanqiao.sinaapp.com/</a></p>
<p>以下是《希望是一种善意》原文：</p>
<p>“你为什么来支教？”</p>
<p>“想要把自己的知识教给他们。但是后来发现，自己并不能为他们做点什么。”</p>
<p>支教队十四人，十四个人的疑问：我们到底能给他们带来些什么？</p>
<p>7月15日，我们坐上了来这里的火车，29小时，硬座。下火车之后，坐上非法营运司机大叔的面包车。除此之外，没有车能送我们上去。三个小时，山路颠簸，小学就在看得见的山头上，但我们需要先转下山沟，再上山头。</p>
<p>司机大叔收了我们每人35元，天渐黑，我们饿得不行。“我们这里的特产就是土豆。”</p>
<p>他请我们吃了两碗土豆，一碗3元。在路边，一间小平房，一口油锅，一罐辣椒粉，一张油腻围裙。一块块土豆下锅炸得金黄，乘入碗里，撒上辣椒粉。我们吃得有味。</p>
<p>“希望小学”。</p>
<p>学校名字颜色脱落。又是一所希望小学，没做过统计，不过，“希望”或许像“婷婷”一样，是个最广泛普通的名字了。在大山里，走出去，过更好的生活，便是希望。希望是个很简单的词，谁都会，谁都想。</p>
<p>学校门口也是一口油锅，土豆炸得滋滋响。小女孩吃得蹦蹦跳跳，她用牙签叉起一块——“姐姐，你吃。”</p>
<p>这是一碗油炸土豆带来的快乐。油炸是最简单的让食物散发香味的方式，在这里，在更多的贫民窟里，总是少不了“油炸”的身影。</p>
<p>第一眼看到清平的背影，我以为她念一年级。一颗西瓜头，书包大得拖到小腿处，摇摇晃晃地走。我跑过去抱住她的肩，她转头看我：“姐姐，你怎么那么漂亮？”</p>
<p>她念五年级。没有城里小孩可爱的脸蛋，一脸不均匀的阴影，瘦弱如一棵草。</p>
<p>第一眼见到她妈妈，我脱口而出：“奶奶你好。”清平摆手——“这是我妈妈。”妈妈和清平一样高，刚刚到我腰间，脸上是一样的黄色阴影。妈妈急忙端出小板凳让我们坐下。小伙伴拿出纸记录，我开始询问。</p>
<p>“妈妈今年是多少岁啦？”</p>
<p>妈妈摇头，“我不晓得。”一时错愕——“啊？就是年纪多大？”</p>
<p>清平站在妈妈后面，抬起一双小手。“53.妈妈她什么都不知道。”妈妈憨憨地笑：“我什么都不晓得。”</p>
<p>奶奶80岁，坐在屋里的竹椅上。左腿断了。她跟我说话，不停用手拍打左腿，“走不动，走不动。”</p>
<p>爸爸穿着蓝色衣服回来了。一头花白头发。他在林区管水，一个月一百五十元。见我坐在妈妈对面，他走过来，手挠挠头——“娃儿她妈啥子都不晓得。”</p>
<p>清平还有一个姐姐，读初一。平日里，姐姐做饭，妈妈帮忙摘菜，烧火，不能做其他，也不会做。奶奶就坐在屋里，从早到晚，看着。</p>
<p>一家子，五口人，一个劳动力，三亩地，三间房，五千外债。</p>
<p>王艳吸引我的，是她的眼睛。她的眼睛很小，窝在略略显胖的脸蛋上，像是两颗花椒籽。她会盘精致的头发，一束辫子扎在马尾里。</p>
<p>她并不在我们家访名单里。放学之后，她跑过来：“姐姐，去我家玩吧。很近的。”我所理解的“很近”是五到十分钟，以此推算，至少还是在大路边上。可是，她家依然要走山路，弯弯曲曲，半小时。</p>
<p>乌黑的瓦盖着三间房。她取下脖子上的钥匙，打开门，端出凳子给我们。</p>
<p>我习惯性问：“爸爸妈妈呢？”家访是需要从大人那里了解信息的。</p>
<p>“不在。”她轻轻摇头，嘴角上扬像是笑着的。</p>
<p>“不在这里？去哪儿了？什么时候回来。”</p>
<p>“他们已经不在了。”她还是轻轻地说。</p>
<p>我愣了一秒。突然意识到，不是所有的尴尬都能用笑来化解，有些停顿，只能让尴尬去掩埋掉。</p>
<p>爸爸在她四岁的时候去世了，“治不好的病”。在吃不饱的时候，小病也是治不好的。</p>
<p>妈妈在她十四岁时候去世，“一样的病。”</p>
<p>她有个哥哥，三十岁，娶了老婆，生了儿子，到浙江去了，每个月寄来200生活费。</p>
<p>三间房，一间是哥哥嫂子的，大床，铺盖还整整齐齐。他的房间在后面，一开灯，闪了几秒，就又暗了。“我们帮你修吧。”</p>
<p>“没事的，我会。”</p>
<p>中间的那间房堆着杂物，北面挂着妈妈的黑白照。</p>
<p>“怎么不挂爸爸的？”</p>
<p>“因为没有。”她的嘴角总是上翘着，声音轻轻的，仿佛没有悲伤。</p>
<p>我教她们班的英语，把“Sunny”给她当作了英文名，“阳光灿烂的意思，每天都开心。”</p>
<p>我们最后没有决定给她资助名额，因为，她的孤独，是我们触及不到的。</p>
<p>一群已经没有读书的少年也来报名了。</p>
<p>“我觉得，他们应该得到一次机会。”我就那样天真地说服大家，收下他们，到六年级。</p>
<p>他留着飞机头，胸前露出纹身，龙头的样子。</p>
<p>我上课的时候，他总是捂着本子，好似没在听。我拿来检查，却都是记了笔记的，歪歪斜斜的。</p>
<p>这一帮少年一下课便打篮球，小学墙壁矮，他们老是把球扔出学校，又老是招摇在围墙上。</p>
<p>他们蹦蹦跳跳，让整个班级都不安宁。领队总去他们班发火，讲规则，讲道理。领队是一女生，长得温柔，可两眼一瞪，也是威严。</p>
<p>这天，他来找我们，要求换到五年级读。</p>
<p>“为什么？”</p>
<p>“领队老是在六年级发火，我怕。”</p>
<p>他的飞机头还油光曾亮，龙头还隐约吓人。</p>
<p>我差点没笑出来。</p>
<p>我在小城实习记者的时候，对官员和官场会议产生了厌恶。会议总是分两部分，前半部分是会议上的冗长的枯燥，官腔一套一套，重点全无，解决方法全无；后半部分是部门饭菜，奢侈多肉，酒一杯接一杯，称赞一句接一句，酒肉烟林。</p>
<p>今天下午，村支书来到了这所希望小学。他手指夹着烟，走步不稳，一开口，全是酒气。</p>
<p>“开会。”</p>
<p>他首先拍拍我们的肩，再打了打我们的脸——他说，感谢我们来这里，为山区教育做贡献；他说，我们直接和学校联系，不通知村里，是极为不规范的。</p>
<p>校长的办公室挂着两个字——“博爱”，出自“孙文”。他在这里十几年了。面对书记的要求，他推诿着，本不打算让村里介入。一个电话，他也拦不住。</p>
<p>七米长的办公室，我坐这头，书记坐那头。那头便是门口，书记抽着烟，整个屋子都是那烟。他说的官话，就和那烟一样让人厌恶。</p>
<p>最后，他坐上小轿车，扬尘而去。</p>
<p>当我在不满城市里官僚主义的盛行与其办事古板低效率时，没有想到过，在更底层的地方，劣根无比坚硬，甚至根本没有任何来自外部的监督来令其些许松动。</p>
<p>龙应台提到过“问题意识”，说她从来不会施舍路边乞丐，因为这不能解决问题。而我，看到那些白发苍苍或身体残疾的乞丐，总还是忍不住施舍些许，虽然这并不能改变什么。我想大多数人都是这样不忍心，而同情心不过存在于我们心的表面，不是去理性分析如何解决根本问题，而只是，在我看到听到的那一秒，会有所不忍，有所触动——于是，施舍。</p>
<p>在炎炎夏日，地下通道口，我经过一位老人。太阳刚好照在他身上，汗湿了上衣。他旁边有一个小音箱，声音劣质，放着佛经，童声唱的。他的旁边，是卖荔枝的妇女。我买了一斤荔枝，走到他面前，用手抓了一把给他。他用双手来接，对我点头：“谢谢你，好姑娘。”</p>
<p>我知道这个世界没有好人和坏人之分，只有做了坏事的人和做了好事的人，可是，一把荔枝，也足以成为一个“好”的理由。</p>
<p>当我并没有能力去撼动根基的时候，这些问题还是像恶瘤一样存在于社会表面，我时不时看见、听到。而微小的善意在于，在看见和听到这些的时候，我心仍有触动，我的双手仍愿意帮助。</p>
<p>为什么来支教？我们能留下些什么？</p>
<p>我并不知道。我甚至清楚地明白，这根本改变不了什么——可是，这善意在于，有一群孩子在这里，期待更多的知识，而我刚刚可以教给他们，于是我来到了这里。</p>
<p>不为改变，不求改变。</p>
<p>“嘲笑、轻蔑、愤怒、报复……这些情绪，都与恨有关或者含有因恨而起的成分，不能成为善。”</p>
<p>斯宾诺莎说：“希望和失望决不能是善。因为恐惧是一种痛苦，希望不能脱离恐惧而存在，所以希望和失望都表示知识的缺乏和心灵的软弱无力。”</p>
<p>我时常为自己的能力缺失感到失望，又时常觉得希望是虚无甚至虚伪的。</p>
<p>中文里，有些话是用“希望”开头的。</p>
<p>六年级班上有一个男孩，喜欢读小说。我送一幅画给他。</p>
<p>“你想我写什么祝福语给你？”</p>
<p>“希望我好好学习，天天向上！”</p>
<p>他的希望很腼腆，我很喜欢他的希望。</p>
<p>潘多拉的魔盒里，唯独留下了希望，这便是洞察的智慧吧。</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ruby Nokogiri使用笔记[第一天]]]></title>
      <url>http://chocoluffy.com/2015/08/27/ruby-Nokogiri%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      <content type="html"><![CDATA[<p>将wikipedia上面表格中的信息的一个整合， 重点：掌握关于筛选和array manipulation的技巧</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">require &apos;nokogiri&apos;</span><br><span class="line">require &apos;open-uri&apos;</span><br><span class="line"></span><br><span class="line">BASE_WIKIPEDIA_URL = &quot;http://en.wikipedia.org&quot;</span><br><span class="line">LIST_URL = &quot;#&#123;BASE_WIKIPEDIA_URL&#125;/wiki/List_of_Nobel_laureates&quot;</span><br><span class="line">page = Nokogiri::HTML(open(LIST_URL))</span><br><span class="line">rows = page.css(&apos;div.mw-content-ltr table.wikitable tr&apos;)       </span><br><span class="line"></span><br><span class="line">rows[1..-2].each do |row|</span><br><span class="line">  hrefs = row.css(&quot;td a&quot;).map&#123; |a| </span><br><span class="line">    a[&apos;href&apos;] if a[&apos;href&apos;].match(&quot;/wiki/&quot;)</span><br><span class="line">  &#125;.compact.uniq</span><br><span class="line">  # 对每一个row里面将不同的cell里面的link收集起来，然后filter</span><br><span class="line">  # 同样长度的array在filter之后不符合要求的得到nil然后在compact方法的时候被删掉</span><br><span class="line">  # 然后uniq是删去那些相同的link url</span><br><span class="line"></span><br><span class="line">  hrefs.each do |href|</span><br><span class="line">   puts href</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> rails </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[告别卢安克]]></title>
      <url>http://chocoluffy.com/2015/08/27/%E5%91%8A%E5%88%AB%E5%8D%A2%E5%AE%89%E5%85%8B/</url>
      <content type="html"><![CDATA[<p>某天接到小手的微信，问我对《看见》里面卢安克的看法。我重新去博客上回顾了一下那篇文章，也将我们之间的对话摘录下来。由于只是对话， 行文逻辑较松散， 但都是第一感觉， 未删改。柴静原文《告别卢安克》附在对话最后。</p>
<p>我：</p>
<p>刚刚重新再看了一下那篇文章： 告别卢安克， 我记得我第一次看的时候是有想过挺多东西的， 有积极的也有消极的。 可能有些关联的不是很大吧，<br>比如当时有想过，究竟怎样才是解决留守儿童的最好的办法， 解决偏远地区的贫困等等的。然后就会联想起很多啦，之前韵琦推荐过一本的《how to change the world》 虽然标题很鸡汤， 但是里面确实有很多干货，关于ashoka这些等等的组织怎样调用当地的闲置人力资源， 或者是如何思考出让当地政府愿意投资的策略的方法和过程； 感觉其中一个重点就是如何去align different party’s interest。 像另一本书《穷人的银行家》，感觉都是讲如何在资源稀缺上做文章， 挖掘利用闲置的人力啦， 资助人们去做点什么啦等等；</p>
<p>现在想想， 其实这些行动都并不高效。他们之所以轰动， 只是因为他们是pioneer, 是那种从零到一去尝试改变的热心的人； 但如果我们现在从后面往前看， 帮助他们连接上互联网或许是一个更加有实质作用的选择。（这里的从零到一和商业上的zero to one有差异）； 就像卢安克说的， 留守儿童需要的归属感； 然而， 归属感这种东西和你的眼界有很大关系， 如果你什么都没有听说过， 尝试过， 你能感兴趣的东西不过就只能是你身边的柴米油盐罢了， 而那些尝试去通过柴米油盐去改善他们生活的人， 的确可能可以做出一些东西， 但本质上他们就漏过一个更加根本高效的路径。</p>
<p>说实话， 虽然说， 教育这个行业里耐心和利他心比你的技术来的更加重要。 但是， 这也很容易给人们一种思考的倾向， 就是教育业需要富有同情和耐心的人来改变。 这是一种思维上的限制， 在我的心目中， facebook的创始人mark zukerberd和rss feed的创始人aaron swarstz（我是rss的重度使用者）， 他们对消除信息垄断上的作用远远大于其他任何个人。而消除信息垄断， 意识到自己的世界的局限， 思维的局限， 产生了期待和好奇， 是所有改变的开始和根本吧。</p>
<p>感觉想的东西挺乱的。 刚刚重看的时候， 觉得他对归属感， 秩序和责任的看法都挺干练的， 对我来说很persuasive。 对于一个非技术的教育事业的人， 不能用同一个matrix， 我尊敬他的insight和所作的贡献。 不过对我来说， aggression和tension可能对我更有吸引力。</p>
<p>小手：</p>
<p>首先很感动你这么用心写，其中很多观点我都赞同。作为亲历过农民工子弟扶持教育人我觉得很多说到点子上。</p>
<p>关于热情，想起了暑假在巴黎上法语文学课读Ionesco的La Cantatrice Chauve, 是部著名的荒诞剧，里面的对话杂碎,无逻辑，可笑甚至荒谬，用传统眼光看荒诞剧，会觉得云里雾里不知所云。但作者愿意就是想说，生活本身就是这样杂乱无章，无序无义的，很多时候是人们故意赋予了很多意义。那这样岂不是虚无主义？又未必。罗曼罗兰说，世界上唯一一种英雄主义，就是看清了现实然后热爱它。那么荒诞剧就是提醒我们，生活本身并不一定有我们原来设想的那么多意义。即使发现了这个稍微令人失望的现实，我们也要义无返顾的热爱它。</p>
<p>绕了一大圈，我觉得卢安克身上就有这种热爱这个世界的热情。</p>
<p>高效，改变，成功…这些字眼是社会约定俗成的“意义”，我们习以为常，并以此为真理。但有多重的意义就有可能有多重的失望、冲突甚至仇恨。</p>
<p>没有多少人能去结构自己的思维和所被赋予的意义，而能如此坦然地“与众不同”，即是热情，也是勇气。</p>
<p>想起卢安克日日夜夜简简单单跟孩子们的陪伴，又想起我们以前做夏令营的时候想着如何处心积虑地想把知识和经历高效输出，其实在卢安克那种热情面前，都是有点虚伪与渺小的。</p>
<p>不会说谁对谁错， 能从对方真诚的回答中受到一些触动，看出自己观点的一些局限， 就挺好的不是吗</p>
<p>余舜哲</p>
<p>2015.8.28</p>
<p>以下附上原文《告别卢安克》</p>
<p>告别卢安克</p>
<p>——教育，是人与人之间，也是自己与自己之间发生的事，它永不停止，就像一棵树摇动另一棵树，一朵云触碰另一朵云，一个灵魂唤醒另一个灵魂，只要这样的传递和唤醒不停止， 我们就不会告别卢安克.</p>
<p>三年前我在广西访问在深山板烈当教育志愿者的德国人卢安克，今年八月，我收到他的信件，他寄给我一份跟孩子一起拍的电视剧样本，说“我可能没有机会继续跟我的学生做事”。</p>
<p>我们在板烈再见时，卢安克穿着跨栏背心，晃晃荡荡从稻田边上走过来，瘦了些，有点佝偻了，笑起来眼纹深了，淡金的眉毛已经淡白，整张脸上几乎只有浅蓝的眼睛有颜色。我问“你还好吗”，他说“也好，也不好”。</p>
<p>四面人多，不好说话，他带我去了山上一个学生家，是班上最沉默寡言的小孩，叫小罗，与一个智障的哥哥同班，父母打工，他们相依为命。小罗一进门，先找盆淘米，拿一把扳手，在电饭锅坏的按钮处拧了几把，把饭做上了，山里人家来了客都是这样。</p>
<p>猪圏旁有一丛小西红柿，才成人指甲盖大，他俩往下摘，我问：‘这么小能吃了就？”卢安克说：“这更有味道。”递给我滚圆鲜红的一个，我在衣服袖子上擦了擦，溅在嘴里的味儿还不错。家里没有别的菜，只有桌上放着一些扁豆，有些日子了，我们把卷边的角摘了，打算跟小西红柿炒在一起。卢安克与上次我见到时有些不同，满腹心事，把豆角一只只掰断，我埋头摘了一会儿，说：“我一路上想着你这次恐怕跟以前心情不太一样。”</p>
<p>他“是的，有一些压抑的”。</p>
<p>“难道有可能这是你最后一次回来吗？”</p>
<p>他攒了满满一手豆角不撒“我担心有这种可能。”</p>
<p>我抬起眼，“记得上次采访的时候，你说这个地方有你的命，你要是离开你的命就没了？”</p>
<p>“从心里来理解是这样的。”</p>
<p>他问我：“但我怎么处理？”</p>
<p>我怔住了，没回答，也没说不知道。我从没想到过他会问别人他内心的困惑，我被这个困惑之深惊住了。</p>
<p>他左手扶着柴火，右手小铁斧一下一下劈开缝子，嵌进去的斧子拉起木头来再用力剁下去，我蹲在附近捡木柴碎片，拢起来放在火堆里。老范说看回放的时候，很长时间，都只有劈柴在火里烧裂时毕剥的声音，和溅出来的几星火烬。</p>
<p>这次的采访全部是卢安克的安排，他挑选的地点、时间，他让我们拍烈日下刚收割完的稻子，拍小罗家边上的晚霞，我们想选择更好的光线，他坚持：“不拍天要黑了。”他甚至写了采访的提纲，手里攥着一张字条，上面写着中文和德文交织密密的字，“我怕我自己忘了什么。”</p>
<p>我没见过他这么失稳，也没见过他这样在意。</p>
<p>我采访的孩子中，韩运一个扮演电视剧主角容承，其他老师说他在班上最调皮，常带着男孩们闹事，被称为“老大”，接受采访时有些紧张，拿着饭盒的勺子僵坐在桌边，要求卢安克一定要在边上。</p>
<p>我问了几个问题“你为什么演容承？””“觉得他性格是怎么样的？”……他都说“不知道”，几个问题下来，我看他是真不知道，带了一点放弃的感觉，转头对卢安克说“可以了”。</p>
<p>孩子突然嚎啕大哭起来，捂着肚子倒在桌子上。我说怎么了这是，赶紧看他，他说肚子疼。疼得枕在胳膊上，一只拳头按着自己胃。</p>
<p>我以为他是吃饭时说话着凉了。倒杯热水给他，他不喝，问他要药吗，他摇头。</p>
<p>卢安克蹲在他身边，抚摸他的背，对他并不说什么，跟我说了一句“我做德语口语翻译的时候，也会肚子疼”。</p>
<p>我明白他指什么，但不确定，俯身对孩子说：‘是因为我的问题给你压力了吗？如果是，那我真的对不起了，韩运。”</p>
<p>他埋在胳臂里摇头，“不是”，挣扎起来，脸上还挂着泪水一脸毅然“你问吧”。</p>
<p>是他这一句话，让我觉得，卢安克说的是真的。他蹲在孩子身边，不看我，轻声谈：“这里是农村，自然的力量很强，教他爬山，他什么山都爬，但叫他反思自己的一些问题他会很痛苦的。”</p>
<p>卢安克陪他回了宿舍，老范看我的神色，知道不理我为好，带着大家去拍外景，我一个人坐在空荡荡的六年级教室里，气恼不已，“三年了，三年了我还在犯错，我怎么这么蠢，我又问错了。”我心里知道，是我心里那点放弃他的想法，流露在了脸上，男孩觉察了。</p>
<p>坐了半个小时，我绞着手，下去吃饭，小潘老师杀了一只鸭子熬了个热气腾腾的火锅，大家都坐定了，卢安克在他旁边给我留了把竹椅子。吃了几口热的，我缓过来点儿了，背地里我问他：“我怎么老没办法改变我的弱点？”</p>
<p>他说：“如果那么容易的话，还要这么漫长的人生干什么呢。”</p>
<p>有半天的时间，卢安克带着我们组和韩运走了三个小时山路，去爬山，在刚下过雨的小山涧里捉螃蟹，躺在草地上，一直到日快落。他说不用去安抚和沟通什么：“跟他沟通没有用，跟他一起行动有用。创作就是这个道理，一起做某一件事，自然就融合在一起了。”</p>
<p>孩子家里每人都有一张自己参与的电视剧DVD，看过了无数遍，还是嘻嘻哈哈又看一遍，遇到同学再看一遍，说起一起偷吃大米或者烂泥巴埋到下巴的细节，是真快乐。我们被招待吃了三顿饭，杀了一只鸡，孩子在水龙头底下洗内脏，卢安克蹲给他打着伞。临走时韩运又拿出中午剩下的饭和碗筷继续留人，他只为了想拖延点时间和卢安克多待一会。</p>
<p>卢安克说不吃了，孩子不吭声，坐在了门口凳子上。卢安克走过去，摸了摸他的背，柔声说“再见”。</p>
<p>韩运没抬头，卢安克出了门。</p>
<p>小纪和蚂蚁收拾完东西，出门的时候对孩子说：“再见”，他还是没有抬头，也没说话，只是摆了摆手，小潘老师说他哭了。</p>
<p>拐过一个弯，卢安克站在那里，看着夕阳快下的山，一动不动地站着，事后他告诉过我，离开孩子时他也哭了。</p>
<p>我知道了他为什么要写信给我，在离开之前他要交托于人，留下一样东西来替代他：“创作可以成为他们的权威，可以给他们归属。”</p>
<p>他在信中提到一本非洲塞拉利昂参加内战的12岁小孩写的书，当时这个小孩扼杀了无数同年龄的孩子，为了能做到这一点，为了避免受不了的感觉，他天天吸毒。后来这个孩子在联合国的会议上是这样解释的： “我们加入部队的原因是，我们找不到可吃的，失去了自己的家，但同时盼望着安全，盼望着自己属于什么，在这个所有归属都垮下来的时代。“ 这跟留守儿童的情况是相似的，只不过极端得多，夸张得多。为了找回归属，他们什么都愿意做，都没看清楚对方是同胞还是敌人。</p>
<p>卢安克说：‘中国的社会没有那样的背景情况，但中国的留守儿童将也会成为一个失去控制的因素，除非我们能给他们带来归属感。”</p>
<p>他当年我们采访的他的学生，一半上了初三，一半去了外地打工，打工的孩子往往加入了帮派，卢安克说这是一种归属的需要，这也是当下的中国人最强烈的感受。在这样一个快速变化的时期里，空虚会导致消费和破坏，只有当人们创作时，感到创建自己世界的满足，不会在与别人的比较和外界的压力下感到被抛弃，这才是真正的归属。</p>
<p>在通信中，我们曾谈到，“创作”，这个词现在常常被当成是一种“手段”——用来吸引孩子学习更多知道的手段，或者一种学习之外的调节。好象生活中总有一个伟大庄严的目的，一切都为这个目的服务，这个目的是什么呢？为了服务于一种意志吧，当这个意志让你去改造世界时，你要具有这个改造需要的知识。<br>而创作在卢安克的理解里，就建立归属的方式。青春期的孩子通过行动得到感受，从感受中才慢慢反思，反思又再指导行动，所以他说，靠说话是没有用的，只有与创作，让他们一起进入和完成那个“强大的人不是征服什么，而是能承受什么”的故事中，感受会象淋雨一样浸透他们，在未来的人生里再来滋养一个人。培养了基础的行为和感受力再来解放他们的思想，“否则会乱”。<br>纪律可以带来秩序，但是是被动的，只有一个人归属于一个事情，一群人，一个社会，才会有认同，和发自内心去照顾它的愿望。</p>
<p>采访结束后，卢安克说他已经满足，现在可以去承受别的责任了。</p>
<p>我说这句话里面有一种很沉重的意味。</p>
<p>他说：“我也不知道我生活在这个世界上是为了什么，有什么使命，这个只能是慢慢摸索的，所以只能慢慢看有什么结果，也许过了几年我明白，为什么要这样。”</p>
<p>“你想检验自己？”</p>
<p>他好像触动了一下，说对。</p>
<p>我说那你害怕那些对你有期待的人会失望吗。</p>
<p>他说：“把希望放在别人的身上是虚拟的，所以无用。如果自己不去做，那就不会有希望。”</p>
<p>当时暴雨初晴，强光照透了天地，我说：“人生的变化很多，也许三年后我们会再见，再谈一次，谢谢你。”</p>
<p>他微笑，说：“也谢谢你。”</p>
<p>采访完第二天，卢安克离开板烈，去了杭州，一个星期后他辞职，因为手续问题，去往越南。他不伤害谁，也不违背自己，他自己来承受命运加诸于身的全部后果，他只说：“别人对我佩服的地方其实是我的无能，我无能争取利益，无能作判断，无能去策划目的，无能去要求别人，无法建立期待。也许有人以为那是超能，这个误会就造成了我现在的结果。还可以用另一种表达：人类大部分的苦都是因为期待的存在。其实，在人生中不存在任何必须的事情，只存在不必要的期待。没有任何期待和面子的人生是最美好和自由的，因为这样，人才能听到自己的心。”</p>
<p>在我写到这里时，他仍然在越南，身处在语言不通，无法工作的边境。除了保持与他的通信，我也没有更多能做的事。</p>
<p>板烈那场最后的采访，是在山间高处一片梯田里的水泥储水台上，开始之前下了雨，幸好土地里有一把破旧的大遮阳伞，是前几天收麦子的农民留下来，卢安克把它张了起来，足够我们几个，加五六个小孩子，还有一个看热闹的老农民容身。小罗站在我身边，帮我拿着本子，两手抱在胸前。雨下了好一会儿，从伞檐上穿了线，山明一会儿，暗一会儿，大家紧靠着，面向各方自看暴雨里青绿的田野，很久，有一点金光从东山破过来，乌青的云滚动奔跑，相互推移，雨就要过去了</p>
<p>是此时的感受，让我说出节目结尾的话，教育，是人与人之间，也是自己与自己之间发生的事，它永不停止，“就像一棵树摇动另一棵树，一朵云触碰另一朵云，一个灵魂唤醒另一个灵魂，只要这样的传递和唤醒不停止， 我们就不会告别卢安克”</p>
<p>（附注：卢安克博客：<a href="http://jiaoyu.org/luanke/" target="_blank" rel="noopener">http://jiaoyu.org/luanke/</a></p>
<p>卢安克《农村支教指南》<a href="http://www.jiaoyu.org/liushou/zhinan.htm" target="_blank" rel="noopener">http://www.jiaoyu.org/liushou/zhinan.htm</a></p>
<p>老范博客《暂别卢安克》<a href="http://blog.sina.com.cn/fanfan1120" target="_blank" rel="noopener">http://blog.sina.com.cn/fanfan1120</a></p>
<p>结束语中“一棵树……灵魂”此句引自德国哲学家雅斯贝尔斯，节目中不便直接标注，在这里说明一下。）</p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[只有在梦想中， 人才能真正自由]]></title>
      <url>http://chocoluffy.com/2015/08/24/%E5%8F%AA%E6%9C%89%E5%9C%A8%E6%A2%A6%E6%83%B3%E4%B8%AD-%E4%BA%BA%E6%89%8D%E8%83%BD%E7%9C%9F%E6%AD%A3%E8%87%AA%E7%94%B1/</url>
      <content type="html"><![CDATA[<p>罗宾•威廉姆斯是一个伟大的演员，在1989年的《死亡诗社》中，他饰演了一位在一所以刻板、严格、纪律而优秀的高中里，崇尚自由、不拘一格、藐视权威的老师。他命令学生将“量化”诗歌的欣赏方式撕碎，打破“权威”；他鼓励学生站上桌子，用不同的眼光看待事物；最重要的是，他教会学生什么是美，什么才是生活真正的意义。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3lXmS14ciatsUpqxtvjK7RA6kvyFiaPY4ibgGMWPmq3C6FQMM72Pqtj0s9iaq3EsKxpJiaQr0xB0gaYsmQ/0?wx_fmt=jpeg" alt="image"><br>在收拾东西的同时也在整理着自己的博客， 几乎整天都花在配置hexo部署在github page上的博客平台。由于自己总是想不断在页面上加各种效果和插件，导致开发速度比较慢， 希望近期能够完成， 也算是给自己散落在各地的文字一个交代吧。经常写博客是一个值得推荐的习惯呢~当然， 能看到这个公众号的人都是我非常信赖的小伙伴， 如果你有希望分享的文章， 也可以私聊我， 发布出去  </p>
<p>余舜哲<br>2015.8.18<br>以下文字转载自知乎日报  </p>
<p>美国当地时间8月11日中午，美国著名影星罗宾•威廉姆斯在其加州的家中身亡，享年63岁，他的经纪人透露：“罗宾•威廉姆斯于今晨去世，他一直在与严重的抑郁症做斗争。这是一个悲剧，也是一个巨大的损失。”  </p>
<p>罗宾•威廉姆斯是一个伟大的演员，在1989年的《死亡诗社》中，他饰演了一位在一所以刻板、严格、纪律而优秀的高中里，崇尚自由、不拘一格、藐视权威的老师。他命令学生将“量化”诗歌的欣赏方式撕碎，打破“权威”；他鼓励学生站上桌子，用不同的眼光看待事物；最重要的是，他教会学生什么是美，什么才是生活真正的意义。他在电影中的这段独白让人印象深刻：  </p>
<p>我不知道这段文字让多少人获得了内心深处的共鸣和感染，而我知道的是，乔布斯就是其中之一。  </p>
<p>在1997年，史蒂文•乔布斯重回苹果担任CEO一职，这一次，他把整个公司的价值观和理念都牢牢捏在自己手中，他推出了著名的《think different》广告，用来推广苹果公司的价值观，这几乎就是乔布斯个人的追求和信仰： “Think Different是什么？是那些具有独立的思想的人；是那些有勇气抛弃世俗的眼光特立独行的人；是那些具有空杯心态愿意学习新事物的人；是那些不甘庸庸碌碌、为了追求个人理想而不懈努力的人；是那些想改变世界的人。”  </p>
<p>而当乔布斯想通过广告对着整个世界大声呐喊的时候，他想使用的就是罗宾•威廉姆斯在《死亡诗社》中的这段独白。遗憾的是，威廉姆斯当时并不想参与商业广告，乔布斯甚至亲自给威廉姆斯打电话，不过威廉姆斯谢绝接听。  </p>
<p>乔布斯最初的想法并没有实现，这里是最后呈现的《think different》：  </p>
<p><a href="http://v.youku.com/v\_show/id\_XMzExMzIxODA0.html" target="_blank" rel="noopener">http://v.youku.com/v\_show/id\_XMzExMzIxODA0.html</a>  </p>
<p>这是一则耳熟能详的广告，而我们不妨再一次逐句看看它的文字：  </p>
<p>向那些疯狂的家伙们致敬  </p>
<p>Here’s to the crazy ones.  </p>
<p>他们我行我素  </p>
<p>The misfits.   </p>
<p>桀骜不驯  </p>
<p>The rebels.  </p>
<p>惹是生非  </p>
<p>The troublemakers.  </p>
<p>和世界格格不入  </p>
<p>The round pegs in the square holes.  </p>
<p>他们用不同的角度看待事物   </p>
<p>The ones who see things differently.   </p>
<p>他们不墨守成规  </p>
<p>They’re not fond of rules.  </p>
<p>他们也不安于现状  </p>
<p>And they have no respect for the status quo.  </p>
<p>以上都只是我的一厢情愿，我不知道这些文字创作之时是以谁为影像，但是：威廉姆斯扮演的基汀老师和乔布斯描述的crazy one，是何其相似。乔布斯在亲自朗诵这段著名宣言时，脑海中浮现的，又会是谁呢？  </p>
<p>我不知道。  </p>
<p>不过，威廉姆斯最后还是参与了苹果的广告，不过那已是16年之后，此时的苹果公司已经改变世界，而乔布斯本人已经不在人世。  </p>
<p>2014年初，苹果为ipad air推出的系列广告：《你的诗篇（your verse）》，旁白就是威廉姆斯在《死亡诗社》中的原声独白。帮主泉下有知，会作何感想？  </p>
<p><a href="http://v.youku.com/v\_show/id\_XNzU1NTE0NzUy.html" target="_blank" rel="noopener">http://v.youku.com/v\_show/id\_XNzU1NTE0NzUy.html</a>  </p>
<p>我们还知道，苹果公司的主页，换上了怀念罗宾•威廉姆斯的页面，在此之前收到过如此待遇的，也只有曼德拉和乔布斯本人。  </p>
<p>其实，我们无法对大人物的心理活动妄加揣测，我们也无法证明这部伟大的电影和著名的广告，亦或是一个伟大的演员和改变世界的企业家之间有着什么必然的联系，但是我愿意去相信。  </p>
<p>这不单单是一个小人物渴望看到故事的浪漫情怀，也是一个普通的文字工作者对某种力量的幻想：  </p>
<p>我相信这世界上信息与传播的洪流并非永远高大的而可望难及的；  </p>
<p>我相信那些高高在上的、伟大的信息背后并没有什么必然；  </p>
<p>我相信哪怕是有力量改变世界的团体和个人，他们也服从着另一种力量，他们也是一边聆听一边朗诵；  </p>
<p>我相信伟大的人物也和我们一样，感受别人而受到影响；  </p>
<p>我相信尽管在不同的时间和位置上，他们会产生一样的共鸣和感染，正如我们同样会被那些美好的浪漫的文字或事物打动；  </p>
<p>我相信我们同样能抚摸和感知到这世界巨变之下的丝丝脉络，犹如我们也曾身在其中。  </p>
<p>这种力量，我无比确定它的存在，却不曾如此真切的感受到它。实际上，罗宾•威廉姆斯也已经告诉我答案。  </p>
<p>以下是史实，来自think different主创，TBWA创意总监Rob Siltanen的回忆：  </p>
<p>“我总是为Robin Williams主演的电影《死亡诗社》所深深感动，电影中一些特别的桥段对我产生了非常重要的影响。这部电影中的情绪和语境，与我想要为苹果捕捉到的东西十分贴近。下面是一些《死亡诗社》中引起我共鸣的关键台词，它们最终转化为苹果广告脚本的创作灵感。”  </p>
<p>“我引用了《死亡诗社》中的几句台词，并问史蒂夫是否看过这部电影。他说，‘当然看过。Robin Williams和我是好朋友。’我告诉史蒂夫我会写一些有相似调性的东西，我们一周之内还会回来。”  </p>
<p>“我回到了公司，无休止地日夜工作。我的创意日志里写满了无数手稿和脚本。我抱着‘这是从Robin Williams口中说出的话’的心态去写每一句话。”  </p>
<p>“我和Lee飞往库布蒂诺，亲自为乔布斯放映这段广告片。当时房间里只有我们三个人。我们放了一遍片子，当它结束的时候，乔布斯说：‘这太差劲了！我讨厌它！这坨广告公司做出来的狗屎！我还以为你会写一些像《死亡诗社》那样的东西！这就是一坨屎！’  </p>
<p>Clow说了一些‘好吧，我想你不想再看一遍了’之类的话。而乔布斯还在咆哮着，说他要找《死亡诗社》的编剧，或者一些“真正的作家”来为他写文案。”  </p>
<p>“虽然我们非常希望《死亡诗社》的主演Robin Williams能为这则广告配音，但他拒绝做任何形式的广告。”  </p>
<p>早期的手稿，Rob原来想让Robin 来为广告配音。  </p>
<p>广告获Clio奖时的创意人员名单，乔布斯被列在“文案”名单中  </p>
<p>Rob Siltanen，think different主创  </p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《三体》为何在互联网行业内被“圣经化”？]]></title>
      <url>http://chocoluffy.com/2015/08/24/%E3%80%8A%E4%B8%89%E4%BD%93%E3%80%8B%E4%B8%BA%E4%BD%95%E5%9C%A8%E4%BA%92%E8%81%94%E7%BD%91%E8%A1%8C%E4%B8%9A%E5%86%85%E8%A2%AB%E2%80%9C%E5%9C%A3%E7%BB%8F%E5%8C%96%E2%80%9D%EF%BC%9F-1/</url>
      <content type="html"><![CDATA[<p>让《三体》就呆在它应在的科幻小说位置，不要将它粉饰成社会学，经济学甚至所谓成功学的金科玉律，因为后者，有比丛林法则更为合理的规则:即强弱相对，共生相依，相互转化，强即弱，弱亦强，动态平衡才是至理，客观世界如是，人类社会如是，宇宙洪荒不外如是。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3l1y5kQBicia9IIRHJSechSPM2Zw7xWzrtou9XcNpA3oeqwMuibeLka94KvhDRCCnialNEO6kkoAFicUbg/0?wx_fmt=jpeg" alt="image"><br>北京时间今天下午，第73届雨果奖在华盛顿州斯波坎会议中心正式揭晓。中国作家刘慈欣凭借科幻小说《三体》获最佳长篇故事奖，本次获雨果奖的是该系列的第一部《三体》(英文版)，这是亚洲人首次获得雨果奖。  </p>
<p>《三体》在互联网圈早已备受推崇，小米雷军就是典型的粉丝代表，他去年推荐最多的一本书就是《三体》，他说这本书是号称中国最好的科幻小说，没有之一。在他看来，《三体》不仅仅是本科幻小说，本质上是本哲学书，主要讲宇宙社会学，其中提到的黑暗森林、降维攻击尤其深刻。在金山集团战略会上，花了很多时间分享读《三体》的体会，其中的哲学道理对制定公司三到五年的战略非常有帮助。  </p>
<p>《三体》的资深粉丝中，还包括百度李彦宏、联想柳传志、游族林奇、360周鸿祎等互联网大佬。周鸿祎曾在微博上表示，期待国产科幻片《三体》能够超越《黑客帝国》，而他自己就将客串《三体》电影，饰演军方智囊团专家，买下该书版权拍电影的正是游族林奇。  </p>
<p>某种程度上，《三体》中“黑暗森林”理论影响下的宇宙和当前的互联网行业是很相似的，因为互联网行业基于对于商业模式和产品的创新来实现盈利，而这种商业模式和产品的创新有着极大的不确定性，谁也无法判断哪一种商业模式亦或是哪一种产品会成为未来的主导，这家公司会成为之后的巨头。  </p>
<p>猎豹傅盛曾表示《三体》就是坏在地球内部的反对党手上，而在以速度为王的互联网时代，小的文明和小的公司还是有机会。在面对大公司时，小公司要快速实现技术爆炸, 而且让你的研发不要被挖掉。内部不出问题，都能找到发展之路。  </p>
<p>创业家牛文文坦言《三体》对自己启发最大的是中国人的创造力和想象力。之前有个错觉，中国人做商业或者做科技只能复制或者只能伪创新，只能是黑暗森林。我觉得不是那样，刘慈欣创作《三体》所能达到的境界，我们其他人也能够达到，只要能够把中国人的创造力发挥出来，我们的商业和科技就能达到世界水平。  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/unsMtmapdG6CBIguvYuextCSuUmnJbX9zHLB2z05s0vbbIXhUKtxK3IAibd5ia8pxQ9ia25v7NsOkqicxOHt9bpC8A/0?wx_fmt=png" alt="image">  </p>
<p> <strong>去年9月，i黑马曾经发过一篇创业者关于“为什么《三体》在互联网行业内被‘圣经化’”的讨论，以下是讨论原文：</strong>   </p>
<p>刘慈欣的科幻巨作《三体》讲述了地球文明在宇宙中的兴衰史，想象空灵，文笔细腻，不仅仅让科幻迷们过足了瘾，更为神奇的是许多行业的大佬对于《三体》背后的人生哲学和商界启迪也是推崇备至，雷军就是典型代表，在互联网领域甚至被奉为“圣经”，《三体》真的有这么神奇吗？它对于互联网行业到底有哪些深刻的启发？<br>　　<br>文前先附上雷军的微博：  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/unsMtmapdG6CBIguvYuextCSuUmnJbX9lGcIZTASvvPdnE39micS9TU4VZ6oHXsKGicp8ODlk5ibNIHukVT9c6LtQ/0?wx_fmt=jpeg" alt="image">  </p>
<p> <strong>王小然——互联网创业者：</strong>   </p>
<p>在互联网行业，《三体》的确备受推崇。其实《三体》本身是一部非常优秀的作品，个人觉得他已经不仅仅局限于科幻小说这个领域了，我喜欢《三体》有两个主要原因，一是从作品本身来看，想象空灵、推理严密。其二，从延伸领域来看，其背后发人深省的哲思更令人回味无穷。  </p>
<p>当然，可能对于三体读者来说，最令人拍案叫绝的应该是罗辑在面对三体人威胁是，悟出来的四条宇宙公理：  </p>
<p>1、生存是文明的第一需要；<br>2、文明不断增长和扩张，但宇宙中的物质总量保持不变；<br>3、猜疑链：宇宙中的不同文明会猜疑对方会采取各种手段毁灭自己；<br>4、技术爆炸：任何一个不起眼的小文明在宇宙尺度中很快可以通过技术大爆炸超越自己。<br>　　<br>由以上四条公理，推到出了最为合理的“黑暗森林”法则：在宇宙中，一旦发现其它文明的存在，就选择立刻毁掉这个文明。<br>　　<br>相信这四条公理对于许多商界大佬的冲击还是很大的，尤其是互联网领域。因为长期的在商圈爬模滚打的他们早已经熟悉了商圈的弱肉强食和优胜劣汰，回过头来，他们会发现，这一切和自己每天经历的何其相似：<br>　　<br>1、生存是公司的第一需要，要是明天就回被干掉，那一切构想、一切情怀都是扯淡。  </p>
<p>2、互联网领域的疆土看似无限，随着域名越注册越多，五位数的域名、5个字母的全拼都售罄的时候，互联网领域的创业团队应该敏锐的感到到：第一，互联网的领域的资源已经在被快速瓜分，市场在呗分割占领。第二，用户的使用量也是有限的，每个人不可能一天到晚上网，就算全天，一天也只有24个小时。但是互联网领域的创业者还在呈几何数量增长，那么剩下的游戏就很简单了，就是这些互联网创业者如何利用手中抢得的资源去瓜分受众、包养受众。  </p>
<p>3、许多互联网新秀，创业时，一把鼻涕一把泪，创业刚刚出现一点眉目，巨头某迅立马利用手中的海量资源做一个和你一样的，甚至优化还比你好，别人还拥有更大的推广平台，你凭什么和别人拼，只好看着自己辛辛苦苦、十月怀胎的儿子凋零，当然巨头们也还有更文明的办法，就是找你谈谈，说：我想收购你这个产品，干不干吧？不干我明天就做一个一样的！这是小团队对于巨头们的天然设想，虽然事实的确相差不远。<br>　　<br>那么巨头们对于网络小样儿们就没有猜疑吗？有！马云、马化腾都曾表示他们最担心的就是小公司突然搞个什么新玩意出来，随时可能超越自己，他们也得时时刻刻盯着市场 <del>一旦发现，哼哼</del>~<br>　　<br>4、互联网行业的技术大爆炸，就不用赘述了，互联网起步也不过50年，微信不到五年，看看我们身边这个世界吧，你会深刻感受到，这他妈不是互联网行业的技术大爆炸，什么是爆炸，想想要是微信不是腾讯内部竞争的产物，今天的腾讯该是多么的焦急！<br>　　<br>所以啊，《三体》之所以很“圣经”，是因为它把互联网领域本身讳莫如深的东西明明白白的说粗来了，也许以前有许多人朦胧之中有所感悟，但是知道的不是这么明白，也许以前有几个人知道的清清楚楚，但是，现在这也快成为互联网领域的一个公理了，所以剩下的只有一件事了：伪装自己、保护自我；发现目标，干掉对手。<br>　　<br> <strong>赵亚杰:</strong><br>　　<br>《三体》必须从贯穿于全书的“黑暗森林”这个概念来谈，在宇宙之中，假设所有文明之间都是未知的且都处在一个互相都不知道的黑暗森林之中，由于相距大多几十几百甚至上千光年，所以说观测到的星球只能是之前几十年几百年的星球，无法判断出现在的演进程度，在这么长的一个时间跨度内，如果一个低等文明的科技产生了突破，那么就可能成为高等文明。而宇宙为了争夺生存空间是弱肉强食的，作为宇宙中的高等文明，是无法允许低等文明的科技产生突破进而分食其原有的资源的，所以他们就像宇宙中的猎手一样，一旦发现文明，即使其很低等也要将其消灭，基于其可能产生突破这样的假设。<br>　　<br>而“黑暗森林”理论影响下的宇宙和当前的互联网行业是很相似的。对于现在的巨头来说，就像那些高等文明一样，也是在狩猎之中，力图将所有有潜力的新兴公司扼杀在摇篮之中，亦或是将其变成自己公司的一部分，购买一张未来的船票，事实证明，无论是Google和Facebook，亦或是国内BAT，都用行动证明了这个观点。<br>　　<br>对于小公司来说，自己所拥有的某项技术或是某种创新都有可能成为未来的主导，走在风口之上，进而获得成功，所以不得不韬光养晦，保存自己的实力，避免与巨头正面冲突，这样才可能获得生存的空间。同时也要找准自己的定位在用户心中构筑一个品牌形象，而这种形象是极为牢固的，这样才有可能获得成功，而陌陌和小米都是成功的先例。<br>　　<br>所以说“黑暗森林”理论无论是对于巨头还是创业公司都是有着很强的指导意义的。<br>　　<br> <strong>秦雯——缔元信CEO：</strong><br>　　<br>“圣经化”这种说法有些夸张，不必因为某些大佬推崇就无限膜拜。但《三体》确是一部非常可读的科幻小说。它交叉应用物理学，天文学，社会学，信息科学等多学科理论，描绘了一幅未来宇宙各种智慧角斗的宏大场景。其宇宙的基本价值观——所谓”黑暗森林”还是弱肉强食的丛林法则，但这一点，我不认为是《三体》的精华。只是作者为了让中国人罗辑担当”救世主”的一个巧妙的桥段，也没有跳出晚清李中堂”以夷制夷”的伎俩。<br>　　<br>《三体》引人至胜的，一是描绘了一个全面数字化的未来世界，而支撑这个世界的各种技术是当下人们已经感知或可预见的，在这个意义上，可以说作者为我们勾画了一幅令人信服的科技驱动社会演化的蓝图，我想这是互联网行业人士推崇它的主要原因，包括我本人在内。二是极富想象力的升维和降维的理论应用，尤其是当我们读到宇宙高等智慧用一张小纸片将三维太阳系降为二维平面画，不禁让人想起《功夫》中星爷的踩脚招数，与之有异曲同工之妙。<br>　　<br>总之，让《三体》就呆在它应在的科幻小说位置，不要将它粉饰成社会学，经济学甚至所谓成功学的金科玉律，因为后者，有比丛林法则更为合理的规则:即强弱相对，共生相依，相互转化，强即弱，弱亦强，动态平衡才是至理，客观世界如是，人类社会如是，宇宙洪荒不外如是。所谓纳须弥于芥子，宇宙至理就在一粒沙一朵花中。无需膜拜三体。  </p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 商业评论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Here’s What A Coder Learned After Losing Internship at Facebook]]></title>
      <url>http://chocoluffy.com/2015/08/24/Here%E2%80%99s-What-A-Coder-Learned-After-Losing-Internship-at-Facebook/</url>
      <content type="html"><![CDATA[<p>Again, size breeds chaos.</p>
<a id="more"></a>
<p><strong>again, size breeds chaos. 当公司需要对所有消费者服务的时候，对不确定性的恐惧很容易击败对未知的尝试，正如本文中的主人公的这次事件一样，他只不过是利用了原本就在facebook网站上公布的geo数据而已，不过将地理数据可视化出来很容易引起公众对隐私权的反击，这也是为什么facebook会采取如此行动，就像曾经Zuckerberd曾经威胁收购snapchat一样，这是保护创意的做法吗，还是不过就是为了公司商业利益？鸡汤，只是用来安慰公众扶持股票的，毕竟大众的心理处境太容易受各种暗示影响从而引发不可估量的蝴蝶效应了。 具体的cons，可以参考一本描述大众心理学的书《乌合之众》。</strong><br> <strong>余舜哲</strong><br> <strong>2015.8.24</strong><br> <strong>多伦多凌晨5点，倒时差中</strong>   </p>
<p>Short Bytes: You must have read the story of Aran Khanna, the Harvard student, who lost his internship at Facebook after he brought the privacy issues with Facebook out in the open. After losing his summer internship at Facebook, he has written an article in Time telling his views regarding the whole internship at Facebook episode. A ran Khanna lost his Facebook internship 10 weeks ago, when he launched his Marauders Map extension that used the location data from Facebook Messenger and pltotted the same on a map. Stating the reasons, Facebook said that Aran didn’t meet the high ethical standards expected from the interns who intend to work at Facebook.  </p>
<p>Writing for Time, Aran mentions about his days as a rising senior at Harvard, the same place where Facebook founder and CEO Mark Zuckerberd made the world’s most popular social network. He writes that he drew inspiration from the prospects of joining the “hacker culture” of Facebook where “code wins arguments.”  </p>
<p>He says: That forward-thinking “hacker culture” is how Facebook started. Can you imagine if Zuckerberg had gone to the school administration to ask permission to build Facebook in his dorm room? Luckily, he didn’t need permission. He built it, and his code won. </p>
<p>Talking about his intership, he mentions that earlier he had taken a class in Privacy and Technology, where he learned to question technology and its impact on people’s lives. The learnings of this class and his interest in Facebook’s products, inspired him to make Marauder’s Map extension- that allowed users to see the geolocations of the people on Messenger. It should be noted that Facebook’s Android Messenger app automatically shared the geolocations along with the texts. </p>
<p>He stresses on the fact that he didn’t exploit any trade secret- or broke into anything. His app did nothing but read the already available data and displayed it on a map. However, Facebook disagreed and blamed him for violating the site’s user agreement by utilizing data taken from website in his app. He says: An employee from the company asked me not speak with the press and to deactivate the extension, which I did. I was both shocked and disappointed when a Facebook HR representative called the day before I was supposed to start my summer internship, after I had already moved to California, to inform me that my offer was being rescinded.  </p>
<p>After this episode, Facebook issued an update that changed the way Facebook shared geolocations. Now, your geolocation is only shared if you elect to do it.  </p>
<p>Talking about the learnings from this lost internship at Facebook, he said that it was an “incredible learning opportunity” teaching him how big tech giants response to the privacy issues and how they end up hurting their uses.  </p>
<p>Talking to the Indo-Asian News Service, he said that his intentions were never malicious and he simply sought to draw the attention of people and Facebook. He says:   Moving forward, will companies like Facebook be more aware of privacy concerns and more proactive in patching them? Or must we continue to rely on privacy guardians affecting change from the outside?  </p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 商业评论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[最幸福创业者，25岁的新移动社交之王]]></title>
      <url>http://chocoluffy.com/2015/08/20/%E6%9C%80%E5%B9%B8%E7%A6%8F%E5%88%9B%E4%B8%9A%E8%80%85%EF%BC%8C25%E5%B2%81%E7%9A%84%E6%96%B0%E7%A7%BB%E5%8A%A8%E7%A4%BE%E4%BA%A4%E4%B9%8B%E7%8E%8B/</url>
      <content type="html"><![CDATA[<p>很多时候，我都相信，在我们创造软件、网站的交互方式的时候，我们同样的，在创造一种文化。</p>
<a id="more"></a>
<p>关于snapchat，我以前关注的点：</p>
<p>1、snapchat其实是standford的一个class-project;</p>
<p>2、起初的用户量引爆点不在大人，是埃文的表妹将这款软件带去她所在的初中还是高中之后传开的；</p>
<p>3、因为阅读浏览后图片(snapchat上大部分是图片)会不留痕迹，这种价值观对用户行为的影响。 我始终相信一个网站或者app背后那个核心的行为和思想就是一种社会文化模式，snapchat允许我们阅后即焚，也就允许了真实、不加修饰、“冲动”地去分享，甚至阅后即焚的暗示，让很多分享更加的偏激，毕竟你的观点和照片，你的portrait又回落入一片黑暗(仔细想想，snapchat还正戳中了微信的弱点)；facebook的宗旨是”connect everything”，所以它希望沉淀下你所有的关系网，一天给你推荐十几个新朋友，不仅仅是因为增加点击率可以提高广告收入，而且也提供你一个源源不断的feed, 让你更持久的停留在facebook的世界；</p>
<p>以前还对reddit信息聚合网站(我男神Aaron Swortz互联网之子一起co-found的)的feed algorithm有留意过，其实你新feed出现的速度\用户支持和不支持的限制\ 旧feed的gravity等等的细节 也构建出了一个对trending内容充分尊重和扩散的文化，可以设想的是，不同的参数设定将会引导出另一种文化。</p>
<p>很多时候，我都相信，在我们创造软件、网站的交互方式的时候，我们同样的，在创造一种文化。</p>
<p>这一点可能很显而易见，但是能够用自己的双手，把自己笃信的价值观模拟实践出来，又何尝不是一种理想主义。</p>
<p>最后一点谈的稍微有点多了，以后有机会我会继续分享我对各种商业模式的思考，回到正题，在下面的文字中去看看新社交独角兽snapchat创始人的另一面。</p>
<p>余舜哲</p>
<p>2015.8.8</p>
<p>埃文•斯皮格尔(Evan Spiegel)坐在自己创办的Snapchat公司办公室里，他穿着运动鞋，一只脚搭在伊姆斯椅(Eames chair)上，身体往后倚靠，开口就承认自己现在跟媒体不怎么打交道。“我真的是好久不接受采访了。”他说着，小啜了一口所谓的“幸福果汁”——用菠萝、梨、生姜和薄荷调配的饮料。在被问及原因时，他字斟句酌地回答。“因为我一直忙着工作啊，”他说，“太xx辛苦了！”24岁的斯皮格尔是Snapchat的联合创始人、首席执行官，因顽劣鲁莽而备受争议。这家初创企业是规模最大、发展最快的社交网络公司之一，拥有330名雇员，估值超过150亿美元，声称拥有超过1亿用户，其中绝大多数是年轻人。此外，他对于自己的商业计划讳莫如深，在硅谷和好莱坞错综复杂的八卦小圈子里，他始终是个让人感到陌生（而且可以说是没有受到重视）的角色。而现在，他已经做好准备，要谈谈公司面临的重大转折。</p>
<p>在斯坦福大学跟现年26岁的兄弟会老友鲍比•默菲(Bobby Murphy)创建Snapchat3年多后，他开始尝试将它发展为一门真正的生意。今年早些时候，Snapchat先是播放了一系列精选的视频广告，之后打算开始游说其他大型广告主，他们还拿出了一些全新的数字，力图表明它的用户比电视广告的受众群规模更大、年龄更轻，而且迷恋程度更深。5月它向广告公司发放了一份23页厚的销售推广材料，介绍称美国13-34岁的智能手机用户中，有超过六成是Snapchat的活跃用户，每天浏览视频次数超过20亿次。这已经约是Facebook用户观看视频数的一半，而后者不仅公司历史比其长了7年，而且用户数也比其多了9倍。“Snapchat刚出来的时候，我觉得就是在小打小闹，这个想法确实大错特错。”Facebook前高管、现在是高科技产业投资人的查马斯•帕里哈皮提亚(Chamath Palihapitiya)说。他并未向Snapchat投资，但正在密切关注这家公司。“我觉得谁都没看出来他们将会取得怎样的成就。搞得不好，他们将是下一代的MTV音乐台。搞得好的话，他们将是下一代的维亚康姆(Viacom)。”Snapchat的上升道路经历了种种坎坷。这家公司创造性地推出了一种在打开几秒后就会消失的新型在线消息。</p>
<p>讽刺的是，它遭受的一系列公关危机都是跟内部磋商和令人难堪的旧电子邮件被公之于众有关——这些恰恰属于永远不可能自行消失的信息。2013年晚些时候，商业内幕(Business Insider)发布了斯皮格尔和默菲在一次诉讼案中本应保密的口供录像，这起案件的原告是他们的一位斯坦福前同学，他声称自己率先想出了可以消失的信息这个点子，但却被排除在公司之外，遭受了不公正的待遇，此后案件达成庭外和解。接下来，去年5月，斯皮格尔在读大学期间给他兄弟会同学发去的含有猥亵内容的电子邮件被传到了八卦网站Gawker，并被悉数刊登出来。到了去年12月，黑客攻击了索尼的电脑系统并公布了大量电子邮件，其中就有斯皮格尔和Snapchat几位董事，包括索尼娱乐首席执行官迈克尔•林顿(Michael Lynton)通过电邮开展商业策略磋商的机密内容。</p>
<p>凡此种种，给人们留下了一种印象，觉得斯皮格尔是个自大、歧视女性的洛杉矶富二代。不仅如此，在2013年年底，当Snapchat还没有分文进账时，他竟然拒绝了Facebook超过30亿美元的现金并购要约，这更是让人们觉得此人又傲慢又愚蠢。不过，正如今年5月15日斯皮格尔在南加州大学毕业典礼致辞中所说的那样：“不管怎样，总会有人对你有意见。不管你怎么做，总会有人觉得你做得还不够。所以，你要找到对自己重要的东西，找到你热爱做的事情。”现在，斯皮格尔希望纠正外界对自己的误解。在90分钟的采访中，他谈到了自己读的书、商业策略、千禧一代的心态，以及这家备受瞩目的公司的未来。这一次，他想要传递的是一个独立思考者的形象，他走上了与很多竞争者截然相反的道路，原因不仅仅在于他忠于自我，更因为他相信年轻的互联网用户并没有从其他营利性社交网站得到优质服务。他在决策中回避数据，在App中忽略了传统设计，并将他的公司总部设在因施瓦辛格(Arnold Schwarzenegger)等一众肌肉男而在上世纪70年代名声大噪的加州健美海滩附近。他不落俗套的态度还延伸到了广告业。</p>
<p>“很多人认为互联网广告给原有体系增加了重负，如果你在乎的是创造新的产品，这一点还蛮让人泄气的，如果你感觉自己能够解决问题，这一点就更让人沮丧。”斯皮格尔本人跟他做的产品有不少相似之处：热切、质朴、莫测。在他说到激动处时，不是说下面的话“不能发表”，而是“不能xxx发表”。他有时态度很谦逊（“这里的每个人都比我聪明得多了”），不过也常常说漏了嘴，显得自命不凡（“我真的是刚刚灵机一动，想到了这一点咧。”他一边说着，一边在纸上画了个图表来说明服务的基本要素）。而且他很容易动脾气。如果一位采访者提出了一个蹩脚的问题，就好比：你们公司的长期愿景是什么？就只能求老天显灵了。因为斯皮格尔会直接说：“我讨厌这种问题，哥儿们。”</p>
<p>他的朋友和投资人说，在这样的态度后面，隐藏的是一个正在崭露头角的商业人才。尽管在硅谷的科技界，斯皮格尔仍然是个无名小卒，但他已经悄无声息地跟一群大佬搭上了关系，比如谷歌执行董事长埃里克•施密特(Eric Schmidt)和软银(SoftBank)副董事长尼科什•阿罗拉(Nikesh Arora)。“我最感兴趣的是埃文学习的速度，”米奇•拉斯基(Mitch Lasky)是Snapchat公司董事兼投资人，通过风投公司Benchmark投资，“这一点才最让竞争者闻风丧胆。在能让他成为伟大的CEO的那些方面，他已经表现得越来越出色，而且速度远超出任何人的认识或者预期。”斯皮格尔说，Snapchat起初的重点并不是转瞬即逝的自拍照，而更多关乎让人们将捕捉到的某一刻跟想要的任何人随意在线分享，而不必担心因此产生的更为深远的后果。在当今世界，你在Facebook或者Twitter上说的任何一句话都可以成为你永久的互联网身份的一部分，因此对于年轻用户来说，不确定性是有价值的。“在此之前，绝大多数社交媒体所做的就是上传照片，地球上所有人都能看到”，他解释说，“而我们不想做得那么宏大。我们想的很简单，就是尝试重新讲述拍摄某张照片时的幕后故事”，并且在线跟朋友们分享。接下来，斯皮格尔和他的同事们定下了基本理念，在此基础上添加其他功能。用户可以给他们的“快照”配上搞笑的图说，按时间顺序上传后就成了每天的视觉“日记”，并能跟群组的朋友分享。</p>
<p>Snapchat还对这些日记进行遴选加工，做出大学校园和全球主要城市的快照汇编——所有图片都会在24小时后消失。这样一来，当Facebook和Twitter用户为了避免日后的尴尬而需要精心编写自己的帖子时，Snapchat的用户受到了怂恿，敢于上传冒着傻气、毫无顾忌或者色情猥亵的想法（以及图片），坚持自己的本色。这并不是Snapchat唯一与众不同的地方。这项服务无法在传统的网站，而只能在智能手机上使用，而且这家公司的一大核心信条是相信视频和照片应当撑满智能手机的整个屏幕。“他相信自己的受众都是年轻的手机用户，而且相信这些受众并没有从现有的硅谷一流公司那里得到应有的服务。”拉斯基说。斯皮格尔反感绝大多数类型的在线广告。他觉得精准投放广告让人毛骨悚然，尤其是有时候你在一个网站买了某件商品，结果过了一会儿就在另一家网站上看到了这种商品的广告。“上网的时候感觉身后有台吸尘器一直跟着，这让人直起鸡皮疙瘩。”他说。他也不愿意在Snapchat用户一对一的私聊页面上放广告，认为这样太招人厌。</p>
<p>Snapchat代之以全屏视频广告，这些广告会在媒体频道或者来自不同城市和大学校园的“故事”页面中出现，广告主目前包括可口可乐、麦当劳和三星等。这些广告时长10秒左右，更像是传统的电视广告而非新奇的互联网广告。它们最不同寻常的特点在于，当用户垂直握持智能手机时，视频可以在不改成横握的情况下填充整个屏幕，公司认为这个特性非常重要。在向广告主提供的销售文件中，Snapchat声称相较普通广告，用户有9倍的可能性看完在他们的应用上发布的整辑广告，因为他们不必把手机转一个方向。而在另一项独立的研究中，谷歌也发现用户更有可能看完尺寸更大的视频广告。根据谷歌下属DoubleClick部门今年5月的一份报告，在网页和智能手机上最常出现的是于页面一侧发布的垂直小尺幅视频广告，访客浏览这种广告的比例仅有区区19.8%。Snapchat需要发布垂直方向的视频广告，这也意味着广告主不能将已有的、用于YouTube和Facebook上的水平格式广告直接改了就用。广告主表示要为此付出不菲的代价，但斯皮格尔并不怎么操心。</p>
<p>“我们运气不错，因为拥有令人叹服、数量惊人的受众群，大家都会为了做出更好的产品而专门修改自己的视频广告。”他说。在过去这几个月，斯皮格尔先后前往伦敦、洛杉矶和纽约拜访大型广告机构和品牌，介绍Snapchat的广告方案。互联网公司的CEO亲自进行商业推介，这不太平常。“他早就开始接触公司的商务层面，从这方面说，他已经成为一种新型的社交创业家，”在线广告机构Akqa公司的董事长汤姆•贝德凯尔(Tom Bedecarre)今年年初跟斯皮格尔会面，他说，“其他大部分这类创业家都会找一个人替自己出面去投标。”伊姆兰•汉(Imran Khan)曾在瑞士信贷集团(Credit Suisse)投资银行部门任职，去年12月加盟Snapchat担任首席策略官，他说“埃文将广告视为产品，而大部分互联网创始人是将广告看成必要的‘作恶’”。目前伊姆兰•汉负责监督公司广告投放效果，与此同时公司正在物色广告总监。Snapchat或许高估了它对广告主的吸引力。它刚启动广告计划时，要价是每1000次浏览约100美元，这比YouTube或Hulu的开价高了一倍多。5月Snapchat宣布将把每1000次浏览费用降至20美元，这个开价仍然高于一些竞争对手，而且广告业的部分人士认为Snapchat尚未让广告主信服。“我觉得用户使用Snapchat，为的不是在那里寻找内容，他们是把它当成跟朋友们沟通的平台。所以，除非它能把信息交流功能整合起来，否则对于品牌并没有多大的价值。”</p>
<p>广告公司IPG Media Lab的创意总监斯科特•瓦兰德(Scott Varland)说。他认为Snapchat应该寻找各种方式帮助广告主进一步延伸触角，更准确地瞄准特定的用户群。斯皮格尔除了要应对在消息服务平台上发布广告的质疑，还需要跟人们对他领导能力盘桓不去的疑问作战。一个从前犯过好几次错的24岁小伙子，能领导一家炙手可热的社交初创公司走过发展的下一个阶段，甚至向IPO跃进吗？批评人士忙不迭地指出斯皮格尔近期犯过的错。去年，他从Facebook这类公司挖到了几位高管，其中一位名叫埃米莉•怀特(Emily White)的高管在任职COO仅15个月后离职。与Snapchat关系密切的人士说，斯皮格尔想做一个凡事亲力亲为的老板，这让传统型的COO很难有发挥作用的空间。斯皮格尔不愿探讨此事，只是宽泛地说，“我们想把事情做对的决心出乎大家的意料。”所以，说他是个变幻无常的老板“反而更简单”。</p>
<p>怀特未回应置评请求。还有些用户批评斯皮格尔开发的服务很难使用，看起来对于任何1985年出生的人来说，拿到它都有种无从下手的感觉。（“用户界面和设计看起来是将诡异的日本动漫和1980年代情景喜剧片混到一块儿。”《纽约时报》如此评价）比方说，在这个应用软件上找不到直观的按键，只能通过隐藏的图标和滑屏手势来调用别的功能。而且如果你不知道其他用户的Snapchat账号或者手机号码，几乎不可能搜索到别人。“我知道它看起来蛮难用的，看起来难用是因为它是新事物。”斯皮格尔说。他说公司将简化服务，并开发诸如用户目录这类功能，但他对于创新更感兴趣——公司的七成工程师都是在研发新产品。他自然不愿对新产品做过多阐释，但这不难猜：那应该是任何年轻人想要分享、互动和交流的事情，比如在玩的游戏，想要的产品，以及音乐和电影这一类的媒介。在去年12月索尼电子邮件泄露事件中，斯皮格尔在与索尼公司林顿的电邮中谈到了想与像Vevo和Spotify这类音乐服务供应商建立合作，甚至对购买一家唱片公司流露了兴趣，这样一来他就可以在Snapchat上推广唱片公司旗下艺人。在这些邮件曝光后，斯皮格尔给公司员工们写了封备忘录，贴在了Twitter上。备忘录表达了他对泄密事件的看法（“极度生气，极度震惊”），但同时也像是某种公司使命声明，意欲创造新一波的私密沟通工具。“保持高度机密能为你留下改变心意的空间，除非你已经确定自己做的事情没错。”他写道。他以一句类似战斗口号的话作为结语：“我们将改变这个世界，因为这不是我们想要生活的地方。”在被问及这句话究竟指的是什么时，斯皮格尔进行了一番“不得xxx发表”的长篇大论，谴责媒体未考虑到个人信息遭到曝光的索尼员工的利益，公开私人通信内容。不过他最终并没有承认Snapchat的使命是改变一种看似要拼命曝光一切事物的文化。</p>
<p>“我们目前还没有解决它的能力，”他说，“我现在24岁，我们已经为这个产品投入了4年。我不会站出来发表如此荒谬的宣言。我们就是没有解决它的能力。对不起，我们现在只能帮大家分享照片。”对于你至今所取得的成就，你引以为荣吗？我问斯皮格尔。“我为我们的团队而骄傲，”他顿了一顿回答说，“我也为在我看来他们将要做出的事业而骄傲。”</p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 商业评论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如果暑假没有尽头]]></title>
      <url>http://chocoluffy.com/2015/08/18/%E5%A6%82%E6%9E%9C%E6%9A%91%E5%81%87%E6%B2%A1%E6%9C%89%E5%B0%BD%E5%A4%B4/</url>
      <content type="html"><![CDATA[<p>当我在电脑上敲下暑假的时候，我心里的第一声念想，便是作品。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbl7cbdq6j21kw0zkk6t.jpg" alt="pink"></p>
<p>我想起的，有暑假期间我自行开发的几个rails网站作品，还有，依稀记忆中的深圳中学校长王占宝的一袭文字——每一天都是作品。 其实，暑假不过就是拉长了的业余时间，而我们在平时的业余时间里想着什么，在做什么，也就是我们的整个暑假。</p>
<p>他的一句话我很喜欢：“因为专注与纯粹，所以作品珍贵而久远。专注，是简单的深刻；纯粹，是深刻的简单。”</p>
<p>伯克利的交换仿佛刚刚结束，眼里的自己仿佛还是那个一拍照就剪刀手的青稚少年，而心里，却对一些更长远的事情有了点稍稍深刻的想法。 我到底喜欢什么，我想要做成什么，以及，能坚持多久。 </p>
<p>我觉得我一定不会忘记伯克利给我的震撼，那个在review session上和我说她很喜欢pure math的女生，那个hacker meeting上“煽动”我们build some cool shit的大二辍学生，那些当我拖着疲惫的身躯正夜12点走出教学楼的时候身后的热闹与喧嚣。 我并不试图把我的经历写成鸡汤，不过总有一些人，当我试图靠近他们的时候，我不自觉屏住的呼吸，诉说着一种崇敬与尊重。 当我回到现实的土壤，开始一个人的旅途时，虽说少了点热血，但我心里明白地知道，这才是我大多数的生活。 </p>
<p>桌面上，我留下了几张写满书名的便签纸，也开始了我为期3个月暑假的修炼。 </p>
<p>现在看回去的这3个月，几乎连续的代码提交，叠起来估计能到我肚子这么高的技术书和哲学书，几个能拿得出手的动画和网站，以及认识的一些有着相似爱好的伙伴，也让我有了些许的满足感。不说其他虚的，也不谈技术[感兴趣的欢迎私聊我], 我想说说给我留下深刻印象的一些东西。</p>
<p>第一个是程序员的思维，当我自己真正开始封装一些函数库，整理一些模块的时候，能体验到重构代码，用更加整洁、行数少的代码做到同样功能的乐趣，说得通俗一点，就好比每个人自己的武器库，那种拿起来就可以直接用的武器，以前都是找别人借的，都没有试过自己去理解那些武器，现在终于等到自己去造小武器了，自己也有了对更快更强的期待和去深入了解的需求，虽然现在大多数时候还都是上网调用强力武器，不过能够自己去仔细打磨创造武器，整理好自己的武器库，在有需求的时候能够很快抓准对应的架构和使用局限，还是很兴奋的不是吗。 </p>
<p>其实每一个行业都有体现的，不过程序界体现的最明显的一种想法，封装和抽象。 如果每一次要搭建一栋楼房的时候，都要从去研究怎样把一个砖制造出来，效率就很低了。 所以我需要直接的整块砖的封装，需要楼房架构设计的抽象，需要各种工具拿来就用而不是想要的时候才去制造的效率，我们才能更快更好的创造更多东西。 类似的理念还有很多，《大教堂与集市》里面提到的开发模式是偏向按功能蓝图建造出严谨大规模的大教堂，还是偏向开源的集市，其实就和社会科学里面蜘蛛形的中心控制体制，还是海星形的分布式控制的讨论相似。 《松本行弘的程序世界》里面关于编程语言特质的比较，像ruby这种动态性的语言，它甚至赋予你去动态按需更改kernel模块的能力，赋予程序员的自由度很高，危险度很高，但也因此可以创建出极简的模块和flexible的反应机制，我阅读时体会到的，这还是一种哲学。</p>
<p>说实话，其实理论的发展大都来自实践的需要或者启发。 起初科技发展的动力是军用，在军事领域创造了这个技术后，才有往大众市场推广的需要和努力，以至后面的各种渠道建设，都是这种推广的一部分； 前几年大热的大数据，不过是10年前谷歌搜索技术中摸索出来的一种处理数据的方法； 现在什么都在沾边的“分布式”“众筹”“UGC”“开源”哇，都不过是在个人参与的门槛降低后(或者应该说成中心控制的垄断被逐渐打破)时的一种协作体现方式，当人们贡献的不是想法点子，不是资本内容，而是选票的时候，这些名字多了另一个标签，民主； 标签只是标签，也只能起到标签的作用，既然是“民主”为核心的变式协作，也会沾上民主的不满和缺陷，什么多数暴政，质量版本控制，应急处理反应等等，不仅仅在编程的世界，我们现实的社会管理的讨论中也有他们的位置。 </p>
<p>我想说的，就是对程序员思维中对“重用”的重视，以及程序界讨论的一些想法和其他领域的联系和启示。 当然如何改进这种协作、创作方式的效率，如何改进民主，是大家都关注的问题，其实我们去看看那些科技发展中效率最高的地方，也许就会成为其他领域突破发展的关键，我在这里不细说，在之后的文章中再仔细讨论这个问题，比如： 曾经诞生多少辉煌诺奖的贝尔实验室； 呵护创意想法的皮克斯工作室，现在作为商业公司却开源200多个项目的facebook内部工程师社区，谷歌转变为alphabet背后对谷歌实验室等更多个创意想象的想法的重视。当我们拿事实历史而不是媒体擅长的戏剧式的故事去审视这些机制，这些人的时候，或许对怎样去诞生最有效率、最有质量的意见，怎样去迭代有了更深层次的思考，而民主何去何从，或许也会有更加有说服力的答案。 </p>
<p>给我印象深刻的东西的第二个是哈耶克和巴斯夏。虽然不是经济系的学生，但是啃完了哈耶克的部分文集，和巴斯夏的一些论文，让我不能不向他们发出我最诚挚的尊敬。他们的很多关于自由主义的观点，虽然不是第一个提出的，但是他们的透彻思考带给我很多启发。 在这里并不详细写出那些观点，感兴趣的人关注我的其他文章，我只说一点，其实有大部分我们现在争论的，或者不自觉形成的观点，都已经有很多伟大的头脑进行了详细的阐述和讨论，只不过人们选择忽略他们，而这种选择性遗忘，比那些观点从没有存在过还危险。 我只是希望不要浪费了那些伟大的头脑苦苦思冥出的结晶。 </p>
<p>有一个角度，在理解现代经济体制上面很有帮助，就是充分理解到每一次选举口号里面，对失业率降低的承诺，对社会福利的承诺，都不是凭空变出来的，这一次选举的结果不会凭空增加国民财富和就业机会，它不过是以选举人的意志重新分配了财富，而分配，意味着你在一份的花销多了，势必对另一部分的花销有影响。理解到这一或许其实很明显的想法，再去看看一个医疗保障已经占去GDP20%的国度实行的全民奥巴马医改制度会有的其他影响； 去考虑一下真的有可能在不改变其他社会的结构就能完成充分就业吗； 应该补贴艺术吗； 以及究竟节俭和节制究竟触动了人的哪根神经以致于人们都认为这不是自己的事而是国家的事(请看希腊为首的福利国家的诅咒)。<br>或许这些问题在社会学或者经济学专业的同学里面有抑或没有一个令自己信服的答案，但是如果已经存在非常棒的想法，(我并不是说只是某几个人的想法，也并不认为他们的想法一定都对)，令人信服的解释和实践，那么让他们的思考在我们这个时代延续下去，或许具有一定的意义吧。 我喜欢效率，希望听见、参与思考，而不是一个大众围观地产大亨去总统选举转一圈到处撕来让自己和喜欢冲突的观众爽的娱乐至死的时代。</p>
<p>给我印象深刻的第三个东西，则是准备留学带来的感觉。为了让这篇“散”文更像鸡汤的点睛的段落。</p>
<p>这是每一个即将出国的同学都将面对或者曾经思考过的一个问题—留学的意义。这是关乎你一生的重大的选择，逼迫你不得不去面对自己，去倾听你内心的声音，你到底想要什么，你到底热爱些什么，你想怎样去改变你周围的世界；有些人觉得，出国就是镀金，出国就是找一个老外嫁了促进国共外交关系，有些人觉得出国就是创业，在商业金融的楼宇之间穿梭；其实，这些都是选择，这些都是personal choice，都是一些很关乎个人的事情，也因此，并没有说哪个选择会比哪个选择更加高贵或者更加值得去做；<br>或者说，其实选择并不重要，重要的是，你在做选择背后是抱着怎么样的心态，你未来做事情又有怎么样的倾向；<br>试想想，抱着，出国是一条捷径的想法的人们，在国外，会怎样去生活；那些想着出国是一条捷径的人们，会不会在国外就真的放轻松和自在，觉得自己走了捷径呢； 那些想着出国就是准备大干一场的，努力去寻找思考交流机会的人，或许他们的生活在旁人眼里显得难以坚持，但却带给他们自己最大的愉悦和成长。</p>
<p>留学这个思考，还是关乎于你的工作，学习和生活的； 而留学的意义，也有其关于友谊和家庭的一面；其实，留学的意义，意义，说起来，好像我们得到了什么一样，但其实，留学，是一个逐渐失去的过程，你将不得不离开你最熟悉的朋友，最亲你呵护你照顾你的家庭，孑然一身，奔赴异国他乡，你就像一个洋葱，一层一层被剥开，到最后只剩下你自己；<br>或许，留学 ，在于友情和亲情，就是失去，不过，也因为失去，你会懂得倍加珍惜和感恩； 每当你在异国他乡拨通家里的电话，看到父母亲在镜头下乐呵呵的样子，你能不能想到，你的家人，无论生活都么平凡与枯燥，都会为了这30分钟挤破了头般对你笑，让你听见你最熟悉不过的唠叨； 每当你下了飞机，一大波朋友约饭的约饭，运动的运动，就想他们从来没有离开你一样，你有没有想过，他们在他们的记忆中，也有你不可缺少的身影和留恋，他们很在乎你，当然，也在乎你的纪念品；<br>留学，是一个不断失去的过程，但在这个过程中，你懂的更加的珍惜和感恩； 在你未来准备出国的日子里，去努力记住你最亲最爱的人的音容笑貌，去感谢和陪伴值得你感谢和陪伴的人们，因为，他们，是对上帝对你的最好的恩赐。</p>
<p>这些文字，全部都是我自己所想所经历，虽然有些段落有鸡汤的嫌疑，但是鸡汤不一定就是坏的不是吗。它们串联起来构成了我这个暑假的一大部分，当然，还有其他很多东西，那些回响着腹肌撕裂者的早晨，那个洒满汗水的篮球场，那些追着韩国apink女团的时光，以及每一天和家人的粗茶淡饭。</p>
<p>可能我的暑假并没有那些旅行者的暑假那样在景色中寻找初心，也少了点公益人在实践中回馈社会的勇气，但是，就像我像以前的文章里写道的，意义本身就是一个很私人的东西，我有幸能够接触到那些优秀的作者和想法，拥有珍惜我爱护我的家庭和朋友们，这本身已经很让我满足了。<br>如果暑假没有尽头，那就是我们的整个人生。</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[高文斌：告别文化疟疾症——也说常春藤的绵羊]]></title>
      <url>http://chocoluffy.com/2015/08/12/%E9%AB%98%E6%96%87%E6%96%8C%EF%BC%9A%E5%91%8A%E5%88%AB%E6%96%87%E5%8C%96%E7%96%9F%E7%96%BE%E7%97%87%E2%80%94%E2%80%94%E4%B9%9F%E8%AF%B4%E5%B8%B8%E6%98%A5%E8%97%A4%E7%9A%84%E7%BB%B5%E7%BE%8A/</url>
      <content type="html"><![CDATA[<p>对美国高等教育提出了严厉批评，这种批评未必值得国人跟着起舞，因为中国和美国的教育毕竟不在同一阶段。</p>
<a id="more"></a>
<p>两点：</p>
<p>1、从树立一个舆论的假想敌再将之击倒而获得的满足感，远远大于去承认一些inconvenient truth，</p>
<p>2、正如文中所提到的： 对美国高等教育提出了严厉批评，这种批评未必值得国人跟着起舞，因为中国和美国的教育毕竟不在同一阶段。</p>
<hr>
<p>最近几天万维刚先生的神文《精致的利己主义者和常春藤的绵羊》火了。别的圈子怎么反应我不太了解，至少在我所在的常春藤圈子里，大多数朋友们都十分不悦，认为这是对常春藤的误解甚至污蔑。于是一时间微信朋友圈里风起云涌，大家纷纷口诛笔伐，好看煞人。我想任何人都会抱团，急了也都会咬人，万先生的文章戳到了常春藤人尤其是耶鲁人的某些痛点，引起朋友圈里排山倒海的反击本不足为奇。大家同声相应，同气相求，连我自己也是与有荣焉，而圈外的朋友则自然以为这是所谓留美精英群体遮羞布被撕下来之后恼羞成怒。这几天我一直在想，我们作为耶鲁人哈佛人，能不能不要一上来就摆出一个两军对垒的架势？而圈外的朋友们也能不能不要给我们扣上一大堆帽子？毕竟任何人都没有社会意义上的原罪，用民粹主义的方法将一部分人打入另册是典型的文革做法。想来想去，觉得自己应该说点什么，就写了这篇东西。</p>
<p>　　 万维刚先生的文章是根据William Deresiewicz的《优秀的绵羊》一书。这本书我无幸拜读。但是因为这篇文章大量谈到了耶鲁的现状，我也就从我一年的耶鲁经验出发扯上两句。</p>
<p>　　 老实说，刚一去耶鲁我很失望。我发现我之前对耶鲁学生的两大预设都错了。第一，耶鲁学生没有我想象得那么用功；第二；他们也没有我想象得那么有社会责任感，所谓make the world a better place绝不是大多数人的理想。对于很多耶鲁学生，party比academics更重要，经常是酒吧里人满为患图书馆冷冷清清。我周末在图书馆苦读的时候，常常身边空无一人。而更要命的是，很多耶鲁学生出身优越，对东西不爱惜。走在耶鲁的校园里，随处可见吃剩的食品。惊人的食物浪费完全和常春藤标榜的价值观背道而驰。而校方的很多做法的确助长了学生的豪奢之气：宿舍区的休息室（lounge）装修得如同十八世纪的巴黎沙龙，地下室里健身游乐设备一应俱全，耶鲁学生出行二十四小时都有免费专车接送，这种专车我就坐过好几次……对于我这种来自落后地区普通家庭的学生来说，耶鲁是物质主义的天堂。但是享受过后我不禁自问：这一切真得有必要吗？我们是否占用了本来属于其他人的资源？难道我们真得应该在非洲饿殍遍地的时候心安理得地享受这一切？</p>
<p>　　 出于对耶鲁物质主义的忧虑，我给耶鲁校长Peter Salovey写了一封信。我提出耶鲁应该顺应环保主义的潮流，在校园里厉行节约，把钱花在刀刃上。我还写了几篇杂文，反复批评耶鲁学生对社会的冷漠，对学业的怠惰和对自己精英身份的自大。因此从这个意义上我赞成万先生对耶鲁和其他常春藤学生的批评。可是我也认为把脏水泼在常春藤身上是不公平的。任何对美国消费主义稍有常识的人都会明白，耶鲁校园里令人发指的铺张浪费不过是美国社会一大顽疾的典型缩影。而万先生不肯放过的成绩贬值（Grade Inflation）、刷简历、拜金等一系列问题，也是美国高等教育的通病。 Andrew Rossi去年刚刚完成的纪录片The Ivory Tower就对这些现象作了深刻揭露，我建议任何对美国高等教育现状感兴趣的人都找来看看。可是万先生也许不愿意知道这个导演是耶鲁的本科生，然后去了哈佛法学院，最后却成了纪录片导演。在万先生的宏大叙事之下，商学院和法学院应该绝对是绵羊的重灾区，因此我不得不弱弱地点出这个观点的片面性。</p>
<p>　　 我的一位耶鲁同学对万先生文章的评价是很中肯的：“所谓的理想难道一定要是人们所认可的无私而高大的？有这样的理想并能将它付诸实际本来就只属于少数精英中的精英。这个世界并不需要这么多思想境界高人一等的理想主义者。”常春藤的学生们也要吃饭，也要买房买车结婚生子。如果一定要将常春藤的“理想型”定义为“德才兼备，文能安邦武能定国，充满英雄主义和冒险精神的人中龙凤”，只能说明很多中国知识人的心理预期出现了偏差，而至于老贵族比今日新贵更严于律己更懂得服务社会云云，不过是毫无历史根据的陈词滥调，和中国人成天感叹江河日下世风不古没有什么区别。万老师是否应该反思一下这种挂一漏万的论述方式有没有道德绑架误导公众的嫌疑？我的很多耶鲁朋友们感到委屈甚至愤怒，难道是毫无缘由的吗？作为一名公知，大笔一挥，就有可能伤害很多人，因此还是恳请万老师今后笔下留情。</p>
<p>　　 其实这种对西洋教育的过高预期早已是中国国民心态的通病。出于自卑和对中国大学的不满，中国的很多知识人转而吹捧西方大学。于是我们从小就知道哈佛图书馆凌晨四点灯火通明，可是后来才知道哈佛图书馆凌晨四点根本不开门。这种理想与现实的巨大落差反哺了一种病态的民族主义情结：原来他妈的常春藤也没什么了不起！“理想型”破灭之后转而将曾经的偶像变成发泄幻灭感的泄愤工具，仿佛儿子终究不能打老子，这实在是中国今天很多民族主义者共同的话语方式。在崇洋与仇洋，自贬与自夸之间作剧烈的过山车运动，这种文化疟疾症说明了我们还是多么幼稚。</p>
<p>　　 我不得不郑重指出：万先生通过挂一漏万的“论证”，强行将耶鲁与清华“拉平”，这种论述完全违背事实而且十分得不负责任。而一味强调耶鲁校方的功利性而竭力抹杀任何理想主义的因素，这更是万先生的主观想象。我只举我自己亲身经历的几个例子吧。</p>
<p>　　 第一，我绝不是万先生笔下的“新贵”。我现在在耶鲁享受着一年六万多美元的全额助学金。一所美国大学给一个万里之外的中国人这么多钱，难道仅仅因为中国是一个值得耶鲁投资的新兴经济体？耶鲁校园里有来自五十五个国家的国际学生，占耶鲁本科生院学生总数的百分之十，百分之四十八的本科生可以至少熟练使用两门语言。这难道不是对文化多元主义的认同与守望？试问国内有哪所大学能够做到？</p>
<p>　　 第二，我讲一讲我认识的第一个常春藤人，这就是现在就读于普林斯顿的Idir。他现在双修金融与数学，将来很有可能去华尔街。那么他也是绵羊吗？绝对不是。Idir可以熟练使用十门外语，是一个语言神童，在大学期间就在运营着自己的出版公司Northbook Publishing，而他的父母都是普林斯顿大学教授，分别是驰名全球的经济学家与政治学家。这样一个人，无论从政从商从学，都会与众不同出类拔萃。而这样的人，在常春藤还有很多。任何专业都没有原罪，任何职业也没有原罪。我认为现在常春藤的毕业生一窝蜂去投行是不正常的，但是我更加反感像万先生这样将这些人统统划为“绵羊”，这是不负责任的语言暴力。</p>
<p>　　 第三，我说一说我看到的耶鲁大学社团活动状况。我在耶鲁期间一直参加一个叫做ThiNK的组织办的活动。这是一个支持北朝鲜脱北者的组织，经常组织一些脱北者来演讲，也会请很多知名学者。这个组织完全由学生自治，每次活动都要租一个几百人的大会场，场场爆满。这些组织活动参与活动的人，大部分不是韩国人也不会说韩语，难道他们做这些事情只是为了刷简历？我曾经问过我的一个英国朋友Ivan为什么对ThiNK这么热衷，他给了一个很康德式的回答：Because it is the right thing to do（因为这是该做的事情）。为所当为，这个心态至今仍是耶鲁的主流。说耶鲁的学生服务社会仅仅是为了镀金，这真是从何说起！试问在清华办一个关于非洲饥荒的活动，可能几百人的会场场场爆满吗？</p>
<p>　　 第四，我讲一讲我那封给校长的信的最终结局。President Salovey几天后就回信了，写得非常客气。而且他还特意通知了我所在学院的院长Dean Hill，让她好好跟我谈一谈。这并不是要请我去喝茶，而是让Dean Hill介绍我去耶鲁的社会正义中心从事校园改革的工作。我想这种“奇遇”在清华也不会发生吧。</p>
<p>　　 我不想再讲段子了。我只是想指出，任何地方都有不那么高尚的人，绵羊永远是社会的组成部分，无论常春藤还是清华北大。可是万先生似乎想说，因为清华有精致的利己主义者，耶鲁也有优秀的绵羊，耶鲁就和清华一样有问题，甚至有可能还不如清华。这个观点我想大多数清华人自己也不会赞同。所谓“中美大学有巨大相似性“，只是万先生的向壁虚构。中国的顶尖大学仍然赶不上美国的顶尖大学，理想主义情怀在美国高校也比在中国更普遍，这本来是常识，而以这个常识为出发点，我们应该思考的是如何在中国的土地上创造出我们自己的哈佛和耶鲁。如果不能反求诸己，中国大学将只能原地踏步，甚至可能退步。William Deresiewicz站在美国的发展阶段上，对美国高等教育提出了严厉批评，这种批评未必值得国人跟着起舞，因为中国和美国的教育毕竟不在同一阶段。既不要盲目崇洋，也不要夜郎自大，告别文化疟疾症，任重而道远。</p>
<p>　　</p>
<p>　　 作者系耶鲁大学本科生</p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么要读闲书？]]></title>
      <url>http://chocoluffy.com/2015/08/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%AF%BB%E9%97%B2%E4%B9%A6%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>只有曾经去思考什么是自由，才有去挣脱的冲动。</p>
<a id="more"></a>
<p>先说中国一般人的理解，闲书就是“没 有用的书”，对吧?跟工作没有关的书，不 能够给我们带来实际利益的书就是闲书。 我过去教哲学的时候，被学生问到最多的 一个问题就是，哲学有什么用?我说什么 用也没有，哲学就是一门“没有用的学问”，所有人文学科方面的书，在某种意义上，都没有什么用。</p>
<p>比如说，我读一本小说，既不能拿它 去评职称，也不能通过它挣钱，为什么还 要读它呢?—理由是我们要休息，要读 一些能够让我们放松的书，在这个意义上，读闲书是很有道理的。小说为什么不叫大说 呢，就因为小说是一个没有用的东西。所以 呢，读小说的人还蛮有超越性的，蛮能享 受生活中闲适的这一部分。</p>
<p>闲暇是用来“沉思”而不是放松的</p>
<p>不过，我主要想介绍的不是中国人的理解，而是一位德国天主教哲学家约瑟夫·皮珀 (Josef Pieper ) 的书《闲暇：文化的基础》。 这本书里面分两个部分，前一部分讲的是 闲暇与崇拜，后一部分讲的是闲暇与哲思。 西方对闲暇的理解和我们不一样，我们会 把休闲的那一部分叫做闲暇，但是他们刚 好反对这样。皮珀把一个人的生命分为三 种状态：一是工作，二是休闲，三是闲暇。 闲暇是用来“沉思”而不是放松自己的— 这是西方很重要的传统。</p>
<p>在西方的文化传统中，把认识这个世界 的本质，看作是一个人最重要的一件事情，这跟中国人非常不一样。中国人很多时候，会欣赏世界，会把世界看作可以跟人融为 一体的对象。但西方不是这样的，他们认 为这个世界的本质是由精神和物质两个部 分构成，人可以通过观察和沉思，把握到 世界的本质，这是闲暇非常重要的一个作 用。闲暇还有一个功能是崇拜：人们通过 崇拜的仪式，来跟上帝融为一体，从而把 握这个世界的本质。</p>
<p>就像亚里斯多德很早的时候所说，我 们之所以不能闲下来，就是为了我们最终 的闲暇，因为闲暇是人的本质追求。我们 为什么要工作呢，工作本身不是我们的目的，工作是为了让我们有时间来闲暇，在闲暇中 思考世界的背后是什么。</p>
<p>闲人三枚：杜尚、维特根斯坦、千利休</p>
<p>在西方现代艺术史上，有一个很重要的人 物，也许是排在第一号的人物—马塞尔 ·杜尚(Marcel Duchamp)。在他很年轻的 时候，在他的画已经可以卖大价钱的时候，放弃了绘画，进到了一个无所事事的生活状 态里。他用了三十年的时间，在家里找人下 国际象棋，还写了一本跟国际象棋有关的书。 作为达达主义的创始人，他认为虽然很多 人都热爱艺术，但这其实是一个非常无聊 的事情—很多艺术家，他们从事艺术活动就是为了挣钱，挣很多很多的钱，买个 豪宅、豪车，去国外旅游。</p>
<p>杜尚对这一切都是不以为然的，他觉 得一个人为了挣钱去画画，是他非常看不起 的一种行为。所以有人把买画的定金放在 他面前，他是不要的。他宁可高兴了，随便 做一幅作品拿出来，比如他把小便池挂出 来，上面给一个标签：泉。这就是他著名 的一个艺术品，达达主义讲的就是没有艺 术，没有什么可以解释。他用这样一个行为，批判也嘲讽了所有跟他同时代的艺术家。</p>
<p>杜尚说，人可以不要很多东西，可以 不要房子、车子、妻子、票子……他说“我 热爱呼吸胜过一切”。他所有讲过的这些 话，其实都在讲一种已经被现代人所淡忘 的，西方文化中最高贵的一种坚持—人的 目的性。人的目的性不是艺术，也不是读书，人的目的就是自身。为了强烈地呈现这样的 理解，他把生活过成了艺术品。他放弃财富、 地位等去捍卫人的自由。</p>
<p>在杜尚那个时代，还有一个跟他同样 的，也是对西方文化中的“高贵精神”心领 神会的人，那就是路德维希· 维特根斯坦 (Ludwig Wittgenstein)。</p>
<p>维特根斯坦是一个非常有哲学天赋的 人。前几年全世界哲学家投票，选一个他 们心目中最好的哲学家，结果第一位就是 维特根斯坦—他的名字排在亚里斯多德 前面。维特根斯坦30 岁的时候，先是到 一个学校里面去做小学老师，教学生认字，后来他觉得这种行为还太功利，干脆辞职，到花圃里面给园丁去做助手，很卑微的、没 有价值的一个角色。但他愿意让自己有这 样一个身份，为什么呢，因为他觉得哲学家、 教授，那些看起来很光彩的身份，对于作 为一个人的他来说，都是一种约束。</p>
<p>不仅在西方，东方也有这样做的，比 如说日本茶道创始人，茶圣千利休。</p>
<p>现在很多人喝茶、品红酒，都会讲出 处是哪里，产量多么少，制作多么精良，茶壶多么名贵，茶杯多么地了不起—在千利 休那个时候也会这样，表现得争奇斗艳，可能用金子做的茶具来喝茶，把喝茶变 成了炫富的方式。</p>
<p>千利休对这样一种行为非常 地鄙夷，他认为喝茶的本质在 于要喝出什么是好茶，要回到 茶本身。他的茶具是非常随便 的，拿一个碗，只要想喝，端上 这个碗就可以了。喝茶的地方也是非常简陋 的，而且茶室的门，从下面开一点点，进去 的时候必须跪下来，钻进去—为什么要钻 进去呢?就是说你没有什么不得了，没什么 好骄傲的，你只是一个喝茶的人，应该谦卑。</p>
<p>杜尚、千利休、维特根斯坦，所有这 样一些善于哲学思考的人，总是能够非常直 接地进到这个世界最核心的部分。这样一种 哲学精神的获取，与拿出一些时间来闲暇很 有关系。这个意义上的闲暇，就是在用我们 天生具有的直觉，来观察这个世界的本质。</p>
<p>中了工作的毒</p>
<p>很多在海外生活过的人，发现国外的小店 到星期天就关门，不关门的都是中国人的 店。西方人为什么星期天要关门呢?原因之 一是基督教说第七天是要休息的。这一天 不是用来放松，而是用来精神紧张的，这 一天你必须要跟你的本质融为一体。</p>
<p>中国人现在基本上都是工作的机器，我们中了很深很深的工作的毒，我们觉得 劳动才是美丽的。你问一个人，为什么要拼 命工作呢?因为要挣很多钱。为什么要挣很 多钱?因为要买房子。为什么要买房子呢? 因为我的房子还不够大—所以就不停地工 作下去，成了“异化的人”。异化的人就是 没有目的的人，碎片化的人。</p>
<p>今天的我们不知道，如何把人的内在 精神活出来。尤其不知道，人最重要的就 是要自由。读闲书最重要的目的，就是要重 新恢复人的自由本性，找到一个自由的世界。</p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第四期]-知识分子的福与祸]]></title>
      <url>http://chocoluffy.com/2015/07/29/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80-%E7%AC%AC%E5%9B%9B%E6%9C%9F-%E7%9F%A5%E8%AF%86%E5%88%86%E5%AD%90%E7%9A%84%E7%A6%8F%E4%B8%8E%E7%A5%B8/</url>
      <content type="html"><![CDATA[<p>必须承认，越是受到良好的愿望和道德的引导，他就越有可能为某种声音所绑架却不自知地用引起共鸣的情感做外衣。</p>
<a id="more"></a>
<p>前言：</p>
<p>最近的生活用来概括一下比较像：白天乖乖地作个程序猿，晚上就来冒充哲学家了哈哈；这篇文章的缘由是因为我被两个人所打动，并也希望在此送上我真挚的敬佩： 哈耶克和巴斯夏。</p>
<p>前者可能经济专业的同学们会比较熟悉，著作有《通往奴役之路》等，是全面支持自由市场，反对社会主义的殿堂级经济学家，而后者呢，虽然常常不被外人所认识，但是他是哈耶克的启蒙导师，哈耶克曾公开自己的思想受到巴斯夏的启发。</p>
<p>这些来头不是重点，重点是他们愿意把他们锐敏的思维之光远远照耀到了他们的专业之外。是的，他们在世人眼中是伟大的经济学家，但是在我眼里，在我从他们的文字中寻觅到的、感受到的，他们还是睿智的哲学家，社会学家…或许只有弱者才在意顶在头上的头衔与标签，更准确地，我想说他们都是他们那个时代伟大的problem-solver. 一个不随波逐流的，真正拥有独立想法的philosopher. 或许生活也许不分哲学，有思维火花，有愿意思考的地方，就有哲学。</p>
<p>以下文字部分是我的思考，部分是阅读笔记，和大家分享，关于这个社会的信息传播体制，去观察这个时代知识分子的局限和使命，同时麦克卢汉和尼尔波斯曼都著作对信息传播的重要著作，大家也可以来参考，如果喜欢这篇文章，欢迎转载或和作者讨论</p>
<p>余舜哲</p>
<p>2015.7.29</p>
<p>我们其实可以粗略地把我们的社会在知识的传播上粗略地划分出3类，专家，知识分子，和普通人，专家正是那些掌握着第一手数据和事实的人，知识分子并不接触到这些真实数据，但是他们占据着影响力，是信息接触到普通人的一个过滤器，而普通人也是社会上的大多数，其实每一个专家在他们自己的领域之外也是普通人，通过知识分子获得相关信息。这里需要注意的是，知识分子经常会根据一些时髦的观念去判断一些问题，而且他们不需要对他们所评论的事情承担具体事务的责任。然而，他们的判断，大大决定着不太遥远的未来这个社会据以采取行动的观点。</p>
<p>知识分子的特征关键</p>
<p>1、根据时髦观念去判断一些问题</p>
<p>2、不需要对具体事务担负责任</p>
<p>3、决定他们发出声音的，不是自私的利益，更不是罪恶的动机，而是一些最为真诚的信念和良好的意图。必须承认，越是受到良好的愿望和道德的引导，他就越有可能为某种声音所绑架却不自知地用引起共鸣的情感做外衣。</p>
<p>4、搬出“世界观”，根据他们本人的一般观念，与他视为现代的或进步的那幅世界画面是否相互配合，在没有真正理解问题所在时，就打算赞成某种结论，拒绝另一些结论。</p>
<p>作为专家对知识分子的态度：</p>
<p>必须承认是他们的传播让信息抵达普通公众，为了最后的目标，即使是反对某些知识分子的观点，我们不能对他们嗤之以鼻却没有顾及到他们的影响力，我们对待这些人的态度，很可能使后者在反对某些观点的路上走的更远。</p>
<p>5、他们必须是“务实的”、“敏感的”、“现实主义的”，只要他关心的是眼前的问题，他就会得到影响力、切实的成功的回报。在更具智慧的专家群体里他们会是沉寂的、哑口无言的、对他们来说远没有和普通人打交道容易。</p>
<p>6、通过普遍的谴责和反驳来保护自己不受这样的责难。</p>
<p>问：从这个角度说，为什么一个点子不会持续辉煌特别久就会被反对甚至被取代？</p>
<p>答：不仅仅因为在实践中可能发现的一些缺点会被时间放大，而且，由于之前的点子获得的重大胜利之后，留下的想象空间并比不上去反对它的方向，社会主义思想对年轻人的号召力，原因是一是因为它满足了一种合理的愿望，对技术细节和实际困难并不感兴趣（距离远），能够打动他们的是广阔的眼光，是貌似有理地把社会秩序理解成一个为计划体制提供了前景的整体。</p>
<p>对于自由主义来说，与那些知道失去自由意味着什么的国家相比，在美国这样的国家，自由的理想对今天的年轻人已经没有多少真正的感召力了。所以我们不禁会想，只有失去自由的时候，自由才会收到尊重，因此为了让自由的势力重新聚集起来，我们是不是要去经历一个黑暗的社会主义集权制度的阶段呢？答：我们要提供一种能够激发想象力的自由主义新方案。 我们要再次把建立自由社会的任务当作一次知识探险，从社会主义的成功中学习到教训，让自由主义成为一个充满活力的问题，去赢得知识分子的支持 和对公众舆论的影响力。</p>
<p>社会经济学的研究模式总结：</p>
<p>1、大麻理论，福利制度。</p>
<p>2、滑绳子理论： 你一旦开了这个头，就不可避免地走向极端。如果为了某些群体的利益而对市场进行干预的要求一旦经常得到认可，民主政府变无法拒绝它依靠其选票的任何群体的类似要求。一旦为了公众的公正观开始控制价格，这个政府会逐步走向控制所有的价格。</p>
<p>问：反对者的声音？</p>
<p>答：当你发现反对者关心的是诋毁作者而不是反驳他的论点，在做着价值判断而不是科学分析的时候，你会知道他的立场有多么的虚弱。</p>
<p>问： 为什么政治家在大多数情况下很无能？</p>
<p>答： 在现行的安排下，有地位的领袖或许敢于说“不”，而普通的代表，不能对他的大量选民的要求说“不”，无论它们多么不公正。目前的趋势是这样的，出现了越来越多这样的人，政府为他们的福利和地位承担起了无法履行的责任，当她们没有得到足够的补偿，或要求他们做的工作超过了他们的意愿的时，他们便起而反叛。 者必然会引来皮鞭和机关枪的镇压，而实行镇压的人，也正是那些曾真诚地想要满足他们的一切愿望的人。</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么我们要探索宇宙? 明明还有那么多人挨饿]]></title>
      <url>http://chocoluffy.com/2015/07/26/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E8%A6%81%E6%8E%A2%E7%B4%A2%E5%AE%87%E5%AE%99-%E6%98%8E%E6%98%8E%E8%BF%98%E6%9C%89%E9%82%A3%E4%B9%88%E5%A4%9A%E4%BA%BA%E6%8C%A8%E9%A5%BF/</url>
      <content type="html"><![CDATA[<p>随着NASA的研究越来越不受重视的今天，每一次的项目上报，都是一次对探索可能性的割舍，都是一次对民主残暴一面的体现。 或许正如文章结尾所述，我放眼探索宇宙，正因我深深地爱着这个星球。</p>
<a id="more"></a>
<p>我还记得在初中的时候有一期译文杂志上刊登了一篇文章，主要讲的正是我们为什么要去探索宇宙的问题，明明我们还有那么多的贫穷没有解决，我们地球的环境那么糟，为什么我们要放眼其他星球？现在，接着地球大表哥的发现，这篇文章也应该再次回到人们的视线中，随着NASA的研究越来越不受重视的今天，每一次的项目上报，都是一次对探索可能性的割舍，都是一次对民主残暴一面的体现。 或许正如文章结尾所述，我放眼探索宇宙，正因我深深地爱着这个星球。</p>
<p>文章总结起来几点：<br>1、太空探索通过技术极限的创新来对人民大众造福</p>
<p>2、通过改善大国之间的关系</p>
<p>我还记得两年前参加的中国地区的英辩赛决赛上，辩题大概是“government believe we should go outer space to establish permanent living spave” 记得不太清了，就是在外太空找一个永久居住地的辩题，冠军队伍的解读让我印象特别深刻，有机会我会在之后的笔记中阐述。</p>
<p>余舜哲</p>
<p>2015.7.26</p>
<p>1970年，赞比亚——这是非洲一个兵荒马乱的穷苦国家——的一名修女玛丽·尤肯达写信给NASA。善良的修女无法理解，地球上还有很多孩子需要忍受饥饿煎熬，为什么美国还要耗费数十亿美元尝试把人送到宇宙里去？</p>
<p>NASA的一名科学家恩斯特·史都林格给她回信，全文如下：</p>
<p>尊敬的玛丽·尤肯达修女：</p>
<p>你的来信收到了。我每天都会收到很多信，这一封对我的触动最大，因为它让我看到了一个富有探求精神的灵魂，一颗仁慈怜悯之心。我会尽我所能回答你提出的问题。首先，我要向你以及和你一样的勇敢修女们表达深深的敬意，因为你们将毕生精力献身于人类最高尚的事业——帮助所有需要帮助的人。</p>
<p>你在信中问我，为何我会在地球上仍有很多儿童面临饿死威胁之时建议投入数十亿美元实施火星探索计划？我想你一定不希望我给出这样一种回答——“哦，我并不知道很多孩子正因为饥饿走向死亡，从这一刻起，我会停止任何太空方面的研究，直到人类解决这个问题。”实际上，在我意识到火星之旅在技术上具有可行性前很久，我就已经知道很多孩子正在挨饿。然而，我以及我的很多同伴仍然坚信前往月球、火星以及其他行星是一种在当下值得进行的冒险，我甚至认为这项探索计划与其他很多潜在的援助计划相比能够在更大程度上帮助解决我们面临的各种严峻问题。援助计划每年都在讨论和争论，但所产生的效果却远远没有达到令人满意的程度。</p>
<p>在解释太空探索计划如何帮助我们解决地球上的各种问题之前，我想先给你讲一个真实的故事，这个故事也许有助于你了解我的观点。故事发生在大约400年前德国的一个小镇。这个小镇有一位非常仁慈的伯爵，把自己的大部分收入都用来救济镇上的穷苦百姓。这份仁慈令人非常感动，因为在中世纪，穷苦百姓实在是太多了并且经常出现全国性瘟疫。</p>
<p>有一天，伯爵遇到一个奇怪的男人。他的家里有一个工作台和一个小实验室。他白天辛勤劳作，每天晚上都会拿出几个小时在自己的实验室搞研究。他将一块块玻璃打磨成小镜片，而后将镜片安装到镜筒上，利用这种装置观察非常微小的物体。放大数倍的微小生灵尤其让伯爵感动不可思议，深深着迷，因为这是他此前从没有见过的。伯爵邀请这名男子带着他的实验设备搬到自己的城堡，成为他的一名“特殊员工”。从此，这个怪人将自己的全部精力都用来研制和改进他的光学仪器上。</p>
<p>镇上的人认为这个怪人是在研究一些没用的东西，伯爵在他身上浪费了太多钱，都感到很愤怒。他们抱怨说：“我们还在忍受瘟疫的折磨，而他却拿钱让这个男人搞一些没有用的爱好。”听到这样的抱怨，伯爵并没有因此动摇，仍坚持自己的做法。他说：“我会尽我所能帮助你们，但我仍会支持他的研究，因为我坚信他的研究终有一天会得到回报。”</p>
<p>事实证明，伯爵的话是对的。这个怪人最后研制出我们现在熟知的显微镜。在促进医学进步方面，其他任何发明都无法与显微镜相提并论。它的问世帮助人类消除世界上大部分地区的瘟疫以及其他很多种接触性传染病。如果没有显微镜，人类无法取得这些成就。在显微镜诞生过程中，伯爵投入的钱显然发挥了重要作用。在帮助减轻人类遭受的苦难方面，花钱支持研制显微镜所能做出的贡献显然远远超过单纯地救济遭受瘟疫侵袭的不幸者。</p>
<p>从很大程度上说，我们面临着类似的情况。美国总统每年的年度预算大约在2000亿美元左右，这笔预算最终花在医疗、教育、福利、城市建设、高速公路、交通运输、外国援助、国防、环境保护、科学研究、农业以及美国国内和国外的很多机构上。今年的预算有大约1.6%划拨给太空探索计划。太空探索计划包括阿波罗登月计划，很多涉及到天体物理学、空间天文学和空间生物学的小规模计划，行星探索计划以及与地球资源和太空工程学有关的计划。为了实施这些探索计划，每个年收入1万美元的美国纳税人每年需拿出30美元，余下的9970美元用于各种生活开支、休闲娱乐、储蓄、其他花销以及其他税赋。</p>
<p>你也许会问：“为什么不从每个美国纳税人缴纳的30‘太空美元’中拨出5美元、3美元或者1美元，援助忍受饥饿的儿童呢？”为了回答这个问题，我必须向你简要解释一下美国的国库如何运作。美国的情况与其他国家类似。美国政府由很多部门和机构构成，例如内政部、司法部、卫生教育与福利部、交通部、国防部、国家科学基金会、国家航空航天局（宇航局）。所有这些部门和机构都要根据自身承担的任务制定年度预算，每一笔预算都要受到国会委员会的严格监管，都要承受来自预算局和总统的压力。国会划拨后，各部门和机构的预算只能用于预算案上列出和政府批准的项目。</p>
<p>宇航局的预算只能用于与航空航天有关的探索计划。如果国会没有批准这笔预算，宇航局便无法从其他渠道获得所需的资金。他们不可能直接从纳税人那里筹集资金，唯一的方式就是其他预算提出追加请求并获得批准，宇航局方可获得这笔并非用于太空计划的资金。听完我的介绍，你应该已经意识到援助遭遇饥荒的儿童或者美国的其他对外援助项目都必须递交用于这些项目的预算请求，经国会批准后方可拿到资金。</p>
<p>你如果问我，我个人是否赞同政府采取援助措施，我的答案无疑是“赞同”。我完全不介意每年多交一些税，用于帮助忍受饥饿煎熬的孩子，不管他们身处何地。我相信我的所有朋友也是相同的态度。不过，我们不会为了实施这样的援助项目而停止火星探索计划。我甚至认为通过实施太空探索计划，我们能够为解决地球上的饥荒和贫困等严峻问题做出更大贡献，最终帮助找到这些问题的解决方案。</p>
<p>解决饥荒问题首先要着眼于两件事情，一个是粮食生产，一个是粮食分配。在世界上的一些地区，农业种植、畜牧业、海洋捕捞以及其他大规模食品生产活动都拥有很高的效率，但其他很多地区的效率都很低。如果在流域治理、肥料使用、天气预报、土壤肥力评估、作物种植规划、农田选择、种植方式、耕种时机选择、作物调查以及收割计划等方面采取更为有效的技术和举措，我们便可大幅提高粮食产量，进而帮助解决饥荒问题。</p>
<p>毫无疑问，改进粮食生产的最理想工具就是人造地球卫星。人造卫星在高空环绕地球飞行，能够在很短的时间内对面积巨大的陆地区域进行研究，观测大量能够揭示农作物、土壤、干旱、降雨、积雪情况的因素，而后将数据传给地面站。据估计，即使一颗最为简单的地球卫星也能为一项改进全球农业生产的计划做出不小贡献，让作物的年产量大幅提高，带来数十亿美元的收入增长。</p>
<p>与粮食生产相比，将粮食分发给贫困地区是一个完全不同的问题，这个问题不仅涉及到交通运输，同时也涉及到国际合作。在接受大国提供的大批粮食援助时，小国的领导人可能产生担忧情绪，担心大国在提供援助的同时也对外输出了他们的影响力。在我看来，在减少国与国之间的隔阂前，我们不可能实现有效的粮食援助计划。同时，我也不认为太空探索计划能够在一夜时间取得这一成就。不过，太空探索计划却是最有效的方式之一，帮助解决这个问题。</p>
<p>还记得当年死里逃生的“阿波罗13”号飞船吗？在“阿波罗13”号即将重返地球大气层时，苏联关闭了境内所有与阿波罗计划频带相同的无线电通讯，以防止出现任何可能的干扰，同时派遣船只前往太平洋和大西洋海域，必要的时候执行紧急救援行动。如果搭载宇航员的返回舱在一艘苏联船只附近溅落，苏联人一定会像对待本国宇航员一样，对他们提供帮助。如果苏联宇航员也遇到类似的紧急情况，美国人也会出手相助，这一点毋庸置疑。</p>
<p>通过卫星监测和评估提高粮食产量，通过改善国际关系改进粮食分配，这还只是太空探索计划如何对人类生活产生深远影响的两个例证罢了。除此之外还有两个具有代表性的例证——促进技术进步和提高一代人的科学素养。登月飞船需要拥有极高的精确性和可靠性，在工程学发展史上，登月计划在这两方面取得的成就都是空前的。为满足这些要求，科学家研发了相关系统，这些系统为我们研发新材料和新技术提供了一个前所未有的机会，允许我们发明出更出色的技术系统和制造工艺，延长科学仪器的寿命，发现此前未知的自然定律。</p>
<p>实施阿波罗登月计划过程中掌握的科学知识同样也可用于研发在地球上使用的技术。太空探索计划每年孕育出大约1000项技术革新。这些技术革新大幅提高了人类的生活质量，帮助我们研制出性能更卓越的厨房设备、农场设备、缝纫机、无线电设备、船舶、飞机、天气预报和风暴预警系统、通讯设备、医疗设备以及其他日常生活用品。你可能会问，我们为何首先为登月宇航员研发生命支持系统，而后才为心脏病患者研制远程体征监测设备？答案很简单。在解决技术难题过程中取得的重大进步往往不是通过一种直接的方式，而是首先设定一个具有高度挑战性的目标，通过激发强大的动力促进技术革新，点燃科学家的想象力，促使他们尽自己最大可能完成设定的目标。这种方式就像是一个催化剂，催化出连锁反应。</p>
<p>太空飞行无疑扮演着这样的角色。火星之旅虽然不能直接帮助解决饥荒问题，但这项探索计划孕育出的很多新技术和新方法所能给人类带来的益处将远远超过所付出的成本。如果我们希望改善人类的生活质量，我们就需要研发各种新技术，需要继续进行科学研究，了解和掌握我们尚未获得的知识。我们需要进一步研究物理学、化学、生物学和生理学，需要在医药研究的道路上继续前进，战胜各种威胁人类生存的挑战，例如饥荒、疾病、食品和水污染以及环境污染。</p>
<p>我们需要更多的年轻人将科学研究作为毕生的事业。我们需要为科学家提供各种帮助，让他们充分发挥自己的聪明才智，在研究过程中取得丰硕成果。我们必须设定富有挑战性的研究目标并为研究计划提供充分支持。太空探索计划涉及到一系列引人注目的研究，例如对卫星和行星进行研究，对高深的物理学和天文学以及生物学和医学进行研究。它就像是一个完美的催化剂，能够在极大程度上促进科技进步。通过实施太空探索计划，我们得以拥有一系列令人兴奋的机会，观察神秘莫测的自然现象，研发各种新技术和新材料。</p>
<p>在美国政府指导、监管和提供资金的所有活动中，太空探索无疑是最引人注目同时也最能引起讨论的活动，虽然它的预算只占美国总预算的1.6%，GDP的3‰。太空探索是孕育新技术和促进基础科学研究的催化剂，所能起到的作用是其他任何活动无法比拟的。从某种程度上说，太空探索对人类社会产生的深远影响甚至超过几千年来的战争。如果国与国之间不再进行研制轰炸机、火箭等武器的军备竞赛，而是在太空探索领域展开竞争，人类便可免遭很多苦难。这种竞争能够孕育出各种令人兴奋的成就，失败者也不必遭受痛苦命运，更不会制造仇恨和新的战争。</p>
<p>我们实施的太空探索计划虽然让我们远离地球，将目光投向月球、太阳、其他行星和恒星，但太空科学家最关注的仍旧是我们的地球，而不是这些天体。太空探索的终极目标是建设更完美的人类家园，探索过程中获得的所有科学知识以及所研发的所有新技术都将用于改善人类的生活质量。</p>
<p>随信寄出的照片是1968年圣诞节期间由“阿波罗8”号宇航员在环绕月球飞行时拍摄的，展示了我们的地球家园。在太空探索计划迄今为止取得的众多成就中，这幅照片可能最具有象征意义。它让我们意识到地球是怎样一颗美丽的星球。如果将无边无际的宇宙比作一个海洋，地球就是这个海洋中最美丽最宝贵的一座岛屿，是我们唯一的家园。在此之前，很多人并没有意识到地球的美丽与脆弱，更没有意识到肆意破坏生态平衡将给地球带来怎样的危害。在这幅照片第一次对外公布之后，号召人们警惕人类面临的各种严峻问题和挑战的呼声越来越高，例如污染、饥荒、贫困、城市生活、粮食生产、水资源管理和人口过度增长。拍摄这幅照片时，人类刚刚进步太空时代，也是第一次从太空观察我们的星球。公众对上述问题关注度的提高显然与太空探索计划有关，而非一种偶然。</p>
<p>太空探索为人类提供了一面审视自己的镜子，同时也孕育出一系列新技术。太空探索取得的成就增强了人类的信心和进取精神，让人类相信自己有能力解决面临的各种严峻考验和挑战。在我看来，人类通过太空探索取得的成就充分印证了“非洲圣人”阿尔贝特·施韦泽的那句名言——“我忧心忡忡地看待未来，但仍满怀美好的希望。”</p>
<p>献上我最真挚的祝福，永远祝福你和你的孩子们。</p>
<p>随信一并寄出的，还有当时新鲜出炉的、由阿波罗8号在月球轨道拍摄的第一张地球照片，也就是你所看到的本文题图，美国天文学家将之称为“一粒悬于阳光底下的蔚蓝微尘”，而乔布斯的人生格言“Stay Hungry，Stay Foolish”也源于此。</p>
<p>如果你喜欢这篇文章，欢迎转发或转载。更多人的检阅与讨论，是对文字最好的洗礼。</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一派胡言[第二期]-关于功利主义]]></title>
      <url>http://chocoluffy.com/2015/07/18/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80-%E7%AC%AC%E4%BA%8C%E6%9C%9F-%E5%85%B3%E4%BA%8E%E5%8A%9F%E5%88%A9%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>一个人的感官感受究竟是不是人生最重要最根本的东西？</p>
<a id="more"></a>
<p>💣诺奇克反对 “功利主义” 所提出来的例子：经验机器， 如果进入这个机器可以满足我们任何的欲望，那么效益主义者会毫不犹豫地跳进去； 重点： 一个人的感官感受究竟是不是人生最重要最根本的东西？</p>
<p>进去这个机器其实是一个价值判断， 看出我们对待生命的立场。问题在于， 效益主义者中看待人的方式， 是否最有效的反应了我们对生命的体会， 是否值得我们去追求。这其实和政治经济学很相关， 每一种理论， 都希望提供一个立足点去平谷我们的制度和实践， 从这个立足点的角度看， 得出的制度便是合理公正的， 但问题在于， 这个立足点在哪里？是否站得住脚？读政治的人， 管政治的人， 总会问什么是理想的政治安排， 而这种政治， 又须重视一种什么价值？有人会说， 重视人权， 但一旦重视人权， 就似乎变回去到一个非后果论的模式；这种重视又会带来什么结构。政治哲学困难的地方， 就是在于它要求我们对人和社会有相当深入的了解和反省。</p>
<p>adaptive preference, 也就是说， 人们的喜好也是受到环境的影响的；就像这个论点可以应用在那些认为国家权利比人民权利还要重要的地方， 原因是因为统治者不给人民权利； 而在这种情况下， 我们怎么样看清真的喜好还是adaptive preference；</p>
<p>💣反驳功利主义的观点</p>
<ul>
<li>康德： 人为目的本身， 而不是手段</li>
<li>除了整体效益， 还有独立于后果的价值， 而这些价值不能也不应该简单地化约到单一的价值（一元价值伦）， 追求效益和欲望的满足， 并非人生的全部</li>
<li>后果论式的观点</li>
<li>选择进入机器， 某种程度上， 意味着接受机器安排给你的生活， 但这样一来， 还可以说， “命运在你手”吗？世界上还有很多你没有挖掘过的经验， 你不曾知道的结果， 一些美妙的意外。</li>
</ul>
<p>你想去做这件事， 但不能马上去经历它； 因为经验机器的核心， 也正是很多人误解的部分就是， 你想去做这件事， 就能去体验它。但是很多人误解为简单的快乐和囚禁， 这样子的定义在语言指向上也分出了高低。所以我认为最贴切原文的反方是， 你想去做这件事， 但不能马上去经历它。  你只有给出了这个论点的理由也能说明为什么你不想进去经验机器。而理由之一是， ？</p>
<p>或者为了避免偷换概念的倾向， 如果我们说， 你已经在了经验机器里面， 你可以经历任何你希望经历的事情， 那么在这个时候， 你是否愿意回到一个更加痛苦的世界？</p>
<p>💣不同的价值， 不能化简为一， 也没有一个公共比较的尺度。期望以一条公式， 去简化生命中种种的复杂境况， 是理论的傲慢， 而不是现实的错。</p>
<p>💣效益主义和民主制度的区别： 在效益主义者眼里， 符合多数人利益的选择也具有道德上的正确性， 但是民主制度并没有这么要求</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[祝福大圣归来]]></title>
      <url>http://chocoluffy.com/2015/07/14/%E7%A5%9D%E7%A6%8F%E5%A4%A7%E5%9C%A3%E5%BD%92%E6%9D%A5/</url>
      <content type="html"><![CDATA[<p>懂得去欣赏赞同一样作品， 也懂得去冷静地反思公然的狂热。</p>
<a id="more"></a>
<p>懂得去欣赏赞同一样作品， 也懂得去冷静地反思公然的狂热。 大圣归来口碑的持续发酵过程中一个密不可分的因素， 是国人心底对国产动画压抑很久了的自尊心和英雄情结。</p>
<p>如果你能理解在广州恒大踢进了某某决赛时身着红衣， 高举红旗， 今夜我们都是广州人口号的感觉； 如果你能理解当母校在某某国际比赛某某高考上赢得荣誉声誉时那刷遍社交圈的感觉…那么你或许就可以多少感受到， 在一部燃血的， 情绪化的英雄身上， 一击击倒暗势力， 满屏荣光是有多值得骄傲； 并不是说这种情结是褒是贬， 而是这种或许带着浪漫眼睛去审视一个作品的时候， 在多大程度上会高估这个作品而忽视作品本身的细节意图和用心。</p>
<p>暂且不讨论，或者往后再讨论如何展现一个英雄主题的作品， 毕竟， 以少儿动画、合家欢动画为主打消费市场并制作的动画， 评判标准和以故事情节制胜的作品又不一样， 考虑到导演还因为时间约束被迫剪去30分钟的故事， 也应对情节紧凑方面多宽容相待。</p>
<p>我觉得我们更多地去看到， 这部电影在动画设计细节上， 在配乐情景和谐上取得的成功。 我还记得我在看到时候， 有几个场景的冷暖色调配得真的好看， 时不时加进来的古筝音和一些唱戏的部分都有让我觉得惊喜。其实难不是因为导演如何去使用去添加这些中国古典元素， 而是难在你这么做了之后怎样让消费市场买单。</p>
<p>祝福大圣归来， 也祝福所有几年磨一剑， 那些已经“稀罕”但是无比珍贵的中国动画制作者！</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[公众号[海贼梦]的诞生日记]]></title>
      <url>http://chocoluffy.com/2015/07/03/%E5%85%AC%E4%BC%97%E5%8F%B7-%E6%B5%B7%E8%B4%BC%E6%A2%A6-%E7%9A%84%E8%AF%9E%E7%94%9F%E6%97%A5%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>The world is made up by the people who are not smarter than you.</p>
<a id="more"></a>
<p>我也有想过， 究竟我为什么要去申请个公众号。是为了好玩吗？有可能， 毕竟我也是一个贪玩的人； 我最近自己搭建的一个网站也准备上线了， 是一个模仿twitter式的平台， 我的本意其实是想在这个公众号里面和平台一起互动， 满足移动端的需求。但是当我认认真真地做在电脑前， 看着申请公众号的界面， 准备给自己的公众号起一个名字的时候，<br>我犹豫了。</p>
<p>我希望取一个好听的名字，至少是有那么点意义的名字。</p>
<p>我不希望对这个公众号太肤浅， 渐渐地， 我觉得， 我对这个地方有了期待， 一种你说不出的沉甸甸的感觉。我觉得自己挺感性的虽然身为一个cs学生，喜欢海贼王， 那种与伙伴并肩战斗的感觉， 喜欢新闻编辑室， 传统媒体在面对各种改变和挑战时那种高贵的英雄主义， 喜欢巴萨， 血统里优雅的足球艺术， 喜欢唐吉柯德， 没有从梦中醒来的骑士…</p>
<p>好吧， 这一次公众号又给我了一次装文艺的机会是吗？一直以来， 我觉得我看过挺多很优秀的文章， 因为它们的反驳的观点， 因为它们思考的犀利与与众不同， 我有一种想分享的冲动…但其实在现在这个环境， 分享这个词， 更多的是一种娱乐， 一种自尊心攀比的竞赛， 一种用喜怒哀乐装点自己的情绪化的世界。但其实仔细想一想， 微博微信这种平台本身传播信息的形式也在很大程度上决定了这个平台上的内容呢…不过这有点离题了， 我所期待的分享， 和我所见识到的有效率的分享， 是， 有点像知乎、豆瓣我觉得这些都挺好的， 的确知乎和豆瓣都在做商业过渡用户也都良莠不齐， 但我必须承认的是， 我见过在这些平台上面很认真的回答， 很有态度的教程和文章， 在之后有些什么问题的时候也都去这些地方找过。其实并不是说我在看到这分享的时候真正学到了什么， 而是我在看他们的某些回答或是讨论的时候， 被某些观点启发到了， 让我有了另一种角度思考的可能。</p>
<p>或许是希望加入讨论， 或许仅仅是因为他们讨论的东西是我感兴趣的， 我会在这些角度去看更多的文章， 去做更多的准备和思考， 也因此得以有所进步。</p>
<p>你愿意去做，比你真正做了什么， 重要而且可贵了太多。</p>
<p>也就这样， 我给我这个公众号起了一个很俗气的名字哈哈， 海贼梦， 因为这个公众号的诞生和现实， 和实际没什么关系， 我想要达到的， 就和我在内容简介里面写的一样： 因为大家在一起， 为了各自的梦想， 努力着…</p>
<p>我希望能够真正成为一个problem solver， 一个能够解决问题， 思考问题的人，在我这方面，我会为大家收集我认为有价值的评论， 或者我自己写的文章；当然如果你有任何对文章的观点， 我都希望知道， 联系我， 无论通过微博还是微信平台。</p>
<p>最后留下对我很有意义的一句话， 原句的意思我记得可能不太清楚了， 来自 steve jobs:</p>
<p>The world is made up by the people who are not smarter than you.</p>
<p>一起加油!</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我们需要什么样子的理想主义?]]></title>
      <url>http://chocoluffy.com/2015/04/16/%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%E7%9A%84%E7%90%86%E6%83%B3%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>任何话语都需要一套非话语的机制支撑才能得以运转。</p>
<a id="more"></a>
<p>1、或许是因为稀缺和依赖，人们才会关心资源的分配和归属，才出现各种所有制，和与此相关的规则。而令我感到好奇的是我接下来的联想，如果，社会的资源达到一定的富足，(也正如我们一直发展的方向一样)，我们会不会不需要法制这种规则了呢，就像一个生活在热带雨林里的人没有对“雪”的依赖，也因此没有必要有“雪”的概念一样。</p>
<p>［可是此处暴露出一个问题，法律到底是指向：应该是怎样，还是描述是怎样的呢？就我的个人观点而言，法律是应该是怎样的体现，是展示一种历理想的社会状态，而不是必然在描述现实，因此上述的陈述有偏颇］</p>
<p>2、福柯曾指出：任何话语都需要一套非话语的机制支撑才能得以运转。而我对这句话的理解是：因为这些非话语的，实物的，institutions 的存在并被广泛认可，使得基于此的话语有了现实的基础，才因此有了意义。就像作为一个法律概念，首先要凝聚一种社会共识，并在这个意义上达成一个具体的“社会契约”，这种社会建制是任何基于该现实的话语，或者说人们商讨的规则，的一个基础。中国法学界有人反对法律移植这样一个命题，但其实很多时候，这是一个纯粹虚无的命题，一个社会的生产，生活，组织和治理方式的改变，会要求新的社会规则，也会因此产生新的法律。 举个例子，如果一个社会的生产方式还是牧业，那么很可能不动产就不那么重要； 如果是自给自足的农业经济，没有也不需要商品交易，那么合同法很可能就不会产生，就不会有现代意义上的消费者，就不会需要有产品责任法 ，或者是消费者权益保护法，银行法，金融法等等，如果中国社会的构成还是以家庭为主的小型社区，就很难真正出现普遍的公民权利。</p>
<p>3、同时还有一个隐含的问题： 当法律移植，或者用另一种方式说依照社会的变革来翻新并扩充法律，成为时代的期望，也就是成为社会大多数人的选择，这非常容易导致一个结果，我在这里称之为slippery rope theory, 对这个理想的追求就很容易排斥对理想可能性的探讨，而这个理想，也很容易变成一种意识形态话语的喧嚣。 只要过河的目标呗明确了，被认为是正确的，那么如果你还要谈“桥”和“船”的问题，指出其中的问题和难度，那么你就可能是在变相反对或者是被认为反对过河，有可能给革命人民的热情泼了冷水，就是保守派，就是危险思潮，这也就是为什么我想称之为slippery rope的原因，就像一根很滑的绳子，当你非常用力的拉，暗示着社会上大多数人的认可和热情，时，非常容易发生的事情就是，你拉去了绳子的另一边，反而达到了反效果而不自知，你非常努力，却不知道办了与预料不同的事。这也让我想到不久前柴静姐姐发布的关于雾霾的调查，我还清晰的记得，在看完那个发布会后，我是真心的热血沸腾，但我也马上意识到了这种一股脑的冲动，我很快就在我的日记本上写下：</p>
<p>越情绪激动就越不能做决定。</p>
<p>我也有跟踪之后发生的事情，真的其实网络上的争论就实在是偏的太过了，我个人的观点是：一、我不希望接下来的两会被公众的舆论绑架，然后一股脑的聚焦在雾霾而忽略了其他同样值得关注的议题； 二、我希望那些喜欢和支持柴静姐姐的人也要冷静地接受质疑柴静的声音，不然和那些一股脑就反柴静，就人身攻击柴静的人有什么区别。或者换句话说，我们需要的是看清事实的理想主义者，脚踏实地的理想主义者； 那种被热血绑架，选择性忽略，自我强化和膨胀的“理想主义”，只不过像slippery rope一样，滑去绳子的另一端罢了。</p>
<p>哈哈我联想的东西有点多哈，不过这些都是我真心的想法，我本人也挺喜欢和支持柴静姐姐的，从她的发布会中，我们可以很清楚的看到，她并没有仅仅止步于布道者的角色，仅仅讨论雾霾治理的必要性，而且她还深入分析了治理的可能性和一系列技术实操的问题，这是很打动我的地方。</p>
<p>今天就写到这吧，睡前40分钟读书有感，一个工程狗的文科感化之旅吖哈哈，未完待续，其实一直有一种潜意识，感觉各个领域的思维结构好相似，如果没有信息不对等，如果人脑的处理速度能再快一点，(不过很快就会了)，会不会我们可以推导出另一个领域的布局？哈哈，世界晚安</p>
<p>余舜哲</p>
<p>2015.4.15</p>
<p>伯克利</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[伯克利的秘密[上]-梦想的火光]]></title>
      <url>http://chocoluffy.com/2015/03/30/%E4%BC%AF%E5%85%8B%E5%88%A9%E7%9A%84%E7%A7%98%E5%AF%86-%E4%B8%8A-%E6%A2%A6%E6%83%B3%E7%9A%84%E7%81%AB%E5%85%89/</url>
      <content type="html"><![CDATA[<p>我觉得我应该也必须记录下我在这里的每一次受触动的时刻。</p>
<a id="more"></a>
<p><img src="https://d13pix9kaak6wt.cloudfront.net/background/ucberkeley_1354055417_39.jpg" alt="Berkeley"></p>
 <blockquote class="blockquote-center">只是有些人把它当作废话，有些人把它当作整个世界。</blockquote>

<p>为什么伯克利是伯克利：</p>
<p>1、megan 纯数学 纯数学很美</p>
<p>在cs61a的课程上，我的一个搭档叫megan，一个很阳光的，有点胖嘟嘟的美国女生，在小组讨论的时候，我们提前做完了就开始聊天。她问我是什么专业的，我说：应用数学。 她很兴奋地告诉我说她是学纯理论数学的pure math，她痴痴地说着，pure math is amazing 她那眼神像是发光一样。 那一刻我怔了一下。 毕竟我也曾经修过好几门数学分析类的课程，我清楚虽然从最终成绩上来看我是擅长这几门课程的，可是我自己心里清楚，我并不喜欢，那一刻，我不知觉地回答她：i am fed up with it. 我至今仍可以清晰地记得，megan她当时嘟起来的嘴，然后不是很开心地和我说：don’t say it, come on, you can feel it, it’s beautiful. 我陷入了沉默。 或许我体会不到她对纯数学的热情，但是我很清楚那种一团火焰积在胸口，对每一个任务充满力量的那种感觉，梦想的激情会让人专注，而专注让我们更加接近创作的本源，让我们诞下我们的作品。几年之后，我或许会忘记她说的这些话，但是她那个坚定的表情，我那时恍然的时刻，我一定会记住，那一刻，好神圣。</p>
<p>2、warehouse 技术就是信仰</p>
<p>我最近参加了一场facebook赞助的hacker meeting，虽说是hacker，但实际上都是从伯克利走出去的学生，其中有些还是大二就辍学去创业的师兄。 其中最引人瞩目的就是warehouse，一个由就是上面提到的那个，大二辍学生创办的公司，制作社交化的耳机，用于更方便地分享音乐和记录音乐，实现方式仅仅是在耳机上敲击几下，［注：我最近注意到国内的山寨品igene也在京东上众筹］。他分享他做社交耳机的故事，他特别喜欢硬件设计，他和我们分享他这个想法的由来，特别认真，去追随心中的声音，去梦想，去创造。我能感受的到在场是那么那么的安静，我想到了一个地方，是的，那是教堂。经常接触到所谓鸡汤式成功式的文字很容易让我们武装，失去了对这些微小而神圣的声音的感触，你会发现，创造，去让你擅长的技术改善你周围的世界是那样的唾手可得。那一晚，我第一次看见并亲自试了虚拟现实的头盔，体验用来开车的无线手套，轻敲一下耳机就能知道周围人听什么歌的warehouse。 一个仅仅只比我大2岁的师兄，在台上好像一个小孩子一样说着it’s so cool… do some cool shit!!…follow your passion… 在我最喜欢的领域，我看到了我同龄人的专注和努力，看见了他们的思考和付出，再一次，我看见了被攥紧的梦想。是的，或许梦想这个东西真的很简单，就是那个在你口里酷炫屌炸，让你无比兴奋和快乐，而在别人看来可能只是说：哦 的一句话，一个震撼感动的场景，一个连接世界的使命，一个想让世界向好的那面改变一点点的愿望。 只是有些把它当作废话，有些人把它当作整个世界。</p>
<p>[未完待续]</p>
<p>2015.3.29春假最后一天</p>
<p>余舜哲</p>
<p>伯克利</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 伯克利交换 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[光荣与梦想－寄陈虻]]></title>
      <url>http://chocoluffy.com/2015/03/26/%E5%85%89%E8%8D%A3%E4%B8%8E%E6%A2%A6%E6%83%B3%EF%BC%8D%E5%AF%84%E9%99%88%E8%99%BB/</url>
      <content type="html"><![CDATA[<p>创造是一个很浪漫的事情， 但大多数人忘记了下一句， 创造也是很具体的事情， 一个团队不仅仅要灵异奔放，还要勤勉老实。陈虻很反感媒体人利用自己手中的媒体来行公众表白自己的辛苦， 我认为干什么都不容易， 选择了一种工作，实际上就选择了一种生活方式。 因为热爱我们选择的这种职业。</p>
<a id="more"></a>
<p>1、一个完全不同的结果， 一定有一个完全不同的过程，你不改变这个过程就改变不了这个结果。</p>
<p>2、采用新的结构方式， 把最新的新闻时事镜头与过去的历史镜头平行剪接；</p>
<p>3、陈虻笔记里密密麻麻纪录的不是论点， 也不是论据， 而是从论点到论据的过渡段。我认为，其中一个很好的方法是， 记录下抽象的从论点到论据的推演过程。</p>
<p>4、人必须增加一个往回看的坐标， 人快死的时候最重要的是什么呢， 每个人也许都不一样，可能是年轻的时候喜欢的一个姑娘， 这都没关系， 反正是特个人， 特情感的东西。社会化的评价标准到那个时候就不起作用了。</p>
<p>5、东方之子， 焦点时刻， 之间的生活空间。 东方之子偏重的是名人的访谈，而焦点时刻偏重的是大事。生活空间以纪实的手法跟拍老百姓的故事， 纪录片的手法，</p>
<p>6、生活空间的目标曾经改变过， 从之前的“人文教化”到之后的“在飞速变化的社会背景下， 实现人文关怀，为未来留下一步由小人物构成的历史。”但是遇到的困境是， 人文教化的主题很狭窄， 在有限多次的实践和总结之后会到达一个极限。对平凡人生活的观察和提炼最终不过那几点， 在拍摄一个普通人的时候， 我们总希望在这个普通人身上看到有价值的东西，这个有价值的东西提炼升华起来无非就是人生的哲学， 生存的哲学， 拍不同普通人的生活虽然不一样， 任务不一样， 但人们的困境是相似的，结论是相似的。 其实我们对生活态度和生活哲理的认识是有限的， 尽管它锁承载的人和生活不一样，但是它最终表达和传递出来的东西是相同的或者相似的， 是在重复已经做过的事情， 只不过是越做越精细，从这个人换到另一个人身上，这个节目再这么做下去， 就没有存在的意义了。 在我们讲述了上千个故事以后，我们的这些“道理”正在逐渐演化成为一种抽象的讲话的教条， 脚镣。</p>
<p>再说了， 这些被先入为主的“道理”， “价值”， “意义”， 是不是从另一个角度来说， 也是一种教条呢。而我们一直去刻意追求， 去模仿这种形式，是不是在另一种意义下是加深这种刻意的影响。</p>
<p>7、一个有深刻见解的人， 不仅仅是因为他敏锐的思维方式， 还是因为， 他的体验。因为一个人对一件事的深入了解，会让他看见困境， 而他面对这个困境的处理方式， 就是他的哲学， 那些聪明的， 有创意的解决办法，我们称之为智慧。</p>
<p>8、如何解决6所提出的问题呢？ 去寻找一个变化的点， 因为人文关怀总是有一个限度的，但是如果我们能找到那个一直在变化的那个点， 我们就会一直遇到新的问题， 看见新的挑战， 也因此得到生生不息的力量。陈虻给出的方式是：在飞速变化的社会背景下， 实现人文关怀， 为未来留下一部由小人物构成的历史。 “结合社会背景，纪录历史”，这是他的答案， 纪录历史， 要求更进一步的客观， 要求更少个人价值观的强加， 在因为社会变化的动态为节目的出路给出了一个持续的方案。“去反应这个社会的风气， 去反应这个时代的风貌”， 其实我认为，在难度实现上， 会比需要强调人文价值抒发的版本简单，但这个方式的难度在于：你想怎样去纪录历史， 为什么采用这个素材， 生活的多面性，社会的多层解读注定了这种叙事方式不会是chronical那样的， 更多的是平行的， 是发散的， 而在这个逐步筛选素材， 聚焦的时刻，又是怎样主观的力量加以介入呢。 感觉又回到那个经典的问题：为什么我们要纪录历史？ 以及怎样才算最真实？ 最正确的历史？什么才是客观？</p>
<p>［我和王雁泽：客观是大部分人认可的主观想法］</p>
<p>9、我和陈虻还挺默契的， 他接着回答了我在8中提到的问题， 他的解决方案是， “目击者的态度”，“关怀的态度”， “对历史的态度”，也是拍摄者本人的应具备并传达感染给观众的一种生活态度。</p>
<p>10、 伴随着危险一起出现的是，巨大的机会。</p>
<p>我们说专制的领导很容易发生独裁，但其实， 更准确的表达应该是， 更容易发生独裁而已， 因为专制的各种特点，使得它更容易滑向独裁的方向， 但其实， 这不是绝对的， 专制同样意味着高度的集中力， 以及与之而来的高度的执行力，所以我其实倾向的还是， “开明的专制主义”－ 可能是受苹果的感染吧， 哈哈。 只是民主的社会更容易趋向大部分人的幸福， 而已，依靠每一个人对自己利益的发出诉求， 比依靠一个开明的君主， 区依靠一个持续不变的高尚灵魂好像更可靠一点。 而这，也就是它们之间唯一的区别。 在更多情况下， 民主和专制更多时候， 只是标签而已， 而标签也只是起到标签的作用。 不要相信人性，要去具体的环境， 去到具体的利益纠纷中去观察，那里才有我们赖以生存的真相。</p>
<p>11、接着就继续讲陈虻的“目击者的态度”， 以一个亲人的角度去读着一本书， 放弃所谓的责任感，放弃对文化的深层思考， 像朋友和亲人一样， 去关心你的拍摄对象， 你也因此可以看到最真挚的责任和最深刻的批判。“无为而无所不为”</p>
<p>12、创造是一个很浪漫的事情， 但大多数人忘记了下一句， 创造也是很具体的事情， 一个团队不仅仅要灵异奔放，还要勤勉老实。陈虻很反感媒体人利用自己手中的媒体来行公众表白自己的辛苦， 我认为干什么都不容易， 选择了一种工作，实际上就选择了一种生活方式。 因为热爱我们选择的这种职业。</p>
<p>13、电视纪录片要利用观众的感性到场， 达到理性到场。</p>
<p>余舜哲</p>
<p>2015.3.26</p>
<p>伯克利</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
            <tag> 读书笔记 </tag>
            
            <tag> 公众号文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[On Vision]]></title>
      <url>http://chocoluffy.com/2014/11/27/On-Vision/</url>
      <content type="html"><![CDATA[<p>I have been haunted with the question that what defines the gap between visions and reality. </p>
<a id="more"></a>
<p>recently, there is an internet forum host in China and a lot of celebrity have attended such as Ma Huateng, Jack Ma, Li Yanhong and as on. they are the leaders of the most successful internet companies in China-BAT and they arrest the world’s attention. in the forum, they share their views on the future of technology and internet. some say there will be no internet at all in the future, for every items around you can exchange data and display information through electric wave and therefore “internet” as a word specifically for the place to load into the internet becomes pointless because everything is already in it. some say we will embrace a multi-screen world, the curved, pliable ones will reign popularity. some points out the privacy…</p>
<p>we witness a lot of insights and opinions and what on earth is the right one, or to be more generally, which is more likely to be the future?</p>
<p>vision is the kind of thing that everyone has access to despite identity, age and even knowledge. the illiteracy can also raise they voices on other things and to some extent we can say they are uttering they visions. but what distinct the vision from the ordinary and extraordinary is that the extraordinary is obsessed with what he expressed. he is totally allured by the world he depicted in his mind, and he would therefore promote, spread and try it. </p>
<p>such passion and the attempt to make it happen are the difference.</p>
<p>those who are separate from the area may possibly raise some innovative points because of the unconstraint mind but the what eventually determined whether or not it is really possible is the people inside the area. one must have professional insight to create professional product. we cannot expect a chef to craft a ten-storey castle unless it is made of chocolate:) rather, an real amazing work can be made from the architect who is also skilful in cooking and thoughtful enough to apply cooking skills. the ability to express one’s passion and vision and the ability to arrest the similar minds are the two pillars for successful leadership.</p>
<p>it also dawned on me that in the last of steve jobs’ life, he said to tim cook: from now on, do not think what jobs would do if he is alive, but lead the company as you think… it is a touching sentence and is filled with wisdom. steve jobs indeed is the most honourable and outstanding leader in out times- a truly maverick mind. but what disgusts me is the disbeliefs and rumours that the apple empire no longer exists and those investors who claimed to short apple’s share. and unfortunately, the apple’s share plunged by 20 billions. i am upset about the steve’s death but i also know for sure that the success of apple company is never the result of steve’s own efforts, but the mass innovative mind power from its creative employees. and one of the best things steve did is that he focus all the remarks and labels on himself. not letting outsiders know who create the ipod or iPhone or iPad but only know the steve jobs isolate and protect his innovative employees from ferocious criticism. after all, what thwarts the brightest is the disbeliefs. and steve determined to undertake all criticism on his shoulder(indeed with praise but steve is not the kind of person who brag on one’s achievements right). he believe in his vision and persuade others to believe in it and eventually it become our’s. </p>
<p>“to the genius” is, if i remember correctly, one of the advertising apply company used to promote iPod. steve said: those who are crazy enough to think that they can change the world are the ones who do.</p>
<p>O’capital, My capital!</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[想你的第一天]]></title>
      <url>http://chocoluffy.com/2014/11/15/%E6%83%B3%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      <content type="html"><![CDATA[<p>Be mature, but interesting!</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1f0ehl10e6fj20vd0qetgv.jpg" alt="思念"></p>
<p>很多时候明明要求自己写日记，却总是可以被各种理由来搅局……</p>
<p>现在好怀念当时在高一的时候，可以全身心投入的那种感觉，我直到现在还没有再有过。</p>
<p>昨天，让我遇见了你……其实我们认识很久了吧……不过我发现我会留意你的一切，你的lofter，你的微博和微信……</p>
<p>我希望成为一个成熟而有趣的男生，在我下定决心的那天，去香港找你。</p>
<p>最近发生了好多好多的事呢，刚刚结束的igem大赛终于如愿拿到了国际金奖，不过回来就傻眼了哈，一大吨的作业等着你……下周就要期中考试了，加油！</p>
<p>一直以来，我发现有一个规律和适合我，越是专注，就越幸运。</p>
<p>感觉最近被身外事骚扰的有点多了，每一个被荒废的时刻都会成为未来的缘因，be a interesting man， 其实是很高的要求呢！</p>
<p>我不擅长的事：</p>
<ul>
<li><p>时间管理，永远不要让自己的欲望代替理性做选择；还有还有啊，为了追上她，为了那个圣地，动力啊啊啊；</p>
</li>
<li><p>情绪管理，爱憎分明是我很突出的一个特点哈，喜欢厌恶的部分能被理性稀释掉；</p>
</li>
<li><p>执行力，我永远擅长说而不是把它做出来；</p>
</li>
</ul>
<p>现在也有点背水一战的感觉呢……呵呵……突然发现……我喜欢上你了……</p>
<p>余舜哲，加油！</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[What would be the next attack]]></title>
      <url>http://chocoluffy.com/2014/09/06/What-would-be-the-next-attack/</url>
      <content type="html"><![CDATA[<p>Terrorism is not something that comes from nowhere. </p>
<a id="more"></a>
<p>The fact that the United States is haunted by the attack from Islamic fundamentalists seething with hatred for it proves to some extent that the seeds of terrorism are not stifled at the begins and can pose a detrimental effect to the America’s prosperity. When boosting the liberalism, the ultimate democracy and so-called free speeches from the Constitution, the United States founding fathers envision a society full of political participation, with everyone’s voice being heard, in order that all the decisions about where this country is heading for are in the hands of its people, instead of the legislators, jurists and executives who may or may not reflect the volitions of them. However, just like the fact that free market can default in somewhere, is there someplace where such freedom is not as effective as it was thought to be and the forces of governments should intervene. And in my opinion, terrorism lies in such place. </p>
<p>Let’ s see what Chinese government would react when terrorism attack happens. Since the violence in the capital last fall, the country has been rocked by brutal attacks at railway stations in the cities of Kunming and Urumqi. The unrest is orchestrated by overseas Islamic terrorists groups. After attack, entire cities are sealed off by checkpoints, and there are growing limits on people’s right to travel, worship and dress as they please. It must seem to American people that such reaction is unbearable as it violates most of the Constitution. And I am not requiring American government to imitate such response, but from the result, we can see during such special time, people there are content and satisfied with what governments did and demanded because government lets people know that national armies and forces are behind them. Even though the freedom is squeezed at that time, people and government are united and deem that trade-off is worthwhile and reasonable. </p>
<p>Maybe next time we joke at communist or the Big Brother, we are to reminded that there is no absolute ideology or even absolute freedom. Freedom takes on different forms at different times and this time- the violence period- freedom is in incarnation of the will of being alive and not fearful, which far outweighs any other rights. </p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 社会人物 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2014年我来了]]></title>
      <url>http://chocoluffy.com/2014/02/12/2014%E5%B9%B4%E6%88%91%E6%9D%A5%E4%BA%86/</url>
      <content type="html"><![CDATA[<p>每个人的答案都不一样。</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f0ehgokbm6j20og0haq6z.jpg" alt="smile behind tears"></p>
<p>这一年发生了好多事呢。</p>
<p>很多时候，根本不是自己做不做得到，而是自己想不想去做。</p>
<p>身边总有人关注着学霸的生活，总有人评论着优秀者的姿态。而我，总是静静地看着他们可笑的样子。我不是学霸，我更不喜欢被别人评论。因为他们毕竟不是我，他们看到的结果永远只是我生活的一面，当人们争相用生活几千万分之一的碎片比较着，叫嚣着甚至依次作为生活的全部，他们感受不到生活真正的乐趣，那种沉浸在充实而有意义的事业中超越的快感。</p>
<p>人在世界上，总会问自己，到底活在世界上有什么意义，到底为了什么？</p>
<p>为了父母买一套房子？找到一个自己喜欢并喜欢自己的伴侣？还是说想乔布斯一样改变世界？</p>
<p>每个人的答案都不一样，但无一例外的，这些都是有重量的、高贵答案。</p>
<p>的确有些人追名逐利。的确有些人把羞辱别人，贬低别人看作是自己的目标和快感。可是，然后呢？当他们真地重复着这些话语和动作，当他们真正达到目的，那会是什么感觉？</p>
<p>喜欢攀登的人都仔细分享着攀登过程中的每一点喜悦，珍惜每一次突破极限的感觉，在到达顶峰以后，他们收获了最大最圆满的自豪与成就，却也面临最大最空阔的虚无。结果的后面是另一段旅程，目的地只是下一个所在地的起点而已。</p>
<p>我不喜欢成功。不喜欢用这个词，更不喜欢把自己的成就描述为成功。一个看重成功的国家是有问题的，就像一个满口成功的规划家，一个永远只会谈论别人的自卑的人。梦想，不会因为它描绘了更恢弘的成就而变得更容易实现；汗水与泪水，也不会因为那是为哪怕再卑微的梦想而流而失去他们的重量与意义。</p>
<p>或许，这种充实与超越的喜欢是更为持久的快乐；</p>
<p>而快乐，is what we stay alive for.</p>
<p>我只是一个学生，永远也是。</p>
<p>哲</p>
]]></content>
      
        <categories>
            
            <category> 原创 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
