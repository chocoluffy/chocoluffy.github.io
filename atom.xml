<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[One Piece]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://chocoluffy.com/"/>
  <updated>2016-01-26T22:43:40.000Z</updated>
  <id>http://chocoluffy.com/</id>
  
  <author>
    <name><![CDATA[John Doe]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Memory allocation in C]]></title>
    <link href="http://chocoluffy.com/2016/01/26/Memory-allocation-in-C/"/>
    <id>http://chocoluffy.com/2016/01/26/Memory-allocation-in-C/</id>
    <published>2016-01-26T22:36:34.000Z</published>
    <updated>2016-01-26T22:43:40.000Z</updated>
    <content type="html"><![CDATA[<p>Learning memory allocation in C for beginners will be totally a pain. This post, distilled from course materials, will provide you a practice guide and example coding snippets to help you learning more and fast in C programming language. It is cherishable, at least to me :)</p>
<a id="more"></a>
<h2 id="Introduction_to_malloc">Introduction to malloc</h2><ul>
<li>Variable defined in function will be stored in stack, so how to use that part of memory after function returns? we use <code>void * malloc(size_t size)</code> will allocate memory in heap. This function will remain the memory for the variables until the function explicitly deallocate them. The argument for this function indicates how many bytes of memory should it allocate.</li>
<li>In general, <code>size_t</code> is unsigned_int. Notice the <code>void *</code> type of the pointer, we know that in C, add 1 to a pointer will go to the next legal address, for <code>int*</code>, it is the next integer, for <code>char*</code>, it is next character.</li>
<li>A void pointer is a pointer that represent a generic type. It just points to the memory specified, so it do not need to specify right now what type of that memory is, instead, we will declare the type when use pointer:</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int * pt = malloc(sizeof(int));</span><br></pre></td></tr></table></figure>
<p>the above code indicates that we will the allocated memory for integer. </p>
<h2 id="Example_code">Example code</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">/* </span><br><span class="line"> * Return an array of the squares from 1 to max_val.</span><br><span class="line"> */</span><br><span class="line">int *squares(int max_val) &#123;</span><br><span class="line">    int *result = malloc(sizeof(int) * max_val);</span><br><span class="line">    int i;</span><br><span class="line">    for (i = 1; i &lt;= max_val; i++) &#123;</span><br><span class="line">        result[i - 1] = i * i ;</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">    int *squares_to_10 = squares(10);</span><br><span class="line">    </span><br><span class="line">    // let's print them out </span><br><span class="line">    int i;</span><br><span class="line">    for (i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">        printf("%d\t", squares_to_10[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf("\n");</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Note that in the above code, there are several variables that are located in heap. They are, the address store inside the variable result, since it points to a integer that lies in heap, while <strong>the addresss of the variable result is not in the heap, it is in the stack</strong>. One quick trick is that those value in heap, their address is valid. </p>
<h2 id="Explicitly_deallocate_the_memory">Explicitly deallocate the memory</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int play_with_memory() &#123;</span><br><span class="line">    int i;</span><br><span class="line">    int *pt = malloc(sizeof(int));</span><br><span class="line"></span><br><span class="line">    i = 15;</span><br><span class="line">    *pt = 49;</span><br><span class="line">    </span><br><span class="line">    // What happens if you comment out this call to free?</span><br><span class="line">    free(pt);</span><br><span class="line"></span><br><span class="line">    // What happens if you uncomment these statements?</span><br><span class="line">    printf("%d\n", *pt); // output 49</span><br><span class="line">    *pt = 7;</span><br><span class="line"></span><br><span class="line">    printf("%d\n", *pt); // output 7</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    play_with_memory();</span><br><span class="line">    play_with_memory();</span><br><span class="line">    play_with_memory();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Important issue here: when returned from the function, all variables will be freed from stack, which means that the <code>i</code> and <code>result</code> in the above code will be removed. It will cause a memory leak if we forget to link the memory from <code>malloc</code> to other heap variables. Since there will be no way from elsewhere to access that part of memory.</p>
</blockquote>
<ul>
<li>The danger of memory leak is that if it accumulates, it will finally cause a <code>out of memory</code> issue.</li>
<li>what happens if we print out the value stored in that memory location after we free up that pointer? <strong>Address is still valid and the value can still be accessed, but this time, we are using the part of memory that does not belong to us</strong>. Note that using unallocated memory is OK in some cases, but it will be dangerous when that part of memory being reallocated. So, always use allocated memory!</li>
</ul>
<h2 id="Passing_values">Passing values</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void helper(int **arr_matey) &#123;</span><br><span class="line">   // let's make an array of 3 integers on the heap</span><br><span class="line">   *arr_matey = malloc(sizeof(int) * 3);</span><br><span class="line"></span><br><span class="line">   int *arr = *arr_matey;</span><br><span class="line">   arr[0] = 18;</span><br><span class="line">   arr[1] = 21;</span><br><span class="line">   arr[2] = 23;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    int *data;</span><br><span class="line">    helper(&amp;data);</span><br><span class="line"></span><br><span class="line">    // let's just access one of them for demonstration</span><br><span class="line">    printf("the middle value: %d\n", data[1]);</span><br><span class="line"></span><br><span class="line">    free(data);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>there are basically two ways to help to avoid memory leak, a) <strong>return value</strong>, if we define that function type to be a pointer type, so that we can return the pointer in order to assign the values in main function. b) <strong>argument</strong>, we pass the one we want to assign values to the function and do the assigning part inside that function, and this time, the function type can be void but still finish the task.</li>
<li>However, it is much harder to use <code>argument</code> one since in C, the changes inside the function will not be preserved if we return nothing. Therefore, we need to the “address-value” relation in such scenario – That is <strong>we pass in pointer, we change value pointed at pointer, without returning anything, and we’re done.</strong> While problem comes when we want to change the pointer, say this line <code>*arr_matey = malloc(sizeof(int) * 3);</code>, we want to change the pointer now, but such change will not be preserved after function. Therefore, we will need to pass in a <strong>“poiter of pointer” to deal with pointer assignment!</strong> </li>
</ul>
<h2 id="Nested_structure">Nested structure</h2><p>if we want to use a nested struture to represent an array, say in that array, each element points to another array, since we don’t know that array size at compilation time, we would use <code>malloc</code> to allocate memory for those int array. The code is like</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int ** pt = malloc(sizeof(int*)*<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<p>Say, now, I want the pt[0] to hold up an array of one integer, the way to do that is to use:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt[<span class="number">0</span>] = malloc(sizeof(int));</span><br></pre></td></tr></table></figure>
<p>Similarly, if we want pt[1] to hold up 3 integers, we would use:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt[<span class="number">1</span>] = malloc(sizeof(int)*<span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note that when we free those pointers, we need to free the innermost pointer first then outer one. </p>
</blockquote>
<p>An complete code example:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">    // this allocates space for the 2 pointers</span><br><span class="line">    int **pointers = malloc(sizeof(int *) * 2); </span><br><span class="line">    // the first pointer points to a single integer</span><br><span class="line">    pointers[0] = malloc(sizeof(int));</span><br><span class="line">    // the second pointer pointes to an array of 3 integers</span><br><span class="line">    pointers[1] = malloc(sizeof(int) * 3);</span><br><span class="line"></span><br><span class="line">    // let's set their values</span><br><span class="line">    *pointers[0] = 55;</span><br><span class="line"></span><br><span class="line">    pointers[1][0] = 100;</span><br><span class="line">    pointers[1][1] = 200;</span><br><span class="line">    pointers[1][2] = 300;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    // do other stuff with this memory</span><br><span class="line"></span><br><span class="line">    // now time to free the memory as we are finished with the data-structure</span><br><span class="line">    // first we need to free the inner pieces</span><br><span class="line">    free(pointers[0]);</span><br><span class="line">    free(pointers[1]);</span><br><span class="line">    // now we can free the space to hold the array of pointers themselves</span><br><span class="line">    free(pointers);</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Memory_model">Memory model</h2><ul>
<li>note that th variable in main function does not belong to global variable, indicating it should still go to the stack part. The “global data” part contains mainly three stuff: <strong>a) global variables, b) string literals </strong> Note that for the string literals, the code like this: <code>char* str = &quot;Hello world!&quot;;</code> can lie in a local function, it just means that the pointer str can be in the stack, while the string literal “Hello world!” is in global data part. </li>
<li>And dynamic memory allocation lie in heap.</li>
</ul>
<h2 id="String">String</h2><ul>
<li><p>difference between a string and a character is that at the end of string, there is a <code>\0</code> as an ending signal. Once the character array declared, the size is fixed. Note that the difference between these similar version of declaring character array:</p>
<ul>
<li><code>char string[20] = &quot;cool shit&quot;</code>, it is defining a <strong>string variable</strong>, with a <code>\0</code> at the end of the array, note that there will be a lot of <code>\0</code> following the valid words. It can be changed afterwards.</li>
<li><code>char string[] = &quot;cool shit&quot;</code>, defining a <strong>string variable</strong> the size will be fixed according to the first assignment. It can be changed afterwards.</li>
<li><code>char* string = &quot;cool shit&quot;</code>, defining a <strong>string constant</strong>. it is a string literal! cannot be changed!! If you change the string, it will give a “bus error”. Main point here: <em> <strong>it makes string point to a read-only memory where string literal is stored, while the above two way are indeed allocating memory and copy string to them.</strong></em></li>
</ul>
</li>
<li><p>difference between <code>strlen</code> and <code>sizeof</code>. <code>strlen</code> will return the valid number of characters before null character, while <code>sizeof</code> will just give you the size of whole char array including null characters.</p>
</li>
<li><p>use <code>strncpy</code> as a stable counterpart of <code>strcpy</code>, the usage is like: <code>strncpy(s1, s2, sizeof(s1));</code> see the complete code below, s2 is a string literal. </p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    char s1[5];</span><br><span class="line">    char s2[32] = "University of";</span><br><span class="line"></span><br><span class="line">    // This is unsafe because s1 may not have enough space</span><br><span class="line">    // to hold all the characters copied from s2.</span><br><span class="line">    //strcpy(s1, s2);</span><br><span class="line"></span><br><span class="line">    // This doesn't necessarily null-terminate s1 if there isn't space.</span><br><span class="line">    strncpy(s1, s2, sizeof(s1));</span><br><span class="line">    // So we explicitly terminate s1 by setting a null-terminator.</span><br><span class="line">    s1[4] = '\0';</span><br><span class="line"></span><br><span class="line">    printf("%s\n", s1);</span><br><span class="line">    printf("%s\n", s2);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note that s1 is a character array, which means that there is no null characters at the end. if we want to do this way, we want to add null character at the end.</p>
</blockquote>
<ul>
<li>Similarly, <code>strncat(s1, s3, sizeof(s1)-strlen(s1)-1);</code> is the stable version of using strcpy.</li>
<li><code>char * strchr(const char s, int c);</code> return the index at the first occurence of the character</li>
<li><code>char * strstr(const char* s1, const char* s2);</code> find sub string. see the code example below:</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    char s1[30] = "University of C Programming";</span><br><span class="line">    char *p;</span><br><span class="line"></span><br><span class="line">    // find the index of the first 'v'</span><br><span class="line">    p = strchr(s1, 'v');</span><br><span class="line">    if (p == NULL) &#123;</span><br><span class="line">        printf("Character not found\n");</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        printf("Character found at index %ld\n", p - s1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // find the first token (up to the first space)</span><br><span class="line">    p = strchr(s1, ' ');</span><br><span class="line">    if (p != NULL) &#123;</span><br><span class="line">        *p = '\0';</span><br><span class="line">    &#125;</span><br><span class="line">    printf("%s\n", s1);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>if the character specified in the second argument cannot find the right place, then it will assign NULL to p in this case. We can use pointer subtraction to get the index. </p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Learning memory allocation in C for beginners will be totally a pain. This post, distilled from course materials, will provide you a practice guide and example coding snippets to help you learning more and fast in C programming language. It is cherishable, at least to me :)</p>]]>
    
    </summary>
    
      <category term="C" scheme="http://chocoluffy.com/tags/C/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[象征与符号]]></title>
    <link href="http://chocoluffy.com/2016/01/23/%E8%B1%A1%E5%BE%81%E4%B8%8E%E7%AC%A6%E5%8F%B7/"/>
    <id>http://chocoluffy.com/2016/01/23/象征与符号/</id>
    <published>2016-01-24T04:05:53.000Z</published>
    <updated>2016-01-24T04:09:28.000Z</updated>
    <content type="html"><![CDATA[<p>是什么， 在流血。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1f0agj99z92j20zk0zkajv.jpg" alt="mirror"></p>
<p>每一个刺耳的反对声音， 都很容易被看作是一种象征， 与其说是自愿地走上风口浪尖， 不如说， 是在大众的狂欢和幻想意淫里演变为一场戏剧式的剑拔弩张。 人们娱乐着， 消遣着， 像是有了将帅挂靠着的小兵肆意地挑逗着对手的神经， 全然不觉语气里的傲慢与肤浅。 枪口最后还是走火了， 不过看热闹的小兵早已作鸟兽散， 留下曾经市井起义逐渐背离初衷的将帅， 在一片哀叹中， 付出沉重的代价。</p>
<p>关于查理周刊的事情， 我想试着从一个不那么主流， 但是仍然很有趣的角度去想， 究竟什么是象征， 是什么推动了出现象征性。是什么让这种呈现和代表变得躁动不安又难以抗拒。 又是什么， 在流血。</p>
<p>首先引起我注意的是这几句话</p>
<ul>
<li>“一种沉重的象征主义的重量——原本并不存在于我们的漫画中，也离我们很远的东西，现在落在了我们的肩上。”</li>
<li>“实际上，《查理周刊》一直以来都致力于反对象征主义：我们摧毁符号，打破禁忌，将那些幻想的泡沫破灭。我们很高兴看到人们给予《查理周刊》支持，但同时他们的做法却跟《查理周刊》的初衷背道而驰。”</li>
<li>“任何意义的象征主义都能被任何人利用起来做他们想做的事。”</li>
</ul>
<p>我接着联想到的是， 很久之前的一个大新闻， 戴安娜王妃之死。 如果大家还有印象， 当时那个车祸发生之后的几天， 是接踵而来的铺天盖地关于邪恶的小报记者的评论， 大家指责那些追逐在王妃身后的狗仔记者们， 认为他们手上沾满了鲜血， 要对公众心中那个高贵优雅的戴安娜王妃的事故负上不可推卸的责任。 然而如果仔细推敲， 渴望注视戴安娜王妃高贵而优雅的形象， 又在其陨灭之时渴求安慰的， 究竟是那些努力挖掘“隐私”的小报， 还是拥有着窥视他人生活的这个或许谈不上弱点的本能的大众呢？而那些狗仔小报， 或许只是市场的产物， 只是人们愿意窥视， 哪怕只是对他人生活的一种不恶意的关心的象征。 而一旦顶上了象征的头衔， 也容易在万众注视下成为笔伐口诛的对象。 换句话说， 很可能是人们这种不必然具备恶意的欲望， 促成了那种“有害”的小报和令人们讨厌的狗仔记者。</p>
<p>听上去挺“悖论”的， 为什么明明是不必然恶意的东西， 会衍生出有害的结果。 而为什么， 主角都是传媒媒体， 都是传播者。</p>
<p>人们饭前茶后的谈资， 自古放肆得甚至有点愚蠢朋克的法式幽默， 又真得能经受得住媒体放大器般的传播吗？媒体往往是言论自由和新闻自由的象征和符号。 美国宪法史上好几次最精彩的判决和宣判都和言论自由有关， 而关于新闻自由和涉及“所谓的政府内幕的间谍罪”之间的争论也一直不会停止。 人们不希望受到恶意言论所困， 却又畏惧在任何形式上的禁止和压迫上走得更远。 而媒体， 则更像一个扩音器， 无论是积极还是消极的影响都会被施加上令人喘不过气的压迫力。 一个我能想到的理由， 然而并不新鲜， 是更多的人们偏爱剑拔弩张多过鲜花掌声， 反对和刺耳， 带着张着血气的眼神， 比冷静和无为更为刺激和爽感。 而媒体， 只是一次次转发传递的情感累积， 只是在一场场人群的狂欢中那个热气朝天的广场， 没有了人群， 没有了咆哮， 也就没有它本身存在的意义。</p>
<p>人们可以在自己的本能和欲望中注视到许多象征的缘由。 或许象征本身， 就是人们所力所不及却昼夜痴狂的一种群体记忆吧。而没有了回响， 也就没有了意义。</p>
<blockquote>
<p>后记： 这篇文章的大部分构架是我在等地铁的时候偶然想到的。 缘于读书小组的一次主题讨论， 看到朋友分享的一篇文章， 由一些只言片语所启发所引来的一堆胡思乱想。 或许我可以写得更加详细一点， 但是可能大家在自己思考的时候的所思所想也已远超过我的文笔和见解， 多一些余地， 也多一些回响的空间嘛。趁周末的时候写点文字的感觉还是极好的， 望坚持！最后， 本文中关于戴安娜王妃的例子阐述， 也是启发于以前看到的北大法学系苏力教授关于隐私权的探讨， 而那些摘录的句子， 来源于下面这篇朋友转发的文章。附上我所参考的文章原文。</p>
</blockquote>
<h2 id="《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画">《查理周刊》幸存者专访：我们不是一种象征，我们只是一本简单的漫画</h2><hr>
<p>当地时间1月7日，法国漫画杂志《查理周刊》突遭恐怖分子持枪袭击，造成12人死亡，11人受伤。遇难者中包括杂志社五名重要的漫画家以及两名警察。面对这样的暴行，“Je suis Charlie”（我是查理）成为了一句口号，一面宣扬保护言论自由、抵制恐怖主义的旗帜。</p>
<p>Luz在《查理周刊》工作了20年。1月7日是他的生日，因此他在当天早上在《查理周刊》杂志社总部召开的每周编辑会议上迟到了，因此逃过一劫。现在他同其他的幸存者一起在为1月14日发行的下一期《查理周刊》做准备，这一期漫画将印刷100万份。在这份新的杂志中，Luz和他的同事们将在漫画中描述这周日的共和国大游行。在恐怖分子杀死了他的朋友，他的导师，他的亲人之后，Luz向记者讲述了他的愤怒，他的恐惧，他的怀疑。目前悲痛欲绝的他不能确定在1月7日的悲剧之后他是否还能继续画下去。</p>
<p>记者：下周三的《查理周刊》的内容将是很敏感的国家与政治问题。在目前这种不稳定的局势下，你们为什么要承担起这样的责任呢？</p>
<p>Luz：当我最初拿起画笔的时候，我并不认为这是一件危险的事，我们认为我们只是画出类似滑稽的米老鼠的东西而已。但现在，在死亡，枪击，暴力之后，一切都改变了。所以的目光都聚焦在我们身上，我们现在成了一个象征，就像我们画出来的漫画一样。《人道报》Humanité 将《查理周刊》2015年1月7号刊的作家Houellebecq漫画像作为封面，并配上头条标题“自由已被谋杀”，莫大的讽刺。一种沉重的象征主义的重量——原本并不存在于我们的漫画中，也离我们很远的东西，现在落在了我们的肩上。</p>
<p>《查理周刊》1月7号刊，刚出新作《屈服》的Houellebecq登上封面，书中想象了2022年伊斯兰化了的法国。</p>
<p>记者：您所说的“象征主义的重量”是什么意思呢？</p>
<p>Luz: 2007年，当丹麦报纸Jyllands-Posten把一系列穆罕默德的漫画刊登出来之后，我们被看成是为媒体言论自由抗争的麻烦制造者或是勇敢的白衣骑士。在2011年，当我们的办公室被燃烧弹攻击时，我们再一次被看作是白衣骑士。2012年，一部关于穆斯林的喜剧电影上映（穆斯林的无知），当时我们把这部电影画成了相关的漫画，得到了相同的回应：我们再一次成为了危险的麻烦制造者，画出危险的漫画导致法国领事馆关闭、导致在国外的法国人承担恐惧的麻烦制造者。当全球都因此处于恐慌之中时，我们只是该死的一本受大众喜爱的杂志而已。这本杂志成为了国家、国际的象征，但是，被杀死的是“人”，不是“言论自由”！是那些坐在办公室里画漫画的人。</p>
<p>记者：你的意思是说漫画的本质改变了吗？</p>
<p>Luz：自从我们开始画有关穆罕默德的漫画开始，漫画“不承担责任”的本质就开始一点点消失了。从2007年开始，我们的漫画被人们以字面上的意思来理解。人们，包括一些像Plantu那样的漫画家（Plantu，法国政治讽刺漫画家）都认为我们不该画那些关于穆罕默德的漫画，因为这些画都在网络上疯传。因此我们得处处小心遭人报复，这种感觉让人难以忍受。</p>
<p>记者：为什么？</p>
<p>Luz：从2007年开始，《查理周刊》就受到审查并被警告要承担责任。我们画出的每一幅漫画都被解读成是跟政治有关。这些责任就落到了我们肩上。但我们只是一份杂志，买了，打开看了，再合上，就这么简单。若是人们把我们的漫画传到网上，若是媒体强调我们的一些漫画，那是他们的责任，不是我们的。</p>
<p>记者：但同你们事与愿违的事情发生了。</p>
<p>Luz：我们被加上了象征主义的责任，而这本不是《查理周刊》的初衷。我们跟Plantu不同，我们反对象征主义。“战争中鸽子象征着和平”这类隐喻不是我们想要表达的。我们是在细节上下功夫，我们注重的是怎样把我们画的东西用法式幽默表达出来。</p>
<p>记者：漫画在某些情况下会被认为是粗鲁的，或是很朋克的东西。</p>
<p>Luz：有些时候愚蠢，有些时候粗鲁，至于朋克，那是肯定的。有时候漫画不会产生任何影响，另一些时候它就只是供人消遣的娱乐。《查理周刊》聚集了一群思想差异很大的漫画家。根据不同的漫画家用不同的风格来表现一副漫画——画政治或是艺术，漫画的本质也在改变。但是这种多样性的表达方式现在却不复存在了。每一幅漫画都被看作是我们所有人一起完成的。实际上，《查理周刊》一直以来都致力于反对象征主义：我们摧毁符号，打破禁忌，将那些幻想的泡沫破灭。我们很高兴看到人们给予《查理周刊》支持，但同时他们的做法却跟《查理周刊》的初衷背道而驰。</p>
<p>记者：你们现在已经成为引领民族团结的旗帜。</p>
<p>Luz：这种团结能帮助奥朗德巩固整个国家，同样对于勒庞提倡的恢复死刑的主张也有帮助。任何意义的象征主义都能被任何人利用起来做他们想做的事。而这恰恰跟《查理周刊》追求的不同，你不能去做任何你幻想出来的事情。当我们嘲讽，开政治的玩笑，或者说是娱乐大众的时候，我们没有成为一种符号。我认为Charb（《查理周刊》主编，在11.7恐袭案中遇难）是20世纪末、21世纪初的Jean-Marc Reiser，他用自己的方式对这个社会做出评价。他画出藏在表象下的阴影，那些爱说谎的丑陋的人。而现在我们也被掩盖在表象下了。</p>
<p>记者：您的意思是？</p>
<p>Luz：在目前一种情绪状态下发布《查理周刊》是一个正确的时机吗？这样快速地对所攻击的象征主义做出回应适合吗？我很怀疑。用象征主义来回应象征主义，这不是《查理周刊》做的事。昨天晚上我在脑海中描绘出一幅漫画，不过我可能不会把它画出来：地板上一滩滩污渍代表着遇难者倒下的地方，一幅眼镜散落在角落说“哈哈哈”，背景是黑色。这不是一个好的主意，因为它会被打上象征主义的标签。</p>
<p>记者：所以您的问题时“事件过后你们将以什么方式继续画下去？”</p>
<p>Luz：是的，以及我怎样在这样的背景下画画，在《查理周刊》被赋予了那么多幻想之后。</p>
<p>记者：《查理周刊》将怎么继续下去呢？</p>
<p>Luz：这将会很复杂。除了我之前提到的那些原因之外，我们那几个善于画画、善于思考政治、道德、思想激进的同事—— Charb, Tignous, Honoré，还有其他几位，不在了。在这种困难的时刻，我们剩下的人承担着重任。现在只剩下Catherine, Willem, Coco以及我，还有受伤的Riss。单凭我们几个人的力量怎么才能越过这种象征主义呢？（早前从《查理周刊》离职的Jul现在前来帮助策划下一期的内容。）每个人都能成为漫画家，但他们能抓住查理的精神吗？我们的精神流传了22年了，现在这份杂志得以生存至今都是杂志社所有成员的努力。</p>
<p>记者：你们觉得有必要将先知画进讽刺漫画里吗？抑或你们有时候会觉得自己掉进了陷阱里？</p>
<p>Luz：有趣的是在2007年的事件过后我们继续画了一些有关穆罕默德的漫画。在2007年、2011年以及2012年三次画的默罕默德漫画引起争议之后，Charb 和 Zineb El-Rhazoui（在《查理周刊》工作的穆斯林女记者） 又出了两卷关于穆罕默德生活的漫画，但并没有引起轰动。我们的目的达到了。Charb 想要按照这个设想一直进行下去，穿着他的登山鞋，和他喜欢得不得了的实际上很丑的军裤，站在高处（笑）。Charb相信我们可以继续克服禁忌和符号标准。但现在，我们成为了一种符号。当一种符号就是你自己的时候，你能怎么样去摧毁它？</p>
<p>站在被烧毁的办公楼前的Charb。</p>
<p>记者：我不知道。</p>
<p>Luz：我也不知道。这周我不打算去想这个问题，我也不确定以后我会不会来解决它。我们会继续发布《查理周刊》。我会强迫我自己的。我会去思考我死去的朋友们，我知道他们不是为了法国而倒下的！今天，看上去似乎是《查理周刊》为言论自由而死了。但事实很简单，就是我们的朋友死了。我们爱的朋友，那些有着让我们非常欣赏的才华的朋友死了。</p>
<p>记者：在BFMTV上，我们看到现在局势很混乱。Charb的女友Jeannette Bougrab 说，他们值得被埋葬在法国的先贤祠里。</p>
<p>Luz：《查理周刊》不同意这样做。在先贤祠里被火葬对于居里夫人来说并没有改变任何东西！</p>
<p>记者：这将是一个很好的纪念方式。。。</p>
<p>Luz：1月7日晚的自发集会我没有去。在那里人们唱起了国歌。我们谈起Charb, Tignous, Cabus, Honoré, Wolinski: 他们一定会嘲笑这种行为态度。人们用他们喜欢的方式来表达自己，但是共和国不应该也变成一个歇斯底里的送葬者。这是一种悲哀。</p>
<p>记者：我想这将成为你把明天的集会记录在漫画里的理由吧？</p>
<p>Luz：我也不知道。毫无疑问，明天将会有各种美好的场面，泪水，微笑，或许还会有点荒谬。同时这也会表现出《查理周刊》本质的变化：现在来支持我们的人中，有很多都从来没读过我们的作品。我并不是跟他们生气。我们的目标从来都不是说服所有人。</p>
<p>记者：去年11月，Charb发出声明呼吁大家来订阅《查理周刊》，来拯救这本杂志。那个时候这本杂志很孤独。</p>
<p>Luz：自从第三次因为画默罕默德而受到争议之后，一些时候我们感到很孤独。很多关于《查理周刊》无神论的说法、思想都涌现了出来。但实际上我就就只是简简单单，快乐的不信教的人而已。死掉的那些，都是快乐的无信仰的人。现在他们死了，不存在了，就跟其他所有人一样。</p>
<p>记者：对于瓦尔斯总理没有邀请右派的勒庞来参加明天的共和国大游行一事，你怎么看？</p>
<p>Luz：我没有任何看法。</p>
<p>记者：你认为现在人们是有要拯救《查理周刊》的趋势吗？</p>
<p>Luz：说老实话，去救什么？现在大家还在势头上，有气势。而在一年的时间里，这些为言论自由而战的气势又会剩下多少？会给予私人媒体资金赞助吗？人们会抵制纸媒和报刊亭的衰落吗？人们还会买报纸杂志吗？这些气势会剩下什么？也许会剩下，也许不会。</p>
<p>记者：你们将如何工作？</p>
<p>Luz：我们将继续画那些快乐的小人儿。作为漫画家，我们的工作是以这些快乐的人们为素材来画成漫画，以传达一个观点，就是我们所有人都是快乐的小人物，我们会努力把我们需要做的做好。那些被杀害的人都只是画出那些欢快的小人儿的普通人。</p>
<p>记者：因此让你们这些简单快乐的小人物来拯救整个法国，未免太沉重了？</p>
<p>Luz：是的。</p>
<p>（来源：法媒les in rocks，采访：Anne Laffeter）</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>是什么， 在流血。</p>]]>
    
    </summary>
    
      <category term="社会人物" scheme="http://chocoluffy.com/tags/%E7%A4%BE%E4%BC%9A%E4%BA%BA%E7%89%A9/"/>
    
      <category term="读书笔记" scheme="http://chocoluffy.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="原创" scheme="http://chocoluffy.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Responsive web design[第二期]-position/overlay]]></title>
    <link href="http://chocoluffy.com/2016/01/20/Responsive-web-design-%E7%AC%AC%E4%BA%8C%E6%9C%9F-position-overlay/"/>
    <id>http://chocoluffy.com/2016/01/20/Responsive-web-design-第二期-position-overlay/</id>
    <published>2016-01-20T20:50:19.000Z</published>
    <updated>2016-01-23T15:55:18.000Z</updated>
    <content type="html"><![CDATA[<p>在使用position等css属性的时候会经常在’absolute’,’relative’和’static’上进坑。 本文从实战的角度介绍position的各种应用和如何添加一层优雅的渐变背景过渡层。</p>
<a id="more"></a>
<h2 id="position:_static">position: static</h2><p>when dealing with nested container, the parent div is usually set to be <code>position: relative</code> while child div is <code>position: absolute</code> so that the child element can be positioned to any pos within parent container, if the parent div is set to <code>position: static</code>, child element will ignore parent position.</p>
<blockquote>
<p>Note that <code>position: static</code> is CSS default setting, so if we want to use <code>position: absolute</code>, we should always set the parent element to <code>position: relative</code>. ReactNative set the default value back, so no worries.</p>
</blockquote>
<p>when use position properties like <code>top</code> and <code>left</code>, we usually set them to <code>50%</code>, but the result will be like the element’s top left corner is sticked to the center, while the rest of it is not at the center, which is not what we want, we usually use <code>transform</code> property and get it to <code>-50%</code> to center the element.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">top: <span class="number">50</span>%;</span><br><span class="line">left: <span class="number">50</span>%;</span><br><span class="line">transform: translate(-<span class="number">50</span>%, -<span class="number">50</span>%);</span><br></pre></td></tr></table></figure>
<p>这里我们要说说 static 元素的另外一个坑。</p>
<p>absolute, relative: 有 z-index。<br>static: 没有 z-index。<br>没有 z-index 的元素默认在有 z-index 的元素下面。</p>
<p>img 和 h1 元素都是 position: static。z-index 对 static 元素不起作用，因此它们都在绝对定位的元素下面。</p>
<h2 id="position:_relative">position: relative</h2><p>接下来看看我们嘴经常见到的<code>position: relative</code>。<br>简单地说， 就是在这个元素原本的位置上做位移， 因为有了<code>position: relative</code>的设定， 我们可以用<code>top``left</code>来移动这个元素。<br>If you specify position:relative, then you can use top or bottom, and left or right to move the element relative to where it would normally occur in the document.</p>
<p>Let’s move div-1 down 20 pixels, and to the left 40 pixels:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#div-1</span> <span class="rules">&#123;</span><br><span class="line"> <span class="rule"><span class="attribute">position</span>:<span class="value">relative</span></span>;</span><br><span class="line"> <span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">20px</span></span></span>;</span><br><span class="line"> <span class="rule"><span class="attribute">left</span>:<span class="value">-<span class="number">40px</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>Notice the space where div-1 normally would have been if we had not moved it: now it is an empty space. The next element (div-after) did not move when we moved div-1. That’s because div-1 still occupies that original space in the document, even though we have moved it. 效果参考：<img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f08roukzilj20ry0lwjw8.jpg" alt="position relative"></p>
<p>另外， position:relative 还带来了z-index的属性。</p>
<ul>
<li>references from <a href="https://css-tricks.com/absolute-relative-fixed-positioining-how-do-they-differ/" target="_blank" rel="external">Absolute, Relative, Fixed Positioning: How Do They Differ?</a><br>There are two other things that happen when you set position: relative; on an element that you should be aware of. One is that it introduces the ability to use z-index on that element, which doesn’t really work with statically positioned elements. Even if you don’t set a z-index value, this element will now appear on top of any other statically positioned element. You can’t fight it by setting a higher z-index value on a statically positioned element. The other thing that happens is it limits the scope of absolutely positioned child elements. Any element that is a child of the relatively positioned element can be absolutely positioned within that block.</li>
</ul>
<h2 id="position:_absolute">position: absolute</h2><p>如果我们使用<code>position: absolute</code>呢, 这个元素将会脱离文本， 我们可以人意将它摆放到的想去的位置， 注意和static的区别是， 这个absolute是相对<em><strong>上一个定位为relative</strong></em>的定位， 而static是相对浏览器的定位。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#div-<span class="number">1</span> &#123;</span></span><br><span class="line"> position:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">#div-<span class="number">1</span>a &#123;</span></span><br><span class="line"> position:absolute;</span><br><span class="line"> top:<span class="number">0</span>;</span><br><span class="line"> right:<span class="number">0</span>;</span><br><span class="line"> width:<span class="number">200</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果参考：<img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f08rtih4o4j20pe0iadk1.jpg" alt="relative and absolute"></p>
<blockquote>
<p>最后一个补充：我们常常和<code>float</code>搭配使用的<code>clear: both</code>, 作用是使得定义了该属性的元素的左侧和右侧均不允许出现浮动元素。</p>
</blockquote>
<h2 id="滚动控制">滚动控制</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="slider-control"&gt;</span><br><span class="line">  &lt;a href="#native" class="active"&gt;</span><br><span class="line">    &lt;div class="dot"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href="#touch"&gt;</span><br><span class="line">    &lt;div class="dot"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href="#async"&gt;</span><br><span class="line">    &lt;div class="dot"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a href="#flex"&gt;</span><br><span class="line">    &lt;div class="dot"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>让它们position: fixed, 效果参考：</p>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1f06g8ze3fhj20yo0pw76w.jpg" alt="movement control"></p>
<h2 id="overlay_平滑过渡">overlay 平滑过渡</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;section&gt;</span><br><span class="line">    &lt;div class="container" id="intro-section"&gt;</span><br><span class="line">    &lt;div class="overlay"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;h1&gt;I Love React&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;I just want to see the so-called live-coding&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>
<p>将最上面的container的背景设置为图片背景， 然后中间加一个div.overlay的div, 然后通过渐变设置其背景为主背景颜色。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#intro-section&#123;</span></span><br><span class="line">  background-image: url(../image/background.jpg);</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-position: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#intro-section h1, p&#123;</span></span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.overlay&#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: <span class="number">0</span>;</span><br><span class="line">  left: <span class="number">0</span>;</span><br><span class="line">  width: <span class="number">100</span>%;</span><br><span class="line">  height: <span class="number">100</span>%;</span><br><span class="line">  background-image: linear-gradient(rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),rgba(<span class="number">22</span>, <span class="number">21</span>, <span class="number">37</span>, <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1f06lr99d5xj21kw0q47cw.jpg" alt="overlay"></p>
<h2 id="参考资料">参考资料</h2><ul>
<li><a href="http://hex2rgba.devoth.com/" target="_blank" rel="external">hex to rgba online converter</a></li>
<li><a href="https://github.com/luckymore0520/sike-react-ilovereact" target="_blank" rel="external">ilovereact</a></li>
<li><a href="http://gugugupan.github.io/sike-react-ilovereact/" target="_blank" rel="external">最后成品效果ilovereact－添加动画</a></li>
<li><a href="https://github.com/gugugupan/sike-react-ilovereact/blob/master/index.html" target="_blank" rel="external">上面github项目的index.html</a></li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>在使用position等css属性的时候会经常在’absolute’,’relative’和’static’上进坑。 本文从实战的角度介绍position的各种应用和如何添加一层优雅的渐变背景过渡层。</p>]]>
    
    </summary>
    
      <category term="web design" scheme="http://chocoluffy.com/tags/web-design/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[时间知道[持续更新...]]]></title>
    <link href="http://chocoluffy.com/2016/01/12/%E6%97%B6%E9%97%B4%E7%9F%A5%E9%81%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <id>http://chocoluffy.com/2016/01/12/时间知道-持续更新/</id>
    <published>2016-01-12T17:46:57.000Z</published>
    <updated>2016-01-27T01:58:45.000Z</updated>
    <content type="html"><![CDATA[<p>因为， 只有时间知道。</p>
<a id="more"></a>
<h2 id="技术">技术</h2><ul>
<li><a href="http://hanhailong.com/" target="_blank" rel="external">韩海龙的技术博客(Android\IOS)</a></li>
<li><a href="http://jinglei.me/" target="_blank" rel="external">荆雷的技术博客(React\Meteor)</a></li>
<li><a href="http://ramiro.org/vis/hn-most-linked-books-unique-users/" target="_blank" rel="external">Hacker News上评价最高的书</a></li>
<li><a href="http://www.yehbeats.com/" target="_blank" rel="external">YeHbeats的技术博客(Python\Hexo)</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>因为， 只有时间知道。</p>]]>
    
    </summary>
    
      <category term="收藏帖" scheme="http://chocoluffy.com/tags/%E6%94%B6%E8%97%8F%E5%B8%96/"/>
    
      <category term="原创" scheme="http://chocoluffy.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Flexbox website layout - Intro]]></title>
    <link href="http://chocoluffy.com/2016/01/12/Flexbox-website-layout-Intro/"/>
    <id>http://chocoluffy.com/2016/01/12/Flexbox-website-layout-Intro/</id>
    <published>2016-01-12T17:00:52.000Z</published>
    <updated>2016-01-26T22:43:07.000Z</updated>
    <content type="html"><![CDATA[<p>My first attempt to build up a responsive website using Flexbox layout. Check <a href="http://chocoluffy.com/flex-layout/">Live Demo</a> here!</p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1ezx7kdisiuj21kw0r1di7.jpg" alt="overview"></p>
<p>check <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="external">this post</a> on the complete guide about Flexbox layout.</p>
<blockquote>
<p>Below is the code that can be applied to many text\presentation related website. [1] font is cool and elegant. [2] layout is fast since we set div to <code>display: flex</code>. We won’t be bother to type that anymore, focusing on “position” and “stretch”</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#1F1E34</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Avenir Next"</span>,</span><br><span class="line">      <span class="string">"HelveticaNeue-Light"</span>, <span class="string">"Helvetica Neue Light"</span>, <span class="string">"Helvetica Neue"</span>, Helvetica,</span><br><span class="line">      Arial, <span class="string">"Lucida Grande"</span>, sans-serif</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> <span class="number">100</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">64px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> <span class="number">100</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">h2</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">48px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> <span class="number">100</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">p</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">24px</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">a</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> <span class="number">400</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="rule"><span class="attribute">a</span>:<span class="value">hover &#123;</span><br><span class="line">  font-weight: <span class="number">400</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#DADADA</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>especially the font, it is so beautiful!</p>
<p>These units are vh (viewport height), vw (viewport width), vmin (viewport minimum length) and vmax (viewport maximum length). we set the vh to 100 like this:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.container</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">flex-direction</span>:<span class="value"> column</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">align-items</span>:<span class="value"> center</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">justify-content</span>:<span class="value"> center</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100vh</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>for the parent div container, since we want that parent div can take up a viewport height. vh stands for “viewport height”</p>
<blockquote>
<p>Note that <code>flex-direction</code> indicate items’ aligning, rows or columns. Then <code>align-items</code> means main-axis and <code>justify-content</code> is for sub-axis.</p>
</blockquote>
<h2 id="flex">flex</h2><p>在使用 ReactNative 时你会经常看到一个神秘的设定 flex: 1，用了来扩大一个 flexbox。flex 是一个简写，同时设置 flex-grow，flex-shrink 和 flex-basis 三个属性。它们的默认值为：</p>
 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flex: <span class="number">0</span> <span class="number">1</span> <span class="keyword">auto</span>;</span><br><span class="line"><span class="comment">/*</span><br><span class="line">flex-grow: 0;</span><br><span class="line">flex-shrink: 1;</span><br><span class="line">flex-basis: auto;</span><br><span class="line">*/</span></span><br></pre></td></tr></table></figure>
<p>flex: 1 意为 flex: 1 1 auto</p>
<h2 id="Summary_For_All">Summary For All</h2><p>basically using some flex-related properties to structure the whole website.</p>
<p>[1] to formate those section-like website, need to use <code>section</code> tag in html file and set the corresponding containter to be <code>100vh</code> which means the viewport height, so that each section can be strecthed to adapt to your screen height. (which is pretty elegant)</p>
<p>we usually use </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">flex-direction</span>:<span class="value"> column</span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">align-items</span>:<span class="value"> center</span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">justify-content</span>:<span class="value"> center</span></span>;</span><br></pre></td></tr></table></figure>
<p>these properties as container’s property.</p>
<blockquote>
<p>Note that we have main-axis and sub-axis, which will help you position the items by <code>align-items: center;
  justify-content: center;</code></p>
</blockquote>
<p>[2] structure inside each section. we may use another flexbox container inside one parent container to hold up more items like navigation or some scrum-map. And in this way, the <code>flex-direction</code> may usually be the opposite to the parent container. For the child container, we may wonder to stretch the block to whatever proportion to the whole layout. we want to use<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">flex-grow</span>:<span class="value"> <span class="number">1</span></span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">flex-basis</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">align-self</span>:<span class="value"> stretch</span></span>;</span><br></pre></td></tr></table></figure></p>
<p>which also applies the same logic from main-axis and sub-axis when setting their values.</p>
<p>Note that the <code>flex-basis</code> is pretty useful when you try to eliminate the effect of inner text to the block when stretching since <code>align-self: stretch</code> ONLY stretch the empty space to full length!</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>My first attempt to build up a responsive website using Flexbox layout. Check <a href="http://chocoluffy.com/flex-layout/">Live Demo</a> here!</p>]]>
    
    </summary>
    
      <category term="web design" scheme="http://chocoluffy.com/tags/web-design/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[现实和虚拟的边界]]></title>
    <link href="http://chocoluffy.com/2016/01/09/%E7%8E%B0%E5%AE%9E%E5%92%8C%E8%99%9A%E6%8B%9F%E7%9A%84%E8%BE%B9%E7%95%8C/"/>
    <id>http://chocoluffy.com/2016/01/09/现实和虚拟的边界/</id>
    <published>2016-01-09T21:26:16.000Z</published>
    <updated>2016-01-09T21:32:22.000Z</updated>
    <content type="html"><![CDATA[<p>什么花样。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1eztyce4tu0j20c807tjs7.jpg" alt="virtual reality"></p>
<h2 id="前言">前言</h2><p>有幸将在这个学期接触并学习虚拟现实， 我的授课教授Steve Mann被誉为“世界穿戴电脑之父”， 放一张图片镇楼：<br><img src="http://ww1.sinaimg.cn/large/c5ee78b5gw1eztyejobw4j21jg17kn6k.jpg" alt="wearable computing"><br>早在20年前就自己在车库里捣鼓出第一代可穿戴设备， 然后在MIT实验室完成很多重大突破。刚好在36氪上看到自己同门师兄的一篇文章（不是这一篇）， 感受到2016年真是虚拟现实技术爆发的“元年”， 就好像07年第一代iphone出世时的轰动以及随之而来移动应用的爆发， VR将在2016-2020期间迎来他的舞台和随着平台而来的新媒体交互， 游戏影视内容。 下面这一篇文章同样来自36氪， 是我认为对场景的分析和vision上比较make sense的， 没有太多国内外过于夸张的描述和猎奇。值得一读。</p>
<p>在平台回复“未来”， 可以回顾以前发布的一篇关于增强现实的文字和视频， 当宠物小精灵在大街上对战…还有什么花样。</p>
<p>余舜哲 16.1.9<br>一下文字转载自36氪。侵删。</p>
<h2 id="一个_“奥酷拉思”_的未来——为什么我相信_VR_会改变娱乐业以及这个世界">一个 “奥酷拉思” 的未来——为什么我相信 VR 会改变娱乐业以及这个世界</h2><p>图片: Yestone.com 版权图片库</p>
<p>编者按：本文作者王冉，易凯资本有限公司（微信号：china-ecapital）创始人。文章首发于 36 氪。</p>
<p>内容提要：</p>
<p>如果说未来五到十年有什么东西能够像 Uber 颠覆全球出租车行业一样颠覆全球娱乐产业，我认为就是 VR（虚拟现实）这个东西。</p>
<p>我毫不怀疑，2016年 将是 VR 产业的元年。正像当年网景的 IPO 标志着互联网时代的到来，Oculus Rift 的上市也将成为 VR 时代正式开启的历史性标志。</p>
<p>VR 眼镜将遍地开花，谁都可能进入这个领域。至少在初期，各大 VR 眼镜商都会直接参与 VR 内容的制作。</p>
<p>所有需要插入手机、需要 PC 配合、需要手柄操作的 VR 眼镜都是过渡性产品，因为它们违反人性。未来的 VR 眼镜一定是一体式的，直接和云端的内容、应用和计算能力相连。</p>
<p>硬件商与内容商将从不同的出发点出发，互相侵入对方的领地，最终会出现多家硬软联姻、甚至硬软一体的 “索尼哥伦比亚” 或者 “哥伦比亚索尼”。当然，任何创意产业都无法被垄断，因此 VR 内容领域虽然会有巨头，但也会有层出不穷的中头、小头和微头。相比之下，硬件商经过三到五年的合纵连横，最终会走向整合，这个版图上最终留下的玩家应该不会比今天的手机厂商更多。</p>
<p>VR 将导致内容产业重新洗牌。在 VR 发展的初期，每个人都是斯皮尔伯格。VR 电影是 360 度的电影，它的轴心是观众的眼睛，故事必须沿着每一个观众的视线推进。这里面蕴藏着巨大的挑战、机会与诱惑。</p>
<p>VR 给电影业带来了很多前所未有的新课题。譬如，故事怎么讲剧本怎么写？又譬如，场景和声音切换怎么处理？再譬如，导演摄像如何藏身、360 度场景如何剪辑？还譬如，如何有分寸、有节制地进行感官刺激。未来导演会有更多的工作不是在现场，而是在机房。</p>
<p>VR 电影和 VR 游戏的界限会日渐模糊。一个观众可以与之互动并且影响故事进程的电影本质上就是一个具有电影结构和戏剧性的游戏。未来在电影和游戏之外，很可能会诞生 “游戏电影”（也可以称之为 “浸入式电影”）和 “电影游戏”（也可以称之为 “叙事性游戏”），它们的区别仅仅在于观众对于故事进程的影响程度。一个优秀的游戏电影的导演必须深谙游戏的逻辑；反过来一个优秀的电影游戏的导演必须精通电影的语言。未来电影和游戏的商业模式也将日益趋同。游戏里买装备、买道具、买体验的思路很可能会淘汰看电影买门票看贴片和植入广告的思路，真正有前途的是 “会员费 + 场景内购物 + 线下消费” 的强大组合。电影游戏化可能会比游戏电影化更容易走通。</p>
<p>在 VR 时代，超级 IP 同样重要，甚至更加重要。道理很简单：如果你是内容商，你已经承担了新技术新玩法新市场的风险，这时候应该尽量降低内容本身的风险。因此，手里有超级 IP 的内容公司以及与它们合作的硬件公司将比没有这些超级 IP 的玩家们更有机会品尝到 VR 的果实。</p>
<p>VR 电影是衍生品销售的天堂。这里所说的衍生品绝不仅限于玩具、T 恤、饮料这样的简单产品，它可以是一件极富设计感的大衣、一款来自米兰家具展的沙发、一个超级酷炫的数码产品，也可以是一辆梦幻跑车、一家 B 格闪耀的餐厅、甚至一个依山傍水的别墅样板房。这些原本植入在电影里只能当广告看的 “衍生品” 忽然间有了生命，栩栩如生地出现在你的面前，把展示变成了一场 360 度的亲密接触。</p>
<p>VR 时代电影院会遇到前所未有的挑战。在 VR 电影时代，电影院将很难通过小修小补来满足市场的需求，对着大银幕排排坐的观影方式将失去意义，电影院的整体设计只能推倒重来。未来电影院的主流形态会是怎样还有待定义，或许它会是 “常态影厅 + 社交观影包间 + 浸入式 VR 观影透明空间 + 衍生品体验馆” 的某种组合。</p>
<p>视频网站最有机会成为 VR 内容的发行平台。如果它们再和在线票务平台结合起来，取代现有的电影发行公司和院线公司几乎是必然。那个时候让 VR 电影给线下院线留出一个窗口期就好比让大闸蟹给阳澄湖留出一个窗口期一样可笑。</p>
<p>与 “VR 前” 时代相比，VR 时代是一个更加青睐生态型企业的时代。硬软一体、八面协同的生态型企业在 VR 时代的竞争优势将比以往更为明显。</p>
<p>虽然所有探索都值得鼓励，但万恶的资本和资本家们还是会更青睐那些创始人有正确的基因、技术或者模式具有颠覆性、潜在商业化路径清晰、最好还有一定规模的 VR 公司。这样的公司可以是独立的初创企业，也可以是大公司分拆出来的 VR 业务平台。后者甚至比前者更有机会快速发展。</p>
<p>正文：</p>
<p>先提几个问题：</p>
<p>十年后还会有电影院吗？<br>同一部电影，你用六十分钟看完，我看却用了三个小时，有可能吗？<br>你可以坐在沙发上就进入电影场景并且和 “身边” 的汤姆克鲁斯或者安妮海瑟薇互动吗？<br>“吓死宝宝了” 的电影场面有可能不小心真把宝宝吓死吗？<br>我们真的 “回不到从前” 吗？</p>
<p>所有这些问题之所以成了问题，是因为两个字母：VR。</p>
<p>全名叫 Virtual Reality，虚拟现实。</p>
<p>如果说未来五到十年有什么东西能够像 Uber 颠覆全球出租车行业一样颠覆全球娱乐产业，我认为就是 VR 这个东西。</p>
<p>VR 能玩出什么样的花活？</p>
<p>如果用一句话来概括 VR 为什么可以如此强悍，我觉得那是因为它可以让我们在感知上几近逃离物理时空的束缚，从四维世界进入到 “四维乘二” 的世界。</p>
<p>不妨想象一下这样的情景：</p>
<p>–你蜷缩在客厅的沙发上，用手机选好了想看的电影，戴上 VR 眼镜，然后你就进入了一个现代的虚拟 IMAX 影厅。这是你自己的包场，你可以邀请远在另一个城市的好友和你一起观影，他（她）就坐在你的旁边，你们可以一边看一边语音聊天，不用担心吵到别人，不用被不讲公德接电话的人打扰，周围没有韭菜盒子的气味，也没有后排一会儿踹你椅背一脚的小朋友。</p>
<p>–电影开始，你可以选择继续在虚拟 IMAX 厅观看，也可以选择进入电影场景。如果你选择进入场景，汤姆汉克斯或者安妮海瑟薇可能就在你身边，甚至还有可能向你点头致意。一只萤火虫飞来，你可以用手指与它互动。你可能像坐滑翔伞一样飞过一片森林，可能在枪林弹雨中左躲右闪，也可能在海底与大白鲨擦肩而过。你可能站在一个岔路口，选择向哪里走将决定你看到的故事。你也可能置身于一个古堡中，这个时候你推门走进这个房间会看到有一个女神在泡泡浴，而你走进另一个房间就会成为一起血腥凶杀案的目击者；你甚至还可以看到与你一起远程看电影的好友走进的是哪个房间…看完 VR 电影看 2D 就如同在视频网站上看漫画连载，再看 3D 感觉就像隔着睡袋做爱。</p>
<p>– VR 的应用绝不仅仅局限在电影这一个领域。未来你戴上眼镜，可以立刻出现在 TFBOYS 演唱会、《中国好声音》、或者世界杯决赛的现场。你在钢筋水泥的写字楼里坐在文件如山的办公桌前已经连续工作了 20 个小时，想打个盹，为什么不让自己一秒钟就躺在大溪地的海边。你有 200 斤重还有心脏病，你同样可以 “登上” 珠穆朗玛的峰顶。你想和李娜学网球，她随时可以在你身边示范动作。你想去感受一下 Angelababy 的衣帽间，或许只需微信支付 10 元就可以实现。夜深人静你想和远在地球另一半的闺蜜通个电话，拨完号码，你就坐到了她的对面，此刻她可能正穿着比基尼晒着日光浴。哪里发生重大新闻事件，你都可以瞬间成为新闻的现场目击者，新闻不再是用来 “看” 的，而是用来 “经历” 和 “体验” 的。</p>
<p>–还有更煽情的场景：若干年后，当父母不再，你戴上眼镜，马上就可以回到从前，一家人围坐在餐桌前其乐融融，吃着老的饭，谈着老的天，他们从未走远。只有当你摘下眼镜，才会发现眼角有两行泪水潸然而下。</p>
<p>VR 版图上正在发生什么？</p>
<p>我毫不怀疑，2016年 将是 VR 产业的元年。</p>
<p>说到 VR，不能不提奥酷拉思（Oculus）这个名字。这家 2014年 被脸书（Facebook）以 20 亿美元收购的公司是全球 VR 行业的领军企业。他们将于 2016年 初推出第一代面向大众的商用虚拟现实头戴式眼镜 Oculus Rift， 预计售价在 400 美元以内。当然，如果把使用它所需要的 PC 也算在内的话，全套设备的价格可能会达到 1500 美元。正像当年网景的 IPO 标志着互联网时代的到来，Oculus Rift 的上市也将成为 VR 时代正式开启的历史性标志。</p>
<p>为了能够让 Oculus Rift 一上市就有与它匹配的内容，Oculus 已经于今年1月 成立了一家专注于 VR 内容的公司 Oculus Story Studio（奥酷拉思故事工作室），并从 Pixar（皮克斯）这样的动画航母挖了一批顶尖人才。今年7月 份这家公司首映了一部 VR 动画短电影 “Henry” （《亨利》）的预告片。在这部预告片里，Henry 是一个刺猬，他在生日那一天邀请一帮朋友来给他庆生。朋友们都知道他见面喜欢拥抱，但因为他浑身是刺，大家都心有余悸，因此纷纷找借口推脱…作为观众，你你可以随意走动，当你走近 Henry 的时候，他会看着你并和你打招呼，仿佛你们生活在同一个世界里。在奥酷拉思工作室的另一部 VR 短片 “Lost”（《迷失》）里，只有当观众把目光投向一个特定的方向或者物体，电影情节才会继续，这样的电影有点像电影、游戏和图文小说的混合体。“Henry” 和 “Lost” 的完整版以及其它几部工作室制作的 VR 短电影将会和 Oculus Rift 同步推出。</p>
<p>与此同时，其它科技巨头也都不谋而合地把目光瞄准了 VR。</p>
<p>在 VR 眼镜方面，谷歌 2014年 就正式推出了他们经济实惠的 Cardboard (硬纸盒 + 手机) 解决方案。微软今年在展会上演示了集虚拟现实和增强现实于一体的 “混合现实” 眼镜 Hololens 在娱乐和办公领域的巨大潜力，近期他们也将宣布推出一款与谷歌 Cardboard 类似的微软版 VR 硬纸盒产品 VR Kit。三星 2014年9月 就推出了第一代 VR Gear，近日他们又宣布与 Oculus 合作生产的第二代 Gear VR 眼镜将于今年圣诞季启动销售，这款同样需要把手机插进眼镜的设备预计售价 99 美元。在无需插入手机的一体式眼镜市场，索尼刚刚宣布将于明年上半年推出他们的头戴 VR 眼镜 PlayStation VR，售价 399 美元，感觉上这款产品可能会更加侧重游戏体验。从产品上最被寄予厚望的是预计今年11月 面世的 HTC 与 PC 游戏巨头 Valve 合作的 VR 眼镜 Vive。这款配有手柄的 VR 眼镜被一些 IT 评论人称为目前市场上已知的最优秀的产品，售价应该会在 400 美元以上。最新加入战局的是佳能，他们在 9月 份宣布将于今年推出一款手持式 VR 眼镜。至于巨人中的巨人苹果，别以为他们会站在场边，他们已经于今年2月 取得了一项与 iPhone 手机相匹配的 VR 眼镜的专利，未来的 VR 世界里一定会有他们的惊鸿一瞥。</p>
<p>在 VR 拍摄设备方面，Gopro 今年晚些时候将投放一款叫 Odyssey 的专业 VR 摄像机，由 16 台 Gopro 相机组成一个 360 度拍摄转盘，价格将达到 15,000 美元。这和 Google 的开源 VR 平台 Jump 不谋而合。Jump 是一个完整的系统，除了摄影转盘之外还包括 VR 内容编辑器和一个由 YouTube 承载的 VR 内容频道。与谷歌的 Jump 类似的还有一家独立公司 Jaunt,后者的 VR 内容创生系统同样包括 VR 摄像机、内容编辑器和一个 VR 内容发行传输平台。另外一家在 Kickstarter 上完成了众筹的公司 Bublcam 的 VR 摄像机已经面试，这款定价 799 美元的设备拍出的 VR 内容可以通过谷歌 Cardboard、三星 GearVR 和 Oculus Rift 观看。诺基亚则在放弃手机战场后另辟蹊径，宣布将推出一款可以拍摄 VR 内容的 OZO 摄像机。手机巨头三星则期望下一代三星 Galaxy S7 手机的摄像头具有 VR 摄像的功能。最近还有一家初创公司宣布将于明年三月发售可以进行 VR 拍摄的 FlyBi 无人机，戴上配套的眼镜用户可以直接体验与无人机一起飞翔的感受。</p>
<p>视频公司也闻风而动。YouTube 早就设立了可以 360 度观看视频的 VR 频道。Netflix 和 Hulu 近日也都宣布将推出自己的 VR 应用。Netflix 会与 Oculus 和三星合作，为 Gear VR 设计一个可以虚拟观影的频道。Hulu 走得更远，不仅要为用户提供一个虚拟观影的体验（譬如，你可以坐在 Jerry Seinfeld 的沙发上看 Seinfeld），还计划直接投资参与一部 VR 短片的制作。</p>
<p>在 VR 内容方面更是百舸争流，令人目不暇接。</p>
<p>迪斯尼九月份刚刚宣布战略投资了 Jaunt，这几乎可以被认定是他们进入 VR 领域的重要宣言。华纳影业为电影 “Into the Storm”（《不惧风暴》）制作了可以在 VR 眼睛上观看的预告片。狮门影业也为其电影 “Insurgent – Shatter Reality”（《分歧者》）制作了一部四分钟的制作场景体验片。二十一世纪福克斯的 VR 部门福克斯创新实验室将 2014年 奥斯卡参选影片 “Wild”（《荒野》）的片段做成了 VR，还将为即将登上银幕的大片 “The Martian”（《火星救援》）制作一部独立的 VR 预告片。这家新闻集团旗下的电影公司还计划将自己片库里的上百部电影拿出来，放到 Oculus 的虚拟影院观影平台上（无法进入电影场景，但可以邀请远在万里之外的朋友在虚拟 IMAX 影厅一起观看）。三星最近聘请了 “The Walking Dead”《行尸走肉》的制作人 David Alpert 来制作一个 VR 系列剧。顶级好莱坞制作人 Mark Romanek、Robert Stromberg 以及《星际迷航 3》的导演 Justin Lin 也已经开始投入 VR 电影的制作。</p>
<p>与此同时，形形色色的 VR 电影节也开始粉墨登场。美国一家 VR 广告公司 Kaleidoscope 今年开始举办 “万花筒巡回 VR 电影节”，在 8月22日 到 10月14日 这段时间内将登陆纽约、旧金山、西雅图、洛杉矶、蒙特利尔、多伦多等十个城市。中国也有公司开始筹备举办类似的活动。</p>
<p>电影之外，VR 也开始握手电视。独立 VR 短片制作公司 Vrse.works 为全美老牌综艺节目 “Saturday Night Live”（《星期六直播秀》制作了了一期 40 周年VR 版特别节目。从电视节目制作公司 44 Blue 分拆出来的 Ovrture 即将开始制作两部 VR 真人秀，一部是关于监狱生活，一部关于夜间急诊–你可以零距离进入监狱重犯的生活，也可以看到车祸中遭受重创的人在你身边得到救治。今年七月被 HTC 战略投资了的 VR 社区和制作平台 WEVR 最近在 HTC 的 Vive 眼镜上发行了一部叫 “TheBlu: Encounter”（《蓝色邂逅》）的 VR 短片，观众置身于海底的鲸鱼群中，并且可以在一个 5 米乘 5 米的区域内自由游动（走动），领略海底的斑斓。</p>
<p>侧重于人文关怀的 VR 纪录片也开始批量出现。专注于 VR 新闻纪实的 RYOT 公司近期制作了多部 VR 纪录片，让观众身临其境地体验到叙利亚难民、尼泊尔灾民和墨西哥越境者的无望与艰难。Vrse.works 也与联合国合作推出了一部关于埃博拉的 VR 纪录片 “Waves of Grace”（《慈悲为怀》），由一位利比亚女性、埃博拉幸存者把观众带入到疫情中心区。一位看过这部影片的人评论道 “你会觉得埃博拉病毒就在你身边，那种震撼无与伦比。”“Perspective”（《视角》) 是一部 VR 系列剧，第一集讲述一个女大学生参加派对遭遇男生性侵，前半部分是站在感觉 “被邀请” 的男生视角，后半部分是站在感觉 “被侵犯” 的女生视角。VR 可以让观众换位思考，感同身受。</p>
<p>影视之外，游戏也是推动 VR 发展的重要引擎。全球第一个 VR 游戏体验馆 Zero Latency 今年8月15日 在澳大利亚墨尔本开门迎客。这个 400 平米的厂房式建筑里密布了 129 台摄像机。玩家四到六人一组，背着一个 2.5 公斤重的背包（里面包括电脑），戴着头盔眼镜，举着冲锋枪，置身于一个虚拟城市，穿大街走小巷，一会儿是仓库一会是坟场，随时有僵尸来袭，玩家必须相互配合第一时间把他们击毙。整个体验馆只有 100 米长，但一个小时玩下来，玩家平均至少会走动 1000 米。虽然今天还只是人类大战僵尸，但下一步很可能会是人人对战，甚至同队成员的角色会出现翻转，“很可能最好玩的部分就是最后十分钟把自己队伍中的敌人找出来并干掉”。</p>
<p>事实上，在 VR 世界里电影正和游戏合二为一。狮门影业基于自己的票房宠儿 “John Wick”（《疾速追杀》）正在与游戏发行商 Starbreeze 合作，双方将联手推出一款把玩家虚拟为电影主角的枪战游戏。WEVR 将为这款游戏打造一部量体裁衣的 VR 预告片，在 HTC Vive 眼镜上播放。</p>
<p>在 VR 领域，中国几乎与世界同步。</p>
<p>暴风科技之所以在 A 股市场成为 “妖股”，很大程度上是因为他们的 VR 概念。暴风旗下的暴风魔镜今年4月 拿到了华谊兄弟、天音通讯等机构 6000 万元的投资，新一轮融资正在进行中。今年第四季度，暴风魔镜将发布三代魔镜、VR 一体机、VR 摄像头等多款产品。小米、乐视等公司也在研发自己的 VR 产品。</p>
<p>新一代影视公司柠萌影业正在制作中国电视第一支 VR 预告片《择天记》。动画公司米粒影业就在不久前推出了旗下作品《三只小猪与神灯》的 VR 片段，这家公司表示将制作多部 VR 影片，还将推出以影片为主题的 VR 游戏，打造 VR 主题公园。有 “中国的 Pixar” 之称的追光动画除了明年1月1日 将推出首部好莱坞水准大电影《小门神》之外在不久的将来也会有一部 VR 短片问世。</p>
<p>来自中国的资本在全球 VR 市场同样不甘寂寞。黎瑞刚领导的华人文化产业基金（CMC）前不久就参与了由迪士尼领投的 Jaunt 公司 6600 万美元的融资。</p>
<p>VR 将给产业带来怎样的变革？</p>
<p>VR 眼镜将遍地开花，谁都可能进入这个领域。</p>
<p>毫无疑问，人们进入虚拟现实的 VR 世界，戴在头上的 VR 眼镜是一个超级入口。虽然未来或许隐形眼镜和芯片植入可以取代外挂式装备，但至少三五年内 VR 体验还离不开头戴式眼镜。</p>
<p>因此，VR 眼镜一定会成为千军万马的必争之地。已知的进入者包括国外的谷歌、微软、奥酷拉思（Oculus）、三星、索尼、HTC，以及中国的暴风影音、蚁视、天空（Laputa Hero）等。除此之外，苹果、小米、乐视等进入这个市场几乎是必然。</p>
<p>未来但凡与 VR 可能沾上两毛钱关系的商家都会四面八方涌向这里。从做手机和可穿戴设备的到做电视机的，从视频网站、在线售票平台到电影院线，从大型影视娱乐公司、体育公司到游戏公司，从搜索公司、电商平台到软件公司和芯片公司，都很可能会对 VR 眼镜市场有所图谋。当然，也会有形形色色的独立创业公司盯住这个市场，从这里起航。</p>
<p>最终的胜出者会有哪些没有人能预测，但它们必须具备两个基础条件：第一，强悍的技术和材料应用能力；第二，强大的内容制作和获取能力。</p>
<p>至少在初期，VR 眼镜商都会参与内容制作</p>
<p>和手机不同，没有了视频功能，手机还可以用来打电话发微信，而 VR 眼镜离开了 VR 内容就是一坨压在头上的塑料。</p>
<p>因此，VR 眼镜商同之前所有硬件商最不同的一点是–它从孕育的那一刻（注意，不是诞生的那一刻）起就必须开始考虑内容的事。</p>
<p>这也就注定了至少在 VR 眼镜的发展初期，大多数硬件商将会通过各种形式直接参与 VR 内容的制作，有些可能会设立自己的内容公司，从影视产业大量挖角；有些可能会战略投资或者收购现有的影视和游戏内容公司并给它们注入一些 VR 的基因，或者直接战略投资或者收购新兴的专注 VR 内容的公司；还有些可能会选择同现有的影视和游戏巨头设立合资公司，联合开发制作 VR 内容。</p>
<p>未来 VR 眼镜商销售眼镜大致会有两种模式。“1.0 模式” 是你花几百元到几千元不等买一个 VR 眼镜，这里面已经绑定了一个或几个 VR 内容发行平台，上面可能有几十部 VR 短片，将来还会有更多，多数内容免费将来也会有一些内容收费，你回家自己体验。“2.0 模式” 应该是一个巨大无比的电影 IP 你只能在某款 VR 眼镜上看，你可以选择花几千块买个 VR 眼镜免费看包括这部在内的 10-20 部 VR 电影，也可以选择花几千元购买一个 “电影票 + 衍生品 + 电影旅行项目 + 粉丝活动” 的套餐然后免费获得这款眼镜。“2.0” 肯定比 “1.0” 更有威力，未来 “1.0” 和 “2.0” 会长期共存，但 “2.0” 的比例会持续上升。</p>
<p>我相信，未来消费者因为内容买眼镜的情形要远多于因为眼镜而买内容的情形。也因此，在 VR 发展的初级阶段，各大 VR 眼镜商出于培育市场和行业竞争的考虑会直接参与 VR 内容的制作。但很快他们会发现，长期这样做既不现实也不经济，因此一定会出现一两个全行业的 VR 拍摄标准和几个高度整合的 VR 内容发行平台。各眼镜商对独家内容的掌控将更多体现在第一个 “VR 窗口期” 的独家权利和线上线下联动整合营销的各种可能性上，而不是对这个内容的永久垄断上。最终有一天，戴别人家眼镜的客户在别人的播放平台上也应该能看到自己的这部 “独家作品”，类似今天万达影院与万达参与投资拍摄的电影的关系。</p>
<p>VR 将导致内容产业重新洗牌</p>
<p>无论在好莱坞还是在中国，影视公司的市场格局已经基本尘埃落定，前五大公司占据 50%以上票房已是必然。</p>
<p>但 VR 又把人们拉回到同一起跑线–因为，全世界，到今天，还木有人，拍过 VR 大电影，并成功。在 VR 发展的初期，每个人都是斯皮尔伯格。</p>
<p>VR 电影是 360 度的电影，它的轴心是观众的眼睛，故事必须沿着每一个观众的视线推进。</p>
<p>这是多么大的挑战、机会与诱惑。</p>
<p>VR 给电影业带来了很多前所未有的新课题–</p>
<p>譬如，故事怎么讲，剧本怎么写？传统的 2D、3D 电影，无论结构如何跳跃，都是线性的，每个人看同一部电影在第 20 分 30 秒看到的都是同样的情节和场景。VR 电影完全打破了这种线性。观众自己决定他将跟着谁走进哪个房间，是先看墙后面还是先看树上面，在十字路口是向左转还是向右转。同样一部电影，一个人看完可能只需要 20 分钟，另一个人看完却可能用了一个小时。（譬如前面提到 Oculus 制作的《迷失》，观众看完所需的时间从 3 分半到 10 分钟不等。）这个时候故事怎么讲，剧本怎么写？一部电影里需不需要多个平行发生的故事？这些平行发生的故事如何交互连接？你如何引导观众看有故事的这个方向而不是没故事的那个方向，用声音、道具还是用光？我们到底要给观众多大的选择权，在选择与效率、自主与预设之间如何平衡？如果观众就是不听你的引导你要不要强行把他拉回来？能否让观众不仅在电影场景中选择自己去哪里看什么，还能在故事里扮演自己选择的角色，并据此推进他所看到的故事进程？最重要的，如何确保 VR 电影仍然能够讲出好的打动人心的故事而不会让技术喧宾夺主？所有这些今天都没有答案，需要大量的实验和试错。很多人可能不知道，从第一台电影摄像机诞生到第一部真正电影诞生中间隔了二十多年，我相信 VR 长电影的诞生应该不需要那么长的时间。</p>
<p>又譬如，场景切换和声音切换怎么处理？平时我们看电影的时候不会因为场景切换而感到不适，但如果你置身场景当中，场景切换的时候可能就会感到晕眩。你当然可以可以在切换场景之前把观众弹出场景，等到切换完成再重新带入，但这样进进出出会不会让整个体验显得支离破碎？或许，最适合拍 VR 电影的是那些场景有变化不单一但是线性自然、不需要反复切换的故事（举例：一个人在海上漂流、飞机失事一群人滞留孤岛、古堡里发生谋杀案、索马里街头巷战等），而不是像《盗梦空间》那种频繁切换把时空玩残的电影。在声音方面，如何确保声音跟着目光走，让电影的声效变得更加 “聪明”？譬如，你置身于电影中一个喧嚣的夜场，这个时候你看舞台，听到的就是舞台上的演唱；看周围的人，听到的就是他们的喧嚣；看卡座里的人，能听到他们扯着嗓子的对话；男主角出去接电话，你看他的背影，就能听到他在电话里磁性的声音。</p>
<p>再譬如，导演、摄像如何藏身？360 度场景如何剪辑？在传统的 2D 和 3D 电影中，这从来不是一个问题。一旦进入 VR 电影， 这个问题立即凸显。总不能让观众正沉浸在男神女神的激情缠绵或者杀手出现的深度恐怖中忽然一回头就看见导演摄像场工拿着对讲吆五喝六旁边还有一车盒饭。除此之外，剪辑也是一个难题–如何让导演在 2D 的监视器上剪辑出 360 度的场景？</p>
<p>还譬如，如何有分寸、有节制地进行感官刺激。你看传统电影的时候，情节再恐怖，你一看周围的观众或者窗外的车水马龙，立刻就可以得到舒缓。但在 VR 电影时代，你就在场景里，如果你眼前的衣橱里忽然倒下具尸体或者身边猛然蹿出只面目狰狞的怪兽，心脏不好的就未必是一句 “吓死宝宝了” 就可以轻易平复的了，弄不好会出人命。因此，如何在调动感官情愫和尊重生理极限之间保持平衡，将会是是电影人的新课题，在确立全球规范之前也一定会引起一波波的争议。</p>
<p>所有这些新课题都没有现成的答案，华谊光线博纳华策这样的影视巨头也没有可以依赖的现成资源。因此，VR 影视公司批量涌现几乎是必然的。它们中间大多数会失败，少数会被投资或整合，但也会有极少数借着这波 VR 大潮快速发展脱颖而出，成为新一代的影视游戏旗舰，整个行业就此洗牌。</p>
<p>VR 电影和 VR 游戏的界限会日渐模糊</p>
<p>由于观众已经置身于电影场景中，剩下的问题就是在多大程度上电影可以为他们留出与电影中的人物、场景和故事互动的空间。如果一个观众不仅可以身临其境，还可以随时和电影中的人物互动，那么这个电影与游戏其实已经开始接近；如果他还能影响电影里故事的走向和进程，那么它与游戏已经没有本质的区别。一个观众可以与之互动并且影响故事进程的电影本质上就是一个具有电影结构和戏剧性的游戏。未来在电影和游戏之外，很可能会诞生 “游戏电影”（也可以称之为 “浸入式电影”）和 “电影游戏”（也可以称之为 “叙事性游戏”），它们的区别仅仅在于观众对于故事进程的影响程度。一个优秀的游戏电影的导演必须深谙游戏的逻辑；反过来一个优秀的电影游戏的导演必须精通电影的语言。</p>
<p>是技术的进步为电影与游戏的混搭和融合提供了可能。随着形象、动作、表情捕捉技术的不断提升，电脑可以模拟出出演演员的大部分特征，从而减少他们在电影中的物理表演量。这也为观众与演员的互动提供了可能。事实上，一部 VR 电影可能由于平行故事的存在或者与观众互动的需要导致演员的表演总量看似多了很多，但他们真正需要物理表演的部分很可能不升反降。因此，未来导演会有更多的工作不是在现场，而是在机房。</p>
<p>VR 电影的游戏化也意味着未来的影视公司与游戏公司的界限会越来越模糊。VR 电影和 VR 游戏也会像《花千骨》一样天然融合，两边都可能成为对方的广告牌。所有 VR 电影公司里都会有游戏人才，所有游戏公司在推出大游戏 IP 的时候也会把 VR 电影短片作为营销标配。优秀的影视公司和游戏公司会有更多的理由走到一起尝试各种合作与嫁接，在相互学习、渗透、协同和联姻中共同成长。</p>
<p>VR 电影是衍生品销售的天堂</p>
<p>在 VR 电影中，你可以和里面的人物（当然也可以是卡通形象）生活在同一个世界里，他们就在你身边，几乎是触手可及。你可以和他们对视、对笑、游戏、调情，这自然为衍生品销售转动起一个超级强大的引擎。未来你甚至不用脱离场景，就可以在场景中直接下单，等你看完电影摘下眼镜，你购买的衍生品已经被送到你的手边。</p>
<p>这里所说的衍生品绝不仅限于玩具、T 恤、饮料这样的简单产品，它可以是一件极富设计感的大衣、一款来自米兰家具展的沙发、一个超级酷炫的数码产品（譬如下一代可以直接拍 VR 的手机），也可以是一辆梦幻跑车、一家 B 格闪耀的餐厅、甚至一个依山傍水的别墅样板房。这些原本植入在电影里只能当广告看的 “衍生品” 忽然间有了生命，栩栩如生地出现在你的面前，把展示变成了一场 360 度的亲密接触。</p>
<p>VR 时代电影院会遇到前所未有的挑战</p>
<p>如果 VR 电影的入口是头戴式眼镜，那么你是否还需要去电影院观看 VR 电影的确成了一个问题。</p>
<p>在 VR 电影时代，电影院将很难通过小修小补来满足市场的需求，对着大银幕排排坐的观影方式将失去意义，电影院的整体设计只能推倒重来。未来电影院的主流形态会是怎样还有待定义，或许它会是“常态影厅 + 社交观影包间 + 浸入式 VR 观影透明空间 + 衍生品体验馆” 的某种组合。这种侵入式观影空间可能是 2 米 x 2 米的 “小包”，也可能是 50 米 x 50 米的 “大场”，墙壁以全透明或半透明的玻璃为主。那时候你再来电影院，看到的将不是传统电影厅里一排一排头戴 VR 眼镜的观众，而是一个个透明房间里的人，戴着头盔，做出各种怪异的动作和表情。</p>
<p>我相信即便在 VR 电影时代，常态的电影厅还将继续有存在的价值，还会有传统 2D 电影继续上映；反倒是 3D 电影很可能是一个过渡性产品，很快将被 VR 取代。</p>
<p>有人认为 VR 时代的电影院会成为一个拥有非凡计算能力的机房。你可以戴着自己的眼镜过去，用电影院提供的电脑，体验各种 VR 电影的惊心动魄。我觉得这听上去有点像十年前的网吧，把科幻片生生演成了怀旧片。未来所有的计算能力一定都在天上，在云中。你去电影院只有三个可能的原因：a) 为了社交；b) 为了更好的 VR 体验；c) 这电影只有电影院里有。</p>
<p>对电影院来说，a) 是福音，b) 需要主动思考和探索，而 c) 是最大的不确定因素。这是因为–</p>
<p>视频网站最有机会成为 VR 内容的发行平台</p>
<p>短期内 VR 电影或许可以帮到电影院。电影院可以在上映某部大片的同时在电影院里辟出一个体验区，在这个体验区里观众可以戴上 VR 眼镜，置身大片的场景中，体验大片的一个片段。摘下眼镜转身就可以买到你刚刚在场景中看到的东西，然后你可以带着它走进旁边的 5号厅去欣赏完整的 2D 或者 3D 电影。</p>
<p>但这显然只是 VR 发展的初级阶段，不是它的本意。未来 VR 电影的主流一定是完整独立的 VR 电影，而不是 2D、3D 电影的预告片。</p>
<p>即便电影院面向 VR 电影时代进行了改造，完成了升级，一个绕不过去的问题是：对 VR 电影来说，未来的主发行渠道还必须像今天的 2D 和 3D 电影一样必须是电影院吗？如果电影院本身被边缘化了，传统的电影发行公司和院线公司还有存在的意义吗？</p>
<p>我们不妨设想一下，如果带宽和计算能力都不是问题（它们将来一定不是问题），一旦眼镜在观众手里，电影在硬件商和内容商手里，连接观众和内容还需要什么？</p>
<p>无非一个是支付，一个是播放平台（包括背后的带宽、计算能力和 CDN 网络等）。因此，今天领先的视频网站在 VR 内容（至少是影视内容，将来甚至也包括游戏内容）发行方面拥有天然的优势。如果它们再和在线票务平台结合起来，取代现有的电影发行公司和院线公司几乎是必然。那个时候让 VR 电影给线下院线留出一个窗口期就好比让大闸蟹给阳澄湖留出一个窗口期一样可笑。</p>
<p>因此，未来 VR 电影产业链条上真正不可或缺的只有硬件商 + 内容商 + 播放和支付平台，其它的都可有可无。而在这样一个产业链条里，那些拥有大量用户、投得起研发买得起 IP、左手有支付工具右手有视频平台、既有硬件经验又有内容资源、影视和游戏双剑合一的生态型玩家显然会占尽优势。除此之外，也会有一些专注 VR 内容发行和播放的平台破茧而出，试图以 VR 为突破口扩挑战视频和影视发行行业的既有格局。在这样一个时代如果手里没有 VR 硬件、VR 内容和 VR 发行平台这三张牌里的至少一张，将很难出现在影响娱乐业产业格局的公式里。</p>
<p>对传统电影院来说，要想在 VR 电影这波浪潮中不被边缘化，要么找到能让观众即便家里有眼镜也心甘情愿带着眼镜来影院观看的理由（譬如只有在电影院看才能体验到某种特殊效果或者才能场景中下单看完后立即拿到衍生品），要么通过整合做大然后进入 VR 电影的投资和制作确保至少有一部分 VR 电影只有电影院才能看到，否则集中放映和观看这件事会越来越没有市场。这点和体育比赛和演唱会不一样，因为那些都有 “现场” 的概念，你戴上头盔固然可以获得无限接近现场的感受，但你毕竟不在现场。但电影就不同了，电影院本来也不是电影的现场，电影的真正 “现场” 在 VR 电影的场景里。</p>
<p>VR 时代谁将成为赢家？</p>
<p>今天，虽然行业巨头和一些 VC、PE 已经开始在 VR 的方向上投石问路，但总体来说 VR 产业–无论是技术、产品还是内容、应用–都还处于 “Pre-元年” 的早期阶段。</p>
<p>随着 2016 “VR 元年” 的到来，VR 产业在 2016-18年 将进入 “快速播种” 的第一阶段。在此期间，大多数领先的硬件公司、视频网站和内容公司会通过新公司设立、分拆、合资、战投、并购等方式在 VR 领域开始布局，专注于 VR 眼镜、VR 相机、VR 内容制作和 VR 内容发行的创业企业会密集诞生，资本（尤其是早期资本）也会开始密切关注这个产业里的投资机会。一些财务投资人会与产业玩家联手，设立专门的 VR 产业基金，布局 VR 产业链。预计 2016年 全球完成的 VR 短片会达到数百部，2017-18年 随着头戴式眼镜的技术进步（特别是在重量和舒适感方面）或许会有第一部基于强 IP 的 VR 长电影诞生；2016-17年，大型 VR 游戏将陆续推出，并开始引领游戏产业的潮流；2017年 也将出现销售量突破百万量级的 VR 眼镜商。</p>
<p>2018-2020年，VR 硬件公司和内容公司完成初步的勾兑，形成硬软一体的几大 VR 生态阵营，专注 VR 内容跨阵营分发的发行平台会初露倪端。未来很可能不会有只做 VR 眼镜而不涉足 VR 内容的公司；专注 VR 内容的独立制作公司会有很多，但平台级的大内容公司同样会寻求对 VR 硬件的掌控。这是因为未来的市场和产业格局一定会要求大的玩家在硬件与内容之间有完美协同联动、根据需要自由安排收入模式分配商业利益的能力。这个阶段的核心商业模式就是两个，要么以内容拉动硬件销售，要么以硬件拉动内容销售。国外以 Oculus、苹果、三星为代表，国内以乐视、小米为代表的硬件公司很可能会成为娱乐内容产业升级的重要推手，每一部有影响力的 VR 电影的出品方中都会出现硬件商的名字。此外，随着 VR 内容的不断丰富，有规模的 VR 广告平台会开始出现。</p>
<p>2020年-2022年，VR 行业的标准基本确立，跨阵营的发行平台如日中天取代了今天的电影发行公司，VR 场景内营销和售卖将会逐渐形成规模，基于 VR 内容的新电商平台将会诞生。在这个阶段，VR 也将被更加广泛地应用到娱乐之外的其它领域。</p>
<p>尽管一切才刚刚开始，百舸争流的热闹场面已经在发生，但和所有其它产业一样，最终能够胜出的一定只是少数人。除了 Oculus 多少有点一骑绝尘的感觉之外，目前其他的玩家都大致还在同一个起跑线上。</p>
<p>对于谁有可能成为未来 VR 产业的赢家，我的总体感觉是：</p>
<p>所有需要插入手机、需要 PC 配合、需要手柄操作的 VR 眼镜都是过渡性产品，因为它们违反人性。未来的 VR 眼镜一定是一体式的，直接和云端的内容、应用和计算能力相连。清晰度、舒适度和内容兼容度都可能成为决定 VR 眼镜厂商命运的向度。虽然最终芯片技术的发展或许可以让我们不再需要头戴式设备，但直到那一天，我看不到头戴式眼镜取代手机的可能性。它可以和手机完美互动，但这种互动肯定不应以把手机放进自己躯体里的方式来进行。</p>
<p>硬件商与内容商将从不同的出发点出发，互相侵入对方的领地，最终会出现多家硬软联姻、甚至硬软一体的 “索尼哥伦比亚” 或者 “哥伦比亚索尼”。当然，任何创意产业都无法被垄断，因此 VR 内容领域虽然会有巨头，但也会有层出不穷的中头、小头和微头。相比之下，硬件商经过三到五年的合纵连横，最终会走向整合，这个版图上最终留下的玩家应该不会比今天的手机厂商更多。</p>
<p>随着 VR 电影和 VR 游戏的界限越来越模糊，未来电影和游戏的商业模式也将日益趋同。游戏里买装备、买道具、买体验的思路很可能会淘汰看电影买门票看贴片和植入广告的思路，真正有前途的是 “会员费 + 场景内购物 + 线下消费” 的强大组合。电影游戏化会比游戏电影化更容易走通。</p>
<p>在 VR 时代，超级 IP 同样重要，甚至更加重要。道理很简单：如果你是内容商，你已经承担了新技术新玩法新市场的风险，这时候应该尽量降低内容本身的风险。因此，手里有超级 IP 的内容公司以及与它们合作的硬件公司将比没有这些超级 IP 的玩家们更有机会品尝到 VR 的果实。</p>
<p>与 “VR 前” 时代相比，VR 时代是一个更加青睐生态型企业的时代。硬软一体、八面协同的生态型企业在 VR 时代的竞争优势将比以往更为明显。</p>
<p>虽然所有探索都值得鼓励，但万恶的资本和资本家们还是会更青睐那些创始人有正确的基因、技术或者模式具有颠覆性、潜在商业化路径清晰、最好还有一定规模的 VR 公司。这样的公司可以是独立的初创企业，也可以是大公司分拆出来的 VR 业务平台。后者甚至比前者更有机会快速发展。</p>
<p>一个被 VR 改变的世界会有多么精彩？</p>
<p>十五年前，当 AOL、China.com 如日中天的时候，没有人会想到十五年后的世界会是今天这个样子。同样，无论我们今天试图多么深入地研究 VR 产业，面对十年、十五年之后的世界我们一定也是井底观天。</p>
<p>与预测相比，我们有更多的畅想。与答案相比，我们有更多的问题。我愿意以下面这些问题做为本文的结尾。回答它们应该不需要十五年的时间。</p>
<p>三到五年后是否所有的相机和手机都可以拍摄 VR？</p>
<p>头戴式眼镜什么时候可以做到轻如蝉翼？未来观看 VR 内容是否一定需要头戴式眼镜？我们会不会带上一副隐形眼镜或者贴上一片芯片就可以彻底驱动我们的感官？</p>
<p>未来的人们是否会彻底生活在现实和虚拟两个世界里，拥有多个身份，并在它们之间来回游走切换？</p>
<p>在虚拟的世界里，是否大脑–而非身体–将支配一切？只要你愿意（当然也许你需要为此付出点费用），是否所有物理极限都可以突破，每个人都可以纵身一跃从地面跳到埃菲尔铁塔顶部或者不带氧气瓶在数百米深的海底自由徜徉？</p>
<p>未来当你和我看同一部 VR 电影的时候，我们看的是同一部电影吗？</p>
<p>未来看电影会更社交还是更孤独？VR 会把人类变得更宅吗？</p>
<p>未来除了娱乐，VR 在体育、医疗、养老、教育、建筑、军事等领域，还能诞生哪些炸裂脑洞的应用？</p>
<p>毫无疑问，VR 可以让人们感同身受。这会增加这个世界的理解和善意吗？</p>
<p>顺便说一句，全篇写的都是 VR，只有题目用了 “奥酷拉思”，没什么特别的原因，就是觉得 “奥酷拉思” 四个字特别酷。</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>什么花样。</p>]]>
    
    </summary>
    
      <category term="商业IT评论" scheme="http://chocoluffy.com/tags/%E5%95%86%E4%B8%9AIT%E8%AF%84%E8%AE%BA/"/>
    
      <category term="虚拟现实" scheme="http://chocoluffy.com/tags/%E8%99%9A%E6%8B%9F%E7%8E%B0%E5%AE%9E/"/>
    
      <category term="转载" scheme="http://chocoluffy.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Twitter engine in React]]></title>
    <link href="http://chocoluffy.com/2016/01/06/Twitter-engine-in-React/"/>
    <id>http://chocoluffy.com/2016/01/06/Twitter-engine-in-React/</id>
    <published>2016-01-07T04:10:20.000Z</published>
    <updated>2016-01-07T04:24:33.000Z</updated>
    <content type="html"><![CDATA[<p>The hand-on project to get myself familiar with React.js, which pulls the latest post from Twitter by using a nodejs module in client-side javascript and allows users to form their own collections and share them via Codepen or other platforms. </p>
<a id="more"></a>
<p><img src="http://ww4.sinaimg.cn/large/c5ee78b5gw1ezqtafuny9j21kw0uhqhx.jpg" alt="screen capture"></p>
<p><strong>Some important details you want to learn on this project</strong></p>
<h2 id="Browserify">Browserify</h2><p>used for building all the dependency file together in such a way that we can use Node.js module to build up out client-side application. We install it in this way:<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install - - <span class="built_in">save</span>-<span class="built_in">dev</span> browserify</span><br></pre></td></tr></table></figure></p>
<p>Notice, here is a save-dev flag, which tells npm that it is a development dependency, it will write this dependency in package.json file. Writing a module name into package.json tells npm to install when executed command: <code>npm install</code>. Here is a distinction between running dependency and developing dependency. And since Browserify is used during build time, so it belongs to developing dependency. </p>
<h2 id="Writing_style">Writing style</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> React = require(<span class="string">'react'</span>);</span><br><span class="line"><span class="keyword">var</span> Stream = require(<span class="string">'./Stream.react.js'</span>);</span><br><span class="line"><span class="keyword">var</span> Collection = require(<span class="string">'./Collection.react.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Application = React.createClass(&#123;</span><br><span class="line">	getInitialState: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> &#123;</span><br><span class="line">			collectionTweets: &#123;&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	addTweetToCollection: <span class="function"><span class="keyword">function</span><span class="params">(tweet)</span></span>&#123;</span><br><span class="line">		<span class="keyword">var</span> collection = <span class="keyword">this</span>.state.collectionTweets;</span><br><span class="line">		collection[tweet.id] = tweet;</span><br><span class="line">		<span class="keyword">this</span>.setState(&#123;</span><br><span class="line">			collectionTweets: collection</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line">	removeTweetFromCollection: <span class="function"><span class="keyword">function</span><span class="params">(tweet)</span></span>&#123;</span><br><span class="line">		<span class="keyword">var</span> collection = <span class="keyword">this</span>.state.collectionTweets;</span><br><span class="line">		<span class="keyword">delete</span> collection[tweet.id];</span><br><span class="line">		<span class="keyword">this</span>.setState(&#123;</span><br><span class="line">			collectionTweets: collection</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	removeAllTweetsFromCollection: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.setState(&#123;</span><br><span class="line">			collectionTweets: &#123;&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	render: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (</span><br><span class="line">				&lt;div className=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">					&lt;div className=<span class="string">"row"</span>&gt;</span><br><span class="line">						&lt;div className=<span class="string">"col-md-4 text-center"</span>&gt;</span><br><span class="line">							&lt;Stream onAddTweetToCollection=&#123;<span class="keyword">this</span>.addTweetToCollection&#125; /&gt;</span><br><span class="line">						&lt;/div&gt;</span><br><span class="line">						&lt;div className=<span class="string">"col-md-8"</span>&gt;</span><br><span class="line">							&lt;Collection tweets=&#123;<span class="keyword">this</span>.state.collectionTweets&#125; onRemoveTweetFromCollection=&#123;<span class="keyword">this</span>.removeTweetFromCollection&#125;</span><br><span class="line">							 onRemoveAllTweetsFromCollection=&#123;<span class="keyword">this</span>.removeAllTweetsFromCollection&#125; /&gt;</span><br><span class="line">						&lt;/div&gt;</span><br><span class="line">					&lt;/div&gt;</span><br><span class="line">				&lt;/div&gt;</span><br><span class="line">			)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br><span class="line">module.exports = Application;</span><br></pre></td></tr></table></figure>
<p>It is in out Application.react.js. The reason we adopt a CommonJS writing style is that it will be convenient for other part of the file to require this react component we just build. So we use  such <code>module.exports = Application;</code> to allow other file when used to require this component. </p>
<h2 id="Children_elements_change_parent’s_elements">Children elements change parent’s elements</h2><p>Focus on this part:</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">Stream </span>onAddTweetToCollection=&#123;this.<span class="keyword">addTweetToCollection&#125; </span>/&gt;</span><br></pre></td></tr></table></figure>
<p>the function defined in this react component is passed in, which indicates that this function will be called inside Stream component where since we know addTweetToCollection embodies a <code>setState</code> method, it illustrates how child element can update its parent component’s state.</p>
<p>Thus, in Stream component, we can access this method by using <code>this.props.onAddTweetToCollection</code>. <strong> Child component feed the arguments to parent’s state-changing function which will trigger <code>render()</code> function to re-render the whole children component again. </strong></p>
<h2 id="React_lifecycle_method_API_like_componentDidMount()">React lifecycle method API like componentDidMount()</h2><p>This function is part of react API, that will be called once after the initial rendering finished. At that time, we have a initialed DOM tree, and it will be a perfect time for using another js library! </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">componentDidMount</span>:<span class="value"> <span class="function">function</span>()&#123;</span><br><span class="line">	SnapkiteStreamClient.<span class="function">initializeStream</span>(this.handleNewTweet)</span></span>;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="rule"><span class="attribute">compoentWillUnmount</span>:<span class="value"> <span class="function">function</span>()&#123;</span><br><span class="line">	SnapkiteStreamClient.<span class="function">destroyStream</span>()</span></span>;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p><code>componentWillUnmount()</code> will be called when react unmount the components.</p>
<p>And in general, react lifecycle methods can be grouped into three phases.<br>mounting, updating and unmounting. </p>
<p>And in this coding example, we see <code>componentDidMount</code> and <code>componentWillUnmount</code>. Also, we have <code>componentWillMount</code> and other methods</p>
<blockquote>
<p>Note that <code>componentDidMount</code> will be the method when DOM is ready. Thus we usually will introduce other JS library at this method to do something on the DOM tree. For example, Jquery, setInterval, setTimeout and so on.</p>
</blockquote>
<p>say in this example, if we want to use setInterval method:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">componentDidMount</span>:<span class="value"> <span class="function">function</span>() &#123;</span><br><span class="line">  this.interval = <span class="function">setInterval</span>(this.handleTick, <span class="number">1000</span>)</span></span>;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="rule"><span class="attribute">componentWillUnmount</span>:<span class="value"> <span class="function">function</span>() &#123;</span><br><span class="line">  <span class="function">clearInterval</span>(this.interval)</span></span>;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>And we use react-don node.js module here. </p>
<p>Some of other lifecycle methods are: <code>shouldComponentUpdate</code>, this will determine whether or not to call the render function, and <code>forceUpdate</code> can skip this function checking. Note that it is a good way to enhance app’s speed when in hundreds of components app. <code>componentWillRecieveProps</code> will invoke wen receiving new props can use <code>setState</code> inside this method while the similar method <code>compontWillUpdate</code> cannot. <code>componentDidUpdate</code> will invoke after each update. </p>
<h2 id="getDefaultProps">getDefaultProps</h2><p>it will set the props if it receive no props from parent components</p>
<h2 id="Checking_for_props_exist?">Checking for props exist?</h2><p>the predicate statement at parent component may sometimes determine whether or not to render a children component. If not, then in later children component part, it should check whether it receives props from parent component. </p>
<h2 id="Validation_function_for_properties">Validation function for properties</h2><p><code>propTypes</code> is used for validating if a property is used and has value. If not, it will report an error to console.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">propTypes: &#123;</span><br><span class="line">	tweet: <span class="function"><span class="keyword">function</span>(<span class="params">properties, propertyName, componentName</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> tweet = properties[propertyName];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(!tweet)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Tweet must be set. '</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(!tweet.media)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Tweet must have an image'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	onImageClick: React.propTypes.func</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>So in <code>propTypes</code>, we are validating the existence of Tweet by obtaining the tweet property object from <code>properties[propertyName]</code>. And for validating the <code>onImageClick</code> part, we only need to ensure that it is a function. so we did:</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">onImageClick: React.propTypes.func</span><br><span class="line">```	</span><br><span class="line"></span><br><span class="line">Some similar validation functions provided <span class="keyword">by</span> React are: React.propTypes.<span class="built_in">number</span> <span class="operator">and</span> so <span class="command"><span class="keyword">on</span>.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## this.refs</span></span><br><span class="line"></span><br><span class="line">Keep <span class="operator">in</span> mind, however, that <span class="operator">the</span> JSX doesn<span class="string">'t return a component instance! It'</span>s just <span class="operator">a</span> ReactElement: <span class="operator">a</span> lightweight representation that tells React what <span class="operator">the</span> mounted component should look like. In other <span class="built_in">word</span>, we can insert `ref` property <span class="operator">in</span> `render()` , <span class="operator">the</span> component <span class="keyword">it</span> renders, so that we can access that component outside `render` <span class="function"><span class="keyword">function</span>.</span></span><br></pre></td></tr></table></figure>
<p>componentDidMount: function(){<br>    this.refs.collectionName.focus();<br>},</p>
<p>render: function(){<br>    return (<br>            <form classname="form-inline" onsubmit="{this.handleFormSubmit}"><br>                <header text="Collection Name: "></header></form></p>
<pre><code>        &lt;<span class="keyword">div</span> className=<span class="string">"form-group"</span> style={inputStyle} onChange={this.handleInputValueChange}
         value={this.state.inputValue} <span class="keyword">ref</span>=<span class="string">"collectionName"</span> /&gt;
         &lt;/<span class="keyword">div</span>&gt;

         &lt;<span class="type">Button</span> label=<span class="string">"Change"</span> handleClick={this.handleFormSubmit} /&gt;
         &lt;<span class="type">Button</span> label=<span class="string">"Cancel"</span> handleClick={this.handleFormCancel} /&gt;
    &lt;/form&gt;
)
</code></pre><p>}<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">we know <span class="keyword">that</span> `componentDidMount` will be called instantly <span class="keyword">after</span> DOM tree <span class="keyword">is</span> ready.  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Bootstrap usage in this project</span></span><br></pre></td></tr></table></figure></p>
<p><div classname="container-fluid"><br>                    <div classname="row"><br>                        <div classname="col-md-4 text-center"><br>                            <stream onaddtweettocollection="{this.addTweetToCollection}"><br>                        </stream></div><br>                        <div classname="col-md-8"><br>                            <collection tweets="{this.state.collectionTweets}" onremovetweetfromcollection="{this.removeTweetFromCollection}" onremovealltweetsfromcollection="{this.removeAllTweetsFromCollection}"><br>                        </collection></div><br>                    </div><br>                </div><br>```</p>
<p>It is where we use some Bootstrap property to quickly add style to the components. Note that we only add those style at the wrapper element for example we always wrap a <code>div</code> outside the target element. </p>
<p>references <a href="http://getbootstrap.com/css/" target="_blank" rel="external">this post</a> for more Bootstrap property.</p>
<ul>
<li><code>container-fluid</code> for a full width container, spanning the entire width of viewport.</li>
<li><code>text-center</code> to put the innerHTML text at the center of the element. </li>
<li><code>row</code> will create a horizontal groups of elements. </li>
<li><code>col-md-8</code> and <code>col-md-4</code> for sparing width horizontally.</li>
<li><code>form-group</code> for optimum spacing for labels and input controls.</li>
<li><code>form-control</code> for element inside the form wrapper, usually appear with the <code>form-group</code> class. </li>
</ul>
<h2 id="Try_to_add_color_palette_using_Mustache-js_and_ColorThief-js">Try to add color palette using Mustache.js and ColorThief.js</h2><blockquote>
<p>Due to my technical issue, I can only make it a local version. I will try me best to host it online.</p>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>The hand-on project to get myself familiar with React.js, which pulls the latest post from Twitter by using a nodejs module in client-side javascript and allows users to form their own collections and share them via Codepen or other platforms. </p>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://chocoluffy.com/tags/javascript/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[D3js in 3D [Animation focus]]]></title>
    <link href="http://chocoluffy.com/2015/12/31/D3js-in-3D-Animation-focus/"/>
    <id>http://chocoluffy.com/2015/12/31/D3js-in-3D-Animation-focus/</id>
    <published>2015-12-31T17:14:50.000Z</published>
    <updated>2016-01-26T03:16:30.000Z</updated>
    <content type="html"><![CDATA[<p>Focus on how animations work in such 3D scene and how I achieve that. <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> here! </p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/c5ee78b5gw1ezjckugw4nj21kw0ncn9h.jpg" alt="Animation"></p>
<h2 id="Animation">Animation</h2><p>One key thing for such 3D scene is animations and we need a lot of interaction to finish that cooperation. Thus, in usual, we need to add multiple event listener to many sibling elements and the way we did that is by creating a parent element and by utilizing the event propagation to achieve the goal.</p>
<p>Say, we have a lot of <code>&lt;a-cube&gt;</code> now, and we want to add the click event listener to the <code>&lt;a-cube&gt;</code> below to trigger the animations of the <code>&lt;a-cube&gt;</code> above the scene. [The way we add animations is to append tag <code>&lt;a-animation&gt;</code>  as the childNode of the <code>&lt;a-cube&gt;</code>]. Now, in order to do that attachment in one time, we need to group all the <code>&lt;a-cube&gt;</code> into a container, we can just use a <code>&lt;a-entity id=“meteor”&gt;&lt;/a-entity&gt;</code> to do that thing. So we can add the click event listener at the parent node, and when the childNode get clicked, the event will propagated to the parent level by level, and back then when it achieve the targeted parent. we can trigger the function and do all the <code>append</code> or other actions on <code>e.target</code>. [here <code>e.target</code> refers to the one get clicked]. </p>
<p>In the later interaction. we want the action of one object may trigger another object’s actions. Then, we need to leave such mark to indicate which object may be related to! For example, in my code, I use  a data-attribute called “flag” as a id to indicate which object to bind. So later in the eventListener, we can use <code>e.target.getAttribute(“flag”)</code> to obtain that value for further use like <code>meteorParentNode.childNodes[e.target.getAttribute(“flag”)].append()</code> some animation nodes to the “meteor”!!</p>
<h2 id="Image_on_meteor">Image on meteor</h2><p>In order to make it a fun, I decided to use image as the surface of the meteors ,  and the way to achieve that is to wrap a tag <code>&lt;a-root&gt;</code> and a tag <code>&lt;a-entity&gt;</code> further inside. So now the structure will be like:<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;a-entity some-attributes-here&gt;</span></span><br><span class="line">	<span class="tag">&lt;a-root&gt;</span></span><br><span class="line">		<span class="tag">&lt;a-entity some-attribute-here&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>And set the src to be some texture image or even in this project some funny images as the surface of the meteors. And that’s it! </p>
<h2 id="Further_Reading">Further Reading</h2><ul>
<li><a href="http://aframevr.tumblr.com/" target="_blank" rel="external">Aframe in tumblr</a></li>
<li><a href="https://aframe.io/docs/core/animation.html" target="_blank" rel="external">Official Aframe animations guide</a></li>
<li><a href="http://projects.bmannconsulting.com/aframe-boilerplate/" target="_blank" rel="external">How to add texture for Aframe objects</a></li>
<li><a href="http://www.kirupa.com/html5/handling_events_for_many_elements.htm" target="_blank" rel="external">How to add event listener to multiple sibling elements</a></li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Focus on how animations work in such 3D scene and how I achieve that. <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> here! </p>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://chocoluffy.com/tags/javascript/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[D3js in 3D]]></title>
    <link href="http://chocoluffy.com/2015/12/30/D3js-in-3D/"/>
    <id>http://chocoluffy.com/2015/12/30/D3js-in-3D/</id>
    <published>2015-12-30T17:30:59.000Z</published>
    <updated>2016-01-26T03:16:38.000Z</updated>
    <content type="html"><![CDATA[<p>Create a virtual-reality-like scene in mobile and desktop. Using D3js to do the math! Check out <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> now!</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezi7ksw2zyj21kw0sa17h.jpg" alt="virtual scene"></p>
<p>Inspired by <a href="https://www.youtube.com/watch?v=Tb2b5nFmmsM" target="_blank" rel="external">d33d</a>, 💣<strong> <a href="http://chocoluffy.com/d3js-Aframe/">Live Demo</a> </strong></p>
<h2 id="Build_up_a_local_server_to_avoid_cross-origin_error">Build up a local server to avoid cross-origin error</h2><p>we know that using <a-image> can do insert the image. Due to the cross-origin problem, in local testing, we need to use a local server to host the static file and its assets, such as images so that when used in html file, it will not cause a cross-origin error. The way we build up a temporary server is to use python. First cd to the corresponding directory, then do:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="number">8000</span></span><br></pre></td></tr></table></figure></a-image></p>
<p>Then go to the localhost:8000 can see the files. For more detailed info, check <a href="http://stackoverflow.com/questions/8456538/origin-null-is-not-allowed-by-access-control-allow-origin" target="_blank" rel="external">this post</a> in stack overflow.</p>
<h2 id="How_to_append_tag_in_multiple_nodes">How to append tag in multiple nodes</h2><p>references <a href="http://stackoverflow.com/questions/24318154/d3-js-append-on-existing-div-and-hierarchy" target="_blank" rel="external">this post</a> from stack overflow</p>
<h2 id="Color_palette">Color palette</h2><p>references <a href="http://paletton.com/#uid=10M0u0kiRKW0VGw8oOOrBQoTc+M" target="_blank" rel="external">this website</a></p>
<h2 id="How_to_host_your_static_page_in_github">How to host your static page in github</h2><p>references <a href="https://help.github.com/articles/creating-project-pages-manually/" target="_blank" rel="external">this post</a></p>
<p>The final result will be, you can access the project site from your github.io website with a branch. The procedure goes well, but it seems that gh-pages cannot host a d3 or aframe pages? Answer: YES, SURE WE CAN!!! for more info, you can just visit <a href="https://chocoluffy.github.io/d3js-Aframe/" target="_blank" rel="external">my website</a>, github can host static website for free, so what kind of websites can be called as static? we called those sites as “static” as it only involves client-side scripting if it contains js file. Those who need server-side scripting are called dynamic websites.</p>
<blockquote>
<p>note that in order to use gh-pages to host my project website, you need to name the html file to be <code>index.html</code>. Other file name will not be recognized!!</p>
</blockquote>
<p>To summarize, the basic procedure is:</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone … <span class="comment">// from github, copy the repo’s https</span></span><br><span class="line"><span class="keyword">cd</span> …</span><br><span class="line">git checkout - -orphan gh-pages</span><br><span class="line">git <span class="keyword">rm</span> -rf .</span><br></pre></td></tr></table></figure>
<p>Then now, the gh-pages should be empty. Move the prepared <code>index.html</code> to here then<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> “<span class="keyword">First</span> <span class="keyword">commit</span>”</span><br><span class="line">git push origin gh-pages</span></span><br></pre></td></tr></table></figure></p>
<p>Then, go to www.chocoluffy.com/<your-project-name>, you can see the project site!!</your-project-name></p>
<h2 id="How_A-frame_works">How A-frame works</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">a-assets</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">a-mixin</span> <span class="attribute">id</span>=<span class="value">"red"</span> <span class="attribute">material</span>=<span class="value">"color: red"</span>&gt;</span><span class="tag">&lt;/<span class="title">a-mixin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">a-assets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">a-scene</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">a-entity</span> <span class="attribute">camera</span> <span class="attribute">look-controls</span> <span class="attribute">wasd-controls</span>&gt;</span><span class="tag">&lt;/<span class="title">a-entity</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">a-entity</span> <span class="attribute">light</span>=<span class="value">"type: point; color: #EEE; intensity: 0.5"</span> <span class="attribute">position</span>=<span class="value">"0 3 0"</span>&gt;</span><span class="tag">&lt;/<span class="title">a-entity</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">a-light</span> <span class="attribute">color</span>=<span class="value">"#da47da"</span> <span class="attribute">position</span>=<span class="value">"0 0 0"</span> <span class="attribute">type</span>=<span class="value">"ambient"</span>&gt;</span><span class="tag">&lt;/<span class="title">a-light</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;a-sky color="#c8f8e0"&gt;&lt;/a-sky&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">a-sky</span> <span class="attribute">src</span>=<span class="value">"road.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a-sky</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">a-scene</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>References <a href="https://aframe.io/docs/primitives/a-sky.html" target="_blank" rel="external">this website</a> for more A-frame primitives.</p>
<p>Then by using d3js, we can add corresponding number of <a-entity> to the scene from data array.</a-entity></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">      <span class="keyword">var</span> data=[<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>]</span><br><span class="line">      <span class="keyword">var</span> tip = -<span class="number">0.5</span>;</span><br><span class="line">      <span class="keyword">var</span> radius = <span class="number">6</span>;</span><br><span class="line">      <span class="keyword">var</span> scene = d3.select(<span class="string">"a-scene"</span>)</span><br><span class="line">      scene.append(<span class="string">"a-camera"</span>)</span><br><span class="line">           .attr(&#123;</span><br><span class="line">            position: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              <span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line">              <span class="keyword">var</span> y = tip;</span><br><span class="line">              <span class="keyword">var</span> z = <span class="number">0</span>;</span><br><span class="line">              <span class="keyword">return</span> x + <span class="string">" "</span> + y + <span class="string">" "</span> + z</span><br><span class="line">            &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">      <span class="keyword">var</span> cubes = scene.selectAll(<span class="string">"a-entity.bar"</span>).data(data)</span><br><span class="line">                  .enter()</span><br><span class="line">                  .append(<span class="string">"a-entity"</span>)</span><br><span class="line">                  .classed(<span class="string">"bar"</span>, <span class="literal">true</span>)</span><br><span class="line">                  .attr(&#123;</span><br><span class="line">                    <span class="comment">// mixin: "link",</span></span><br><span class="line">                    material: <span class="string">"color: #7BC8A4"</span>,</span><br><span class="line">                    geometry: <span class="string">"primitive: box; width: 2; height: 2; depth: 2"</span>,</span><br><span class="line">                    position: <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</span><br><span class="line">                      <span class="keyword">var</span> theta = (i / data.length) * (<span class="number">2</span> * <span class="built_in">Math</span>.PI);</span><br><span class="line">                      <span class="keyword">var</span> x = radius * <span class="built_in">Math</span>.cos(theta); </span><br><span class="line">                      <span class="keyword">var</span> y = <span class="number">0</span>;</span><br><span class="line">                      <span class="keyword">var</span> z = radius * <span class="built_in">Math</span>.sin(theta);</span><br><span class="line">                      <span class="keyword">return</span> x + <span class="string">" "</span> + y + <span class="string">" "</span> + z</span><br><span class="line">                    &#125;,</span><br><span class="line">                    rotation: <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</span><br><span class="line">                      <span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line">                      <span class="keyword">var</span> y = -<span class="number">360</span> * i/data.length;</span><br><span class="line">                      <span class="keyword">var</span> z = -<span class="number">80</span>*<span class="built_in">Math</span>.atan(tip/radius);</span><br><span class="line">                      <span class="keyword">return</span> x + <span class="string">" "</span> + y + <span class="string">" "</span> + z</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;)</span><br><span class="line">    cubes.append(<span class="string">"a-mouseenter"</span>)</span><br><span class="line">         .attr(&#123;</span><br><span class="line">            <span class="comment">// scale: "1 2 1",</span></span><br><span class="line">            position: <span class="string">"0 2 0"</span>,</span><br><span class="line">            visible: <span class="literal">false</span></span><br><span class="line">         &#125;)</span><br><span class="line">    cubes.append(<span class="string">"a-mouseleave"</span>)</span><br><span class="line">         .attr(&#123;</span><br><span class="line">            scale: <span class="string">"1 1 1"</span></span><br><span class="line">            <span class="comment">// position: "0 2 0"</span></span><br><span class="line">            <span class="comment">// visible: true</span></span><br><span class="line">         &#125;)</span></span><br></pre></td></tr></table></figure>
<p>Find the structure of this scene, it will like having several <code>&lt;a-entity&gt;</code> inside <code>&lt;a-scene&gt;</code>, and each of <code>&lt;a-entity&gt;</code> has multiple attributes that defines its position, rotation, material and geometry. And inside the <code>&lt;a-entity&gt;</code>, also has  <code>&lt;a-mouseenter&gt;</code> and <code>&lt;a-mouseleave&gt;</code> tags which helps define the actions when hovered. </p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Create a virtual-reality-like scene in mobile and desktop. Using D3js to do the math! Check out <a href="http://chocoluffy.com/d3js3D/">Live Demo</a> now!</p>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://chocoluffy.com/tags/javascript/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为什么大公司不会偷取你的想法]]></title>
    <link href="http://chocoluffy.com/2015/12/28/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%A7%E5%85%AC%E5%8F%B8%E4%B8%8D%E4%BC%9A%E5%81%B7%E5%8F%96%E4%BD%A0%E7%9A%84%E6%83%B3%E6%B3%95/"/>
    <id>http://chocoluffy.com/2015/12/28/为什么大公司不会偷取你的想法/</id>
    <published>2015-12-29T03:53:07.000Z</published>
    <updated>2015-12-29T04:02:11.000Z</updated>
    <content type="html"><![CDATA[<p>那些难以复制的。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezge2ma3zoj21kw0zkth0.jpg" alt="君临"></p>
<blockquote>
<p>前言： 好久没有更新公众号了， 之前因为一个机器学习的比赛和期末考， 21号结束期末考之后又接了一项数据可视化的比赛， 同时手上还有一些rails app项目想好好干一番， 所以平时只能断断续续地写一些思考。 也托大家的福， 最后那门人脸表情识别的比赛在所有本科生和研究生里面排第6，准确率达到82%， 冠军是84%。 最近也会把这个比赛的一些技巧心得写到博客里，对机器学习感兴趣的同学可以直接发消息到后台和我交流。我的博客收集了平时项目中遇到的technical技巧和思考还有一些不错的公众号的文章， 欢迎参观：<br>www.chocoluffy.com<br>有一些关于社会人文的文字之后会陆陆续续和大家见面， 最近一段时间先更新一些关于商业圈的想法和读书笔记， 比如这一篇。</p>
</blockquote>
<p>在面对投资人的时候， 很多VC都会问你这样的一个问题：如果大公司偷了你的想法的话， 你怎么办? </p>
<p>我想， 先不要把自己代入后果， 在各种利弊分析中致自己于死地， 而是尝试从根本去想， 为什么大公司想偷(采用)我们小startup的想法， 从这个角度做到自圆其说， 对投资人而言也是一剂强心针。 不过说服归说服的技巧， 下文所列为你可以尝试切入的分析原因， 希望你可以在自己的产品上真正做到不可复制。</p>
<p>[1] 大公司不会像VC那样的portfolio investing， 好比如说作为一个VC， 你可以在一个项目投入几十万， 在另一个项目投入几十万， 你有一个不把鸡蛋放在同一个篮子的原则， 但是大公司做不到， 大公司在每进入一个新市场， 承担的是所有stock holder的期望， 他们的试错成本太高， 往往会是在经过了深思熟虑之后的大举侵入。 你说不是谷歌和facebook不是投入了很多资金在许多不同的研究上吗， 但是如果仔细想想， 投资或者收购， 以及其他的很多战略都可以从其意图中推敲出来， 有些投资和入股是防御性质的， 是希望创造一个暂时垄断市场的， 比如中国你最近听到的大部分合并。 而谷歌\facebook的那一种投资是用于开拓市场的， 是希望在未来当舆论熟悉了新的科技场景的时候， 他们能够在研发上占得先机。 所以当你一个做O2O食品分发的， 送外卖的， 被问到， 如果你的想法被大公司知道了话， 你怎么办的话， 你完全不用傻傻地觉得你会被有钱的大公司直接干掉， 大公司， 基于他的身份和社会预期， 大部分时候只会选择成熟的市场和场景。 对国内的市场尤其是如此， 就好比， 当国内的大公司发掘到这是一个有利可图的战略市场的市场的时候， 他们的第一选择绝对不是自己do from scratch， 他们要么会选择收购， 要么就是战略入股。 而那时候， 如果你真的够格的话， 也会走到市场的前几名了。<br>[2] 普通大公司的固有惰性， 其实这一点和上一点有重叠。下面参考文章中所述简洁明了， 不再赘述。<br>[3] 与其花时间想象一堆可能不存在的假想敌， 还不如想想更致命的问题， 比如， 到底这个你准备进入的市场需要你提供的服务嘛？ 你能提供的是一个容易被模仿的feature， 还是一个难以复制的product? 想起在08-11年硅谷超级火的独角兽之一dropbox， 当时其实在乔布斯还在的时候， 曾在得知dropbox的产品后马上透露收购的意愿， 当时他的解释是“it’s more like a feature than a product”。最终dropbox拒绝了来自apple的收购， 现在面对来自google drive，icloud， 各种云服务， 国内的比如七牛等等的威胁， dropbox的魅力已早不复之前。</p>
<p>参考的原文阅读如下， 和大家分享。</p>
<p>余舜哲</p>
<p>2015.12.28</p>
<h2 id="Startups:_Why_Google/_Facebook/_Apple/_SalesForce_(probably)_won’t_steal_your_lunch_money">Startups: Why Google/ Facebook/ Apple/ SalesForce (probably) won’t steal your lunch money</h2><p>It’s the one question which always gets asked of a startup - why won’t (insert market leader here) simply implement your great idea themselves, wiping you out in the process?</p>
<p>A reasonable enough question given the billions of dollars and thousands of engineers available to them, as compared to the typical startup’s resources. </p>
<p>It’s worth outlining the reasons why in fact Goliath has fewer advantages than you might think as compared to David.</p>
<p>[1] Innovation is a Crap Shoot </p>
<p>No one really knows that your great idea is great. That’s only found out when the revenue comes in, and by that stage, you’re well on the way to becoming the next generation incumbent. VC’s don’t invest in companies. VC’s invest in markets, and people (specifically CEO’s). They understand that in a hot market, they have a shot at the unicorn which will become the market leader, and a very good chance of a 2nd to 5th place player that will deliver the returns needed to keep the limited partners in order. If the market is hot enough, you won’t loose your shirt even on the also-rans. Failures are buried, and history rewritten to emphasize the foresight of picking the 1-2 mega hits which pay the returns and the 20-30 “failures” (and remember some may still be pretty successful by most people’s reckoning) simply forgotten. </p>
<p>It’s a portfolio business (the technical term for “crap shoot”), and one which most VC’s only play with a fund size of $100-$500M. You can’t “just” invest $10M in Facebook circa 2004 and be done - it’s not that easy - you need to invest in a wide portfolio, and that takes serious amounts of money that even market leaders baulk at when trying to run their own innovation program.</p>
<p>This model also requires darwinian culling - something VC’s can do easily since all they have to do is simply stop returning calls when the cash runs out. It’s much harder for a large company psychologically or practically to fire an under-performing R&amp;D team. Google is often quoted as a counter example, and certainly they end-of-life projects with impressive regularity, but even Google have shown far more patience with Google+ than any VC would. Large companies are like mammals with their young. VC’s parent like fish, and whilst it’s cold-blooded (no pun intended), it’s more effective. </p>
<p>Large companies are not competing with one 5 million startup, they are competing against a $B ecosystem, which is why so often it’s the startup that comes out on top. Large companies cannot run projects as portfolios like VC’s can.</p>
<p>[2] Everbody is Loss-averse</p>
<p>Nobody wants to cannibalize revenue. Start-ups don’t have any revenue, ergo, they don’t worry about cannibalization. It’s not easy to walk away from stable, predictable (even if declining) revenues. By comparison, this latest new fangled widget may or may not deliver in the market. Better to invest in an upgraded line of mainframes…</p>
<p>[3] Large Companies are Process-bound</p>
<p>Everyone can say no, and no one can say yes. Or more charitably, there is a need to get “buy-in” across the corporation, where “across” can be departments scattered over the globe. There is an inherent inertia, built around middle management more focused on managing their own pension trajectory. Upper management is often too distant from the market realities to identify up-and-comers. And people at the bottom just do as they are told. Or go and form their own startup…</p>
<p>[4] Large Companies need Large Projects</p>
<p>All large companies fundamentally become conglomerates. When you are the market leader, the only place to grow is another market. If you are delivering several billion per quarter, then only large projects can move the needle. Sure, a startup growing at 100% pa looks impressive, but the additional $1M revenue would be just a rounding error. </p>
<p>Where large companies do focus in innovating is in the area of large capital intensive bets - think Google StreetView, something which would be hard for a startup to compete with.</p>
<p>This also impacts growth strategy. From the early 90’s Oracle stopped being a database company, transitioning to a full-suite enterprise IT provider today - hardware, software, and services. People often confuse the fact that SalesForce is the incumbent market leader in CRM with the belief that SalesForce is still a CRM company. Salesforce today is a Platform-as- a-Service company looking to expand out their footprint with big data and everything else. They want to be Oracle for Cloud. With 85% of IT spending coming from enterprise customers, Marc Benioff could not care less about smaller customers nor the CRM startups earning their stripes with them, any more than Oracle gives a monkey about MongoDB.</p>
<p>[5] Not Invented Here</p>
<p>Google offered themselves to Excite in 1999 for the princely sum of $1M - but Excite pooh-poohed the idea, since it was so simple to implement themselves. The funny thing is, they were right, but they just never got around to doing it. The rest, as they say, is history. Excite Turns Down Google Acquisition - In Photos: 6 Business Deal Disasters</p>
<p>It’s hard as a big company product manager with access to hundreds of developers to accept they could have missed something a couple a geeks with barely a pot noodle between them have managed. So usually they don’t.</p>
<p>[6] Large Companies aren’t Large</p>
<p>Large companies have lots of departments. Each of which may or may not be that big. “But they still have lots of resources”. Yes, but there are all doing things, and in terms of the actual skill sets needed, no, they don’t. </p>
<p>I joined Sybase (1500 employees at the time) from IBM (300,000 employees) in the 90’s and was surprised that up-and-coming Sybase (which only did databases) had twice the number of database focused staff than IBM (which did everything including project manage the delivery of military helicopters). I wasn’t surprised then when joining the startup Illustra (&lt; 80 staff) that we still had more web database expertise than Informix, Oracle and Sybase put together. Informix eventually coughed up $400M for Illustra.</p>
<p>[7] Time is Money</p>
<p>Why, on earth, did Facebook not simply reproduce the 24 man-month effort that Instagram represented, rather than pay an eye-popping $1B???</p>
<p>It wasn’t an acqui-hire for 13 staff. Nor was it really about market share, since almost every one of Instagram’s 30M customers would already be using Facebook (845M at that time). And it certainly wasn’t about acquiring revenue - Instagram had none, nada, zero, zilch, $0.00.</p>
<p>The reason was that Facebook was convinced that this was the future of photo-sharing and would put their own business at risk (since Facebook, reduced, is really about photos). For all the reasons outlined above, they knew that it would take at least 12 months to replicate that, and in that time there could have been a significant reversal of fortunes between the incumbent and the startup. Buying rather than building means additional revenue, but at levels commensurate with the acquiring company’s existing sales and marketing channels - not the startup’s. This can easily justify apparently silly revenue multiples, since the comparison point is not what Instagram is currently doing, but rather what Facebook would be missing out on, were it not. With Facebook doing almost $3B in 3Q14, then paying just one month’s revenue for Instagram now looks like a bargain given its importance to the Facebook value proposition.</p>
<p>Focus on the Customers, not the Competition</p>
<p>You can’t reliably grow an oak tree by relying on just one acorn. You need a full tray of seedlings, thinning some out and nurturing the rest, and hopefully at least one will turn out well. It’s actually the entire premise of the VC model, and it’s also the reason big companies don’t typically stamp on startups, since they don’t know which seedling will be the one to finally overtake them, and there are too many to snuff them all out. </p>
<p>Like all generalizations in business there are exceptions. Developing a feature for a market leader typically does not end well, but these should be clear to identify. The general rule though, is clear. Few startups are actually at risk from the incumbents they seek to displace. The greater risk is does any part of the market actually want what you offer?</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>那些难以复制的。</p>]]>
    
    </summary>
    
      <category term="公众号文章" scheme="http://chocoluffy.com/tags/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/"/>
    
      <category term="商业IT评论" scheme="http://chocoluffy.com/tags/%E5%95%86%E4%B8%9AIT%E8%AF%84%E8%AE%BA/"/>
    
      <category term="原创" scheme="http://chocoluffy.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ActionCable in Rail5 实战笔记]]></title>
    <link href="http://chocoluffy.com/2015/12/26/ActionCable-in-Rail5-%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/"/>
    <id>http://chocoluffy.com/2015/12/26/ActionCable-in-Rail5-实战笔记/</id>
    <published>2015-12-26T17:42:33.000Z</published>
    <updated>2016-01-07T15:15:51.000Z</updated>
    <content type="html"><![CDATA[<p>rails5 ActionCable in chatroom, 为之后开发狼人多人游戏做准备</p>
<a id="more"></a>
<ul>
<li>整个流程<br>After <code>rails new chat</code> and <code>bundle install</code>, we add some related in Gemfile, so now it will look like this:</li>
</ul>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">source <span class="string">'https://rubygems.org'</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'rails'</span>, <span class="string">'4.2.3'</span></span><br><span class="line">gem <span class="string">'actioncable'</span>, <span class="symbol">github:</span> <span class="string">'rails/actioncable'</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'sqlite3'</span></span><br><span class="line">gem <span class="string">'coffee-rails'</span>, <span class="string">'~&gt; 4.1.0'</span></span><br><span class="line">gem <span class="string">'jquery-rails'</span></span><br><span class="line">gem <span class="string">'turbolinks'</span></span><br><span class="line">gem <span class="string">'puma'</span></span><br><span class="line">gem <span class="string">'uglifier'</span>, <span class="string">'&gt;= 1.3.0'</span></span><br><span class="line"></span><br><span class="line">group <span class="symbol">:development</span>, <span class="symbol">:test</span> <span class="keyword">do</span></span><br><span class="line">  gem <span class="string">'byebug'</span></span><br><span class="line">  gem <span class="string">'spring'</span></span><br><span class="line">  gem <span class="string">'web-console'</span>, <span class="string">'~&gt; 2.0'</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>[1] in routes.rb, we set the root page to be<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">root</span> ‘sessions<span class="comment">#new’</span></span><br></pre></td></tr></table></figure></p>
<p>which means that it will first find the SessionsController’s new method and implement it. We know in rails that when it runs a controller method, it will also render the corresponding views html.erb in view folder. Thus the <code>views/sessions/new.html.erb</code> will be first rendered. </p>
<p>Further observing in routes.rb:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">Rails.</span>application.routes.draw <span class="keyword">do</span></span><br><span class="line">  resources <span class="symbol">:messages</span>, <span class="symbol">only:</span> [<span class="symbol">:index</span>, <span class="symbol">:create</span>]</span><br><span class="line">  resources <span class="symbol">:sessions</span>, <span class="symbol">only:</span> [<span class="symbol">:new</span>, <span class="symbol">:create</span>]</span><br><span class="line">  root <span class="string">'sessions#new'</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p>we find the use of <code>resources</code>, which means we treat those objects as RESTFUL as we could, those objects in their controllers will have all seven methods like new, create, update, destroy and so on which corresponds to the Http Verbs like post, get and so on.</p>
<h2 id="Then,_we_look_at_the_new-html-erb">Then, we look at the new.html.erb</h2><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span>&lt;%=<span class="ruby"> form_for <span class="symbol">:session</span>, <span class="symbol">url:</span> sessions_path <span class="keyword">do</span> |f| </span>%&gt;<span class="xml"></span><br><span class="line">	</span>&lt;%=<span class="ruby"> f.label <span class="symbol">:username</span>, <span class="string">'Enter a name'</span> </span>%&gt;<span class="xml"><span class="tag">&lt;<span class="title">br</span>/&gt;</span></span><br><span class="line">	</span>&lt;%=<span class="ruby"> f.text_field <span class="symbol">:username</span> </span>%&gt;<span class="xml"> <span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line">	</span>&lt;%=<span class="ruby"> f.submit <span class="string">'Start chatting'</span> </span>%&gt;<span class="xml"></span><br><span class="line"></span>&lt;%<span class="ruby"> <span class="keyword">end</span> </span>%&gt;<span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>where <code>:session</code> is the name for this form, when in use in SessionsController, we obtain the information in this form by<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookies.signed[<span class="link_label">:username</span>] = params[<span class="link_label">:session</span>][<span class="link_reference">:username</span>]</span><br></pre></td></tr></table></figure></p>
<p>And <code>url: sessions_path</code> is for directing the action to SessionsController#create.</p>
<h2 id="In_MessagesController-rb">In MessagesController.rb</h2><p>we use index to render the view<br><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">Signed in as @</span>&lt;%=<span class="ruby"> cookies.signed[<span class="symbol">:username</span>] </span>%&gt;<span class="xml">.</span><br><span class="line"><span class="tag">&lt;<span class="title">br</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"messages"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">br</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span>&lt;%=<span class="ruby"> form_for <span class="symbol">:message</span>, <span class="symbol">url:</span> messages_path, <span class="symbol">remote:</span> <span class="keyword">true</span>, <span class="symbol">id:</span> messages-form <span class="keyword">do</span> |f| </span>%&gt;<span class="xml"></span><br><span class="line">	</span>&lt;%=<span class="ruby"> f.label <span class="symbol">:body</span>, <span class="string">'Enter a message:'</span> </span>%&gt;<span class="xml"> <span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line">	</span>&lt;%=<span class="ruby"> f.text_field <span class="symbol">:body</span> </span>%&gt;<span class="xml"> <span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line">	</span>&lt;%=<span class="ruby"> f.submit <span class="string">'Send message'</span> </span>%&gt;<span class="xml"></span><br><span class="line"></span>&lt;%<span class="ruby"> <span class="keyword">end</span> </span>%&gt;<span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>where the cookies are carrying the parameters we need in another controller, while the empty <code>div</code> will eventually be filled with previous content. As for the form, it will pretty similar as the SessionsController#new.</p>
<ul>
<li>here we use <code>remote: true</code>, which is calling with Ajax. In usual case, we will need to specify the partial js file we want to implement in MessagesContrller#create method. * But, here we just want it to reload again without refreshing the page.</li>
</ul>
<h2 id="ActionCable">ActionCable</h2><p>ActionCable uses Redis for publishihng and subscribing to the messages, so we need to configure Redis in config/redis/cable.yml. You will need Redis installed and running for ActionCable to work.</p>
<h2 id="Redis">Redis</h2><p>reds is a key-value store, often referred to as a NoSQL database. Key features are that: [1] the data can be retrieved by key later in use. [2] the key-value will be stored permanently.</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SET</span> <span class="keyword">server</span>:<span class="keyword">name</span> “fido”</span><br><span class="line"><span class="keyword">GET</span> <span class="keyword">server</span>:<span class="keyword">name</span></span><br><span class="line">DEL <span class="keyword">server</span>:<span class="keyword">name</span></span><br><span class="line">INCR <span class="keyword">count</span></span></span><br></pre></td></tr></table></figure>
<p>Compared with<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = GET <span class="keyword">count</span></span><br><span class="line">x = x + 1</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">count</span> x</span><br></pre></td></tr></table></figure></p>
<p>we choose to use INCR because it is a atomic operation which will work as expected if multiple users want to access this value.<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPIRE <span class="keyword">server</span>:name <span class="number">120</span> <span class="comment">//after 120s this value will vanish</span></span><br><span class="line">TTL <span class="keyword">server</span>:name <span class="comment">// obtain after how long it will vanish</span></span><br></pre></td></tr></table></figure></p>
<h3 id="List_operation">List operation</h3><p><code>RPUSH, LPUSH, LLEN, LRANGE, LPOP, RPOP</code></p>
<h3 id="Set_operation">Set operation</h3><p><code>SADD, SREM, SISMEMBER, SMEMBERS, SUNION</code><br>where <code>SMEMBERS</code> returns a list of all members of this set.</p>
<h3 id="Sorted_Set">Sorted Set</h3><p><code>ZADD, ZRANGE</code></p>
<h3 id="Hashes">Hashes</h3><p><code>HSET, HGETALL, HMSET, HGET, HINCRBY, HDEL</code> like</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HMSET user:<span class="number">1001</span> name <span class="string">"Mary Jones"</span> password <span class="string">"hidden"</span> email <span class="string">"mjones@example.com"</span></span><br><span class="line">HGETALL user:<span class="number">1001</span></span><br></pre></td></tr></table></figure>
<h2 id="Adding_our_MessagesChannel">Adding our MessagesChannel</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/channels/messages_channel.rb</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MessagesChannel</span> <span class="inheritance">&lt; <span class="parent">ApplicationCable::Channel</span></span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">subscribed</span></span></span><br><span class="line">    stream_from <span class="string">'messages'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>whenever a client subscribes to MessageChannel, the <code>#subscribed</code> method will be called, which starts streaming anything you broadcast to the “messages” stream.</p>
<h2 id="Future_learning">Future learning</h2><ul>
<li><a href="https://gorails.com/episodes/rails-5-actioncable-websockets" target="_blank" rel="external">Rails 5’s ActionCable and Websockets Introduction</a></li>
<li><a href="https://github.com/rails/actioncable-examples" target="_blank" rel="external">Action Cable Examples</a></li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>rails5 ActionCable in chatroom, 为之后开发狼人多人游戏做准备</p>]]>
    
    </summary>
    
      <category term="rails" scheme="http://chocoluffy.com/tags/rails/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于hexo博客最棒的素材和教程收集]]></title>
    <link href="http://chocoluffy.com/2015/12/25/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E6%9C%80%E6%A3%92%E7%9A%84%E7%B4%A0%E6%9D%90%E5%92%8C%E6%95%99%E7%A8%8B%E6%94%B6%E9%9B%86/"/>
    <id>http://chocoluffy.com/2015/12/25/关于hexo博客最棒的素材和教程收集/</id>
    <published>2015-12-25T16:29:20.000Z</published>
    <updated>2016-01-27T15:22:25.000Z</updated>
    <content type="html"><![CDATA[<p>在搭建hexo博客的时候遇到的各种坑， 留下一些最棒的博文和大家分享!</p>
<a id="more"></a>
<ul>
<li>怎样使用七牛云服务来存储静态资源<br>[1]<a href="https://linux.cn/article-2311-1.html" target="_blank" rel="external">Linux中国采用“七牛”云存储支撑图片访问</a></li>
</ul>
<p>具体的操作：<br>[2]<a href="https://blog.blahgeek.com/qiniu-cdn-serve-static/" target="_blank" rel="external">使用七牛CDN加速博客静态文件访问</a></p>
<p>个人的话， 我其实用的是微博图床， 也很方便。 类似的服务还有dropbox, google drive等等.</p>
<ul>
<li><p>关于hexo _config文件的配置细节<br>推荐这一篇博文： <a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></p>
</li>
<li><p>给hexo博文添加访问次数统计<br><a href="http://ibruce.info/2013/12/22/count-views-of-hexo/" target="_blank" rel="external">不蒜子统计</a></p>
</li>
<li><p>关于一些基础的command</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"article name"</span></span><br><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Further_Reading_(using_jekyll_and_github_pages)">Further Reading (using jekyll and github pages)</h2><ul>
<li><p><a href="http://www.smashingmagazine.com/2014/08/build-blog-jekyll-github-pages/" target="_blank" rel="external">Build A Blog With Jekyll And GitHub Pages</a></p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门</a></p>
</li>
<li><p><a href="http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype.html" target="_blank" rel="external">给Hexo博客添加站内搜索</a></p>
</li>
<li><p><a href="https://moral.im/%E4%B8%BAHexo%E6%B7%BB%E5%8A%A0meta%20Keyword/" target="_blank" rel="external">给Hexo网站添加meta tag提高SEO</a></p>
<ul>
<li><p><a href="https://www.google.com/webmasters/tools/home?hl=en&amp;authuser=0" target="_blank" rel="external">去goole search console管理property</a></p>
</li>
<li><p><a href="https://www.google.com/webmasters/tools/sitemap-list?hl=en&amp;authuser=0&amp;siteUrl=http%3A%2F%2Fchocoluffy.com%2F#MAIN_TAB=0&amp;CARD_TAB=-1" target="_blank" rel="external">google search console sitemap dashboard</a></p>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>在搭建hexo博客的时候遇到的各种坑， 留下一些最棒的博文和大家分享!</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://chocoluffy.com/tags/hexo/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[机器学习资料收集[持续更新]]]></title>
    <link href="http://chocoluffy.com/2015/12/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86/"/>
    <id>http://chocoluffy.com/2015/12/24/机器学习资料收集/</id>
    <published>2015-12-24T16:55:00.000Z</published>
    <updated>2015-12-25T02:49:00.000Z</updated>
    <content type="html"><![CDATA[<p>来自github, 各种关于机器学习的教程博客和工具。</p>
<a id="more"></a>
<h1 id="Dive_into_Machine_Learning">Dive into Machine Learning <a href="http://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external"><img src="http://i.creativecommons.org/l/by/4.0/88x31.png" alt="Creative Commons License"></a> <a href="https://github.com/sindresorhus/awesome" target="_blank" rel="external"><img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" alt="Awesome"></a></h1><p><strong>Hi there! This guide is for you:</strong></p>
<ul>
<li><strong>You’re new to Machine Learning.</strong></li>
<li><strong>You know Python.</strong> (At least the basics! If you want to learn Python, try <a href="http://www.diveintopython.net/" target="_blank" rel="external">Dive Into Python.</a>)</li>
</ul>
<p>I learned Python by hacking first, and getting serious <em>later.</em> I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.</p>
<p><em>Note:</em> There are several fields within “Data” and Machine Learning is just one. It’s good to know the context: <a href="http://www.quora.com/What-is-the-difference-between-Data-Analytics-Data-Analysis-Data-Mining-Data-Science-Machine-Learning-and-Big-Data-1" target="_blank" rel="external">What is the difference between Data Analytics, Data Analysis, Data Mining, Data Science, Machine Learning, and Big Data?</a></p>
<h1 id="Get_your_feet_wet!">Get your feet wet!</h1><p>I suggest you get your feet wet ASAP. You’ll boost your confidence.</p>
<h2 id="Tools_you’ll_need">Tools you’ll need</h2><ul>
<li><a href="https://www.python.org/" target="_blank" rel="external">Python</a>. Python 3 is the best option.</li>
<li><a href="http://ipython.org/" target="_blank" rel="external">IPython and the Jupyter Notebook</a>. (FKA IPython and IPython Notebook.)</li>
<li>Some scientific computing packages:<ul>
<li>numpy</li>
<li>pandas</li>
<li>scikit-learn</li>
<li>matplotlib</li>
</ul>
</li>
</ul>
<p>You can install Python 3 and all of these packages in a few clicks with the <a href="https://www.continuum.io/downloads" target="_blank" rel="external">Anaconda Python distribution</a>. Anaconda is popular in Data Science and Machine Learning communities.</p>
<p>If you’re using Python 2.7, don’t worry. You don’t have to migrate to Python 3 just for this guide. Also, if you’re using pip/virtualenv instead of Anaconda, that’s alright too! Confer <a href="http://conda.pydata.org/docs/_downloads/conda-pip-virtualenv-translator.html" target="_blank" rel="external">conda vs. pip vs. virtualenv</a> if you’re curious.</p>
<h2 id="Let’s_go!">Let’s go!</h2><p><strong><a href="http://opentechschool.github.io/python-data-intro/core/notebook.html" target="_blank" rel="external">Learn how to use IPython Notebook</a> (5-10 minutes).</strong> (You can <a href="https://www.youtube.com/watch?v=qb7FT68tcA8" target="_blank" rel="external">learn by screencast</a> instead.)</p>
<p>Now, follow along with this brief exercise (10 minutes): <strong><a href="http://scikit-learn.org/stable/tutorial/basic/tutorial.html" target="_blank" rel="external">An introduction to machine learning with scikit-learn</a></strong>. Do it in <code>ipython</code> or IPython Notebook. It’ll really boost your confidence.</p>
<p><a href="http://scikit-learn.org/stable/tutorial/basic/tutorial.html" target="_blank" rel="external"><img src="http://i.imgur.com/nqn3pVV.jpg" alt="I&#39;ll wait."></a></p>
<h2 id="What_just_happened?">What just happened?</h2><p>You just classified some hand-written digits using <a href="http://scikit-learn.org/stable/index.html" target="_blank" rel="external">scikit-learn</a>. Neat huh?</p>
<p><a href="http://scikit-learn.org/stable/index.html" target="_blank" rel="external">scikit-learn</a> is the go-to library for machine learning in Python. <a href="http://scikit-learn.org/stable/testimonials/testimonials.html" target="_blank" rel="external">Some recognizable logos use it, including Spotify and Evernote.</a> Machine learning is hard. You’ll be glad your tools are easy to work with.</p>
<p>I encourage you to look at the <a href="http://scikit-learn.org/stable/index.html" target="_blank" rel="external">scikit-learn</a> homepage  and spend about 5 minutes looking over the names of the strategies (Classification, Regression, etc.), and their applications. Don’t click through yet! Just get a glimpse of the vocabulary.</p>
<h1 id="Dive_in">Dive in</h1><h2 id="A_Visual_Introduction_to_Machine_Learning">A Visual Introduction to Machine Learning</h2><p>Let’s learn a bit more about Machine Learning, and a couple of common ideas and concerns. Read <a href="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/" target="_blank" rel="external">“A Visual Introduction to Machine Learning, Part 1”</a> by <a href="https://twitter.com/stephaniejyee" target="_blank" rel="external">Stephanie Yee</a> and <a href="https://twitter.com/tonyhschu/" target="_blank" rel="external">Tony Chu</a>.</p>
<p><a href="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/" target="_blank" rel="external"><img src="http://i.imgur.com/j5fiTBv.gif" alt="A Visual Introduction to Machine Learning, Part 1"></a></p>
<p>It won’t take long. It’s a beautiful introduction … Try not to drool too much!</p>
<h2 id="A_Few_Useful_Things_to_Know_about_Machine_Learning">A Few Useful Things to Know about Machine Learning</h2><p>OK. Let’s dive deeper.</p>
<p>Read <strong><a href="http://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf" target="_blank" rel="external">“A Few Useful Things to Know about Machine Learning”</a></strong> by Prof. Pedro Domingos. It’s densely packed with valuable information, but not opaque. The author understands that there’s a lot of “black art” and folk wisdom, and they invite you in.</p>
<p>Take your time with this one. Take notes. Don’t worry if you don’t understand it all yet.</p>
<p>The whole paper is packed with value, but I want to call out two points:</p>
<ul>
<li><strong>Data alone is not enough.</strong> This is where science meets art in machine-learning. Quoting Domingos: “… the need for knowledge in learning should not be surprising. Machine learning is not magic; it can’t get something from nothing. What it does is get more from less. Programming, like all engineering, is a lot of work: we have to build everything from scratch. Learning is more like farming, which lets nature do most of the work. Farmers combine seeds with nutrients to grow crops. Learners combine knowledge with data to grow programs.”</li>
<li><strong>More data beats a cleverer algorithm.</strong> Listen up, programmers. We like cool tools. Resist the temptation to reinvent the wheel, or to over-engineer solutions. Your starting point is to <a href="http://www.artima.com/intv/simplest3.html" target="_blank" rel="external">Do the Simplest Thing that Could <em>Possibly</em> Work</a>. Quoting Domingos: “Suppose you’ve constructed the best set of features you can, but the classifiers you’re getting are still not accurate enough. What can you do now? There are two main choices: design a better learning algorithm, or gather more data. […] As a rule of thumb, a dumb algorithm with lots and lots of data beats a clever one with modest amounts of it. (After all, machine learning is all about letting data do the heavy lifting.)”</li>
</ul>
<p>So  <strong>knowledge</strong> and <strong>data</strong> are critical. Focus your efforts on those, before fussing about algorithms. In practice, this means that unless you <em>have</em> to increase complexity, you should continue to <a href="http://c2.com/cgi/wiki?DoSimpleThings" target="_blank" rel="external">Do Simple Things</a>; don’t rush to neural networks just because they’re cool. To improve your model, get more data  and use your knowledge of the problem to manipulate the data. You should spend most of your time on these steps. Only optimize your choice of algorithms after you’ve got enough data, and you’ve processed it well.</p>
<p><img src="http://i1381.photobucket.com/albums/ah240/hangtwenty/Screen%20Shot%202015-03-05%20at%2010.08.10%20PM_zpsqnljkqt5.png" alt="What has the most impact in Machine Learning"></p>
<p>(Chart inspired by a slide from <a href="https://www.youtube.com/watch?v=TYVCVzEJhhQ" target="_blank" rel="external">Alex Pinto’s talk, “Secure Because Math: A Deep-Dive on ML-Based Monitoring”</a>.)</p>
<h2 id="Talking_Machines">Talking Machines</h2><p>Subscribe to <strong><a href="http://www.thetalkingmachines.com/" target="_blank" rel="external">Talking Machines</a></strong>, a podcast about machine learning. It’s great. It’s a low-effort, high-yield way to learn more.</p>
<p>I suggest this listening order:</p>
<ul>
<li>Start with the <a href="http://www.thetalkingmachines.com/blog/2015/4/23/starting-simple-and-machine-learning-in-meds" target="_blank" rel="external">“Starting Simple”</a> episode. It supports what we read from Domingos. Ryan Adams talks about starting simple, as discussed above. Adams also stresses the importance of feature engineering. Feature engineering is an exercise of the “knowledge” Domingos writes about.</li>
<li>Then, start over from the first episode</li>
</ul>
<h2 id="Play_to_learn">Play to learn</h2><p>Pick <strong>one or two</strong> of these IPython Notebooks and play along.</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/ogrisel/notebooks/blob/master/Labeled%20Faces%20in%20the%20Wild%20recognition.ipynb" target="_blank" rel="external">Face Recognition on a subset of the Labeled Faces in the Wild</a></li>
<li><a href="http://agconti.github.io/kaggle-titanic/" target="_blank" rel="external">Machine Learning from Disaster</a>: Using Titanic data, “Demonstrates basic data munging, analysis, and visualization techniques. Shows examples of supervised machine learning techniques.”</li>
<li><a href="https://github.com/jseabold/538model" target="_blank" rel="external">Election Forecasting</a>: A replication of the model Nate Silver used to make <a href="http://fivethirtyeight.blogs.nytimes.com/fivethirtyeights-2012-forecast/" target="_blank" rel="external">predictions about the 2012 US Presidential Election for the New York Times</a>)</li>
<li><a href="https://github.com/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%20Machine%20Learning%20Notebook.ipynb" target="_blank" rel="external">An example Machine Learning notebook</a>: “let’s pretend we’re working for a startup that just got funded to create a smartphone app that automatically identifies species of flowers from pictures taken on the smartphone.  We’ve been tasked by our head of data science to create a demo machine learning model that takes four measurements from the flowers (sepal length, sepal width, petal length, and petal width) and identifies the species based on those measurements alone.”</li>
<li>ClickSecurity’s “data hacking” series (thanks <a href="https://github.com/hummus" target="_blank" rel="external">hummus</a>!)<ul>
<li><a href="http://nbviewer.ipython.org/github/ClickSecurity/data_hacking/blob/master/dga_detection/DGA_Domain_Detection.ipynb" target="_blank" rel="external">Detect Algorithmically Generated Domains</a></li>
<li><a href="http://nbviewer.ipython.org/github/ClickSecurity/data_hacking/blob/master/sql_injection/sql_injection.ipynb" target="_blank" rel="external">Detect SQL Injection</a></li>
<li><a href="http://nbviewer.ipython.org/github/ClickSecurity/data_hacking/blob/master/java_classification/java_classification.ipynb" target="_blank" rel="external">Java Class File Analysis</a>: is this Java code malicious or benign?</li>
</ul>
</li>
<li>If you want more of a data science bent, pick a notebook from <a href="https://github.com/donnemartin/data-science-ipython-notebooks" target="_blank" rel="external">this excellent list of Data Science ipython notebooks</a>. “Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.”</li>
<li>Or more generic tutorials/overviews …<ul>
<li><a href="http://amueller.github.io/sklearn_tutorial/" target="_blank" rel="external">Tutorial introduction to machine learning with sklearn</a></li>
<li><a href="http://bugra.github.io/work/notes/2014-11-22/an-introduction-to-supervised-learning-scikit-learn/" target="_blank" rel="external">An Introduction to Supervised Learning via Scikit Learn</a></li>
<li><a href="http://bugra.github.io/work/notes/2014-11-16/an-introduction-to-unsupervised-learning-scikit-learn/" target="_blank" rel="external">An Introduction to Unsupervised Learning via Scikit Learn</a></li>
</ul>
</li>
</ul>
<p>There are more places to find great IPython Notebooks:</p>
<ul>
<li><a href="https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks#statistics-machine-learning-and-data-science" target="_blank" rel="external">A Gallery of Interesting IPython notebooks (wiki page on GitHub): Statistics, Machine Learning and Data Science</a></li>
<li><a href="http://nb.bianp.net/sort/views/" target="_blank" rel="external">Fabian Pedregosa’s larger, automatic gallery</a></li>
</ul>
<h1 id="Immerse_yourself">Immerse yourself</h1><p>Pick one of the courses below and do the whole thing.</p>
<h2 id="Recommended_course">Recommended course</h2><p><strong><a href="http://www.andrewng.org/about/" target="_blank" rel="external">Prof. Andrew Ng’s</a> <a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="external"><em>Machine Learning</em></a> is a free online course I’ve <a href="https://docs.google.com/document/d/1YN6BVdReNAYc8B0fjQ84yzDflqmeEPj7S0Xc-9_26R0/" target="_blank" rel="external">seen</a> <a href="http://www.forbes.com/sites/anthonykosner/2013/12/29/why-is-machine-learning-cs-229-the-most-popular-course-at-stanford/" target="_blank" rel="external">recommended</a> <a href="https://www.quora.com/How-do-I-learn-machine-learning-1/answer/Cory-Hicks-1" target="_blank" rel="external">often.</a> <a href="https://www.quora.com/How-do-I-learn-machine-learning-1/answers/5673" target="_blank" rel="external">And</a> <a href="https://www.quora.com/How-do-I-learn-machine-learning-1/answer/Xavier-Amatriain" target="_blank" rel="external">emphatically.</a></strong></p>
<p>It’s helpful if you decide on a pet project to play around with, as you go, so you have a way to apply your knowledge. You could use one of these <a href="https://github.com/caesar0301/awesome-public-datasets" target="_blank" rel="external">Awesome Public Datasets</a>. And remember, IPython Notebook is your friend.</p>
<p>Also, the book <em><a href="http://statweb.stanford.edu/~tibs/ElemStatLearn/" target="_blank" rel="external">Elements of Statistical Learning</a></em> comes up frequently, but is usually referred to as a “reference” not an introduction. It’s free, so download or bookmark it!</p>
<h2 id="Other_courses">Other courses</h2><p>Here are some other free online courses I’ve seen recommended. (Machine Learning, Data Science, and related topics.)</p>
<ul>
<li><a href="https://www.coursera.org/course/machlearning" target="_blank" rel="external">Machine Learning</a> by Prof. Pedro Domingos of the University of Washington. Domingos wrote the paper <a href="https://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf" target="_blank" rel="external">“A Few Useful Things to Know About Machine Learning”</a>, from earlier in this guide. (Thanks to <a href="https://news.ycombinator.com/item?id=9563501" target="_blank" rel="external">paperwork on Hacker News.</a>)</li>
<li>Data science courses as IPython Notebooks:<ul>
<li><a href="http://radimrehurek.com/data_science_python/" target="_blank" rel="external">Practical Data Science</a></li>
<li><a href="http://learnds.com/" target="_blank" rel="external">Learn Data Science (an entire self-directed course!)</a></li>
<li>Supplementary material: <a href="https://github.com/donnemartin/data-science-ipython-notebooks" target="_blank" rel="external">donnemartin/data-science-ipython-notebooks</a>. “Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.”</li>
</ul>
</li>
<li>Kevin Markham’s video series, <a href="http://blog.kaggle.com/2015/04/08/new-video-series-introduction-to-machine-learning-with-scikit-learn/" target="_blank" rel="external">Intro to Machine Learning with scikit-learn</a>, starts with what we’ve already covered, then continues on at a comfortable place. After the videos you could do Markham’s <a href="https://github.com/justmarkham/DAT8" target="_blank" rel="external">General Assembly’s Data Science course.</a> Interactive. (Older versions: <a href="https://github.com/justmarkham/DAT7" target="_blank" rel="external">7</a>, <a href="https://github.com/justmarkham/DAT5" target="_blank" rel="external">5</a>, <a href="https://github.com/justmarkham/DAT4" target="_blank" rel="external">4</a>, <a href="https://github.com/justmarkham/DAT3" target="_blank" rel="external">3</a>.) Markham’s course is also offered in-person in Washington, DC.</li>
<li>Surveys of Data Science courseware (a bit more Choose Your Own Adventure)<ul>
<li>Check out <a href="https://www.quora.com/Is-it-worth-it-to-pay-9-*-49-for-a-data-science-specialization-on-Coursera/answer/Jack-Golding" target="_blank" rel="external">Jack Golding’s survey of Data Science courseware</a>. Includes Coursera’s <a href="https://www.coursera.org/specializations/jhudatascience" target="_blank" rel="external">Data Science Specialization</a> with 9 courses in it. The Specialization certificate isn’t free, but you can take the courses 1-by-1 for free if you don’t care about the certificate. The survey also covers <a href="http://cs109.github.io/2014/" target="_blank" rel="external">Harvard CS109</a> which I’ve seen recommended elsewhere.</li>
<li><a href="https://www.quora.com/How-can-I-become-a-data-scientist?redirected_qid=59455" target="_blank" rel="external">Another epic Quora thread: How can I become a data scientist?</a></li>
<li>Data Science Weekly’s <a href="http://www.datascienceweekly.org/data-science-resources/the-big-list-of-data-science-resources" target="_blank" rel="external">Big List of Data Science Resources</a> has a <a href="http://www.datascienceweekly.org/data-science-resources/data-science-moocs" target="_blank" rel="external">List of Data Science MOOCs</a></li>
</ul>
</li>
<li><a href="http://cs109.github.io/2014/" target="_blank" rel="external">Data Science (Harvard CS109)</a></li>
<li><a href="http://stronginference.com/Bios8366/lectures.html" target="_blank" rel="external">Advanced Statistical Computing (Vanderbilt BIOS8366).</a>. Interactive (lots of IPython Notebook material)</li>
</ul>
<h2 id="Learn_Pandas_well">Learn Pandas well</h2><p>If you’re focusing on Python, you should get more familiar with Pandas.</p>
<ul>
<li><strong>Essential</strong>: <a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" target="_blank" rel="external">10 Minutes to Pandas</a></li>
<li><strong>Essential</strong>: <a href="http://nbviewer.ipython.org/github/rasbt/python_reference/blob/master/tutorials/things_in_pandas.ipynb" target="_blank" rel="external">Things in Pandas I Wish I’d Had Known Earlier</a> (IPython Notebook)</li>
<li><a href="http://www.swegler.com/becky/blog/2014/08/06/useful-pandas-snippets/" target="_blank" rel="external">Useful Pandas Snippets</a></li>
<li>Here are some docs I found especially helpful as I continued learning:<ul>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/cookbook.html" target="_blank" rel="external">Cookbook</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/dsintro.html" target="_blank" rel="external">Data Structures</a>, esp. <a href="http://pandas.pydata.org/pandas-docs/stable/dsintro.html#dataframe" target="_blank" rel="external">DataFrame</a> section</li>
<li><a href="http://pandas.pydata.org/pandas-docs/version/0.15.0/reshaping.html" target="_blank" rel="external">Reshaping by pivoting DataFrames</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/computation.html" target="_blank" rel="external">Computational tools</a> and <a href="http://stats.stackexchange.com/questions/29713/what-is-covariance-in-plain-language" target="_blank" rel="external">StackExchange thread: “What is covariance in plain language?”</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/groupby.html" target="_blank" rel="external">Group By (split, apply, and combine DataFrames)</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/version/0.15.0/visualization.html" target="_blank" rel="external">Visualizing your DataFrames</a></li>
</ul>
</li>
</ul>
<h2 id="Cheat_sheets">Cheat sheets</h2><p>Bookmark these cheat sheets:</p>
<ul>
<li><a href="http://scikit-learn.org/stable/tutorial/machine_learning_map/" target="_blank" rel="external">scikit-learn algorithm cheat sheet</a></li>
<li><a href="http://hunch.net/?p=2714" target="_blank" rel="external">Metacademy: a package manager for [machine learning] knowledge</a>. A mind map of machine learning concepts, with great detail on each.</li>
<li><a href="https://drive.google.com/folderview?id=0ByIrJAE4KMTtaGhRcXkxNHhmY2M" target="_blank" rel="external">Matplotlib / Pandas / Python cheat sheets</a>.</li>
</ul>
<h2 id="More_topics">More topics</h2><h3 id="More_Data_Science_materials">More Data Science materials</h3><p>Not repeating the materials mentioned above, here are some more Data Science resources:</p>
<ul>
<li><strong>Extremely accessible data science book: <a href="http://www.john-foreman.com/data-smart-book.html" target="_blank" rel="external"><em>Data Smart</em> by John Foreman</a></strong></li>
<li><strong><a href="http://learnds.com/" target="_blank" rel="external">An entire self-directed course in Data Science, as a IPython Notebook</a></strong></li>
<li><a href="http://cacm.acm.org/blogs/blog-cacm/169199-data-science-workflow-overview-and-challenges/fulltext" target="_blank" rel="external">Data Science Workflow: Overview and Challenges</a> (read the article &amp; the comment by Joseph McCarthy)</li>
<li>Fun little IPython Notebook: <a href="http://nbviewer.ipython.org/github/jmsteinw/Notebooks/blob/master/IndeedJobs.ipynb" target="_blank" rel="external">Web Scraping Indeed.com for Key Data Science Job Skills</a></li>
</ul>
<h3 id="Many_more_specialized_topics">Many more specialized topics</h3><p>Check out <a href="http://gwulfs.github.io/" target="_blank" rel="external">Gideon Wulfsohn</a>‘s <a href="https://docs.google.com/document/d/1YN6BVdReNAYc8B0fjQ84yzDflqmeEPj7S0Xc-9_26R0" target="_blank" rel="external"><strong>excellent</strong> introduction to Machine Learning</a> for specialized knowledge on many topics… including <a href="http://www.quora.com/How-do-random-forests-work-in-laymans-terms" target="_blank" rel="external">Ensemble Methods</a>, <a href="https://spark.apache.org/examples.html" target="_blank" rel="external">Apache Spark</a>, <a href="https://www.coursera.org/course/neuralnets" target="_blank" rel="external">Neural Networks</a>, <a href="http://pybrain.org/" target="_blank" rel="external">Reinforcement Learning</a>, <a href="https://nltk.org" target="_blank" rel="external">Natural Language Processing</a> (<a href="https://github.com/IndicoDataSolutions/Passage" target="_blank" rel="external">RNN</a>, <a href="http://bugra.github.io/work/notes/2015-02-21/topic-modeling-for-the-uninitiated/" target="_blank" rel="external">LDA</a>, <a href="http://rare-technologies.com/word2vec-tutorial/" target="_blank" rel="external">Word2Vec</a>), <a href="https://pystruct.github.io/" target="_blank" rel="external">Structured Prediction</a>, <a href="https://www.youtube.com/watch?v=S75EdAcXHKk" target="_blank" rel="external">Deep Learning</a>, <a href="http://web.stanford.edu/class/cs246/" target="_blank" rel="external">Distributed Systems (Hadoop Ecosystem)</a>, Graphical Models (<a href="http://www.autonlab.org/tutorials/hmm.html" target="_blank" rel="external">Hidden Markov Models</a>), <a href="https://github.com/hyperopt/hyperopt" target="_blank" rel="external">Hyper Parameter Optimization</a>, <a href="http://deeplearning.net/software/theano/tutorial/using_gpu.html" target="_blank" rel="external">GPU Acceleration (Theano)</a>, <a href="http://deeplearning.net/tutorial/lenet.html" target="_blank" rel="external">Computer Vision</a>, Internet of Things, and Visualization.</p>
<p>Here’s an IPython Notebook book about <a href="http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/" target="_blank" rel="external">Probabilistic Programming<br>and Bayesian Methods for Hackers</a>: “An intro to Bayesian methods and probabilistic programming from a computation/understanding-first, mathematics-second point of view.”</p>
<h2 id="Questions,_answers,_chats">Questions, answers, chats</h2><p>For now, the best StackExchange site is  <a href="http://stats.stackexchange.com/questions/tagged/machine-learning?sort=frequent&amp;pageSize=15" target="_blank" rel="external">stats.stackexchange.com – <em>machine-learning</em>.</a> (There’s also <a href="http://datascience.stackexchange.com/" target="_blank" rel="external">datascience.stackexchange.com</a>, but it’s still in Beta.) And there’s <a href="https://www.reddit.com/r/machinelearning" target="_blank" rel="external">/r/machinelearning</a>. There are also many relevant discussions on Quora, for example: <a href="http://www.quora.com/What-is-the-difference-between-Data-Analytics-Data-Analysis-Data-Mining-Data-Science-Machine-Learning-and-Big-Data-1" target="_blank" rel="external">What is the difference between Data Analytics, Data Analysis, Data Mining, Data Science, Machine Learning, and Big Data?</a></p>
<p>You should also <a href="https://gitter.im/scikit-learn/scikit-learn" target="_blank" rel="external">join the Gitter channel for scikit-learn!</a></p>
<p>For help and community in meatspace, seek out meetups. Data Science Weekly’s <a href="http://www.datascienceweekly.org/data-science-resources/the-big-list-of-data-science-resources" target="_blank" rel="external">Big List of Data Science Resources</a> may help you.</p>
<h1 id="Assorted_Opinions_and_Other_Resources">Assorted Opinions and Other Resources</h1><p>The rest of the stuff that might not be structured enough for a course, but seems important to know.</p>
<h2 id="Risks">Risks</h2><p>“Machine learning systems automatically learn programs from<br>data.” Pedro Domingos, in <a href="http://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf" target="_blank" rel="external">“A Few Useful Things to Know about Machine Learning.”</a> The programs you generate will require maintenance. Like any way of creating programs faster, you can rack up technical debt.</p>
<p>Really essential:</p>
<ul>
<li><strong><a href="http://www.john-foreman.com/blog/surviving-data-science-at-the-speed-of-hype" target="_blank" rel="external">Surviving Data Science “at the Speed of Hype”</a></strong> by John Foreman, Data Scientist at MailChimp</li>
<li><a href="http://hunch.net/?p=22" target="_blank" rel="external">11 Clever Methods of Overfitting and How to Avoid Them</a></li>
</ul>
<p>A worthwhile paper: <a href="https://static.googleusercontent.com/media/research.google.com/en/us/pubs/archive/43146.pdf" target="_blank" rel="external">Machine Learning: The High-Interest Credit Card of Technical Debt.</a> Here’s the abstract:</p>
<blockquote>
<p>Machine learning offers a fantastically powerful toolkit for building complex systems quickly. This paper argues that it is dangerous to think of these quick wins as coming for free. Using the framework of technical debt, we note that it is remarkably easy to incur massive ongoing maintenance costs at the system level when applying machine learning. The goal of this paper is highlight several machine learning specific risk factors and design patterns to be avoided or refactored where possible. These include boundary erosion, entanglement, hidden feedback loops, undeclared consumers, data dependencies, changes in the external world, and a variety of system-level anti-patterns.</p>
</blockquote>
<p>And a few more articles:</p>
<ul>
<li><a href="http://www.john-foreman.com/blog/the-perilous-world-of-machine-learning-for-fun-and-profit-pipeline-jungles-and-hidden-feedback-loops" target="_blank" rel="external">The Perilous World of Machine Learning for Fun and Profit: Pipeline Jungles and Hidden Feedback Loops</a></li>
<li><a href="http://www.kdnuggets.com/2015/01/high-cost-machine-learning-technical-debt.html" target="_blank" rel="external">The High Cost of Maintaining Machine Learning Systems</a></li>
</ul>
<h3 id="Welcome_to_the_Danger_Zone">Welcome to the Danger Zone</h3><p>So you are dabbling with Machine Learning. You’ve got Hacking Skills. Maybe you’ve got some “knowledge” in Domingos’ sense (some “Substantive Expertise” or “Domain Knowledge”). This diagram isn’t a perfect fit for us, but may get the point across:</p>
<p><a href="http://drewconway.com/zia/2013/3/26/the-data-science-venn-diagram" target="_blank" rel="external"><img src="http://i.imgur.com/cH5Rkko.png" alt="Drew Conway&#39;s Data Science Venn Diagram, modified slightly"></a></p>
<p><strong>Please</strong> don’t sell yourself as a Machine Learning expert while you’re still in the Danger Zone. Don’t build bad products or publish junk science. This guide can’t tell you how you’ll know you’ve “made it” into Machine Learning competence … let alone  expertise. It’s hard to evaluate proficiency without schools or other institutions. This is a common problem for self-taught people.</p>
<h4 id="Towards_Expertise">Towards Expertise</h4><p>You need practice. <a href="https://news.ycombinator.com/item?id=10508565" target="_blank" rel="external">On Hacker News, user olympus commented to say you could use competitions to practice and evaluate yourself</a>. <a href="http://www.kaggle.com/competitions" target="_blank" rel="external">Kaggle</a> and <a href="http://www.chalearn.org/" target="_blank" rel="external">ChaLearn</a> are hubs for Machine Learning competitions. You can find some <a href="https://github.com/apeeyush/machine-learning" target="_blank" rel="external">examples of code for popular Kaggle competitions here</a>. For smaller exercises, <a href="https://www.hackerrank.com/domains/ai/machine-learning/page/1" target="_blank" rel="external">try HackerRank</a>.</p>
<p>You also need understanding. You should review what Kaggle competition winners had to say about their solutions, <a href="http://blog.kaggle.com/" target="_blank" rel="external">for example, the “No Free Hunch” blog</a>. These might be over your head at first but once you’re starting to understand and appreciate these, you know you’re getting somewhere.</p>
<p>Competitions and challenges are one way to practice. You shouldn’t limit yourself, though.</p>
<p>Here’s a complementary way to practice: <strong>do practice studies.</strong></p>
<ol>
<li><strong>Ask a question. Start your own study.</strong> The <a href="https://github.com/DataScienceSpecialization/courses/blob/master/01_DataScientistToolbox/03_02_whatIsData/index.Rmd#the-data-is-the-second-most-important-thing" target="_blank" rel="external">“most important thing in data science is the question”</a> (<a href="https://github.com/jtleek" target="_blank" rel="external">Dr. Jeff T. Leek</a>). So start with a question. Then, find <a href="https://github.com/caesar0301/awesome-public-datasets" target="_blank" rel="external">real data</a>. Analyze it. Then …</li>
<li><strong>Communicate results.</strong> When you have a novel finding, reach out for peer review (see below).</li>
<li><strong>Fix issues.</strong> Learn. Share what you learn.</li>
</ol>
<p>And repeat. Re-phrasing this, it fits with the <a href="https://en.wikipedia.org/wiki/Scientific_method" target="_blank" rel="external">scientific method</a>: formulate a question (or problem statement), create a hypothesis, gather data, analyze the data, and communicate results. (You should <a href="http://101.datascience.community/2012/06/27/the-data-scientific-method/" target="_blank" rel="external">watch this video about the scientific method in data science</a>, and/or <a href="http://customerthink.com/getting-insights-using-data-science-skills-and-the-scientific-method/" target="_blank" rel="external">read this article</a>.)</p>
<p>How can you come up with interesting questions? Once a week, <a href="https://github.com/caesar0301/awesome-public-datasets" target="_blank" rel="external">browse datasets</a> and write down some questions. Also, you should sign up for <a href="https://tinyletter.com/data-is-plural" target="_blank" rel="external">Data is Plural</a>, a newsletter of interesting data sets. Stay curious. When a question inspires you, start a study.</p>
<p>This advice, to do practice studies and learn from peer review, is based on <a href="https://github.com/hangtwenty/dive-into-machine-learning/issues/11#issuecomment-153934120" target="_blank" rel="external">a conversation</a> with <a href="http://www.randalolson.com/" target="_blank" rel="external">Dr. Randal S. Olson</a>. Here’s more advice from Olson, <a href="https://github.com/hangtwenty/dive-into-machine-learning/issues/11#issuecomment-154135498" target="_blank" rel="external">quoted with permission:</a></p>
<blockquote>
<p>I think the best advice is to tell people to always present their methods clearly and to avoid over-interpreting their results. Part of being an expert is knowing that there’s rarely a clear answer, especially when you’re working with real data.</p>
</blockquote>
<p>As you repeat this process, your practice studies will become more scientific, interesting, and focused. The most important part of this process is peer review.</p>
<h4 id="Ask_for_Peer_Review">Ask for Peer Review</h4><p>Here are some communities where you can reach out for peer review:</p>
<ul>
<li><a href="https://stats.stackexchange.com/" target="_blank" rel="external">Cross-Validated: stats.stackexchange.com</a></li>
<li><a href="https://reddit.com/r/DataIsBeautiful" target="_blank" rel="external">/r/DataIsBeautiful</a></li>
<li><a href="https://reddit.com/r/DataScience" target="_blank" rel="external">/r/DataScience</a></li>
<li><a href="https://reddit.com/r/MachineLearning" target="_blank" rel="external">/r/MachineLearning</a></li>
<li><a href="https://news.ycombinator.com" target="_blank" rel="external">Hacker News: news.ycombinator.com</a>. You’ll probably want to submit as “Show HN”</li>
</ul>
<p>Post to any of those, and ask for feedback. You’ll get feedback. You’ll learn a ton. As experts review your work you will learn a lot about the field. You’ll also be practicing the skill of accepting critical feedback.</p>
<p>When I read the feedback on my Pull Requests, first I repeat to myself, “I will not get defensive, I will not get defensive, I will not get defensive.” You may want to do that before you read reviews of your Machine Learning work too.</p>
<h3 id="An_Anecdote_About_User_Experience">An Anecdote About User Experience</h3><p>If you create software for users, and you want to use machine learning to benefit your users, <em>you must understand your users.</em> I won’t get into a whole user experience lesson here, but in short, you must think about user experience.</p>
<p>I have a friend who worked at <code>&lt;Redacted&gt;</code> Music Streaming Service. This company used machine learning in their recommendation and radio services. He complained about the way the company scored the radio feature’s performance. There was disagreement about what should be scored. They used a metric, “no song skips.” But why? Sure that indicates the recommendation wasn’t <em>awful</em>, what if you want to measure engagement? Other metrics could measure positive engagement: “favorites,” shares, listening time, or whether the listener returns to the radio station later. Measuring “no skips” might work for the passive listener, but the engaged listener is different. Perhaps the engaged listener will skip 5 songs, but find 20 songs they love and come back to the service later.</p>
<p><strong>My takeaway:</strong> user experience matters just as much as ever. You must understand <em>which kind</em> of user you’re trying to benefit with your machine learning techniques. (Write user stories!) You must come up with measurements and ways to evaluate success for those users. You must be able to measure before you can optimize.</p>
<p>This has to do with knowledge of the domain, but also may benefit from UX expertise. Work with UX experts if you can.</p>
<h3 id="Machine_Learning_in_Internet_Security">Machine Learning in Internet Security</h3><p>There was a great BlackHat webcast on this topic, <a href="https://www.blackhat.com/html/webcast/02192015-secure-because-math.html" target="_blank" rel="external">Secure Because Math: Understanding Machine Learning-Based Security Products.</a> Slides are <a href="https://www.blackhat.com/html/webcast/02192015-secure-because-math.html" target="_blank" rel="external">there</a>, <a href="https://attendee.gotowebinar.com/recording/80449431422110210" target="_blank" rel="external">video recording is here.</a> Equally relevant to InfoSec and AppSec.</p>
<h2 id="Big_Data?">Big Data?</h2><p>Scaling data analysis is a familiar problem now, and there’s no shortage of ways to address it. <a href="http://www.john-foreman.com/blog/surviving-data-science-at-the-speed-of-hype" target="_blank" rel="external">Beware needless hype and companies that want to sell you flashy, proprietary solutions.</a> You can do it all with open-source tools. Even if you contract it, you consider looking for contractors who use known good stacks. No news here.</p>
<p>Here are some tools to reach for:</p>
<ul>
<li><strong><a href="https://spark.apache.org/" target="_blank" rel="external">Apache Spark.</a></strong><ul>
<li>I mean, hell, <a href="https://databricks.com/blog/2015/02/17/introducing-dataframes-in-spark-for-large-scale-data-science.html" target="_blank" rel="external">Spark has DataFrames and easy co-operability with pandas!</a></li>
<li>Berkeley has <a href="https://www.edx.org/course/scalable-machine-learning-uc-berkeleyx-cs190-1x#.VOC70VPF_lQ" target="_blank" rel="external">a course on Scalable Machine Learning, focusing on Apache Spark.</a></li>
</ul>
</li>
<li><a href="http://netflix.github.io/#repo" target="_blank" rel="external">NetflixOSS</a> (see “Big Data Tools”)<ul>
<li><a href="http://techblog.netflix.com/2015/01/introducing-surus-and-scorepmml.html" target="_blank" rel="external">Netflix: Surus and ScorePMML</a></li>
<li><a href="http://techblog.netflix.com/search/label/big%20data" target="_blank" rel="external">“big data” on the NetflixOSS blog</a></li>
</ul>
</li>
</ul>
<p>Also: <a href="http://simplystatistics.org/2014/05/22/10-things-statistics-taught-us-about-big-data-analysis/" target="_blank" rel="external">10 things statistics taught us about big data analysis</a></p>
<h2 id="Finding_Open-Source_Libraries">Finding Open-Source Libraries</h2><ul>
<li>Bookmark <strong><a href="https://github.com/josephmisiti/awesome-machine-learning" target="_blank" rel="external">awesome-machine-learning</a></strong>, a curated list of <a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="external">awesome</a> Machine Learning libraries and software.</li>
<li><a href="http://www.tensorflow.org/" target="_blank" rel="external">TensorFlow</a> seems like a <a href="https://news.ycombinator.com/item?id=10532957" target="_blank" rel="external">really big deal.</a> People like you will do exciting things with TensorFlow. It’s a framework. Frameworks can help you manage complexity. Just remember this rule of thumb: <strong>“More data beats a cleverer algorithm”</strong> (Domingos), no matter how cool your tools are. Also note, TensorFlow is not the only machine learning framework of its kind: <strong><a href="https://github.com/zer0n/deepframeworks" target="_blank" rel="external">Check this great, detailed comparison of TensorFlow, Torch, and Theano.</a></strong> See also <a href="https://github.com/Newmu/Theano-Tutorials" target="_blank" rel="external">Newmu/Theano-Tutorials</a> and  <a href="https://github.com/nlintz/TensorFlow-Tutorials" target="_blank" rel="external">nlintz/TensorFlow-Tutorials</a>.</li>
<li>Bookmark <strong><a href="https://github.com/svaksha/pythonidae/blob/master/AI.md#machine-learning" target="_blank" rel="external">Pythonidae</a></strong>, a curated list of <a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="external">awesome</a> libraries and software in the Python language.</li>
<li>Bookmark <strong><a href="https://github.com/svaksha/Julia.jl/blob/master/AI.md#machine-learning" target="_blank" rel="external">Julia.jl</a></strong>, a curated list of <a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="external">awesome</a> libraries and software in the Julia language.</li>
<li>For Machine-Learning libraries that might not be on PyPI, GitHub, etc., there’s <a href="http://mloss.org/software/" target="_blank" rel="external">MLOSS (Machine Learning Open Source Software)</a>. Seems to feature many academic libraries.</li>
</ul>
<h2 id="Alternative_ways_to_“Dive_into_Machine_Learning”">Alternative ways to “Dive into Machine Learning”</h2><p>Here are some other guides to Machine Learning. They can be alternatives or complements to this guide.</p>
<ul>
<li><a href="http://xyclade.github.io/MachineLearning/" target="_blank" rel="external">Machine Learning for Developers</a> is another good introduction. It introduces machine learning for a developer audience using Smile, a machine learning library that can be used both in Java and Scala.</li>
<li><a href="http://www.jacksimpson.co/2015/06/07/materials-for-learning-machine-learning/" target="_blank" rel="external">Materials for Learning Machine Learning</a> by Jack Simpson</li>
<li><a href="https://docs.google.com/document/d/1YN6BVdReNAYc8B0fjQ84yzDflqmeEPj7S0Xc-9_26R0/edit" target="_blank" rel="external">How to Machine Learn</a> by <a href="http://gwulfs.github.io/" target="_blank" rel="external">Gideon Wulfsohn</a></li>
<li><a href="https://github.com/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%20Machine%20Learning%20Notebook.ipynb" target="_blank" rel="external">Example Machine Learning notebook, exercise, and guide</a> by Dr. Randal S. Olson. Mentioned in Notebooks section as well, but it has a similar goal to this guide (introduce you, and show you where to go next). Rich “Further Reading” section.</li>
<li>[Your guide here]</li>
</ul>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>来自github, 各种关于机器学习的教程博客和工具。</p>]]>
    
    </summary>
    
      <category term="machine learning" scheme="http://chocoluffy.com/tags/machine-learning/"/>
    
      <category term="转载" scheme="http://chocoluffy.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用reveal.js制作生日礼物]]></title>
    <link href="http://chocoluffy.com/2015/12/24/%E7%94%A8reveal-js%E5%88%B6%E4%BD%9C%E7%94%9F%E6%97%A5%E6%B4%BE%E5%AF%B9%E7%A4%BC%E7%89%A9/"/>
    <id>http://chocoluffy.com/2015/12/24/用reveal-js制作生日派对礼物/</id>
    <published>2015-12-24T16:55:00.000Z</published>
    <updated>2015-12-25T00:34:41.000Z</updated>
    <content type="html"><![CDATA[<p>这篇笔记作为revealjs的学习记录 &amp; 网页制作的迭代</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezadadm0hkg20dw07ndwp.gif" alt="吹蜡烛"></p>
<ol>
<li><p>首先理清楚每天需要做的东西<br>在tracy换头像的时候保存头像， 最后还需要大家帮忙把头像收集好；<br>需要整理关于他们最爱的东西的问题：<br>[1] 最喜欢的颜色？<br>tracy: 黄色<br>xth:<br>[2] 最喜欢的场景？<br>tracy: 雪天的时候在房间里面看雪景,  喝着热巧， 吃cookie，看雪景。<br>用飘雪的效果<br>xth: 萤火虫的效果</p>
<p>[3] </p>
</li>
<li>网上一些很棒的资源<br><a href="http://htmlcheats.com/reveal-js/reveal-js-tutorial-reveal-js-for-beginners/" target="_blank" rel="external">Reveal.js Tutorial-Reveal.js for Beginners</a></li>
</ol>
<p><a href="http://codepen.io/aamirafridi/pen/sfgGA" target="_blank" rel="external">很美的萤火虫的特效scrolling</a><br><a href="http://codepen.io/rikschennink/pen/eNbXMP" target="_blank" rel="external">萤火虫闪光</a></p>
<p>找css background gradient的一个好地方：<br><a href="http://uigradients.com/#" target="_blank" rel="external">http://uigradients.com/#</a></p>
<h3 id="开场特效：">开场特效：</h3><p>参考<a href="http://codepen.io/andreasstorm/pen/rHDjf" target="_blank" rel="external">click anywhere to start an animation!</a><br>use:<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(html).<span class="keyword">on</span>(‘mousedown’, <span class="function"><span class="keyword">function</span><span class="params">(e)</span>)</span></span><br></pre></td></tr></table></figure></p>
<p>然后给中心的图标添加一个火箭发射的动效</p>
<p>关于reveal.js的在section的部分添加视频</p>
<section data-background-video="https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm" data-background-video-loop="">

<p>使用长图片做parallax scrolling effect:<br><a href="https://github.com/hakimel/reveal.js/" target="_blank" rel="external">https://github.com/hakimel/reveal.js/</a><br>的parallax background部分！！</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
</section>]]></content>
    <summary type="html">
    <![CDATA[<p>这篇笔记作为revealjs的学习记录 &amp; 网页制作的迭代</p>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://chocoluffy.com/tags/javascript/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Agile web developing in rails 第一期]]></title>
    <link href="http://chocoluffy.com/2015/12/24/agile-web-developing-in-rails-%E7%AC%AC%E4%B8%80%E6%9C%9F/"/>
    <id>http://chocoluffy.com/2015/12/24/agile-web-developing-in-rails-第一期/</id>
    <published>2015-12-24T16:55:00.000Z</published>
    <updated>2015-12-26T01:09:44.000Z</updated>
    <content type="html"><![CDATA[<p>目的： 将agile rails web application一书里面的精华概括下来， 为之后运用rails开发打基础</p>
<a id="more"></a> 
<h2 id="The_details_you_should_know_about_in_rails:">The details you should know about in rails:</h2><ul>
<li><p>link_to | button_to<br>在link_to 和 button_to的情况下， 因为浏览器已经知道他们调用的是http的什么方法， 因此我们只需要将他们导流到对应controller<br>的位置就可以了；rails会根据http的动作调用相应的方法， 然后用一下shortcut path, 也就是 line_item_path;<br>为了创建一个LineItem obeject， 我们需要product_id和cart_id， cart_id可以在session中得到， product_id则需要用参数传入；</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to <span class="string">'Add to Cart'</span>, line_item_path(<span class="string">product_id:</span> product) % &gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Http verb<br>create(post), new(get)等等</p>
</li>
<li><p>写法区别</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to <span class="string">"delete"</span>, @cart, :<span class="keyword">method</span> =&gt; :delete % &gt; </span><br><span class="line">&lt;%= button_to <span class="string">"delete"</span>, &#123;:controller =&gt; :carts, :action =&gt; :destroy, :id =&gt; cart.id&#125;, :<span class="keyword">method</span> =&gt; :delete % &gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>ajax in rails<br>add Ajax to cart 目的: 在store页面实现将cart的show展示在sidebar里面， 然后添加user interface<br>注意： 在每一个partial template里面都有一个和template file同名的变量来指代当前变量；</p>
</li>
</ul>
<p>首先， 在发送请求的时候， 将请求改正为ajax请求：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to <span class="string">"Add to cart"</span>, line_items_path(<span class="string">product_id:</span> product), <span class="string">remote:</span> <span class="literal">true</span> % &gt;</span><br></pre></td></tr></table></figure></p>
<p>然后， 由于button_to默认http请求动作是post， 在line_items_controller里面找到create这个方法， 然后在response_to里面添加<br>一个format.js; 在create这个line_items的method处理了ajax的请求后， 就会去渲染一个同名的file： create.js.erb； 由于rails<br>自动gemfile里面加载了jquery的gem, 所以我们可以直接使用；</p>
<p>重点： format.js 里面也就是create.js.erb里面渲染的js代码是给format.html里面调用使用的， 也就是在重新渲染store/index.html.erb<br>的时候， 重点不在于index.html.erb， 因为使用ajax的目标之一是只去更新那些改变了的东西， 也就是在sidebar区域的&lt;%= render @cart % &gt;<br>利用ajax， 我们只希望重新渲染&lt;%= render @cart % &gt;, 其他部分保留；</p>
<p>具体实现的方法： 由于在application.html.erb里面包裹住&lt;%= render @cart % &gt;部分的div是id是cart， 所以我们只需要通过jquery选择<br>到那个div， 然后修改里面的html使之成为更新后的版本就可以了。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#cart"</span>).<span class="function"><span class="title">html</span><span class="params">(<span class="string">"&lt;%= escape_javascript render(@cart) %&gt;"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>Add a member route<br>To add a member route, just add a member block into the resource block:</li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resources :photos <span class="operator"><span class="keyword">do</span></span><br><span class="line">  <span class="keyword">member</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">get</span> <span class="string">'preview'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span></span><br></pre></td></tr></table></figure>
<p>This will recognize /photos/1/preview with GET, and route to the preview action of PhotosController, with the resource<br>id value passed in params[:id]. It will also create the preview_photo_url and preview_photo_path helpers.<br>在我们这个网站里面， 通过增加下面这几行：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resources <span class="symbol">:line_items</span> <span class="keyword">do</span></span><br><span class="line">  member <span class="keyword">do</span></span><br><span class="line">    put <span class="string">'decrement'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p>我们实现的是， 首先能够识别出 /line_items/1/decrement这个路由， 和http里面的put联系起来， 然后去调用line_items controller里面的decrement这个方法<br>同时也将resource的id传入进来, params[:id], 然后创建 decrement_lin_item_url和 decrement_line_item_path;</p>
<p><strong>注意： 一直困扰我的， 在点击decrement这个按钮的时候， 会出现internet error 505, unable to load the resources; 然后还看到的是关于line_item_controller里面的各种nil class, 其实这就是一个启示， 表示在那个时候使用的@line_item是没有被赋值的； 因此追根溯源找到的赋值的地方是set_line_item， 我们使用hook, before_action限制了使用这个hook的范围， 因此每一次我们新引进一个method的时候， 我们都需要记得在controller最前面的hook看看有没有限制；</strong></p>
<blockquote>
<p>总结一下8.16号犯的一些错误：<br>[1]在touch file的时候注意不要放错位置！_line_item.html.erb这个文件的错放导致了很多的问题；<br>[2]添加了member route之后创建的新方法已开始被hook before_action限制住了， 要记得添加他们的使用范围；<br>[3]灵通一点， 在decrement.js.erb中， 通过调换其中一些code的顺序也可以达到同样的效果；</p>
</blockquote>
<ul>
<li>Modify the model<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails generate scaffold Order <span class="property">name</span> address:<span class="type">text</span> email pay_type</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>在rails里面， 没有标明type的属性默认： string<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails <span class="keyword">generate</span> migration add_order_to_line_item <span class="keyword">order</span>:references</span><br></pre></td></tr></table></figure></p>
<p>在已经存在的line_item model里面添加一个column， order_id；<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">rake</span> <span class="rule"><span class="attribute">db</span>:<span class="value">migrate</span></span></span><br></pre></td></tr></table></figure></p>
<p>然后在_cart.html.erb里面增加一个button_to按钮来链接到对应的创建order的操作：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= button_to <span class="string">"Checkout"</span>, new_order_path, <span class="keyword">method</span>: :get % &gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GET /orders/new</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new</span></span></span><br><span class="line">  <span class="keyword">if</span> <span class="variable">@cart</span>.line_items.empty?</span><br><span class="line">    redirect_to store_url, <span class="symbol">notice:</span> <span class="string">"Your cart is empty!"</span></span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">    <span class="comment"># 提前终止程序， 防止double render， 不仅渲染了notice而且还渲染了下面的<span class="doctag">@order</span>;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="variable">@order</span> = <span class="constant">Order</span>.new</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p><strong>  再补充一遍， new只是得到一个form的页面， 真正的create操作是由create来完成的， 通过http的verb也可以看出来；</strong></p>
<p>在修改了new的方法之后， 尤其是改变了redirect的方向之后， 需要同时去修改test里面的文件；<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">test <span class="string">"should redirect to store_url because of empty cart when checkout"</span> <span class="built_in">do</span></span><br><span class="line">  <span class="built_in">get</span> :<span class="built_in">new</span></span><br><span class="line">  assert_redirected_to store_url</span><br><span class="line">  assert_equal flash[:notice], <span class="string">"Your cart is empty!"</span></span><br><span class="line"><span class="function"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="title">test</span> "<span class="title">should</span> <span class="title">get</span> <span class="title">new</span>" <span class="title">do</span></span></span><br><span class="line">  <span class="keyword">item</span> = LineItem.<span class="built_in">new</span></span><br><span class="line">  <span class="keyword">item</span>.build_cart</span><br><span class="line">  <span class="keyword">item</span>.product = products(:<span class="constant">one</span>)</span><br><span class="line">  <span class="keyword">item</span>.save!</span><br><span class="line">  session[:cart_id] = <span class="keyword">item</span>.cart.id</span><br><span class="line">  <span class="built_in">get</span> :<span class="built_in">new</span></span><br><span class="line">  assert_response :success</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>目的： 将agile rails web application一书里面的精华概括下来， 为之后运用rails开发打基础</p>]]>
    
    </summary>
    
      <category term="rails" scheme="http://chocoluffy.com/tags/rails/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一派胡言[第一期]-读书是赴会一场缺席的对话]]></title>
    <link href="http://chocoluffy.com/2015/11/24/%E4%B8%80%E6%B4%BE%E8%83%A1%E8%A8%80/"/>
    <id>http://chocoluffy.com/2015/11/24/一派胡言/</id>
    <published>2015-11-24T16:55:00.000Z</published>
    <updated>2015-12-25T00:44:56.000Z</updated>
    <content type="html"><![CDATA[<p>一场缺席的对话， 一场没有观众的戏剧。</p>
<a id="more"></a>
<p><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbm2aq2l8j21kw0zk4c2.jpg" alt="书"></p>
<p>事情的缘由是这样的， 有时候觉得， 自由、独立、道德等等等的这些抽象词语其实都是我们自己给自己定义的， 我们的经历给我们如何填充这些词语以素材和方向， 如果没有经历过奴役之苦， 我们很难想象自由physically\mentally的那种意义和美妙； 没有自觉到束缚或依赖于人的经历， 也很难体会独立， 在精神上不诉求于人的客观。这些诠释， 都其实是自己对自己过往的一次总结和反思。</p>
<p>于是想起了， 高中有时候的读书节， 总有一些代表们在台上说， 我们为什么要读书的演讲稿， 各种引经据典， 恨不得把各朝代的祖爷爷们搬来个遍。 我于是也想了， 如果是我， 我会怎么讲？</p>
<p>这就是原稿的来由， 思维混乱， 一派胡言：</p>
<p>===============================</p>
<p>我们从小都在什么‘黄金书’（哦不， 是什么书里自有黄金屋）的宣告下长大， 或者说我们中国的学生， 特别容易在自己还没有亲自体验之前就被 塞满一大堆的so called 经验之谈。</p>
<p>去体验， 不要去嚼别人嚼剩下的槟榔， 在你自己真正去看书， 去独立地思考之前， 不要去听别人什么：读书是好的， 读书是有意义的的， 这些都是bullshit。什么是意义， 意义是非常私人的， 是你想到什么， 对自己的生活有什么的思考和收获， 别人不能帮你生活。</p>
<p>我不喜欢那种举着大旗的宣称， 那种读书强国的腔调， 我真正体验到的， 是读书， 或者说读书的那一段时光， 是非常孤独的， 是平静的外人看来甚至有点呆的。 我甚至不能向你保证， 你会收获什么， 这听起来也挺残忍， 而且不是特别值得的不是吗。</p>
<p>读书， 是一种传递， 是一种跨越时空的对话。</p>
<p>那些作家的死掉， 并不是结束， 没有什么人， 什么作品是不朽的， 甚至艺术， 包括人们创造出来的任何文明都会消失， 我们能做到的， 就一下下把它传递下去； 可怕的是， 遗忘；遗忘， 等同于那件事， 那个人， 从来不曾出现过一样。 1984里面， 大洋国的人们最经常做的一件事就是去篡改历史， 按照老大哥的想法和意志， 去忘记， 去创造一个过去；</p>
<p>一场缺席的对话， 一场没有观众的戏剧； 说它神圣， 是因为这或许是唯一的一个途径， 让他曾经思考过的想法去传递下去； 而说它充满期待， 则是因为， 你永远也不知道， 你会在这个对话里面看见， 听见什么， 或者想到什么；你体会到了悲凉， 伤感， 读书就传给了这个时代多一个悲凉、伤感的想法； 你体会到了荒谬与残酷， 读书就让这个时代多一个思考过荒谬和残酷的想法。</p>
<p>是你自己， 决定了这本书所能达到的高度！</p>
<p>也是你自己， 决定了作者将以什么样的形式在我们这个时代延续，延续他曾经饱含着热情和感动创造、打造的作品！</p>
<p>===============================</p>
<p>感觉讲成了鸡汤…哎也没看几本书的人在这里痴人说梦</p>
<p>余舜哲</p>
<p>2015.7.16</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>一场缺席的对话， 一场没有观众的戏剧。</p>]]>
    
    </summary>
    
      <category term="公众号文章" scheme="http://chocoluffy.com/tags/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/"/>
    
      <category term="读书笔记" scheme="http://chocoluffy.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="原创" scheme="http://chocoluffy.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的ISIS男友：一个记者与恐怖分子的秘密生活]]></title>
    <link href="http://chocoluffy.com/2015/11/16/%E4%B8%80%E4%B8%AA%E8%AE%B0%E8%80%85%E5%92%8C%E6%81%90%E6%80%96%E5%88%86%E5%AD%90%E7%9A%84%E7%A7%98%E5%AF%86%E7%94%9F%E6%B4%BB/"/>
    <id>http://chocoluffy.com/2015/11/16/一个记者和恐怖分子的秘密生活/</id>
    <published>2015-11-17T03:46:47.000Z</published>
    <updated>2015-12-25T01:25:35.000Z</updated>
    <content type="html"><![CDATA[<p>什么才是真正难以摧毁的。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3llZCuiaqK6HKEpVbVUU1eZmG8ygGSLYCb891OrzE5SglmTstia8Rj6fOKwMUia8zgIT3yW6s6jYuFrg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5" alt="隔阂"></p>
<p>最近大家想必都会关注到许多关于恐怖主义， 关于ISIS和宗教教旨的解读文章。 我个人的想法是， 如果能够从生活现实层面看到关于ISIS的一点纪实的文字， 那样会让我更好的理解并思考现在正在传播的或完整或偏颇的观点。 我想知道ISIS他们的心理状态， 他们的生活日常， 他们的童年经历， 究竟为什么会有这么一群人， 愿意把杀戮(圣战)当成荣耀， 而究竟战争与反抗能争取到什么， 而什么才是真正难以摧毁的。</p>
<p>本意在一些纪实小说、记者报告中找到这些绳索的源头， 偶然发现这个知乎上面的一篇观点， 翻译自《伦敦星期日时报》的一篇调研文章， 来自一个女记者冒着生命危险取得的第一手资料。里面的一些细节让我对ISIS这个组织有了更多一点的印象。决定转载在这里， 分享给大家。在后记里我写上了一些个人想法。</p>
<p>余舜哲</p>
<p>2015.11.16</p>
<p><strong>我的ISIS男友：一个记者与恐怖分子的秘密生活</strong></p>
<p>一个年轻女子坐在一间巴黎的咖啡店里等着和她朋友共进午餐。她穿着一件紫色的贴身上衣，有着深色的头发和一双睿智的眼睛，手上戴着戒指。</p>
<p>她非常频繁地看向窗外，但是她并不是在看她的朋友是否到了，而是在紧张地看那个被派来保护她的警察，希望那个警察不要离她太远。</p>
<p>Anna Erelle生活在恐惧中。</p>
<p>这份恐惧是来自于一个叫做ISIS, 又称为伊斯兰国的组织。她收到了死亡威胁，来自网上不计其数的辱骂，以及一个关于她的视频，里面用阿拉伯语循环着“全世界的兄弟们，如果你们见到了她，杀了她”</p>
<p>在Erelle的手机里，有一张从监控录像截图下来三个英国女孩子的照片，分别是 Shamima Begum, 15岁, Kadiza Sultana, 16岁, 和 Amira Abase, 15岁。2个星期以前，照片中她们围着围巾，穿着牛仔裤，正在经过英国格域机场（Gatwick Airport)，去往叙利亚加入ISIS.</p>
<p>“看看她们，她们多么美好,” 她一边说，一边用她修剪得很整齐的指甲指着屏幕，“她们看起来既开心又放松。她们看起来就像仅仅是去土耳其的海滩度两周假而已。如果三个女孩子都穿黑色罩衫，她们一定会在机场引起人们的注意。可是，如果就像这样穿着普通的衣服，谁会注意到她们呢？”</p>
<p>“当他们让我去叙利亚时，也让我这么做。不要穿那种蒙住全身上下只露出眼睛的黑色罩衫Niqab，穿得像个普通女孩子就好了。最后一天在家的时候，对家人就像平常那样，家人们就不会怀疑了。不要留任何纸条或短信给家人们，不要试图向家人们解释，不然的话，家里人会跟着你的。待完了最后一天，直接消失就是了”。</p>
<p>成为“小旋律”（Melodie)</p>
<p>其实，并不是Erelle本人要去叙利亚旅行，而是她在网上创建的一个叫“小旋律”的虚拟的20岁女孩要去。这个20岁的虚拟姑娘将要成为圣战分子的新娘。而Erelle本人已经32岁，在巴黎的一家新闻周刊做记者，专门负责做关于中东的分析和报道。</p>
<p>2年前，Erelle在巴黎的一个乡下地区对当地的一些青少年做了一个采访。住在那里的人们大多在贫困中挣扎，而且她发现，那个地区已经成为一个滋生极端主义的沃土。这引起了她的兴趣，她很想调查清楚，到底有多少生活在那个地区的年轻穆斯林变成激进主义者了？</p>
<p>“他们其实对他们的宗教了解得非常少。他们很少读书，而且，他们是先了解了圣战再了解宗教的。”Erelle说，“他们曾经告诉我，‘你用你的大脑思考，而我们用心灵思考’。在他们眼中，激进主义有一种浪漫的情怀。我很想知道，这是怎么发生的？”</p>
<p>更令人费解的是一种被称作 “caliphettes”的人，指的是从小生活在一个自由的社会，却痴迷于圣战战士的年轻女孩子。 “对她们来说，圣战战士就像布拉德·皮特，甚至比他更迷人，因为布拉德·皮特不是宗教信仰。”</p>
<p>她决定加入年轻的穆斯林网上社区。并且在Facebook和Twitter上创建了虚拟资料的人物。很少有人知道，极端分子和穆斯林青少年之间的联系已经越来越多。即使是现在，这个规模已经让人惊讶了：苏丹娜，一个已经失踪的英国女孩，据信已经越过边境到达了叙利亚，在Twitter上是70多个极端分子的粉丝，而且她自己也已经积累了超过11000的粉丝。</p>
<p>Erelle本来只是想观察他们在网上的交流，弄清楚在法国的青少年是怎样变得激进的。然而意想不到的是，“小旋律”吸引了Abou-Bilel的注意，而Abou-Bilel是一个 ISIS的高级指挥官。他爱上了她，向她求婚，并邀请她去加入他的哈里发国。</p>
<p><strong>我的ISIS男朋友</strong></p>
<p>Erelle第一次收到Bilel的消息，是在去年四月一个有些暖和的晚上，大约10点左右。在她结束了一天的工作后，Erelle在沙发上观看小旋律的“朋友们”在干些什么：“姐妹，我见你看过了我的视频。全世界的人们都看了这个视频，这太疯狂了！你是穆斯林吗？你怎么看待圣战者呢？你要不要考虑来叙利亚？”</p>
<p>Erelle感到很惊讶。Bilel是一个出生在法国的阿尔及利亚后裔。他在伊拉克的时候，和ISIS的领袖阿布·贝克尔·巴格达迪结盟，后来和他一起搬到了叙利亚。</p>
<p>小旋律虽然在网上只有几天，但她已经有了一个很大的朋友圈，互相分享视频，经常讨论关于圣战的话题。网上的其他人都认为，她是一个在法国南方的贫困地区出生和长大的少女，母亲每天要工作很长的时间，她没有父亲，也没有兄弟。</p>
<p>小旋律试探性地回复他，她是一个皈依者，而且想学着做一个好穆斯林。她的文字里有很多的微笑表情符号，对他而言，这是一种鼓励。甚至比鼓励更多。</p>
<p>接下来的几天，他发给了她很多照片，照片中的他，坐在他的4X4吉普车里，还拿着他的枪。很快的，Bilel告诉小旋律，他爱上她了，她必须来叙利亚。</p>
<p>“如果你来这里，你会得到公主一样待遇。”他许诺。</p>
<p>“这就是那些女孩子们去那里的原因，”Erelle说。 “这是一个能拥有美好生活的美梦。她们相信，那是一个天堂，她们在英国或法国不会有任何美好的未来，她们不能找到好丈夫，而且被异教徒包围着，永远不能成为一个好穆斯林。 Bilel告诉小旋律，如果来到哈里发国，她就能有一个美好的人生，一间大大的公寓，还能有很多孩子。”</p>
<p>很快地，Bilel开始就和她在Skype上聊天。</p>
<p>“我从来没有见过一个杀过人的男人的脸。而他曾经自夸说，他已经杀死了几十个异教徒。开始的那几秒钟让人非常难忘。他盯着我看，而当我看他的时候，我从他的眼睛里什么也看不见，没有信仰，没有感情。他不是一个好人”</p>
<p>她不知道她是否能成功地冒充一个比自己的真实年龄年轻10岁的女孩，但Erelle身材小巧玲珑，一旦她穿上了带面罩的黑罩衫，尽量化最少的妆，这样似乎是可行的。</p>
<p>“去装作与恐怖分子交好是一件很奇怪的事。你要表现得很可爱，跟他说，‘嗨，你可不可以告诉我你今天干了什么？’我曾经以为我穿上黑罩衫会很不舒服，但是这个道具很有用，每当我穿上它，我就感觉我不是我自己了。”</p>
<p>Bilel很高兴：“你总是逗我笑！”因为他越来越相信她，他开始更多地说起他的生活。</p>
<p>他讲述了2013年伊斯兰国和叙利亚政府军为了争夺Raqqa地区控制权的血战。也讲了他是怎样参加了战斗，怎样砍头，怎样折磨囚犯。</p>
<p>“他是一个喜欢自吹自擂的人。说的什么全是他自己。但是他也是一个真正的残忍的人。最开始的时候，我想试着从他身上去寻找人性中光辉的一面，因为我以前总是相信，不管什么样的人，都应该有一点美好的东西在人性里。可是他完全没有人性。</p>
<p><strong>冒险生涯</strong></p>
<p>Bilel的真名是拉希德，他从小生活在在法国北部一个叫鲁贝的地方。 Erelle得知了他在法国有一连串犯罪指控，并且放弃保释，潜逃去了伊拉克。那时是2000年，也正是那时，他变成了一个激进分子。作为巴格达迪的左右手之一，他在叙利亚主要负责三项工作：招募新人，收税和在部队担任指挥官。</p>
<p>“每天都有新人从欧洲来到这里。”他告诉她，“他们上午学习阿拉伯语，下午进行射击练习。新人住在集体宿舍里，晚上有精神引导的课程。”</p>
<p>“两周后，他们会进行评估，聪明的新人会被挑选出来的给予特殊的任务，例如反间谍活动。”</p>
<p>Erelle把他告诉她的所有事情都与叙利亚联络人和法国的安全局共享和核实。 “跟所有的骗子一样，有时他忘了他以前说过什么，然后讲一个完全不同的故事，所以我不得不核实一切，但更可怕的事情是，那些他曾经告诉过我的关于战争和杀戮的故事，全都是真实的。”</p>
<p>他谈到他对自杀式袭击者的钦佩 - “在这里，我们评价实力有两个标准——信心和勇气。自杀式袭击者是我们所有人中最强大的。并且开玩笑说他是如何偏爱小旋律这样的皈依者，因为他们“宗教中严格，生活中开放”。</p>
<p>“你可以看到一个像小旋律这样的女孩是怎样被迷住的，”Erelle说。 “她自己本是一个无名小卒，但是生命中突然出现了一个38岁的男人，年龄快比她大一倍，而且还拥有这些令人难以置信的冒险经历，并且对她这么好，告诉她，他爱她，想每天亲口说爱她千万遍。”</p>
<p>然后小旋律被称为Bilel的未婚妻，她在她的网上的伊斯兰朋友间变得小有名气。</p>
<p>“这一切在那些英国女孩子失踪之前应该也上演过，”她说。 “那些去叙利亚的女孩子知道她们会成为报纸和互联网上的新闻，人们会议论她们。这些女孩们还是义无反顾地追随那些已经离开英国去往叙利亚的朋友。她们早就知道这会造成她们的家庭的痛苦，尽管如此还是没能阻止她们离去的脚步。”</p>
<p>起初，每当Bilel都劝她去叙利亚时，她都拒绝了。她说她不能离开她的母亲，她说，她害怕走这么远的路。</p>
<p>“他不会把你的拒绝当做答案。他会说：‘当你到了这里，你可以帮助照看孤儿，直到你有你自己的孩子，或探访伤兵。</p>
<p>“他想当然地认为我会服从。他想知道我有没有足够的钱买飞机票。他告诉我，他和他的组织非常有钱，可以报销我的开支”</p>
<p><strong>暗度陈仓到叙利亚</strong></p>
<p>法国警方从去年夏天就开始对女孩子们离开法国前往叙利亚有所戒备。所以Bilel说，她应该先前往阿姆斯特丹，甩掉法国当局的追踪。小旋律终于同意前往叙利亚，如果她能带她（虚构的）15岁的朋友优思敏同行。</p>
<p>“他说，‘告诉你家人，你今晚在优思敏家里过夜，让她说告诉她家人今晚在你家。’当我到阿姆斯特丹，我扔掉我的手机，买一个新的，用新号码打了电话给他，告诉他我们什么时候会从阿姆斯特丹飞往伊斯坦布尔。”</p>
<p>在伊斯坦布尔，小旋律和优思敏将通过ISIS派来的一个“嫲嫲”陪她们到叙利亚。 Erelle决定将继续做戏到这一步。</p>
<p>“我想见见这个‘嫲嫲’。”她说， “我是一个女人，我不能理解为什么这些女人能让这么年轻的女孩去和那些男人结婚。所以这是私人的问题。我就想看看她的脸。”</p>
<p>还有一个进一步的指令：Bilel让小旋律在机场免税店给他买一些礼物，包括须后水。他告诉她，他喜欢用的香奈儿的Egoiste。</p>
<p>“关于这些人，还有一些事情值得一提，”Erelle说。 “他们说，他们反对西方，他们反资本主义，但他们喜欢奢侈品和设计师品牌，他们的军队制服里包括了耐克和雷朋太阳镜。这是对青少年们另一种方式的引诱：“我曾经和你一样穷，但看看现在的我吧。’”</p>
<p>在阿姆斯特丹，又有了一个问题。 Bilel说，她和“优思敏”将不得不独自前往，因为”嫲嫲”们旅行不方便。一旦到了伊斯坦布尔，她们就转乘一辆土耳其境内航班飞往一个在土耳其东南部叫乌尔法的地方，和之前一样，用现金支付，并等待下一步指示。小旋律回复他说，她很害怕。</p>
<p>“你是个大姑娘了，”Bilel安慰她。 “每个星期都有好几十个欧洲人这样过来加入我们的行列。 来吧，我的狮子！”</p>
<p>但小旋律拒绝让步，说这里到处都是警察，她想回家。</p>
<p>“这是我第一次开始与他争辩。他很不喜欢这样，“Erelle说。 “他就开始嚷嚷，他很可怕。他因为我的拒绝非常生气，他说，‘你都到了这一步了，现在是在耍我吗？’那是很难被原谅的。”</p>
<p>是时候断绝所有联系了，但是这并不是一件容易的事。Bilel仍然相信小旋律的存在，打来电话说：“我知道你是谁，我可以分分钟找到你，杀了你”</p>
<p><strong>ISIS的敌人</strong></p>
<p>Erelle回到巴黎，去年五月给她的杂志写了一篇关于小旋律的故事。她现在已经写了一本书，“在圣战者的外围”</p>
<p>这篇文章是化名书写。 “Erelle”是她的第二个化名。一旦这篇文章出版，小旋律的背叛行为变得很明显，Erelle成为目标。</p>
<p>她不得不好几次改变她的电话号码，并且搬家。令人担忧的是，在小旋律断绝和BIlel的联系后不久，Bilel用法国的电话号码打给她。而在小旋律的Skype帐号里，有无数的死亡威胁。</p>
<p>她写了一本书，但是她不能承认那是她写的，而1月7日发生查理周刊大屠杀后，开始有警察保护她。</p>
<p>“他们坚持要这么做。有人看着我住的房子。他们看着我。我从来不知道他们在或者不在，”她说， “我很孤独，因为查理周刊事件吓得所有人和朋友们都害怕和我在一起。警方甚至把我的狗带走了。以前每当我觉得情绪低落的时候，我就抱着我的狗。但它是一个很特别的品种，警察认为它让我太容易被辨认出来。 或更糟的是，恐怖分子可能会错误地杀掉和我有相同的品种的狗的人”</p>
<p>几个月前，据报道，Bilel已被击毙。</p>
<p>“我不知道这个消息是不是真的，或者他是否知道我的真实身份。”她只知道的是，尽管发生了这一切，如果再来一次，她还是会这样做。 “这是肯定的。”她说。</p>
<blockquote>
<p>后记：我之前有想过， 感觉关于伊斯兰教和其他的宗教信仰相对比有一个特点是， 他们的信徒愿意并会主动地将教义强制在其他信教徒的身上。当被问到伊斯兰教对生命的看法的时候， 一名穆斯林uber司机引述了《古兰经》里面的一句话， if you kill a single soul it’s like killing the soul of all humanity. if you save a single soul, you save all humanity.</p>
<p>这也是会有“圣战”这么一个仪式的原因吧， 任何异端的与伊斯兰教旨不符的行为， 哪怕是他们生活中再平常不过的事， 都会成为暴力、自以为是的英雄主义的发泄地， 有了宗教这一个坚强的借口， 或许暴力也可以被包装成一种忠诚和信仰。</p>
<p>当我从这一篇纪实报道中发现那些组成ISIS组织的人的背景经历之后， 许多想法感觉都被justified了。 如果本身就是一个被社会边缘化了的群体， 那么， 他们所做的任何抵抗， 在某种程度上， 可以理解是对自我存在的证明， 对现实生活的反击。而归属感， 这个或温暖或危险的力量， 会让这些还没真正找到反击方式的人们， 做出不理性的行为。</p>
<p>归属感， 或许就是我想说的， 是战争， 是恐惧，都摧毁不掉的事情了。相反的， 越是恐惧， 身子就越会蜷缩去更为强大的方向。 我们曾经在留守儿童的议题上看见归属感这个不可避免的根源。 而在宗教信仰的背后， 归属与虔诚， 又将成为许多暴力滋生更为牢固且不容分说的根基。</p>
<p>祈祷巴黎， 祈祷ISIS组织心里那个无依无靠的小孩。</p>
<p>欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>什么才是真正难以摧毁的。</p>]]>
    
    </summary>
    
      <category term="公众号文章" scheme="http://chocoluffy.com/tags/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/"/>
    
      <category term="社会人物" scheme="http://chocoluffy.com/tags/%E7%A4%BE%E4%BC%9A%E4%BA%BA%E7%89%A9/"/>
    
      <category term="转载" scheme="http://chocoluffy.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails开发笔记-instagram]]></title>
    <link href="http://chocoluffy.com/2015/08/31/rails%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0-instagram-1/"/>
    <id>http://chocoluffy.com/2015/08/31/rails开发笔记-instagram-1/</id>
    <published>2015-09-01T02:04:00.000Z</published>
    <updated>2015-12-25T00:23:04.000Z</updated>
    <content type="html"><![CDATA[<p>用了一天的时间完成了这个网站的开发，SearchInsta， 也算是一个阶段性的总结。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qp26GB1Mm409ZKPy3NRDqbD6xeG6hgdjfyN9ic3bEQtwQGsArZ53PxmQ/0?wx_fmt=jpeg" alt="image"><br>用了一天的时间完成了这个网站的开发，SearchInsta， 也算是一个阶段性的总结。<br><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qB5xCWEgEH979oIdDSpPMiaW1oLIHtpVECbY3ZQxNBXnKw33rFBh2gMQ/0?wx_fmt=png" alt="image">  </p>
<p>当鼠标hover其中一个照片时：  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qzKjPRxEFgZdPbcicyDcSxaRCAh34H7EKK5O2Na5gIEwlZbYjXchB3rQ/0?wx_fmt=png" alt="image">  </p>
<p>网站的功能：输入一个image tag或者用户名， 可以看到这个类别下面最新发布的post， 鼠标hover的时候可以看到用户的post原文。  </p>
<p>原理：其实这个很简单的， 就是调用了instagram的api，然后做的一个数据抓取和呈现而已。 不过在改进方向上面有很多可能。 我也会继续在功能上做出完善。比如：   </p>
<ol>
<li>我可以通过api得到用户之间的follow关系， 那么利用d3.js里面的一些三维模型函数库， 也就可以做出一张动态的关系网出来， (这种社交网络结构在商业ppt上可能比较常见吧)； 还记得大一去MIT决赛的时候， 中科大的那个结构网的作品， 结合图论上的一些shortest path, maximum flow的原理还可以找到最高效的关系连通path。在这个instagram的情景中，这个“最高效的”仍然需要人们定义， 比如可以定义成获得的点赞数最多， 社区声誉最好？购买力最高， 广告转化率最高等的指标。  </li>
<li>通过获得的geolocation的数据， 可以结合一些数据处理包完成地图上tag发布热点区域的绘制， 用户发布的地点时间的集合，（现在吐槽最多的不就是O2O startup，现在都可以拿个google map的地图和一些头像就去融资了不是吗)。   </li>
<li>获得某一个tag当前最新的， 或者最热的图片， 那其实也可以变相给用户推荐图片， 像feed一样， 不过这个时候用户看到的不就只是自己follow的人, 而是门户filter后的资源， 这个方向走下去基本就是社交媒体了， 那种编辑、发布的， 控制资源的channel。   </li>
<li>对用户的描述做语义分析， 然后利用统计手段得到某个特定用户的发布资源的特点， 或者某个特定群体的common tag\interests。 实现方式也不算复杂， ruby里面的nokogiri gem可以parse掉html结构， 得到的json数据再去统计整合处理。 但就像我前几天做得一个小项目中遇到的问题。 英文可以很方面的根据词语出现过的频率来统计， 然后去掉预设的meaningless的词语后得到， 然后筛选可以得到概括； 但是对于中文， 毕竟parse之后只能得到单个的字， 而不是一个个完整意义的词语， 所以给后期过滤中心主体带来了很多困难， （为什么不能得到词语？ 答：技术上只能得到一个个单个字， 就像英文一个个单词一样， 你必须定义怎样算一个中文词语的规则， 以及怎样才是原文里面的那个词语搭配规则才能得到一个完整的意群）这也是当时困扰我的一个问题， 或许互联网上有很多人、企业遇到过这个问题， 我会继续去关注。  </li>
<li>根据用户发布的post的点赞数或者是转发数量的一个统计分析、排序， 做出一个类似facebook的 the best of the years， 虽然在隐私上仍然有着一些抵触的情绪， 但是当用户看到这些曾经很棒的、很希望分享的照片不都挺惊讶和开心的吗。  </li>
<li>打通twiiter \ weibo \ facebook api之间的联系？ 可以做到站内的消息多平台的发布和浏览。  </li>
</ol>
<p>等等…  </p>
<p>这些基本都是我debug之后挺高兴地走去吃饭路上想到的一些延伸， 能写出来的都是大概心里有个想法知道方向在哪里的， 可以做出来的。 那些有些天马行空的就自己留着暂时不分享了。 其实这一天的时间里面我在前端设计上花的功夫比我在后端请求数据和处理的功夫多太多了， 而问题都基本都出在一些动效和细节上面， 不过一仔细起来， 真的很多地方的设计都学到了东西；  </p>
<p> 比如怎样做出这样类似纸张微微隆起的漂亮阴影效果：  </p>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3liaa80EeoviaAB01GKkyjG6qzW0y2WJqB8oJXFdxXE3ZqCYcFvywrnXT97u69vUWvvTg93VxiaP9rNw/0?wx_fmt=png" alt="image">  </p>
<p> 一些优雅的google fonts的收集、bootstrap里面超级flexible的grid system。还有很多很多， 之后的优化应该要集中在抽象上面了， 做到真正orthogonal \ extensible的模块真的不简单， 我函数里面hard-coding还是太多了。   </p>
<p> 其实刚刚在一边写这些extensions的时候， 就感觉， 数据的意义和价值都是设计者思维的体现。 一场惊艳的交互， 一个有商业价值的发现， 都离不开设计者的融会贯通。  </p>
<p> 希望能在全栈工程师的路上可以走的更远。  </p>
<p>今天看到的一句很喜欢的话， 和大家分享：  </p>
<p>孤独被抬举和神化， 寂寞也并不可耻。多数时候， 我们只是寂寞， 不必用孤独为自己加冕。  </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用了一天的时间完成了这个网站的开发，SearchInsta， 也算是一个阶段性的总结。</p>]]>
    
    </summary>
    
      <category term="rails" scheme="http://chocoluffy.com/tags/rails/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[希望是一种善意]]></title>
    <link href="http://chocoluffy.com/2015/08/29/%E5%B8%8C%E6%9C%9B%E6%98%AF%E4%B8%80%E7%A7%8D%E5%96%84%E6%84%8F/"/>
    <id>http://chocoluffy.com/2015/08/29/希望是一种善意/</id>
    <published>2015-08-30T02:46:47.000Z</published>
    <updated>2015-12-25T00:30:23.000Z</updated>
    <content type="html"><![CDATA[<p>如果我们真的有幸进入了孩子们的世界带给他们快乐和尚不熟悉的爱和体贴， 那当我们离开的时候， 我们会留下什么。</p>
<a id="more"></a>
<p><img src="http://mmbiz.qpic.cn/mmbiz/oXichwD6Wg3lXBLzmASkRkfMSRXJr0cVLIFtjoeksdp9fnqqEDvapNiaicDL9OI66VS9GS6KeRN33LicpoibNbfjZLg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5" alt="灰烬"></p>
<p>很喜欢胡婷婷的云淡风轻的描写， 却有时候给我心上重重的一击。喜欢这篇文章， 也算是对上次推送关于《告别卢安克》的一次延续， 不知道为什么， 在看文章的时候， 我想到一句话： “把自己藏起来， 有时候是为了被寻找。”， 如果我们真的有幸进入了孩子们的世界带给他们快乐和尚不熟悉的爱和体贴， 那当我们离开的时候， 我们会留下什么。</p>
<p>余舜哲</p>
<p>2015.8.29</p>
<p>推荐胡婷婷的公众号向湾硚（xiangwanqiao )</p>
<p>博客网站 <a href="http://xiangwanqiao.sinaapp.com/" target="_blank" rel="external">http://xiangwanqiao.sinaapp.com/</a></p>
<p>以下是《希望是一种善意》原文：</p>
<p>“你为什么来支教？”</p>
<p>“想要把自己的知识教给他们。但是后来发现，自己并不能为他们做点什么。”</p>
<p>支教队十四人，十四个人的疑问：我们到底能给他们带来些什么？</p>
<p>7月15日，我们坐上了来这里的火车，29小时，硬座。下火车之后，坐上非法营运司机大叔的面包车。除此之外，没有车能送我们上去。三个小时，山路颠簸，小学就在看得见的山头上，但我们需要先转下山沟，再上山头。</p>
<p>司机大叔收了我们每人35元，天渐黑，我们饿得不行。“我们这里的特产就是土豆。”</p>
<p>他请我们吃了两碗土豆，一碗3元。在路边，一间小平房，一口油锅，一罐辣椒粉，一张油腻围裙。一块块土豆下锅炸得金黄，乘入碗里，撒上辣椒粉。我们吃得有味。</p>
<p>“希望小学”。</p>
<p>学校名字颜色脱落。又是一所希望小学，没做过统计，不过，“希望”或许像“婷婷”一样，是个最广泛普通的名字了。在大山里，走出去，过更好的生活，便是希望。希望是个很简单的词，谁都会，谁都想。</p>
<p>学校门口也是一口油锅，土豆炸得滋滋响。小女孩吃得蹦蹦跳跳，她用牙签叉起一块——“姐姐，你吃。”</p>
<p>这是一碗油炸土豆带来的快乐。油炸是最简单的让食物散发香味的方式，在这里，在更多的贫民窟里，总是少不了“油炸”的身影。</p>
<p>第一眼看到清平的背影，我以为她念一年级。一颗西瓜头，书包大得拖到小腿处，摇摇晃晃地走。我跑过去抱住她的肩，她转头看我：“姐姐，你怎么那么漂亮？”</p>
<p>她念五年级。没有城里小孩可爱的脸蛋，一脸不均匀的阴影，瘦弱如一棵草。</p>
<p>第一眼见到她妈妈，我脱口而出：“奶奶你好。”清平摆手——“这是我妈妈。”妈妈和清平一样高，刚刚到我腰间，脸上是一样的黄色阴影。妈妈急忙端出小板凳让我们坐下。小伙伴拿出纸记录，我开始询问。</p>
<p>“妈妈今年是多少岁啦？”</p>
<p>妈妈摇头，“我不晓得。”一时错愕——“啊？就是年纪多大？”</p>
<p>清平站在妈妈后面，抬起一双小手。“53.妈妈她什么都不知道。”妈妈憨憨地笑：“我什么都不晓得。”</p>
<p>奶奶80岁，坐在屋里的竹椅上。左腿断了。她跟我说话，不停用手拍打左腿，“走不动，走不动。”</p>
<p>爸爸穿着蓝色衣服回来了。一头花白头发。他在林区管水，一个月一百五十元。见我坐在妈妈对面，他走过来，手挠挠头——“娃儿她妈啥子都不晓得。”</p>
<p>清平还有一个姐姐，读初一。平日里，姐姐做饭，妈妈帮忙摘菜，烧火，不能做其他，也不会做。奶奶就坐在屋里，从早到晚，看着。</p>
<p>一家子，五口人，一个劳动力，三亩地，三间房，五千外债。</p>
<p>王艳吸引我的，是她的眼睛。她的眼睛很小，窝在略略显胖的脸蛋上，像是两颗花椒籽。她会盘精致的头发，一束辫子扎在马尾里。</p>
<p>她并不在我们家访名单里。放学之后，她跑过来：“姐姐，去我家玩吧。很近的。”我所理解的“很近”是五到十分钟，以此推算，至少还是在大路边上。可是，她家依然要走山路，弯弯曲曲，半小时。</p>
<p>乌黑的瓦盖着三间房。她取下脖子上的钥匙，打开门，端出凳子给我们。</p>
<p>我习惯性问：“爸爸妈妈呢？”家访是需要从大人那里了解信息的。</p>
<p>“不在。”她轻轻摇头，嘴角上扬像是笑着的。</p>
<p>“不在这里？去哪儿了？什么时候回来。”</p>
<p>“他们已经不在了。”她还是轻轻地说。</p>
<p>我愣了一秒。突然意识到，不是所有的尴尬都能用笑来化解，有些停顿，只能让尴尬去掩埋掉。</p>
<p>爸爸在她四岁的时候去世了，“治不好的病”。在吃不饱的时候，小病也是治不好的。</p>
<p>妈妈在她十四岁时候去世，“一样的病。”</p>
<p>她有个哥哥，三十岁，娶了老婆，生了儿子，到浙江去了，每个月寄来200生活费。</p>
<p>三间房，一间是哥哥嫂子的，大床，铺盖还整整齐齐。他的房间在后面，一开灯，闪了几秒，就又暗了。“我们帮你修吧。”</p>
<p>“没事的，我会。”</p>
<p>中间的那间房堆着杂物，北面挂着妈妈的黑白照。</p>
<p>“怎么不挂爸爸的？”</p>
<p>“因为没有。”她的嘴角总是上翘着，声音轻轻的，仿佛没有悲伤。</p>
<p>我教她们班的英语，把“Sunny”给她当作了英文名，“阳光灿烂的意思，每天都开心。”</p>
<p>我们最后没有决定给她资助名额，因为，她的孤独，是我们触及不到的。</p>
<p>一群已经没有读书的少年也来报名了。</p>
<p>“我觉得，他们应该得到一次机会。”我就那样天真地说服大家，收下他们，到六年级。</p>
<p>他留着飞机头，胸前露出纹身，龙头的样子。</p>
<p>我上课的时候，他总是捂着本子，好似没在听。我拿来检查，却都是记了笔记的，歪歪斜斜的。</p>
<p>这一帮少年一下课便打篮球，小学墙壁矮，他们老是把球扔出学校，又老是招摇在围墙上。</p>
<p>他们蹦蹦跳跳，让整个班级都不安宁。领队总去他们班发火，讲规则，讲道理。领队是一女生，长得温柔，可两眼一瞪，也是威严。</p>
<p>这天，他来找我们，要求换到五年级读。</p>
<p>“为什么？”</p>
<p>“领队老是在六年级发火，我怕。”</p>
<p>他的飞机头还油光曾亮，龙头还隐约吓人。</p>
<p>我差点没笑出来。</p>
<p>我在小城实习记者的时候，对官员和官场会议产生了厌恶。会议总是分两部分，前半部分是会议上的冗长的枯燥，官腔一套一套，重点全无，解决方法全无；后半部分是部门饭菜，奢侈多肉，酒一杯接一杯，称赞一句接一句，酒肉烟林。</p>
<p>今天下午，村支书来到了这所希望小学。他手指夹着烟，走步不稳，一开口，全是酒气。</p>
<p>“开会。”</p>
<p>他首先拍拍我们的肩，再打了打我们的脸——他说，感谢我们来这里，为山区教育做贡献；他说，我们直接和学校联系，不通知村里，是极为不规范的。</p>
<p>校长的办公室挂着两个字——“博爱”，出自“孙文”。他在这里十几年了。面对书记的要求，他推诿着，本不打算让村里介入。一个电话，他也拦不住。</p>
<p>七米长的办公室，我坐这头，书记坐那头。那头便是门口，书记抽着烟，整个屋子都是那烟。他说的官话，就和那烟一样让人厌恶。</p>
<p>最后，他坐上小轿车，扬尘而去。</p>
<p>当我在不满城市里官僚主义的盛行与其办事古板低效率时，没有想到过，在更底层的地方，劣根无比坚硬，甚至根本没有任何来自外部的监督来令其些许松动。</p>
<p>龙应台提到过“问题意识”，说她从来不会施舍路边乞丐，因为这不能解决问题。而我，看到那些白发苍苍或身体残疾的乞丐，总还是忍不住施舍些许，虽然这并不能改变什么。我想大多数人都是这样不忍心，而同情心不过存在于我们心的表面，不是去理性分析如何解决根本问题，而只是，在我看到听到的那一秒，会有所不忍，有所触动——于是，施舍。</p>
<p>在炎炎夏日，地下通道口，我经过一位老人。太阳刚好照在他身上，汗湿了上衣。他旁边有一个小音箱，声音劣质，放着佛经，童声唱的。他的旁边，是卖荔枝的妇女。我买了一斤荔枝，走到他面前，用手抓了一把给他。他用双手来接，对我点头：“谢谢你，好姑娘。”</p>
<p>我知道这个世界没有好人和坏人之分，只有做了坏事的人和做了好事的人，可是，一把荔枝，也足以成为一个“好”的理由。</p>
<p>当我并没有能力去撼动根基的时候，这些问题还是像恶瘤一样存在于社会表面，我时不时看见、听到。而微小的善意在于，在看见和听到这些的时候，我心仍有触动，我的双手仍愿意帮助。</p>
<p>为什么来支教？我们能留下些什么？</p>
<p>我并不知道。我甚至清楚地明白，这根本改变不了什么——可是，这善意在于，有一群孩子在这里，期待更多的知识，而我刚刚可以教给他们，于是我来到了这里。</p>
<p>不为改变，不求改变。</p>
<p>“嘲笑、轻蔑、愤怒、报复……这些情绪，都与恨有关或者含有因恨而起的成分，不能成为善。”</p>
<p>斯宾诺莎说：“希望和失望决不能是善。因为恐惧是一种痛苦，希望不能脱离恐惧而存在，所以希望和失望都表示知识的缺乏和心灵的软弱无力。”</p>
<p>我时常为自己的能力缺失感到失望，又时常觉得希望是虚无甚至虚伪的。</p>
<p>中文里，有些话是用“希望”开头的。</p>
<p>六年级班上有一个男孩，喜欢读小说。我送一幅画给他。</p>
<p>“你想我写什么祝福语给你？”</p>
<p>“希望我好好学习，天天向上！”</p>
<p>他的希望很腼腆，我很喜欢他的希望。</p>
<p>潘多拉的魔盒里，唯独留下了希望，这便是洞察的智慧吧。</p>
<blockquote>
<p>后记： 欢迎加入我的私人公众号， 和你分享我思考的观点和文章：<br><img src="http://ww2.sinaimg.cn/large/c5ee78b5gw1ezbljkk2apj20by0byq3q.jpg" alt="公众号二维码"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>如果我们真的有幸进入了孩子们的世界带给他们快乐和尚不熟悉的爱和体贴， 那当我们离开的时候， 我们会留下什么。</p>]]>
    
    </summary>
    
      <category term="公众号文章" scheme="http://chocoluffy.com/tags/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/"/>
    
      <category term="读书笔记" scheme="http://chocoluffy.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="转载" scheme="http://chocoluffy.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ruby Nokogiri使用笔记[第一天]]]></title>
    <link href="http://chocoluffy.com/2015/08/27/ruby-Nokogiri%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>http://chocoluffy.com/2015/08/27/ruby-Nokogiri使用笔记-第一天/</id>
    <published>2015-08-28T02:52:07.000Z</published>
    <updated>2015-12-25T00:23:28.000Z</updated>
    <content type="html"><![CDATA[<p>将wikipedia上面表格中的信息的一个整合， 重点：掌握关于筛选和array manipulation的技巧</p>
<a id="more"></a>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span> <span class="string">'nokogiri'</span></span><br><span class="line"><span class="built_in">require</span> <span class="string">'open-uri'</span></span><br><span class="line"></span><br><span class="line">BASE_WIKIPEDIA_URL = <span class="string">"http://en.wikipedia.org"</span></span><br><span class="line">LIST_URL = <span class="string">"#&#123;BASE_WIKIPEDIA_URL&#125;/wiki/List_of_Nobel_laureates"</span></span><br><span class="line">page = Nokogiri::HTML(<span class="built_in">open</span>(LIST_URL))</span><br><span class="line">rows = page.css(<span class="string">'div.mw-content-ltr table.wikitable tr'</span>)       </span><br><span class="line"></span><br><span class="line">rows[<span class="number">1.</span>.-<span class="number">2</span>].<span class="keyword">each</span> <span class="built_in">do</span> |row|</span><br><span class="line">  hrefs = row.css(<span class="string">"td a"</span>).map&#123; |<span class="operator">a</span>| </span><br><span class="line">    <span class="operator">a</span>[<span class="string">'href'</span>] <span class="keyword">if</span> <span class="operator">a</span>[<span class="string">'href'</span>].match(<span class="string">"/wiki/"</span>)</span><br><span class="line">  &#125;.compact.uniq</span><br><span class="line">  <span class="comment"># 对每一个row里面将不同的cell里面的link收集起来，然后filter</span></span><br><span class="line">  <span class="comment"># 同样长度的array在filter之后不符合要求的得到nil然后在compact方法的时候被删掉</span></span><br><span class="line">  <span class="comment"># 然后uniq是删去那些相同的link url</span></span><br><span class="line"></span><br><span class="line">  hrefs.<span class="keyword">each</span> <span class="built_in">do</span> |href|</span><br><span class="line">   puts href</span><br><span class="line">  <span class="function"><span class="keyword">end</span></span><br><span class="line"><span class="title">end</span></span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>将wikipedia上面表格中的信息的一个整合， 重点：掌握关于筛选和array manipulation的技巧</p>]]>
    
    </summary>
    
      <category term="rails" scheme="http://chocoluffy.com/tags/rails/"/>
    
      <category term="技术" scheme="http://chocoluffy.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
